{
	"kics_version": "1.4.9",
	"files_scanned": 487,
	"files_parsed": 487,
	"files_failed_to_scan": 0,
	"queries_total": 851,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"HIGH": 428,
		"INFO": 44,
		"LOW": 449,
		"MEDIUM": 865,
		"TRACE": 0
	},
	"total_counter": 1786,
	"total_bom_resources": 0,
	"start": "2022-02-19T11:49:58.2966423Z",
	"end": "2022-02-19T11:50:30.7909845Z",
	"paths": [
		".\\terraform"
	],
	"queries": [
		{
			"query_name": "AD Admin Not Configured For SQL Server",
			"query_id": "a3a055d2-9a2e-4cc9-b9fb-12850a1a3a4b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_active_directory_administrator",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "The Active Directory Administrator is not configured for a SQL server",
			"description_id": "bccbda19",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "5be0d1dc5369141006208899408fc99cc84130c8fbd5873bc8a1e75e62a0f8e3",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive4]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "A 'azurerm_sql_active_directory_administrator' is defined for 'azurerm_sql_server[positive4]'",
					"actual_value": "A 'azurerm_sql_active_directory_administrator' is not defined for 'azurerm_sql_server[positive4]'"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "1b28f376348e5c616c97b801a2938bdf3fb587b28a436a92a420cb81577273e8",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive3]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "A 'azurerm_sql_active_directory_administrator' is defined for 'azurerm_sql_server[positive3]'",
					"actual_value": "A 'azurerm_sql_active_directory_administrator' is not defined for 'azurerm_sql_server[positive3]'"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
					"similarity_id": "5ad6aa56c03ced67e68a143e1a7b7ad5de2ae0f561d4252f2bbee70a2dc9a71c",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "A 'azurerm_sql_active_directory_administrator' is defined for 'azurerm_sql_server[positive2]'",
					"actual_value": "A 'azurerm_sql_active_directory_administrator' is not defined for 'azurerm_sql_server[positive2]'"
				}
			]
		},
		{
			"query_name": "ALB Listening on HTTP",
			"query_id": "de7f5e83-da88-4046-871f-ea18504b1d43",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "AWS Application Load Balancer (alb) should not listen on HTTP",
			"description_id": "47a8608d",
			"files": [
				{
					"file_name": "terraform\\aws\\lb\\redirect.tf",
					"similarity_id": "5708fe474c024dd3fc7ed38f5b99ece7d5c2b3d4b5b2881d64cadec35f048b2d",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb_listener[listener_bad_1].default_action.redirect",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'default_action.redirect.protocol' is equal to 'HTTPS'",
					"actual_value": "'default_action.redirect.protocol' is missing"
				}
			]
		},
		{
			"query_name": "AMI Not Encrypted",
			"query_id": "8bbb242f-6e38-4127-86d4-d8f0b2687ae2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/ami",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS AMI Encryption is not enabled",
			"description_id": "248fe368",
			"files": [
				{
					"file_name": "terraform\\aws\\ami\\notencrypted.tf",
					"similarity_id": "a2820ad2a30358e8c31957fb5e97f6709c6a30f7850f92a48dc7f01b5c7b8b7f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ami[fail].ebs_block_device",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'rule.ebs_block_device.encrypted' is 'true'",
					"actual_value": "One of 'rule.ebs_block_device.encrypted' is not 'true'"
				}
			]
		},
		{
			"query_name": "API Gateway Method Settings Cache Not Encrypted",
			"query_id": "b7c9a40c-23e4-4a2d-8d39-a3352f10f288",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "API Gateway Method Settings Cache should be encrypted",
			"description_id": "ceabd70f",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-method-settings\\api_gateway_method_settings.tf",
					"similarity_id": "b841fcf3ac054d8699064da56172f8a0c932c251f3efb5e14f15a477ddedbed7",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_method_settings[{{fail}}].settings.cache_data_encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_method_settings.settings.cache_data_encrypted is set to true",
					"actual_value": "aws_api_gateway_method_settings.settings.cache_data_encrypted is set to false"
				}
			]
		},
		{
			"query_name": "API Gateway Without Security Policy",
			"query_id": "4e1cc5d3-2811-4fb2-861c-ee9b3cb7f90b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "API Gateway should have a Security Policy defined and use TLS 1.2.",
			"description_id": "b78cd4cb",
			"files": [
				{
					"file_name": "terraform\\aws\\cert\\certificate_rsa_key_bytes_lower_than_256.tf",
					"similarity_id": "45e80e718565e8c7f55dcaf44353a06ee1a7dcd5c9323ec7d06b096cba50ea3b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_domain_name[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[example].security_policy is set",
					"actual_value": "aws_api_gateway_domain_name[example].security_policy is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-domain-name\\api_gateway_domain_name.tf",
					"similarity_id": "f6f0af5b800b76dbb5f843490df37095ba61704e4a1b101160dc41f169c9f455",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_domain_name[fail].security_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[fail].security_policy is set to TLS_1_2",
					"actual_value": "aws_api_gateway_domain_name[fail].security_policy is set to TLS_1_0"
				},
				{
					"file_name": "terraform\\aws\\cert\\certhasexpired.tf",
					"similarity_id": "15167b881b55be29efafbf924da1bbeb9e2e154495aaa386783cee8e1554ea22",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_domain_name[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[fail].security_policy is set",
					"actual_value": "aws_api_gateway_domain_name[fail].security_policy is undefined"
				}
			]
		},
		{
			"query_name": "Admin User Enabled For Container Registry",
			"query_id": "b897dfbf-322c-45a8-b67c-1e698beeaa51",
			"query_url": "https://www.terraform.io/docs/providers/azurerm/r/container_registry.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Admin user is enabled for Container Registry",
			"description_id": "5250257b",
			"files": [
				{
					"file_name": "terraform\\azurerm\\container\\container_registry.tf",
					"similarity_id": "4bed00d5151856ffd342b79c72acfd052609c7a20a6cd8c7c913a3849c1263c6",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_container_registry[fail].admin_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'admin_enabled' equal 'false'",
					"actual_value": "'admin_enabled' equal 'true'"
				}
			]
		},
		{
			"query_name": "App Service FTPS Enforce Disabled",
			"query_id": "85da374f-b00f-4832-9d44-84a1ca1e89f8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#ftps_state",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azure App Service should only enforce FTPS when 'ftps_state' is enabled",
			"description_id": "a1ada318",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "8832d5e104c1c9d14af04802b3c275e51f620da675bf32fe1c87404ea9f75a83",
					"line": 50,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_app_service[fail].site_config.ftps_state",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].site_config.ftps_state' is not set to 'AllAllowed'",
					"actual_value": "'azurerm_app_service[fail].site_config.ftps_state' is set to 'AllAllowed'"
				}
			]
		},
		{
			"query_name": "App Service Not Using Latest TLS Encryption Version",
			"query_id": "b7b9d1c7-2d3b-49b4-b867-ebbe68d0b643",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Ensure App Service is using the latest version of TLS encryption",
			"description_id": "63399f46",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "6b1a7fd5a399307ad2a056e6ad6e3cf29221875f55e24ac264f6aec0a82141f8",
					"line": 46,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_app_service[fail].site_config.min_tls_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].site_config.min_tls_version' is set to '1.2'",
					"actual_value": "'azurerm_app_service[fail].site_config.min_tls_version' is not set to '1.2'"
				}
			]
		},
		{
			"query_name": "Athena Database Not Encrypted",
			"query_id": "b2315cae-b110-4426-81e0-80bb8640cdd3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS Athena Database data in S3 should be encrypted",
			"description_id": "c90feea8",
			"files": [
				{
					"file_name": "terraform\\aws\\athena\\athena-database.tf",
					"similarity_id": "b43c917d2fb07396e372a406f2e24286f9a01872042e112fe8a6850338c7694d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_athena_database[{{fail}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_athena_database[{{fail}}] encryption_configuration is defined",
					"actual_value": "aws_athena_database[{{fail}}] encryption_configuration is missing"
				}
			]
		},
		{
			"query_name": "Athena Workgroup Not Encrypted",
			"query_id": "d364984a-a222-4b5f-a8b0-e23ab19ebff3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Athena Workgroup query results should be encrypted, for all queries that run in the workgroup",
			"description_id": "8eb1d650",
			"files": [
				{
					"file_name": "terraform\\aws\\athena\\athena-workgroup.tf",
					"similarity_id": "65ce6b08d41855496237b8f878c0e5f1941e8efe862d7fa18a9cb864ed3382be",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_athena_workgroup[{{fail}}].configuration.result_configuration",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_athena_workgroup[{{fail}}].configuration.result_configuration.encryption_configuration is defined",
					"actual_value": "aws_athena_workgroup[{{fail}}].configuration.result_configuration.encryption_configuration is missing"
				}
			]
		},
		{
			"query_name": "Authentication Without MFA",
			"query_id": "3ddfa124-6407-4845-a501-179f90c65097",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Users should authenticate with MFA (Multi-factor Authentication)",
			"description_id": "0db1a4b2",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.10",
			"cis_description_title": "Ensure multi-factor authentication (MFA) is enabled for all IAM users that have a console password",
			"cis_description_text": "Multi-Factor Authentication (MFA) adds an extra layer of authentication assurance beyond traditional credentials. With MFA enabled, when a user signs in to the AWS Console, they will be prompted for their user name and password as well as for an authentication code from their physical or virtual MFA token. It is recommended that MFA be enabled for all accounts that have a console password.\nEnabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that displays a time-sensitive key and have knowledge of a credential.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
					"similarity_id": "6dfbcb1a084bd911ab1fd6887c78c7d15eb9917748dbca9b66cc0b7fbe452b52",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_user_policy[fail_key].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attributes 'policy.Statement.Condition', 'policy.Statement.Condition.BoolIfExists', and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' are defined and not null",
					"actual_value": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_user_policy_without_mfa.tf",
					"similarity_id": "4f4f0098375549b4e025ebaf1970a6819df0fbdaa4c99fe3a4a5b52ddb0c8932",
					"line": 19,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_user_policy[fail_mfa].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attributes 'policy.Statement.Condition', 'policy.Statement.Condition.BoolIfExists', and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' are defined and not null",
					"actual_value": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam.tf",
					"similarity_id": "fdce3966fb4355669c4f4923cad9fd012a49d01fb2402dd5ebf9a46edd80f966",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_user_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attributes 'policy.Statement.Condition', 'policy.Statement.Condition.BoolIfExists', and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' are defined and not null",
					"actual_value": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_authentication_without_mfa.tf",
					"similarity_id": "14621df93cc04f202370a1092f7543658e6f1098354b7d47f9e16d14774294b4",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_policy[mfa].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Principal.AWS' contains ':mfa/' or 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is set to true",
					"actual_value": "'policy.Statement.Principal.AWS' doesn't contain ':mfa/' or 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is set to false"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_full_permissions.tf",
					"similarity_id": "62cf0ff15cc506adb55e8b0ae5ea499b0786219df8ef710982954fc370a278ea",
					"line": 20,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_user_policy[positive3].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attributes 'policy.Statement.Condition', 'policy.Statement.Condition.BoolIfExists', and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' are defined and not null",
					"actual_value": "The attribute(s) 'policy.Statement.Condition' or/and 'policy.Statement.Condition.BoolIfExists' or/and 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is/are undefined or null"
				}
			]
		},
		{
			"query_name": "Automatic Minor Upgrades Disabled",
			"query_id": "3b6d777b-76e3-4133-80a3-0d6f667ade7f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#auto_minor_version_upgrade",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "RDS Instance Auto Minor Version Upgrade feature in Aws Db Instance must be true",
			"description_id": "240cddcc",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
					"similarity_id": "5cdd8d5ce715dc84f6e6b25966cb14fadf0d29c4b9e24a64fd12ae573894e96e",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[positive1].auto_minor_version_upgrade",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'auto_minor_version_upgrade' is set to true",
					"actual_value": "'auto_minor_version_upgrade' is set to false"
				}
			]
		},
		{
			"query_name": "Azure App Service Client Certificate Disabled",
			"query_id": "a81573f9-3691-4d83-88a0-7d4af63e17a3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Azure App Service client certificate should be enabled",
			"description_id": "7beaf18e",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "f624ace5b3e65c4cab9fa0df7431d24e019e12b0657943008ac8e1183a419ad4",
					"line": 62,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_app_service[fail].client_cert_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].client_cert_enabled' is true",
					"actual_value": "'azurerm_app_service[fail].client_cert_enabled' is false"
				}
			]
		},
		{
			"query_name": "Azure Container Registry With No Locks",
			"query_id": "a187ac47-8163-42ce-8a63-c115236be6fb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/container_registry",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azurerm Container Registry Must Contain Associated Locks ",
			"description_id": "adb235b6",
			"files": [
				{
					"file_name": "terraform\\azurerm\\container\\azure_container_registry_with_no_locks.tf",
					"similarity_id": "cf8a521efc244cd5033b135073aeb5be7d2148b7ab7e2376a873ceefb71fd1c0",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_container_registry[acr]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_container_registry[acr] scope' contains azurerm_management_lock'",
					"actual_value": "'azurerm_container_registry[acr] scope' does not contain azurerm_management_lock'"
				}
			]
		},
		{
			"query_name": "Batch Job Definition With Privileged Container Properties",
			"query_id": "66cd88ac-9ddf-424a-b77e-e55e17630bee",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/batch_job_definition",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Batch Job Definition should not have Privileged Container Properties",
			"description_id": "71dab2d1",
			"files": [
				{
					"file_name": "terraform\\aws\\batch\\batch_job_definition.tf",
					"similarity_id": "cb30eca457a202d96592c54f37ae4eb75d9217a4e1f1f3b9341b26bb3ab2555d",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "aws_batch_job_definition[fail].container_properties.privileged",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_batch_job_definition[fail].container_properties.privileged is 'false' or not set",
					"actual_value": "aws_batch_job_definition[fail].container_properties.privileged is 'true'"
				}
			]
		},
		{
			"query_name": "BigQuery Dataset Is Public",
			"query_id": "e576ce44-dd03-4022-a8c0-3906acca2ab4",
			"query_url": "https://www.terraform.io/docs/providers/google/r/bigquery_dataset.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "BigQuery dataset is anonymously or publicly accessible",
			"description_id": "cb5081a0",
			"files": [
				{
					"file_name": "terraform\\google\\bigquery\\bigquery_dataset.tf",
					"similarity_id": "d085ad2fc5274d422d24d5251eaf880ac98e7e4c2aa5ad1e066f0d58e3020b79",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "google_bigquery_dataset[fail].access.special_group",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'access.special_group' is not equal to 'allAuthenticatedUsers'",
					"actual_value": "'access.special_group' is equal to 'allAuthenticatedUsers'"
				}
			]
		},
		{
			"query_name": "CA certificate Identifier is outdated",
			"query_id": "9f40c07e-699e-4410-8856-3ba0f2e3a2dd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "The CA certificate Identifier must be 'rds-ca-2019'.",
			"description_id": "09935963",
			"files": [
				{
					"file_name": "terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
					"similarity_id": "d68d92953c9071b0cd85a1940e914de3800d35f40932a8ceb80f161bf2be4814",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[fail].ca_cert_identifier",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_db_instance.ca_cert_identifier' is 'rds-ca-2019'",
					"actual_value": "'aws_db_instance.ca_cert_identifier' is 'rds-ca-2015'"
				}
			]
		},
		{
			"query_name": "CMK Rotation Disabled",
			"query_id": "22fbfeac-7b5a-421a-8a27-7a2178bb910b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Customer Master Keys (CMK) must have rotation enabled, which means the attribute 'enable_key_rotation' must be set to 'true' when the key is enabled.",
			"description_id": "64cfa70f",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.8",
			"cis_description_title": "Ensure rotation for customer created CMKs is enabled",
			"cis_description_text": "AWS Key Management Service (KMS) allows customers to rotate the backing key which is key material stored within the KMS which is tied to the key ID of the Customer Created customer master key (CMK). It is the backing key that is used to perform cryptographic operations such as encryption and decryption. Automated key rotation currently retains all prior backing keys so that decryption of encrypted data can take place transparently. It is recommended that CMK key rotation be enabled.\nRotating encryption keys helps reduce the potential impact of a compromised key as data encrypted with a new key cannot be accessed with a previous key that may have been exposed.",
			"files": [
				{
					"file_name": "terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
					"similarity_id": "3d88c5ba582cad27e7f29742a063ad42397bb06572b41f387f1255e2ea0c147a",
					"line": 35,
					"issue_type": "MissingAttribute",
					"search_key": "aws_kms_key[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_kms_key[example].enable_key_rotation is set to true",
					"actual_value": "aws_kms_key[example].enable_key_rotation is undefined"
				},
				{
					"file_name": "terraform\\aws\\kms\\kms.tf",
					"similarity_id": "da4433f059410d9b68861463a81910361089b201e53bab4c85e7216a875e6258",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_kms_key[fail_0]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_kms_key[fail_0].enable_key_rotation is set to true",
					"actual_value": "aws_kms_key[fail_0].enable_key_rotation is undefined"
				},
				{
					"file_name": "terraform\\aws\\kms\\kms_key_with_vulnerable_policy.tf",
					"similarity_id": "05fd071285bbcc93b57455169d4b33366e29d1a33448fb35ef037c7c3c87d035",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_kms_key[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_kms_key[fail].enable_key_rotation is set to true",
					"actual_value": "aws_kms_key[fail].enable_key_rotation is undefined"
				}
			]
		},
		{
			"query_name": "COS Node Image Not Used",
			"query_id": "8a893e46-e267-485a-8690-51f39951de58",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#node_config",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "A node image, that is not Container-Optimized OS (COS), is used for Kubernetes Engine Clusters Node image",
			"description_id": "4bdfef01",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_node_pool.tf",
					"similarity_id": "377bddf34dfeb3ad3ef60942fe306f4fbe8377f99ec553db9c9fdb62b93ddf87",
					"line": 35,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_node_pool[fail_pool].node_config.image_type",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'node_config.image_type' is 'COS'",
					"actual_value": "'node_config.image_type' is not 'COS'"
				}
			]
		},
		{
			"query_name": "Client Certificate Disabled",
			"query_id": "73fb21a1-b19a-45b1-b648-b47b1678681e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Clusters must be created with Client Certificate enabled, which means 'master_auth' must have 'client_certificate_config' with the attribute 'issue_client_certificate' equal to true",
			"description_id": "94728b0c",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "d0bc6b40535cc7ccb805f54cdd74ef809919711be6f3e75cad1999d288aeaf9c",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "2fdac05df718e85b230e4635bc5b92c38a21dc173f22e6f1239ceaf123463898",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "9bb4c990d9fbf8fd7a55e7714f6660fdfb62efc13fead018b4d2792be7af786f",
					"line": 52,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail].master_auth",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'client_certificate_config' in 'master_auth' is defined",
					"actual_value": "Attribute 'client_certificate_config' in 'master_auth' is undefined"
				}
			]
		},
		{
			"query_name": "Cloud Storage Bucket Is Publicly Accessible",
			"query_id": "c010082c-76e0-4b91-91d9-6e8439e455dd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Cloud Storage Bucket is anonymously or publicly accessible",
			"description_id": "7a54f7e2",
			"files": [
				{
					"file_name": "terraform\\google\\storage\\storage_bucket_iam_member.tf",
					"similarity_id": "affc381aa01ac6303ec7a85c8efb497290bf68fb8a47376798338e4308986f30",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "google_storage_bucket_iam_member[member].member",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'member' not equal to 'allUsers' nor 'allAuthenticatedUsers'",
					"actual_value": "'member' equal to 'allUsers'"
				}
			]
		},
		{
			"query_name": "Cloud Storage Bucket Logging Not Enabled",
			"query_id": "d6cabc3a-d57e-48c2-b341-bf3dd4f4a120",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#log_bucket",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Cloud storage bucket with logging not enabled",
			"description_id": "9e9984aa",
			"files": [
				{
					"file_name": "terraform\\google\\storage\\storage_bucket.tf",
					"similarity_id": "d5970f14e4b9301238ce00e24e1ec0ac9e8f0301376bcb5d3ee32df13d6a0a44",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "google_storage_bucket[static_site]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_storage_bucket.logging' is set",
					"actual_value": "'google_storage_bucket.logging' is undefined"
				}
			]
		},
		{
			"query_name": "Cloud Storage Bucket Versioning Disabled",
			"query_id": "e7e961ac-d17e-4413-84bc-8a1fbe242944",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Object Versioning Not Enabled on Cloud Storage Bucket",
			"description_id": "9fda4554",
			"files": [
				{
					"file_name": "terraform\\google\\storage\\storage_bucket.tf",
					"similarity_id": "888eedbda956029507d4ab16a6cffce812b7fdaef47c9888b028b77edc05d071",
					"line": 33,
					"issue_type": "IncorrectValue",
					"search_key": "google_storage_bucket[fail_self].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning.enabled' is true",
					"actual_value": "'versioning.enabled' is false"
				},
				{
					"file_name": "terraform\\google\\storage\\storage_bucket.tf",
					"similarity_id": "29151752968f078b64abeac7d0f0c6aced9622ecd39d90e0ef668efa380676be",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "google_storage_bucket[static_site].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning.enabled' is true",
					"actual_value": "'versioning.enabled' is false"
				}
			]
		},
		{
			"query_name": "CloudFront Without Minimum Protocol TLS 1.2",
			"query_id": "00e5e55e-c2ff-46b3-a757-a7a1cd802456",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "CloudFront Minimum Protocol version should be at least TLS 1.2",
			"description_id": "0b620722",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "3a0d9a2d702a8c1f426bf8aa6c206647e01677564b68e44464df6e5f0918e166",
					"line": 82,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_cloudfront_distribution[s3_distribution].viewer_certificate.minimum_protocol_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[s3_distribution].viewer_certificate.minimum_protocol_version' is TLSv1.2_x",
					"actual_value": "resource.aws_cloudfront_distribution[s3_distribution].viewer_certificate.minimum_protocol_version' is TLSv1.1_2015"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "2922a19ba6eab92b30cff557edfa730a6e5c6d5098481d06a07d5920569b2a4a",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_cloudfront_distribution[fail_defaultcert]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[fail_defaultcert].viewer_certificate' is defined and not null",
					"actual_value": "resource.aws_cloudfront_distribution[fail_defaultcert].viewer_certificate' is undefined or null"
				}
			]
		},
		{
			"query_name": "CloudTrail Log Files Not Encrypted",
			"query_id": "5d9e3164-9265-470c-9a10-57ae454ac0c7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Logs delivered by CloudTrail should be encrypted using KMS",
			"description_id": "ee8a4d47",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.7",
			"cis_description_title": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
			"cis_description_text": "AWS CloudTrail is a web service that records AWS API calls for an account and makes those logs available to users and resources in accordance with IAM policies. AWS Key Management Service (KMS) is a managed service that helps create and control the encryption keys used to encrypt account data, and uses Hardware Security Modules (HSMs) to protect the security of encryption keys. CloudTrail logs can be configured to leverage server side encryption (SSE) and KMS customer created master keys (CMK) to further protect CloudTrail logs. It is recommended that CloudTrail be configured to use SSE-KMS.\nConfiguring CloudTrail to use SSE-KMS provides additional confidentiality controls on log data as a given user must have S3 read permission on the corresponding log bucket and must be granted decrypt permission by the CMK policy.",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "db7b01079f993b480ba4be03d61b074771726cc4d18ed49c47b9c0ba00060f55",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudtrail[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudtrail[fail].kms_key_id is defined and not null",
					"actual_value": "aws_cloudtrail[fail].kms_key_id is undefined or null"
				}
			]
		},
		{
			"query_name": "CloudTrail Logging Disabled",
			"query_id": "4bb76f17-3d63-4529-bdca-2b454529d774",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_logging",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Checks if logging is enabled for CloudTrail.",
			"description_id": "d0aecc8d",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.1",
			"cis_description_title": "Ensure CloudTrail is enabled in all regions",
			"cis_description_text": "AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).\nThe AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally, ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected ensuring that a multi-regions trail exists will ensure that Global Service Logging is enabled for a trail by default to capture recording of events generated onAWS global services for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account ",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "4ebb33936a59dd046c1f336232eb1f83a80dcc349ce1b28adf46a53c2f806030",
					"line": 22,
					"issue_type": "IncorrectValue",
					"search_key": "aws_cloudtrail.fail.enable_logging",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudtrail.fail.enable_logging is true",
					"actual_value": "aws_cloudtrail.fail.enable_logging is false"
				}
			]
		},
		{
			"query_name": "CloudWatch Log Group Not Encrypted",
			"query_id": "0afbcfe9-d341-4b92-a64c-7e6de0543879",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS CloudWatch Log groups should be encrypted using KMS",
			"description_id": "4258abe6",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudwatch\\cloudwatch.tf",
					"similarity_id": "afcf8dfc63b4a508afa03461c9635031a93bb6bae542f8f610e11a85d2323707",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "cloudwatch_log_group[logs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'kms_key_id' is set",
					"actual_value": "Attribute 'kms_key_id' is undefined"
				}
			]
		},
		{
			"query_name": "Cluster Allows Unsafe Sysctls",
			"query_id": "a9174d31-d526-4ad9-ace4-ce7ddbf52e03",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#allowed_unsafe_sysctls",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "A Kubernetes Cluster must not allow unsafe sysctls, to prevent a pod from having any influence on any other pod on the node, harming the node's health or gaining CPU or memory resources outside of the resource limits of a pod. This means the 'spec.security_context.sysctl' must not have an unsafe sysctls and that the attribute 'allowed_unsafe_sysctls' must be undefined.",
			"description_id": "21547beb",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\cluster_allows_unsafe_sysctls.tf",
					"similarity_id": "6cf1c103f34ff0edcfaa66b99eedf8e89e2a759eee37f817cc3cd2c2932590df",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allowed_unsafe_sysctls",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.allowed_unsafe_sysctls is undefined",
					"actual_value": "kubernetes_pod_security_policy[example].spec.allowed_unsafe_sysctls is set"
				}
			]
		},
		{
			"query_name": "Cluster Labels Disabled",
			"query_id": "65c1bc7a-4835-4ac4-a2b6-13d310b0648d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Clusters must be configured with labels, which means the attribute 'resource_labels' must be defined",
			"description_id": "947385a5",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "b65eb9382778ff0b73ac4d0461e2688770bc89417b30e3bf0733f082d642930e",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'resource_labels' is defined",
					"actual_value": "Attribute 'resource_labels' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "1763a6ed7834290bfecbb6afb6557e21b870b2d5655e73d40eabc550176cc719",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'resource_labels' is defined",
					"actual_value": "Attribute 'resource_labels' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "3478c5e409a63828e0ae096d7c8cfcf5ba09a7b5cba809a705d7f3a396e613be",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'resource_labels' is defined",
					"actual_value": "Attribute 'resource_labels' is undefined"
				}
			]
		},
		{
			"query_name": "Cluster Master Authentication Disabled",
			"query_id": "1baba08e-3c8a-4be7-95eb-dced5833de21",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Engine Clusters must have Master Authentication set to enabled, which means the attribute 'master_auth' must have the subattributes 'username' and 'password' defined and not empty",
			"description_id": "70e5d429",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "af1b876131f63a0d62915da258538e118adc1f23d1c0b36ff4c6420d6afb69e3",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "add76632c5663bdf3b077b1edb65d5a246c7dc61b5d225a9d74aa2bf2d1f083c",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				}
			]
		},
		{
			"query_name": "Configuration Aggregator to All Regions Disabled",
			"query_id": "ac5a0bc0-a54c-45aa-90c3-15f7703b9132",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS Config Configuration Aggregator All Regions must be set to True",
			"description_id": "9e82278d",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.5",
			"cis_description_title": "Ensure AWS Config is enabled in all regions",
			"cis_description_text": "AWS Config is a web service that performs configuration management of supported AWS resources within your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items (AWS resources), any configuration changes between resources. It is recommended AWS Config be enabled in all regions.\nThe AWS configuration item history captured by AWS Config enables security analysis, resource change tracking, and compliance auditing.",
			"files": [
				{
					"file_name": "terraform\\aws\\config\\config_configuration_aggregator.tf",
					"similarity_id": "86310a6f114d7ab8ee0b6dd7cda5e10848373d3546db47aa4587a4b1205e732a",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_config_configuration_aggregator[organization].account_aggregation_source",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_config_configuration_aggregator[organization].account_aggregation_source.all_regions' is set to true",
					"actual_value": "'aws_config_configuration_aggregator[organization].account_aggregation_source.all_regions' is undefined"
				}
			]
		},
		{
			"query_name": "Container Is Privileged",
			"query_id": "87065ef8-de9b-40d8-9753-f4a4303e27a4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#privileged",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Do not allow container to be privileged.",
			"description_id": "e2be4ab9",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "0e8f58971608de7b88590c0b4b37db2debe36591d7f119bf80413c5f344d3482",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].security_context.privileged is set to false",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].security_context.privileged is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "0e8f58971608de7b88590c0b4b37db2debe36591d7f119bf80413c5f344d3482",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.privileged is set to false",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.privileged is set to true"
				}
			]
		},
		{
			"query_name": "CosmosDB Account IP Range Filter Not Set",
			"query_id": "c2a3efb6-8a58-481c-82f2-bfddf34bb4b7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/cosmosdb_account#ip_range_filter",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "The Ip Range Must Contain Ips",
			"description_id": "fd34a2d6",
			"files": [
				{
					"file_name": "terraform\\azurerm\\cosmosdb\\cosmosdb_account.tf",
					"similarity_id": "48d07a2d75605ed65aa0d3ff139fa70a9b83256dcc75e369ddd74f74d6043604",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_cosmosdb_account[fail].ip_range_filter",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_cosmosdb_account[fail].ip_range_filter' is set",
					"actual_value": "'azurerm_cosmosdb_account[fail].ip_range_filter' is undefined"
				}
			]
		},
		{
			"query_name": "DAX Cluster Not Encrypted",
			"query_id": "f11aec39-858f-4b6f-b946-0a1bf46c0c87",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS DAX Cluster should have server-side encryption at rest",
			"description_id": "28ef11a5",
			"files": [
				{
					"file_name": "terraform\\aws\\dax\\dax_cluster.tf",
					"similarity_id": "02bfea0f996516daf46634c82f269859262a0bbb14de86a06f3e58d3e22b3665",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_dax_cluster[{{name}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_dax_cluster.server_side_encryption.enabled is set to true",
					"actual_value": "aws_dax_cluster.server_side_encryption is missing"
				}
			]
		},
		{
			"query_name": "DB Instance Publicly Accessible",
			"query_id": "35113e6f-2c6b-414d-beec-7a9482d3b2d1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#publicly_accessible",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "The field 'publicly_accessible' should not be set to 'true' (default is 'false').",
			"description_id": "c145a47f",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\db_instance.tf",
					"similarity_id": "3bcb915cbfd54c478c78b0a6f8820034393a08e9b0bd688ea4ba2e2ff9a06376",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[fail].publicly_accessible",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'publicly_accessible' is set to false or undefined",
					"actual_value": "'publicly_accessible' is set to true"
				},
				{
					"file_name": "terraform\\aws\\db_instance\\db_instance.tf",
					"similarity_id": "166f8c4f156f0d49da3ac3d8ad6172786b73d7d086195d16b7f8c8a0e19cbdce",
					"line": 35,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[default].publicly_accessible",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'publicly_accessible' is set to false or undefined",
					"actual_value": "'publicly_accessible' is set to true"
				}
			]
		},
		{
			"query_name": "DB Instance Storage Not Encrypted",
			"query_id": "08bd0760-8752-44e1-9779-7bb369b2b4e4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "The parameter storage_encrypted in aws_db_instance must be set to 'true' (the default is 'false').",
			"description_id": "88ca11bc",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "6dff8a63bbd36af38534546fcb0a21828fe985542341341521dc41471230f390",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'storage_encrypted' is set to true",
					"actual_value": "'storage_encrypted' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\rds\\db_instance.tf",
					"similarity_id": "45770e6e73061ebcf72f83613cb1b1033356619562dbc4afd40dbc1daf0dc5e7",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'storage_encrypted' is set to true",
					"actual_value": "'storage_encrypted' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\db_instance\\db_instance.tf",
					"similarity_id": "c8a9c4d6109029ae24b4d87c581f426d7dfbf986b93e3bc521660d2115dd9462",
					"line": 32,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[default].storage_encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'storage_encrypted' is set to true",
					"actual_value": "'storage_encrypted' is set to false"
				}
			]
		},
		{
			"query_name": "DOCDB Cluster Not Encrypted",
			"query_id": "bc1f9009-84a0-490f-ae09-3e0ea6d74ad6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS DOCDB Cluster storage should be encrypted",
			"description_id": "aaec5c7c",
			"files": [
				{
					"file_name": "terraform\\aws\\documentdb\\docdb_cluster.tf",
					"similarity_id": "f2abb2b811df8ea0eb134a4470499352f4051d0f42cdbb454da873df734b57fd",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_docdb_cluster[{{examplea}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_docdb_cluster.storage_encrypted is set to true",
					"actual_value": "aws_docdb_cluster.storage_encrypted is missing"
				}
			]
		},
		{
			"query_name": "DOCDB Cluster Without KMS",
			"query_id": "4766d3ea-241c-4ee6-93ff-c380c996bd1a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS DOCDB Cluster should be encrypted with a KMS encryption key",
			"description_id": "35efd407",
			"files": [
				{
					"file_name": "terraform\\aws\\documentdb\\docdb_cluster.tf",
					"similarity_id": "4dca70bc207e9085806e08ec491ace304b34e7e289b364ffbfd6fc1db7c69eda",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_docdb_cluster[{{examplea}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_docdb_cluster.kms_key_id is defined and not null",
					"actual_value": "aws_docdb_cluster.kms_key_id is undefined or null"
				}
			]
		},
		{
			"query_name": "EBS Default Encryption Disabled",
			"query_id": "3d3f6270-546b-443c-adb4-bb6fb2187ca6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_encryption_by_default",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "EBS Encryption should be enabled",
			"description_id": "2990583f",
			"files": [
				{
					"file_name": "terraform\\aws\\ebs\\ebs_encryption_defaults.tf",
					"similarity_id": "0485abe64e055c3165a25fc0d7ca09f32c6d84e2ca888a0fe914458edaf592cf",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ebs_encryption_by_default[disabled].enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_ebs_encryption_by_default.encrypted' is true",
					"actual_value": "'aws_ebs_encryption_by_default.encrypted' is false"
				}
			]
		},
		{
			"query_name": "EC2 Instance Has Public IP",
			"query_id": "5a2486aa-facf-477d-a5c1-b010789459ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "EC2 Instance should not have a public IP address.",
			"description_id": "c6f1d1f4",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
					"similarity_id": "e9b075a4dbfafa827d6d436fa6354f58a2ba7998d87b7dc9be5d24ec6181e309",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.monitoring_positive1",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
					"similarity_id": "aeec8cd270cd770d8b6f6416ef2dc7a698ea1dad9ce0d1bf07b30bb7494ec919",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.positive1",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance_with_no_vpc.tf",
					"similarity_id": "580993fd88fb5ab6096ceb4a0b86caf7c507c4079bef1aabf2f9b6c8645afb21",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.positive1",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "9f582bef5333cfdb2cf4f9f05625373f096567f497c55552c99cf45cecb00085",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.test_ec2_instance",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "f90f0a639447ef7ba85693028908fcfc58e73a297b99d383dd12a9a9d2f57312",
					"line": 91,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.test",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
					"similarity_id": "2888a748aee72511bd1f0ea8a6ca1815576ac7c0fbfb0cfd1d594949bb18793f",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.web",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "30d285ba9f6a3fce2dde0fae2b74e9110633bc30126973722e51e6a6b277c2b4",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_instance.fail.associate_public_ip_address",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' is false",
					"actual_value": "'associate_public_ip_address' is true"
				}
			]
		},
		{
			"query_name": "ECS Service Admin Role is Present",
			"query_id": "3206240f-2e87-4e58-8d24-3e19e7c83d7c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "ECS Services must not have Admin roles, which means the attribute 'iam_role' must not be an admin role",
			"description_id": "0503dc3c",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_service_admin_role_is_present.tf",
					"similarity_id": "788fa7173ad2ffb5cdb0246fe6e4af7fb6b93637a02989ce175acd4e0addb7cd",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecs_service[fail_service].iam_role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_ecs_service[fail_service].iam_role' is not equal to 'admin'",
					"actual_value": "'aws_ecs_service[fail_service].iam_role' is equal to 'admin'"
				}
			]
		},
		{
			"query_name": "ECS Task Definition Network Mode Not Recommended",
			"query_id": "9f4a9409-9c60-4671-be96-9716dbf63db1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#network_mode",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Network_Mode should be 'awsvpc' in ecs_task_defenition. AWS VPCs provides the controls to facilitate a formal process for approving and testing all network connections and changes to the firewall and router configurations",
			"description_id": "61f295c5",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_task_definition_network_mode_not_recommended.tf",
					"similarity_id": "93654960881c3763678396aa07dc7242d7d2a564cd78a28f313581fdeb2d278a",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecs_task_definition[positive1].network_mode",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'network_mode' is equal to 'awsvpc'",
					"actual_value": "'network_mode' is equal to 'none'"
				}
			]
		},
		{
			"query_name": "ECS Task Definition Volume Not Encrypted",
			"query_id": "4d46ff3b-7160-41d1-a310-71d6d370b08f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS ECS Task Definition EFS data in transit between AWS ECS host and AWS EFS server should be encrypted",
			"description_id": "b01e131b",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_task_definition.tf",
					"similarity_id": "e0411b7b0ef12f454e97c1e8d2838e5dd9b2f56efbec0fd7ed5104ac9485cd8b",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecs_task_definition[{{fail}}].volume.efs_volume_configuration",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecs_task_definition.volume.efs_volume_configuration.transit_encryption value is 'ENABLED'",
					"actual_value": "aws_ecs_task_definition.volume.efs_volume_configuration.transit_encryption is missing"
				}
			]
		},
		{
			"query_name": "EFS Not Encrypted",
			"query_id": "48207659-729f-4b5c-9402-f884257d794f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system#encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Elastic File System (EFS) must be encrypted",
			"description_id": "e4ced70d",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_task_definition.tf",
					"similarity_id": "2fe93a1e594c9678bc01910b1d7dc45e03f0755cb0e7af9863042ab6e1a9a40a",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[fs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[fs].encrypted' is defined and not null",
					"actual_value": "aws_efs_file_system[fs].encrypted' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\backup_vault\\backup_selection.tf",
					"similarity_id": "75dfae6db73f39682dd6592b56167b57989332b7778f56bf23cd3bcb3e0be761",
					"line": 43,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[not_ok_efs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[not_ok_efs].encrypted' is defined and not null",
					"actual_value": "aws_efs_file_system[not_ok_efs].encrypted' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\efs\\efs_with_vulnerable_policy.tf",
					"similarity_id": "1d4e973beb34e155e79496d377024ed4be934d8842a35e20449550a0c29230c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[not_secure]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[not_secure].encrypted' is defined and not null",
					"actual_value": "aws_efs_file_system[not_secure].encrypted' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\efs\\efs.tf",
					"similarity_id": "08f0104fcdcdeee6097af3af8b09f19d96941ae94c03b0b661d02ee0ef41f621",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_efs_file_system[sharedstore].encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[sharedstore].encrypted' is true",
					"actual_value": "aws_efs_file_system[sharedstore].encrypted' is false"
				}
			]
		},
		{
			"query_name": "EFS With Vulnerable Policy",
			"query_id": "fae52418-bb8b-4ac2-b287-0b9082d6a3fd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system_policy#policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "EFS (Elastic File System) policy should avoid wildcard in 'Action' and 'Principal'.",
			"description_id": "d2017b69",
			"files": [
				{
					"file_name": "terraform\\aws\\efs\\efs_with_vulnerable_policy.tf",
					"similarity_id": "c77b01a4be0f5b11153f3645e533e29cdf3581c54de0214f5e1bede49af8a8a4",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "aws_efs_file_system_policy[not_secure_policy].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system_policy[not_secure_policy].policy does not have wildcard in 'Action' and 'Principal'",
					"actual_value": "aws_efs_file_system_policy[not_secure_policy].policy has wildcard in 'Action' or 'Principal'"
				}
			]
		},
		{
			"query_name": "EFS Without KMS",
			"query_id": "25d251f3-f348-4f95-845c-1090e41a615c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system#kms_key_id",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Elastic File System (EFS) must have KMS Key ID",
			"description_id": "c5dfddad",
			"files": [
				{
					"file_name": "terraform\\aws\\backup_vault\\backup_selection.tf",
					"similarity_id": "a66bf71f6e6198125ea8f3a9a76d2b87b4d4176af98dca455188ac6f199ae419",
					"line": 43,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[not_ok_efs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[not_ok_efs].kms_key_id' is defined'",
					"actual_value": "aws_efs_file_system[not_ok_efs].kms_key_id' is undefined"
				},
				{
					"file_name": "terraform\\aws\\ecs\\ecs_task_definition.tf",
					"similarity_id": "4225731d7d862ae79ffc5fec93a2de6b3f21fc6cc9bf31365b3c01effa563850",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[fs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[fs].kms_key_id' is defined'",
					"actual_value": "aws_efs_file_system[fs].kms_key_id' is undefined"
				},
				{
					"file_name": "terraform\\aws\\efs\\efs_with_vulnerable_policy.tf",
					"similarity_id": "e7fe3ede011b84708c3c4487d092fa28f8b52a7607376d240882e9a3a6299db9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_efs_file_system[not_secure]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_efs_file_system[not_secure].kms_key_id' is defined'",
					"actual_value": "aws_efs_file_system[not_secure].kms_key_id' is undefined"
				}
			]
		},
		{
			"query_name": "EKS Cluster Encryption Disabled",
			"query_id": "63ebcb19-2739-4d3f-aa5c-e8bbb9b85281",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "EKS Cluster should be encrypted",
			"description_id": "0a928b22",
			"files": [
				{
					"file_name": "terraform\\aws\\eks\\eks_cluster.tf",
					"similarity_id": "cc39a4acf135f7d4986e3fc122f9607d3b95443917fbf78a2431ceafdf9dda16",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_eks_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'encryption_config' is defined and not null",
					"actual_value": "'encryption_config' is undefined or null"
				}
			]
		},
		{
			"query_name": "EKS Cluster Has Public Access CIDRs",
			"query_id": "61cf9883-1752-4768-b18c-0d57f2737709",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Amazon EKS public endpoint is enables and accessible to all: 0.0.0.0/0\"",
			"description_id": "9579b0ff",
			"files": [
				{
					"file_name": "terraform\\aws\\eks\\eks_cluster.tf",
					"similarity_id": "bfe458132bc26558a94e6847d6e0c38572f1e5468d41ffba8978b65241866b01",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "aws_eks_cluster[fail].vpc_config.public_access_cidrs",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'vpc_config.public_access_cidrs' not equal '0.0.0.0/0'",
					"actual_value": "One of 'vpc_config.public_access_cidrs' is equal '0.0.0.0/0'"
				}
			]
		},
		{
			"query_name": "EKS node group remote access disabled",
			"query_id": "ba40ace1-a047-483c-8a8d-bc2d3a67a82d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_node_group#remote_access",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "EKS node group remote access is disabled when 'SourceSecurityGroups' is missing",
			"description_id": "6d42a06d",
			"files": [
				{
					"file_name": "terraform\\aws\\eks\\eks_node.tf",
					"similarity_id": "0eda32128948c5c120dc988706dd50bd62bfaa4f50b6dff7098570a3897e2549",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_eks_node_group[fail].remote_access",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_eks_node_group[fail].remote_access.source_security_groups_ids' is defined and not null",
					"actual_value": "'aws_eks_node_group[fail].remote_access.source_security_groups_ids' is undefined or null"
				}
			]
		},
		{
			"query_name": "ELB Using Insecure Protocols",
			"query_id": "126c1788-23c2-4a10-906c-ef179f4f96ec",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/load_balancer_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "ELB Predefined or Custom Security Policies must not use insecure protocols, to reduce the risk of the SSL connection between the client and the load balancer being exploited. That means the 'name' of 'policy_attributes' must not coincide with any of a predefined list of insecure protocols.",
			"description_id": "88f4d79a",
			"files": [
				{
					"file_name": "terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
					"similarity_id": "f5b35f28842412194a58f3a4dd48412d2bf900abd3e4caa6c92e3f3d610663fc",
					"line": 22,
					"issue_type": "IncorrectValue",
					"search_key": "aws_load_balancer_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_load_balancer_policy[fail].policy_attribute[Protocol-TLSv1]' is not an insecure protocol",
					"actual_value": "'aws_load_balancer_policy[fail].policy_attribute[Protocol-TLSv1]' is an insecure protocol"
				}
			]
		},
		{
			"query_name": "Function App Authentication Disabled",
			"query_id": "e65a0733-94a0-4826-82f4-df529f4c593f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#auth_settings",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure Function App authentication settings should be enabled",
			"description_id": "7526dc36",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "2e786cae191f1504adef1e1fb0e8b4e463805a2f2befaa2d2a59c460bd55e42c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_function_app[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].auth_settings' is defined and not null",
					"actual_value": "'azurerm_function_app[fail].auth_settings' is undefined or null"
				}
			]
		},
		{
			"query_name": "Function App FTPS Enforce Disabled",
			"query_id": "9dab0179-433d-4dff-af8f-0091025691df",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#ftps_state",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azure Function App should only enforce FTPS when 'ftps_state' is enabled",
			"description_id": "2144ef13",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "593c197ea6db978ae26f8a18b72cfa92fb673b95e3b3d5056352cc8a1c6fa6b1",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_function_app[fail].site_config.ftps_state",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].site_config.ftps_state' is not set to 'AllAllowed'",
					"actual_value": "'azurerm_function_app[fail].site_config.ftps_state' is set to 'AllAllowed'"
				}
			]
		},
		{
			"query_name": "Function App Not Using Latest TLS Encryption Version",
			"query_id": "45fc717a-bd86-415c-bdd8-677901be1aa6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#min_tls_version",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Ensure Function App is using the latest version of TLS encryption",
			"description_id": "69753abf",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "188e16f8c64507305217611ff58c224ebb1573bc57054be86e04241cca6d5c3c",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_function_app[fail].site_config.min_tls_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].site_config.min_tls_version' is set to '1.2'",
					"actual_value": "'azurerm_function_app[fail].site_config.min_tls_version' is not set to '1.2'"
				}
			]
		},
		{
			"query_name": "GKE Basic Authentication Enabled",
			"query_id": "70cdf849-b7d9-4569-b87d-5d82ffd44719",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "GCP - Google Kubernetes Engine (GKE) Basic Authentication must be disabled, which means the username and password provided in the master_auth block must be empty",
			"description_id": "c59b567e",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "dc30217e3af297d465b29600dddbaddc67514a6dd0bcf813294d2681358d51d6",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "2761794795f8385392ec615d51047a39b033d0fa781f8e047c7b251c67ae1735",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'master_auth' is defined",
					"actual_value": "Attribute 'master_auth' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "ff8c415cc23db251d69d7f2fd0303d033f42cd61728f2a074e72ece337f7bbc6",
					"line": 52,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail].master_auth",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Both attribute 'master_auth.username' and 'master_auth.password' are defined and empty",
					"actual_value": "Attribute 'username' is not empty or attribute 'master_auth' is not empty"
				}
			]
		},
		{
			"query_name": "GKE Legacy Authorization Enabled",
			"query_id": "5baa92d2-d8ee-4c75-88a4-52d9d8bb8067",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Engine Clusters must have Legacy Authorization set to disabled, which means the attribute 'enable_legacy_abac' must not be true",
			"description_id": "a2e814bc",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "8366090bab2deb6e70f83945b92f92bed6b18d8aba1518c34be4309a231827f9",
					"line": 28,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail_public].enable_legacy_abac",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'enable_legacy_abac' is false",
					"actual_value": "Attribute 'enable_legacy_abac' is true"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "13db7cfee38f63a5d2566b5d7a3509a75f3b292af0d1f129bed9d38acffa5298",
					"line": 44,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail].enable_legacy_abac",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'enable_legacy_abac' is false",
					"actual_value": "Attribute 'enable_legacy_abac' is true"
				}
			]
		},
		{
			"query_name": "Geo Redundancy Is Disabled",
			"query_id": "8b042c30-e441-453f-b162-7696982ebc58",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Backup",
			"description": "Make sure that on PostgreSQL Geo Redundant Backups is enabled",
			"description_id": "4646e954",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgresql_server.tf",
					"similarity_id": "68c2812d6a0245bad3b971a3f8dd2026ae0a5a05664236e6d8aa2cb3becab4f6",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_server[fails].geo_redundant_backup_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server.fails.geo_redundant_backup_enabled' is true",
					"actual_value": "'azurerm_postgresql_server.fails.geo_redundant_backup_enabled' is false"
				},
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\secure-tls-policy.tf",
					"similarity_id": "8ffe2ca2dd0cefa2a2344e4fe25c236b21bf01c39ab9bf40294ac013e23a5fe3",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_postgresql_server[fail_psql]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server.fail_psql.geo_redundant_backup_enabled' is set",
					"actual_value": "'azurerm_postgresql_server.fail_psql.geo_redundant_backup_enabled' is undefined"
				}
			]
		},
		{
			"query_name": "Glue Data Catalog Encryption Disabled",
			"query_id": "01d50b14-e933-4c99-b314-6d08cd37ad35",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_data_catalog_encryption_settings#data_catalog_encryption_settings",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Glue Data Catalog Encryption Settings should have 'connection_password_encryption' and 'encryption_at_rest' enabled",
			"description_id": "c6b6fc2e",
			"files": [
				{
					"file_name": "terraform\\aws\\glue\\glue_data_catalog_encryption_settings.tf",
					"similarity_id": "5a00c86fb64b8b749112ff746ac882c2a4f2ad8cbf3f02aeb428b46fdf4a18fa",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_glue_data_catalog_encryption_settings[test].data_catalog_encryption_settings.encryption_at_rest.catalog_encryption_mode",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'catalog_encryption_mode' is set to 'SSE-KMS'",
					"actual_value": "'catalog_encryption_mode' is not set to 'SSE-KMS'"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_data_catalog_encryption_settings.tf",
					"similarity_id": "cd2e784a26c8b219a854a38d11e4da818790b3c1c85d0d526b7a72b929dbc1f8",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_glue_data_catalog_encryption_settings[test].data_catalog_encryption_settings.connection_password_encryption.return_connection_password_encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'return_connection_password_encrypted' is set to true",
					"actual_value": "'return_connection_password_encrypted' is not set to true"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_data_catalog_encryption_settings.tf",
					"similarity_id": "172d5cce6ce70844523885c7b2b4ca09e2f16c2fe2865199d244923ec4d18057",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_glue_data_catalog_encryption_settings[test].data_catalog_encryption_settings.connection_password_encryption",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_kms_key_id' is defined and not null",
					"actual_value": "'aws_kms_key_id' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_data_catalog_encryption_settings.tf",
					"similarity_id": "8b4af35f3846820096a8877e66e82c3beac313c095628cbb7ddc2b56f9cd6eb8",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_glue_data_catalog_encryption_settings[test].data_catalog_encryption_settings.encryption_at_rest",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'sse_aws_kms_key_id' is defined and not null",
					"actual_value": "'sse_aws_kms_key_id' is undefined or null"
				}
			]
		},
		{
			"query_name": "Glue Security Configuration Encryption Disabled",
			"query_id": "ad5b4e97-2850-4adf-be17-1d293e0b85ee",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_security_configuration#encryption_configuration",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Glue Security Configuration Encryption should have 'cloudwatch_encryption', 'job_bookmarks_encryption' and 's3_encryption' enabled",
			"description_id": "839261d5",
			"files": [
				{
					"file_name": "terraform\\aws\\glue\\glue_security_configuration.tf",
					"similarity_id": "39adb4dd3920c4b614e66ee354f943d110b3ed42978939190b5fd948aa00ba50",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_glue_security_configuration[test].encryption_configuration.cloudwatch_encryption",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_glue_security_configuration[test].encryption_configuration.cloudwatch_encryption has 'kms_key_arn' defined and not null",
					"actual_value": "aws_glue_security_configuration[test].encryption_configuration.cloudwatch_encryption has 'kms_key_arn' undefined or null"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_security_configuration.tf",
					"similarity_id": "330356d221241779c6ec6a6652550a429c9ce327ade735451bf478552c226cfe",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_glue_security_configuration[test].encryption_configuration.cloudwatch_encryption.cloudwatch_encryption_mode",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'cloudwatch_encryption_mode' is set to 'SSE-KMS'",
					"actual_value": "'cloudwatch_encryption_mode' is not set to 'SSE-KMS'"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_security_configuration.tf",
					"similarity_id": "4f82c29c03405e1bfe22337a41f32bd493e6b4ef01ed1266671a52e9662d48ac",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_glue_security_configuration[test].encryption_configuration.job_bookmarks_encryption",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_glue_security_configuration[test].encryption_configuration.job_bookmarks_encryption has 'kms_key_arn' defined and not null",
					"actual_value": "aws_glue_security_configuration[test].encryption_configuration.job_bookmarks_encryption has 'kms_key_arn' undefined or null"
				}
			]
		},
		{
			"query_name": "HTTP Port Open",
			"query_id": "ffac8a12-322e-42c1-b9b9-81ff85c39ef7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "The HTTP port is open in a Security Group",
			"description_id": "a829609b",
			"cis_description_id": "CIS Security -  v - Rule ",
			"cis_description_text": "The security group ingress rules provide filtering of ingress network traffic to AWS resources. It is recommended that no security group ingress rule allows unrestricted ingress access to remote server HTTP port 80.\nPublic access to remote server ports, such as 80, increases the resource attack surface and unnecessarily raises the risk of resource compromise.",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "42ad9995f4b05eeade9373789d5340ddb0307459c55bd49a72bb53775ca62730",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group.ingress doesn't open the HTTP port (80)",
					"actual_value": "aws_security_group.ingress opens the HTTP port (80)"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_http_port_open.tf",
					"similarity_id": "5adc6a027a4e7c01a55d6ee9209a2c3c5262bb38e1a612d4522ae43491a25603",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_openport]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group.ingress doesn't open the HTTP port (80)",
					"actual_value": "aws_security_group.ingress opens the HTTP port (80)"
				}
			]
		},
		{
			"query_name": "Host Aliases Undefined Or Empty",
			"query_id": "5d05ea11-ae3e-470e-9864-97e55fb2b2e0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_aliases",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "A Kubernetes Pod should have Host Aliases defined as to prevent the container from modifying the file after a pod's containers have already been started. This means the attribute 'spec.host_aliases' must be defined and not empty or null.",
			"description_id": "00b89600",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "05fd2c2662317ee6e213deb72e16d2c3cf17f3a349f543f288f4619de6283570",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "cb07529d3d465d6f11c043640485c32fef28b283b62268c5e5eca50316d497c0",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "d637a7abf0d8a71c020535d465fea2003636d17b68b33968a38076f0cddd7d7d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[name1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "7911ad98a1cd3679182624806b190b653aa86d29d57a741ac49294216e250793",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "032b5944354e575650d9beefb2dad0ebe8ec6ee0f64b687b84b8ce2246125898",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "d39bcdce6a696d45c0e308b74561556824e04493dbccaca5615e43379d952b8b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "0a3f4c991afaa4c7cdd7addc331d734fd290895f842449ed62d05c4b3b16c6a2",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "80634c3007bd13e14efb303f426a1e4649c9ec0442d2c4418f9b44de95e12ff5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "9e5d655f8075a9a83d2513ac673a23229298587e8daa6647ec115bfa0438c7b9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "83d06a786f21d02d3204dc3da8b1e7d8de15fe3f19bd51316523e8cc48664d03",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "4b02238f91ca805e467a35830b39ad60e93f8bfb70e9d5c68ff9403c8c2b0b20",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "90386ba52adda46526cf1d36afc309b5e1f51605961c5cde95326b57d52e6a8d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "47140d32691ee0aa911131d6d6e6e9567327a9c844a4538a4b6b89413d7ac0b8",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "c20a673073516f84c5de92a999aae06c288946696f567bc43a82396163ffec4b",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "0258c268b89376442b98ca1882b66cde783001e23b108632f288fe51d585f146",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "27ebc71ee37c342284800d21956997080f6d78988ba5e5eedfda5440a0753632",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "109f1ec80fe7bb542653e6f4a61f7c30f20b3cc2629c407457de8dc17145f1e4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "7c9ecb8582209448d5f3c534067857a32cade8adfd90043fabae6436ff4cffed",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "2d88f51fe71151264882763ff45b41fd079858e1f9df1e80d5bd561690daac8e",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "0d5f9242d02be550bc3dea77d1c0ae122cf265128c39ee75ac047dbc69e54081",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "02a6c0536d85f1defed2986ed0728972886ec985b59791e851373c1a0f409c96",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "b90045cc56a6b1557297540be363976c5497f119f44bb5dbda54204a695966b3",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "b77e3b64ce777942f655abb7532c2513ab4bfaf10dccdebf56e6fee3d62439b1",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "c0849c40deff8a41e935515402bcd3a97b8fea35db3ac3cd9aa629feb83146f3",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "2042c380aa602c0081c04a7a6905de12b3a55f3e594676f5fb58d4407e1416a6",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[example1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "d872accbe376b7b782d76792453e7162102499c3928ee5eba8b235204af8d6c6",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[pod1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "a3cc1bba330752f6e87833ec70d592cc0dda0668e7feb24b7e8b2eb6c78319f7",
					"line": 162,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test6].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "5563cba17254be34b6f95f4694d3d3e9fe5526546f6494036192b69193dc0ac5",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[busybox].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "986c7f1d672eed525de6d6018bf0f45dfd93126fed7fd147d71bcced5b2d1113",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "90c530423ef4082bba352f22809b1e13d2e9ea993e5f0bae93da7ac021b10845",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "3c60bb617d08483a45c8e96423c78e9dba2c4d92e20766aa7929b34a702fa2b0",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "87b7dc2269ec87593bac3799d71ee59f439b06e7efc9917ced572ba507571cc5",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.host_aliases is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "6d2ca961be57fac919af1d45ea50c0f7fbb76a4a2b5b1ece912a3526b039849c",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.host_aliases is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.host_aliases is undefined or null"
				}
			]
		},
		{
			"query_name": "IAM Audit Not Properly Configured",
			"query_id": "89fe890f-b480-460c-8b6b-7d8b1468adb4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam#google_project_iam_audit_config",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Audit Logging Configuration is defective",
			"description_id": "dd31f3ec",
			"files": [
				{
					"file_name": "terraform\\google\\iam\\iam_audit\\iam_audit_not_properly_configured.tf",
					"similarity_id": "62050953ad971dc56bbc0721e9607c32a5a2916bc0ba42030619a0170e0405d0",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_audit_config[fail].audit_log_config.exempted_members",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'exempted_members' is empty",
					"actual_value": "'exempted_members' is not empty"
				},
				{
					"file_name": "terraform\\google\\iam\\iam_audit\\iam_audit_not_properly_configured.tf",
					"similarity_id": "714f0e92c1a3b937d6a45ea14b734aed168e903ed38c73a49c71b4b67e190976",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_audit_config[fail].service",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'service' must be 'allServices'",
					"actual_value": "'service' is 'some_specific_service'"
				}
			]
		},
		{
			"query_name": "IAM Database Auth Not Enabled",
			"query_id": "88fd05e0-ac0e-43d2-ba6d-fc0ba60ae1a6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#iam_database_authentication_enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "IAM Database Auth Enabled must be configured to true",
			"description_id": "12b1c8aa",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\db_instance.tf",
					"similarity_id": "f68e3c13fb4bdc7ae03662ddf3e3e4307ba5b2388ae9234be17bd20a09b0273f",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'iam_database_authentication_enabled' is set to true",
					"actual_value": "'iam_database_authentication_enabled' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\db_instance\\db_instance.tf",
					"similarity_id": "9fe53ca9f513f68b0b3ef876e8f5070c31eceb70431cad3fb42816384aeccff1",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'iam_database_authentication_enabled' is set to true",
					"actual_value": "'iam_database_authentication_enabled' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "168285a13ea0042f10d15bd836f72f2c684ceba5b4c0b0e27f1167293710e3e1",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'iam_database_authentication_enabled' is set to true",
					"actual_value": "'iam_database_authentication_enabled' is undefined or null"
				}
			]
		},
		{
			"query_name": "IAM Policies With Full Privileges",
			"query_id": "2f37c4a3-58b9-4afe-8a87-d7f1d2286f84",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM policies that allow full administrative privileges (for all resources)",
			"description_id": "7f603399",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_admin.tf",
					"similarity_id": "9bd4eb3a9f105abdba9760ec001299cf4efc8828a840cb0e5b09dbd369b07dcc",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_policy[fail1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_admin.tf",
					"similarity_id": "87112419b2d10d8d8008f15a40046381357c4988d63b21f62a6c65b67eae7981",
					"line": 78,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_policy[fail4].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_admin.tf",
					"similarity_id": "084cad82fb68cdec2b689cc5d149f2759cc0257e7b5d8886f7f9d1038336fdca",
					"line": 35,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_policy[fail2].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_admin.tf",
					"similarity_id": "c8bbac6d1ba2e7dddb3a455b6a6a00918319d2e7132c41c282cdaa56b8d581b1",
					"line": 58,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_policy[fail3].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_with_full_privileges.tf",
					"similarity_id": "4b29faafdc608eea52226b612e0a1ae505f34e91839983fbd82d00ea14eb8a21",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role_policy[positive1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				}
			]
		},
		{
			"query_name": "IAM Role With Full Privileges",
			"query_id": "b1ffa705-19a3-4b73-b9d0-0c97d0663842",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM role policy that allow full administrative privileges (for all resources)",
			"description_id": "81321ef4",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\role\\iam_role_with_full_privileges.tf",
					"similarity_id": "049d9d6ccc976044c1ffefdb9a373eb4917409df91151768ab5d6765b3ca596d",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[positive2].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "assume_role_policy.Statement.Action is not equal to, nor does it contain '*'",
					"actual_value": "assume_role_policy.Statement.Action is equal to or contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\role\\iam_role_with_full_privileges.tf",
					"similarity_id": "08e91ae2e75d845c700ad4bddde2e952b687b0ab7e305ce7deb16d2ad91c81b9",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[positive1].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "assume_role_policy.Statement.Action is not equal to, nor does it contain '*'",
					"actual_value": "assume_role_policy.Statement.Action is equal to or contains '*'"
				}
			]
		},
		{
			"query_name": "IAM User Policy Without MFA",
			"query_id": "b5681959-6c09-4f55-b42b-c40fa12d03ec",
			"query_url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if the root user is authenticated with MFA",
			"description_id": "3e905f71",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.5",
			"cis_description_title": "Ensure MFA is enabled for the 'root' user account",
			"cis_description_text": "The 'root' user account is the most privileged user in an AWS account. Multi-factor Authentication (MFA) adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an AWS website, they will be prompted for their username and password as well as for an authentication code from their AWS MFA device. Note: When virtual MFA is used for 'root' accounts, it is recommended that the device used is NOT a personal device, but rather a dedicated mobile device (tablet or phone) that is managed to be kept charged and secured independent of any individual personal devices. (\"non-personal virtual MFA\") This lessens the risks of losing access to the MFA due to device loss, device trade-in or if the individual owning the device is no longer employed at the company.\nEnabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that emits a time-sensitive key and have knowledge of a credential.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_user_policy_without_mfa.tf",
					"similarity_id": "01a3ddbb87fe64b6eb0affa884097d882dd2843623ee1aa6b7c446fd17acbd60",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_policy[fail_mfa].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Principal.AWS' contains ':mfa/' or 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is set to true",
					"actual_value": "'policy.Statement.Principal.AWS' doesn't contain ':mfa/' or 'policy.Statement.Condition.BoolIfExists.aws:MultiFactorAuthPresent' is set to false"
				}
			]
		},
		{
			"query_name": "IP Aliasing Disabled",
			"query_id": "c606ba1d-d736-43eb-ac24-e16108f3a9e0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Clusters must be created with Alias IP ranges enabled, which means the attribut 'ip_allocation_policy' must be defined and, if defined, the attribute 'networking_mode' must be VPC_NATIVE ",
			"description_id": "e7d9862a",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "4663193886f3f552694257b20d030769678d178599c7802917316d955d253624",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attributes 'ip_allocation_policy' and 'networking_mode' are defined",
					"actual_value": "Attributes 'ip_allocation_policy' and 'networking_mode' are undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "2106ad923e721c493e04ac7ee0c9d884142a79f251cdd7349590f0e7423802cf",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attributes 'ip_allocation_policy' and 'networking_mode' are defined",
					"actual_value": "Attributes 'ip_allocation_policy' and 'networking_mode' are undefined"
				}
			]
		},
		{
			"query_name": "KMS Crypto Key is Publicly Accessible",
			"query_id": "16cc87d1-dd47-4f46-b3ce-4dfcac8fd2f5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_kms_crypto_key_iam#google_kms_crypto_key_iam_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "KMS Crypto Key should not be publicly accessible. In other words, the KMS Crypto Key policy should not set 'allUsers' or 'allAuthenticatedUsers' in the attribute 'member'/'members'",
			"description_id": "b1146d1f",
			"files": [
				{
					"file_name": "terraform\\google\\kms\\kms_crypto_key_publicly_accessible.tf",
					"similarity_id": "e1b6957f361f0ab6de6be9a39a94688438ef5e0a9be1aa7ebc6616849ef3ede3",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "google_kms_crypto_key_iam_policy[positive1].policy_data",
					"search_line": 0,
					"search_value": "",
					"expected_value": "KMS crypto key is not publicly accessible",
					"actual_value": "KMS crypto key is publicly accessible"
				}
			]
		},
		{
			"query_name": "Key Expiration Not Set",
			"query_id": "4d080822-5ee2-49a4-8984-68f3d4c890fc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Make sure that for all keys the expiration date is set",
			"description_id": "bb99ceb7",
			"files": [
				{
					"file_name": "terraform\\azurerm\\keyvault\\key_vault_key.tf",
					"similarity_id": "688fec6ab70716579d13f87278569bf0296aff5a77e801e89dd24f848565eb1e",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_key_vault_key[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'expiration_date' exists",
					"actual_value": "'expiration_date' is missing"
				}
			]
		},
		{
			"query_name": "Kinesis Not Encrypted With KMS",
			"query_id": "862fe4bf-3eec-4767-a517-40f378886b88",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS Kinesis Streams and metadata should be protected with KMS",
			"description_id": "e154bb5e",
			"files": [
				{
					"file_name": "terraform\\aws\\kinesis\\kinesis_stream.tf",
					"similarity_id": "e26ad334f4a2b51891a249dbed1e6c48898f6e284fa750ce2d8e5864f68274f6",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_kinesis_stream[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_kinesis_stream[fail].encryption_type is set",
					"actual_value": "aws_kinesis_stream[fail].encryption_type is undefined"
				}
			]
		},
		{
			"query_name": "Launch Configuration Is Not Encrypted",
			"query_id": "4de9de27-254e-424f-bd70-4c1e95790838",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Data stored in the Launch configuration EBS is not securely encrypted",
			"description_id": "d11b3649",
			"files": [
				{
					"file_name": "terraform\\aws\\launch\\launch_configuration2.tf",
					"similarity_id": "005a478475ed9b6150ee68188350aab8d5d886d20a1f4eb55f8abbfd03afa883",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_launch_configuration[fail].root_block_device.encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_launch_configuration[fail].root_block_device.encrypted is true",
					"actual_value": "aws_launch_configuration[fail].root_block_device.encrypted is false"
				}
			]
		},
		{
			"query_name": "MSK Cluster Encryption Disabled",
			"query_id": "6db52fa6-d4da-4608-908a-89f0c59e743e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Ensure MSK Cluster encryption in rest and transit is enabled",
			"description_id": "343faf8d",
			"files": [
				{
					"file_name": "terraform\\aws\\msk\\msk_cluster.tf",
					"similarity_id": "eecbf77897c8fc4b23f430d4c5e214c64041818b2c61333179c63b9cb8fab481",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "msk_cluster[name].encryption_info.encryption_in_transit.client_broker",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Should have 'rule.encryption_info' and, if 'rule.encryption_info.encryption_in_transit' is assigned, 'in_cluster' should be 'true' and 'client_broker' should be TLS",
					"actual_value": "'rule.encryption_info' is unassigned or property 'in_cluster' is 'false' or property 'client_broker' is not 'TLS'"
				}
			]
		},
		{
			"query_name": "MSSQL Server Public Network Access Enabled",
			"query_id": "ade36cf4-329f-4830-a83d-9db72c800507",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#public_network_access_enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "MSSQL Server public network access should be disabled",
			"description_id": "d1ee9c09",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\mssql_server.tf",
					"similarity_id": "59ce87efbb5742338f21d55600624871f242de1f9c0fee2ce2abfa9e9af0e132",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mssql_server[example].public_network_access_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mssql_server[example].public_network_access_enabled' is set to false",
					"actual_value": "'azurerm_mssql_server[example].public_network_access_enabled' is set to true"
				}
			]
		},
		{
			"query_name": "Memcached Disabled",
			"query_id": "4bd15dd9-8d5e-4008-8532-27eb0c3706d3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#engine",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if the Memcached is disabled on the ElastiCache",
			"description_id": "68984bf2",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\redis_not_compliant.tf",
					"similarity_id": "b2fd338ab6dbb9ac8007d1c9d598d179795fb6b981c65494ec52d9bf5af17534",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_elasticache_cluster[fails].engine",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_elasticache_cluster[fails].engine enables Memcached",
					"actual_value": "resource.aws_elasticache_cluster[fails].engine doesn't enable Memcached"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_cluster.tf",
					"similarity_id": "22fc0561cfdd5aaeafaf4039822b26d60265db389202e3da4c9877cb4c11281e",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_elasticache_cluster[fail_redis].engine",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_elasticache_cluster[fail_redis].engine enables Memcached",
					"actual_value": "resource.aws_elasticache_cluster[fail_redis].engine doesn't enable Memcached"
				}
			]
		},
		{
			"query_name": "MySQL SSL Connection Disabled",
			"query_id": "73e42469-3a86-4f39-ad78-098f325b4e9f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Make sure that for MySQL Database Server, 'Enforce SSL connection' is enabled",
			"description_id": "81500787",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mysql\\mysql_server.tf",
					"similarity_id": "fb2ee1a41416dbee247e79040b339807bba75815308d4bb468c89065c98c9e32",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mysql_server[fail].ssl_enforcement_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mysql_server.fail.ssl_enforcement_enabled' is equal 'true'",
					"actual_value": "'azurerm_mysql_server.fail.ssl_enforcement_enabled' is equal 'false'"
				}
			]
		},
		{
			"query_name": "MySQL Server Public Access Enabled",
			"query_id": "f118890b-2468-42b1-9ce9-af35146b425b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "MySQL Server public access should be disabled",
			"description_id": "e5c71632",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mysql\\mysql_server.tf",
					"similarity_id": "2242d73920d9c6c04eca9fb9828fab989420cbf5179d2bc333b0113f78733283",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mysql_server[fail].public_network_access_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mysql_server[fail].public_network_access_enabled' is set to false",
					"actual_value": "'azurerm_mysql_server[fail].public_network_access_enabled' is set to true"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Not Being Dropped",
			"query_id": "e5587d53-a673-4a6b-b3f2-ba07ec274def",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#drop",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Containers should drop 'NET_RAW' or 'ALL' capabilities",
			"description_id": "548d4eac",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "996e004e8d3bc549fb8e07c8a5178b257dbd988ec247632f6141b91edd26878d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is set",
					"actual_value": "kkubernetes_pod[test1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "015276090ac463dd25d874dcfb92a1ad1dbf616099964a530ddc631a060de59b",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "7a6277a6e0de0cd495ab63444065fa4b7ff2103e79db44892b6ca10fd6bf0bea",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[name1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "f23610437f2fd48786b7bf68977f1406ccf73a8f064b4e2b275b1ed7417777b9",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "085d597654d528d46fb2951211fb918a8d357c6bcda0803889a1e1e7f51af7df",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "7fbed5308e722a03ece18aabdca04456f5f290cbb058321099571332fde0d1d0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "7fbed5308e722a03ece18aabdca04456f5f290cbb058321099571332fde0d1d0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "6e28c09509cd6c7ea2084d644e788eac93362b6ba02e2c01d93df19a44bf27ba",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "44256982d3c0ede82dc3234583b8171ed426ef3418bdfd3c850323a2f8521795",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "8d918ce35efec15a88e7119e3a28255a507ea6125c6b0e3ad950dcf51331d3c4",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"SYS_ADMIN\"]})].security_context.capabilities.drop is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"SYS_ADMIN\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "7333ce54b41ea83e562aa40ac67bd981bf8100dc50e53bbf71c5a4a8c4aa87ee",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "f114d9c1f01aff124e15b5404d467e7a9f94a8aaca6d22458f81f58a2f0aa732",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "2dc0c9ced81e847c708926b9264cfb2fbc6f5bb1307cc1c67ae01bf349ccac23",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "2c0f53ac9a7a800d30a26cc07904ff7affe95975fe8af7f240c61499546079d6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "a7572e9a162d0634e5064be3577dc71aae94790a96e6f58e4dbdd24acf032769",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": false})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": false})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "9695953d10ad0d57159a0d9a97b09e35978f06f4b43ad0073d37944caa703178",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "ea071ed4d73819aa757a1c9d80d53c70ca800cd619d1f57e749b22a6b7ac7b16",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "6a73be89a2445e830b9ba455f07d032554cd05cc3dc4a0d6c12dcf997955a8bc",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "e9f194cc22d59f311dc2062f811d0bc59bc755181b6602c4f0a1fb844a4a2c7c",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "1805fc45e73cfd7c19d329d82be3592988d7dc379d42ccf6346fccaf8347d15c",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "f01851e549ba54d2824cd35410d6173ff74a81b70dc1d087afdcca7b07ce968e",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[example1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "f566504ad57253a4463679cf75606a720413ef8489ccc19526c0b24db8495061",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "a561cbc14be1b9c3ae93745fa790a3a295e72700b73c78ae214e4b844ce3a7d2",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "858a172743fbb036263f20a5bb2bbb317283a4bca81b457f25f36e8bfb0ede0d",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "1f1cfe9a606a4c679b981149bfcf554748c09ee08ee1751d5e376afef0e831b5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "51c0829866af6982a221c77c0899ede720459bea634908207d7632f0af4269c2",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "eb66fe9193e9dc5e21f5e9399883e7e2f26cb5c6a7c6f74352c04efb9bca3cde",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "ea071ed4d73819aa757a1c9d80d53c70ca800cd619d1f57e749b22a6b7ac7b16",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "ddcb46a3ec997afce419bbef7a53b5e24e99870e593d47078511e14b05efd3b9",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "d94cdb842f1ca0cc3a9cd7c54fdd363a0d7e5e56ba199ba9a85578a10d309623",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "ea65a8eab978beebc791051f806927b5d9ceb1b888771e801305a9d5fead71fa",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "42a2f2803f0558306e614784a47f1fa9909264823780d898b021452280cbebaf",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "0a677387c3f8a921d09d65e737f760f703484f155a790face4da608f8daa3417",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "246102e1d6a9d8efdfbedf6404b94159add7d451b4714504ef4fc2ad852cc1fa",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "fe37e65e54c0aa905bcb044a2e275919acb3af39cbf8e5c2b98cb9ef7b91930b",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.security_context is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "3406ec9ba464e9da426f2f3f2fe0c1d52665b7628c8133b699f86b232588fbe9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "7ebc4d9a4cb609f69db90ad1bf2d1d0d115bc165ab5277806d8f27e8f45283d4",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "2996f90d88ab3694197e8999af02cc7520a0c09055cf8b3abe2e8a76fbc5ae40",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "fb425d5ca8ec9814f7535deff8ec10b7f846ecf5999987209e92c765090e801c",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "285060c8c1d4c2852a78df3aaa54d51dc47f979356c2af4a87e95698efeaf6af",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "a7572e9a162d0634e5064be3577dc71aae94790a96e6f58e4dbdd24acf032769",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "51c0829866af6982a221c77c0899ede720459bea634908207d7632f0af4269c2",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "49e94d7aa51bf2bcfae463f575d928b968a81a4eca3d0146b7d85718c30640e1",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "ea65a8eab978beebc791051f806927b5d9ceb1b888771e801305a9d5fead71fa",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "fd5b374f97c5459fdd69369b6abb761d3983067f8489a3f00b88f0781bba842b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "0a677387c3f8a921d09d65e737f760f703484f155a790face4da608f8daa3417",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "2c0f53ac9a7a800d30a26cc07904ff7affe95975fe8af7f240c61499546079d6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "a3a599b17435d169bfada163a2cbcf2503af9223692715732da26fad9be0550c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "2dc0c9ced81e847c708926b9264cfb2fbc6f5bb1307cc1c67ae01bf349ccac23",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "83c3978cf1f5157c00b0cb730793d4eacea4aeaa8f95cc0be1d537c286f3e92b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "2996f90d88ab3694197e8999af02cc7520a0c09055cf8b3abe2e8a76fbc5ae40",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "49014c339e283c9537f349efb188ea2bfbaa8351eff82cc5b3d03423bc53a0ca",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "0a677387c3f8a921d09d65e737f760f703484f155a790face4da608f8daa3417",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.drop is ALL or NET_RAW",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add is not ALL or NET_RAW"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "b704fc013db41adf00647e5794f580beaa39f6976584de0a2dc0bfc4ecbf4743",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "7ebc4d9a4cb609f69db90ad1bf2d1d0d115bc165ab5277806d8f27e8f45283d4",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "40014fafd372d0c7e8de3b520166b8390e7c210206ad3acfe392c774544470f0",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "eb66fe9193e9dc5e21f5e9399883e7e2f26cb5c6a7c6f74352c04efb9bca3cde",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "99508a539090b99d0c6f505ea7131ac47c55a055f5bb89f77bf36b8a1614cbae",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test6].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "e9f194cc22d59f311dc2062f811d0bc59bc755181b6602c4f0a1fb844a4a2c7c",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "10bae9d216596b9767f807779e146ac3aec38d3712fb48888fefadbef313c94a",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "86aff62c0742d7047aeaf5a81adefe6d0c57992f24764f042e6c8a8bde1d326f",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.security_context is undefined"
				}
			]
		},
		{
			"query_name": "Neptune Cluster Instance is Publicly Accessible",
			"query_id": "9ba198e0-fef4-464a-8a4d-75ea55300de7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster_instance#publicly_accessible",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Neptune Cluster Instance should not be publicly accessible",
			"description_id": "ac4d6034",
			"files": [
				{
					"file_name": "terraform\\aws\\neptune\\neptune_instance.tf",
					"similarity_id": "66bd827cde9aad1428d37ac3ce281cedf947f10c3bd100a9a3df42adf1b6df1b",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_neptune_cluster_instance[fail].publicly_accessible",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_neptune_cluster_instance[fail].publicly_accessible is set to false",
					"actual_value": "aws_neptune_cluster_instance[fail].publicly_accessible is set to true"
				}
			]
		},
		{
			"query_name": "Network ACL With Unrestricted Access To RDP",
			"query_id": "a20be318-cac7-457b-911d-04cc6e812c25",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "'RDP' (TCP:3389) should not be public in AWS Network ACL",
			"description_id": "ed220e0d",
			"files": [
				{
					"file_name": "terraform\\aws\\vpc\\network_acl_with_unrestricted_access_to_rdp.tf",
					"similarity_id": "609bff32a126b8369ba5e5466e78b48e601dabf904f229291f5ec0886a4fa8c1",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "aws_network_acl[fail_rdp].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_network_acl[fail_rdp].ingress[0] 'RDP' (TCP:3389) is not public",
					"actual_value": "aws_network_acl[fail_rdp].ingress[0] 'RDP' (TCP:3389) is public"
				}
			]
		},
		{
			"query_name": "Network ACL With Unrestricted Access To SSH",
			"query_id": "3af7f2fd-06e6-4dab-b996-2912bea19ba4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "'SSH' (TCP:22) should not be public in AWS Network ACL",
			"description_id": "215ffb15",
			"files": [
				{
					"file_name": "terraform\\aws\\vpc\\network_acl_with_unrestricted_access_to_ssh.tf",
					"similarity_id": "761a78e2a2830db88ff4b0c326737ce2fcda63190e190a3af65319601f8b283c",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "aws_network_acl[fail_ssh].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_network_acl[fail_ssh].ingress[0] 'SSH' (Port:22) is not public",
					"actual_value": "aws_network_acl[fail_ssh].ingress[0] 'SSH' (Port:22) is public"
				}
			]
		},
		{
			"query_name": "Network Policy Disabled",
			"query_id": "11e7550e-c4b6-472e-adff-c698f157cdd7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Engine Clusters must have Network Policy enabled, meaning that the attribute 'network_policy.enabled' must be true and the attribute 'addons_config.network_policy_config.disabled' must be false ",
			"description_id": "afcf7c4b",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "b3caa003d02c99c5464f552c6fb9c5093ba3deea0c2bd6b68a05efdf793c5efd",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'network_policy' is defined and Attribute 'addons_config' is defined",
					"actual_value": "Attribute 'network_policy' is undefined or Attribute 'addons_config' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "cab40c0aecc38e8d00beaaf7161d7a1748452d6f720eb114ed0ec606ebcbcc29",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'network_policy' is defined and Attribute 'addons_config' is defined",
					"actual_value": "Attribute 'network_policy' is undefined or Attribute 'addons_config' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "3315725fc843ad31f54bf5292f9e99211a680273b49d13e5a10d14a3312a375e",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'network_policy' is defined and Attribute 'addons_config' is defined",
					"actual_value": "Attribute 'network_policy' is undefined or Attribute 'addons_config' is undefined"
				}
			]
		},
		{
			"query_name": "No Password Policy Enabled",
			"query_id": "b592ffd4-0577-44b6-bd35-8c5ee81b5918",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_login_profile",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "IAM password policies should be set through the password minimum length and reset password attributes",
			"description_id": "fc3e0d4f",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.8",
			"cis_description_title": "Ensure IAM password policy requires minimum length of 14 or greater",
			"cis_description_text": "Password policies are, in part, used to enforce password complexity requirements. IAM password policies can be used to ensure password are at least a given length. It is recommended that the password policy require a minimum password length 14.\nSetting a password complexity policy increases account resiliency against brute force login attempts.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "b8634dbd3e1fef26df1175e09b2a68cee959af699f99cd17150d474cbe1bf755",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_login_profile[positive3].password_length",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'password_length' is 14 or grater",
					"actual_value": "Attribute 'password_length' is smaller than 14"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "06336710d0eefd26f5f9418a31ac9f306c097f3feebdd5027d4c1524248d94d5",
					"line": 31,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_login_profile[positive7].password_length",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'password_length' is 14 or grater",
					"actual_value": "Attribute 'password_length' is smaller than 14"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "3673b780fdd1657b686dbfca43ca2e94c304e8754d20c77ce571db40b964dc20",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_login_profile[positive2].password_reset_required",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'password_reset_required' is true",
					"actual_value": "Attribute 'password_reset_required' is false"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "ed99f93352a5fbea23f07532021b6c2d72bbe30bccfe29c7752bb6c0245e0c3a",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_login_profile[positive6].password_length",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'password_length' is 14 or grater",
					"actual_value": "Attribute 'password_length' is smaller than 14"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "3547c3f43f84e9dc1e4286ab64c5705a310a81fac5d8f60535040ca2c9596d10",
					"line": 30,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_login_profile[positive7].password_reset_required",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'password_reset_required' is true",
					"actual_value": "Attribute 'password_reset_required' is false"
				}
			]
		},
		{
			"query_name": "Node Auto Upgrade Disabled",
			"query_id": "b139213e-7d24-49c2-8025-c18faa21ecaa",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Node 'auto_upgrade' should be enabled for Kubernetes Clusters",
			"description_id": "46e4c29f",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_node_pool.tf",
					"similarity_id": "3e0c28ad704e211edd89b51badf505233e34f576750bb1d33152d4593359a547",
					"line": 39,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_node_pool[fail_pool].management.auto_upgrade",
					"search_line": 0,
					"search_value": "",
					"expected_value": "management.auto_upgrade is true",
					"actual_value": "management.auto_upgrade is false"
				}
			]
		},
		{
			"query_name": "Not Limited Capabilities For Pod Security Policy",
			"query_id": "2acb555f-f4ad-4b1b-b984-84e6588f4b05",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#required_drop_capabilities",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Limit capabilities for a Pod Security Policy",
			"description_id": "c42b1890",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "0adc4ed19333b05ccd645cfcd451aea7bf68f77a14da268ca078aad95ce074f1",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_containers_to_share_the_host_network_namespace.tf",
					"similarity_id": "92e588c3732cd19f936701c09b98dd75d0023ed29106ac5a7bdb6d5ca4a74c9b",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\psp_set_to_privileged.tf",
					"similarity_id": "25d43983fd018fc7f7baa8b6c3f61d7430946e51c6f3250d7fb3aeee7231f4e9",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_privilege_escalation.tf",
					"similarity_id": "2af29d9022247b7d4bd4eab06fb8a73e87f2ac09c4aef017833bf63aa6bb5767",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\psp_with_added_capabilities.tf",
					"similarity_id": "92461388bc2fe344471c20536193696737a69c7738077539f26e2fef11c8a388",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_sharing_host_ipc.tf",
					"similarity_id": "54a07bb709b5f9b9f53d13de98eccab999fc8955b5309c74a2103f6631ad0c5c",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example2].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example2].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example2].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\not_limited_capabilities_for_pod_security_policy.tf",
					"similarity_id": "58e897908a58aa1344afbe5703f2db62870d6653136b40f51164a437dfddad83",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_runs_unmasked.tf",
					"similarity_id": "23a104e36f64e697b15ef6d76b3a5005af55913d75a73016215dd3838bc4c637",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\cluster_allows_unsafe_sysctls.tf",
					"similarity_id": "31cb6c487960cfe898aeccf10575acf3da0e6830aa23fc8b450286b796628adf",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod_security_policy[example].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is set",
					"actual_value": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities is undefined"
				}
			]
		},
		{
			"query_name": "OSLogin Disabled",
			"query_id": "32ecd6eb-0711-421f-9627-1a28d9eff217",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_project_metadata#metadata",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Verifies that the OSLogin is enabled",
			"description_id": "3ed07bfa",
			"files": [
				{
					"file_name": "terraform\\google\\project\\google_compute_project_metadata.tf",
					"similarity_id": "0b4781d397d84137562d2c1b28ac150fb0541e7cfd070ffbc5815457fcf4202d",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "google_compute_project_metadata[default].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_compute_project_metadata[default].metadata['enable-oslogin'] is true",
					"actual_value": "google_compute_project_metadata[default].metadata['enable-oslogin'] is undefined"
				}
			]
		},
		{
			"query_name": "PSP Allows Containers To Share The Host Network Namespace",
			"query_id": "4950837c-0ce5-4e42-9bee-a25eae73740b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#host_network",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if Pod Security Policies allow containers to share the host network namespace.",
			"description_id": "531152cf",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_containers_to_share_the_host_network_namespace.tf",
					"similarity_id": "7d8d17e81e1d4f33cf20588301361224528b4582bdc4f7d32dd98861588fce2b",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.host_network",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'spec.hostNetwork' is false or undefined",
					"actual_value": "'spec.hostNetwork' is true"
				}
			]
		},
		{
			"query_name": "Passwords And Secrets - AWS Access Key",
			"query_id": "76c0bcde-903d-456e-ac13-e58c34987852",
			"query_url": "https://kics.io/",
			"severity": "HIGH",
			"platform": "Common",
			"category": "Secret Management",
			"description": "Query to find passwords and secrets in infrastructure code.",
			"description_id": "d69d8a89",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda.tf",
					"similarity_id": "fdbafce92a8fc8999e778bd1a2150f2a9632015b56f5ce4f13f0f84fa05c3ea3",
					"line": 20,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",' contains a secret"
				},
				{
					"file_name": "terraform\\secrets\\BC_GIT_2.tf",
					"similarity_id": "c2a39151cf70e37fa02194524fa946db9401a2847623c34ad8c1c971c31f7dae",
					"line": 2,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  access_key = \"AKIAIOSFODNN7EXAMPLE\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\provider\\provider.tf",
					"similarity_id": "e9f0cf3765b397b85e167dd58f9d41e02160ccdf6d1b44c1a3c161f125257121",
					"line": 10,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  access_key = \"AKIAXYZDQCEN346Y6EVN\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "883dc025dfe632f5c9a0ef372c515c3c55909e6f46bd1b0489427a96e3e1810e",
					"line": 27,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA' contains a secret"
				}
			]
		},
		{
			"query_name": "Passwords And Secrets - AWS Secret Key",
			"query_id": "83ab47ff-381d-48cd-bac5-fb32222f54af",
			"query_url": "https://kics.io/",
			"severity": "HIGH",
			"platform": "Common",
			"category": "Secret Management",
			"description": "Query to find passwords and secrets in infrastructure code.",
			"description_id": "d69d8a89",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "a36f275e430647a28225c2755cdd9c475f6accdcbb02c0a80955df2c7284271c",
					"line": 28,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY' contains a secret"
				}
			]
		},
		{
			"query_name": "Passwords And Secrets - Generic Password",
			"query_id": "487f4be7-3fd9-4506-a07a-eae252180c08",
			"query_url": "https://kics.io/",
			"severity": "HIGH",
			"platform": "Common",
			"category": "Secret Management",
			"description": "Query to find passwords and secrets in infrastructure code.",
			"description_id": "d69d8a89",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_cluster.tf",
					"similarity_id": "784f07c25e84c383d3e1ef7fb52d64e3fbaf669e80b4c625d61aa7bf78983f99",
					"line": 22,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  master_password         = \"password12345\"' contains a secret"
				},
				{
					"file_name": "terraform\\secrets\\BC_GIT_6.tf",
					"similarity_id": "6c0a1e2ba10b24295b3dcf1e4548a80e932c93c8c867ac96d87a56f698f2e7c3",
					"line": 7,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  password              = \"changeme-dy2xPjgW\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\opsworks\\opsworks_rds_db_instance.tf",
					"similarity_id": "dfe77f3bb00f4ecc58ffb9ac9775c316986a7d1ff08f672f685e169f73e0d323",
					"line": 9,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  db_password         = \"somePass\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\mssql_server.tf",
					"similarity_id": "24a88496a23064151a385a8522ac9745731c61ff9087e9a1e1cd4884c82257ee",
					"line": 12,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  administrator_login_password  = \"thisIsKat11\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
					"similarity_id": "286827f60c1db100c40cc6025f6fc41206bcb6a95de2ea5738d9d963ddbdd435",
					"line": 15,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "dc89c9e39671842d4afc59fcf245e428015a7f65c931bddf7e00886dd9540d94",
					"line": 22,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  administrator_login_password = \"thisIsDog11\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_using_default_port.tf",
					"similarity_id": "4d6a24052e13327412d83f3a4812adc35615ea5737d47a9fc0163dc830262f54",
					"line": 5,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  master_password     = \"Mustbe8characters\"' contains a secret"
				},
				{
					"file_name": "terraform\\openstack\\provider.tf",
					"similarity_id": "c43354105dbf81195c720550747dd4d88d5092b8dbb455b6261d6d63beb7216b",
					"line": 4,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  password = \"Ahngak0fuokeexee5Quiu0oohayeiXie\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "ed3af49aa46f51ffed80d3db4761823b3018749aef8f92a9ff99b987d242e827",
					"line": 8,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  password             = \"foobarbaz\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "ad749aa6c7561b112e1e66addc451415821c78478aca0242e8723cef3d8ea384",
					"line": 42,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  administrator_login_password = \"thisIsDog11\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
					"similarity_id": "4af57fbf436c25364b1069ce7652ba3c67879287c97ea24dbc968e3a1ad2ac06",
					"line": 9,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  password                            = \"foobarbaz\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\emr\\emr_cluster.tf",
					"similarity_id": "c2ab830ee7723ce51db80d5a2b3f0de48a0982c6aca6928e603f42c7b483db22",
					"line": 18,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'    kdc_admin_password = \"somePassword\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_cluster.tf",
					"similarity_id": "9ddcd958755c25554eb591d97970b3f8ad05c7b58ba844a7e1514af4af5de261",
					"line": 21,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  master_password                     = \"Mustbe8characters\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\vms\\virtual_machine.tf",
					"similarity_id": "6b49d8d2e15a753483ec9bb0c7271a17dc4f162488fc156626daa7afe9146fa7",
					"line": 22,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'    admin_password = \"Password1234!\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\compute\\linux_virtual_machine.tf",
					"similarity_id": "1e599abb2cf04c4cb6cfe0c56ea35195441e04dfbb4197441c72b6a879d9c623",
					"line": 15,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  admin_password                  = \"somePassword\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\synapse\\synapse_workspace.tf",
					"similarity_id": "a38a857675e009cd203aefbba9966493a4addb6de5381002dc410f8ef18ec75c",
					"line": 10,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  sql_administrator_login_password     = \"H@Sh1CoR3!\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server.tf",
					"similarity_id": "2f33abbd45dff3106fa9ccc5238be26276a42d5cd87fa529a05101c83e28e550",
					"line": 16,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  administrator_login_password = \"thisIsDog11\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
					"similarity_id": "43c77323968b2487403840e6f41938bfba97404ac5ef332642b366188989a657",
					"line": 14,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  password                            = \"foobarbaz\"' contains a secret"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "1e955fe76e465fd24b40adc4151050b96915722f1b9ca1824ae85b7f8be3f1b5",
					"line": 54,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'    password = \"james\"' contains a secret"
				},
				{
					"file_name": "terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
					"similarity_id": "d442a38d4e56ac3c6b1a2b9d47cb6b3bc04c60dd308030d4da18cce60e86e3e1",
					"line": 25,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'    password = \"MindTheGapps\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\vms\\linux_virtual_machine.tf",
					"similarity_id": "c326197320f1c6106b1157da6002a453ee2efd4ed3fd453e11ecc45eac2b1e67",
					"line": 6,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  admin_password      = \"admin\"' contains a secret"
				},
				{
					"file_name": "terraform\\azurerm\\vms\\windows_virtual_machine_scale_set.tf",
					"similarity_id": "4ea6086eff3ca3937ef4bb592070b75fde8df0c31c54d32e4ccc165e4d70b15d",
					"line": 9,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  admin_password      = \"P@55w0rd1234!\"' contains a secret"
				}
			]
		},
		{
			"query_name": "Passwords And Secrets - Generic Secret",
			"query_id": "3e2d3b2f-c22a-4df1-9cc6-a7a0aebb0c99",
			"query_url": "https://kics.io/",
			"severity": "HIGH",
			"platform": "Common",
			"category": "Secret Management",
			"description": "Query to find passwords and secrets in infrastructure code.",
			"description_id": "d69d8a89",
			"files": [
				{
					"file_name": "terraform\\aws\\provider\\provider.tf",
					"similarity_id": "57e9a9e81ed281581926a77507ee617ac05d95c57aead696b7f8c4a1055da413",
					"line": 11,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  secret_key = \"50W3qN7CuaMUl68u0CoAVY6fQykksBumX3Mq3VlI\"' contains a secret"
				},
				{
					"file_name": "terraform\\secrets\\BC_GIT_2.tf",
					"similarity_id": "b4be286f1941b367dfcd0fcbca0d9de8bcf74aa26727fb7c928738eddd8ad1a2",
					"line": 3,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"' contains a secret"
				}
			]
		},
		{
			"query_name": "Passwords And Secrets - Generic Token",
			"query_id": "baee238e-1921-4801-9c3f-79ae1d7b2cbc",
			"query_url": "https://kics.io/",
			"severity": "HIGH",
			"platform": "Common",
			"category": "Secret Management",
			"description": "Query to find passwords and secrets in infrastructure code.",
			"description_id": "d69d8a89",
			"files": [
				{
					"file_name": "terraform\\bridgecrew\\provider.tf",
					"similarity_id": "9fd415485b4196e36b4b9c70ccfd57f3f61ae91c3e734935fb1ae9a29516aa43",
					"line": 2,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  token = \"80e54890-f282-4595-ab3d-45f9bd874987\"' contains a secret"
				},
				{
					"file_name": "terraform\\linode\\provider.tf",
					"similarity_id": "3d5f8c00d367009d74700c2094bdd81bc0b17b5b2f6165ad45c26a5d2db02fcf",
					"line": 2,
					"issue_type": "RedundantAttribute",
					"search_key": "",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Hardcoded secret key should not appear in source",
					"actual_value": "'  token = \"c7680462065ee80d0fef2940784b1af6826f6e0b18586194c5f67c4b40fa7f09\"' contains a secret"
				}
			]
		},
		{
			"query_name": "Pod Security Policy Disabled",
			"query_id": "9192e0f9-eca5-4056-9282-ae2a736a4088",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Clusters must have Pod Security Policy controller enabled, which means there must be a 'pod_security_policy_config' with the 'enabled' attribute equal to true",
			"description_id": "546c4012",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "bbc4659d4cb21193609465c7fe08afac56b176f8854688582e88941117e55ddb",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'pod_security_policy_config' is defined",
					"actual_value": "Attribute 'pod_security_policy_config' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "9a76f0a570aba0a2e5bb8c8f4bd7e9ade6a8cd68b41f5adf51e1ef04f2d5dd9a",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'pod_security_policy_config' is defined",
					"actual_value": "Attribute 'pod_security_policy_config' is undefined"
				}
			]
		},
		{
			"query_name": "PostgreSQL Server Threat Detection Policy Disabled",
			"query_id": "c407c3cf-c409-4b29-b590-db5f4138d332",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#threat_detection_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "PostgreSQL Server Threat Detection Policy should be enabled",
			"description_id": "ed803b39",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgresql_server.tf",
					"similarity_id": "7ae882f424a4e5f85ed07db294cfb6a00e99bc0103e4d68ad7f1acf3bd1fc037",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_server[fails].threat_detection_policy.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server[fails].threat_detection_policy.enabled' is set to true",
					"actual_value": "'azurerm_postgresql_server[fails].threat_detection_policy.enabled' is set to false"
				},
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\secure-tls-policy.tf",
					"similarity_id": "f133b1c79321d9315d36991aab80e492cd9a8b3f75bb751217c35953040f1bce",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_postgresql_server[fail_psql]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server[fail_psql].threat_detection_policy' is a defined object",
					"actual_value": "'azurerm_postgresql_server[fail_psql].threat_detection_policy' is undefined or null"
				}
			]
		},
		{
			"query_name": "Private Cluster Disabled",
			"query_id": "6ccb85d7-0420-4907-9380-50313f80946b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Clusters must be created with Private Clusters enabled, meaning the 'private_cluster_config' must be defined and the attributes 'enable_private_nodes' and 'enable_private_endpoint' must be true",
			"description_id": "e9bbb09e",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "38af1e95450e2ad5a749753068323d95a327fa22ebadabc13a1bebf967b9a3a8",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'private_cluster_config' is defined and not null",
					"actual_value": "Attribute 'private_cluster_config' is undefined or null"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "06868ceff5c93289671f0e51f984ae79a3dc63dee3d70e262cae8b20f1de548c",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'private_cluster_config' is defined and not null",
					"actual_value": "Attribute 'private_cluster_config' is undefined or null"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "18df2a7255f8a4a58940a53e8075ba260c77565e9b59afc3676ff30fea7b877d",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'private_cluster_config' is defined and not null",
					"actual_value": "Attribute 'private_cluster_config' is undefined or null"
				}
			]
		},
		{
			"query_name": "Privilege Escalation Allowed",
			"query_id": "c878abb4-cca5-4724-92b9-289be68bd47c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#allow_privilege_escalation",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Admission of privileged containers should be minimized",
			"description_id": "e693ddd6",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "f49591a4a7a7186ae95b6b67100097ff648e4313f01d31a7d0ae95a5eddebb31",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].security_context.allow_privilege_escalation is not set to true",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].security_context.allow_privilege_escalation is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "f49591a4a7a7186ae95b6b67100097ff648e4313f01d31a7d0ae95a5eddebb31",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.allow_privilege_escalation is not set to true",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.allow_privilege_escalation is set to true"
				}
			]
		},
		{
			"query_name": "Public Storage Account",
			"query_id": "17f75827-0684-48f4-8747-61129c7e4198",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Storage Account should not be public",
			"description_id": "88948514",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\account\\storage_account.tf",
					"similarity_id": "871572ebe0979e43f4d882ffc4802bb649dbbb9cdf329727cc0cca1ddcd03480",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account[example].allow_blob_public_access",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'allow_blob_public_access' is set to false or undefined",
					"actual_value": "'allow_blob_public_access' is set to true"
				}
			]
		},
		{
			"query_name": "RDP Is Exposed To The Internet",
			"query_id": "efbf6449-5ec5-4cfe-8f15-acc51e0d787c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Port 3389 (Remote Desktop) is exposed to the internet",
			"description_id": "21b8be3f",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\ports\\disable-rdp-from-internet.tf",
					"similarity_id": "2771a0295a175ecabef94e7df8ed8764ca3ba9bd4fdb536d4d108aa6e891518c",
					"line": 53,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_security_rule[fail_rdp].destination_port_range",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_network_security_rule.fail_rdp.destination_port_range' cannot be 3389",
					"actual_value": "'azurerm_network_security_rule.fail_rdp.destination_port_range' might be 3389"
				},
				{
					"file_name": "terraform\\azurerm\\network\\ports\\disable-rdp-from-internet.tf",
					"similarity_id": "5b2df51cb0613d2d01b16f59096d598176d30810afe98514ee5b4ecb769833f9",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_security_rule[fail_range].destination_port_range",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_network_security_rule.fail_range.destination_port_range' cannot be 3389",
					"actual_value": "'azurerm_network_security_rule.fail_range.destination_port_range' might be 3389"
				}
			]
		},
		{
			"query_name": "RDS Database Cluster not Encrypted",
			"query_id": "656880aa-1388-488f-a6d4-8f73c23149b2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_cluster_snapshot",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "RDS Database Cluster Encryption should be enabled",
			"description_id": "c88d0255",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\db_cluster_snapshot.tf",
					"similarity_id": "c66335c87d39f912a904ba15e668d45962578dbd693d56a96fcf929915606604",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_cluster_snapshot[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_db_cluster_snapshot.db_cluster_identifier' is encrypted",
					"actual_value": "aws_db_cluster_snapshot.db_cluster_identifier' is not encrypted"
				}
			]
		},
		{
			"query_name": "RDS Storage Not Encrypted",
			"query_id": "3199c26c-7871-4cb3-99c2-10a59244ce7f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#storage_encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if RDS Cluster Storage isn't encrypted. Happens when 'storage_encrypted' is not set to 'true'",
			"description_id": "54288d64",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 2.3.1",
			"cis_description_title": "Ensure that encryption is enabled for RDS Instances",
			"cis_description_text": "Amazon RDS encrypted DB instances use the industry standard AES-256 encryption algorithm to encrypt your data on the server that hosts your Amazon RDS DB instances. After your data is encrypted, Amazon RDS handles authentication of access and decryption of your data transparently with a minimal impact on performance.\nDatabases are likely to hold sensitive and critical data, it is highly recommended to implement encryption in order to protect your data from unauthorized access or disclosure. With RDS encryption enabled, the data stored on the instance's underlying storage, the automated backups, read replicas, and snapshots, are all encrypted.",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\querylogging.tf",
					"similarity_id": "b34c4625976adc12fd927209d60af2d908daf9198d7eb61738058f42e9e344b4",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_rds_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_rds_cluster.storage_encrypted is set to true",
					"actual_value": "aws_rds_cluster.storage_encrypted is undefined"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_cluster.tf",
					"similarity_id": "d5e733a57a9f0f58205ba06e5ba08ff8deea75529cbcec8896af14e19d813209",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_rds_cluster[fail2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_rds_cluster.storage_encrypted is set to true",
					"actual_value": "aws_rds_cluster.storage_encrypted is undefined"
				}
			]
		},
		{
			"query_name": "Redis Not Compliant",
			"query_id": "254c932d-e3bf-44b2-bc9d-eb5fdb09f8d4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#engine_version",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if the redis version is compliant with the necessary AWS PCI DSS requirements",
			"description_id": "f9e5dc62",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\redis_not_compliant.tf",
					"similarity_id": "204b383437eb254065f5c4c55fb2c13c4e2889204a343e2e8176132a4aa5abd4",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticache_cluster[fails].engine_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_elasticache_cluster[fails].engine_version is compliant with the requirements",
					"actual_value": "aws_elasticache_cluster[fails].engine_version isn't compliant with the requirements"
				}
			]
		},
		{
			"query_name": "Redis Not Updated Regularly",
			"query_id": "b947809d-dd2f-4de9-b724-04d101c515aa",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/redis_cache#patch_schedule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Redis Cache is not configured to be updated regularly with security and operational updates",
			"description_id": "a9726898",
			"files": [
				{
					"file_name": "terraform\\azurerm\\redis\\redis_cache.tf",
					"similarity_id": "75bc77507c936b5e40d2d7a25dc5611fdd6e638b05b24d69b2ec39245ec76cb7",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_redis_cache[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_redis_cache[fail].patch_schedule' is defined and not null",
					"actual_value": "'azurerm_redis_cache[fail].patch_schedule' is undefined or null"
				}
			]
		},
		{
			"query_name": "Redis Publicly Accessible",
			"query_id": "5089d055-53ff-421b-9482-a5267bdce629",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/redis_firewall_rule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Firewall rule allowing unrestricted access to Redis from other Azure sources",
			"description_id": "0017c1c6",
			"files": [
				{
					"file_name": "terraform\\azurerm\\redis\\redis_firewall_rule.tf",
					"similarity_id": "1df7057f826f08f4e402cf8c9b238cc3063e8ca41563e47c86e997f02fa7b5aa",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_redis_firewall_rule[positive1].start_ip",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_redis_firewall_rule[positive1]' ip range is private",
					"actual_value": "'azurerm_redis_firewall_rule[positive1]' ip range is not private"
				}
			]
		},
		{
			"query_name": "Redshift Not Encrypted",
			"query_id": "cfdcabb0-fc06-427c-865b-c59f13e898ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if 'encrypted' field is false or undefined (default is false)",
			"description_id": "2bee4895",
			"files": [
				{
					"file_name": "terraform\\aws\\redshift\\redshift_using_default_port.tf",
					"similarity_id": "aed12d84a9eee8f442829899485201e8dbab9531aa3e4fbd3ea5a21cafe94fb1",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_redshift_cluster.encrypted is defined and not null",
					"actual_value": "aws_redshift_cluster.encrypted is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_cluster.tf",
					"similarity_id": "a21dbac32e357997ddb6ac46eaa3a142954094f5066e3306d168de3a447ec532",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_redshift_cluster.encrypted is defined and not null",
					"actual_value": "aws_redshift_cluster.encrypted is undefined or null"
				}
			]
		},
		{
			"query_name": "Redshift Publicly Accessible",
			"query_id": "af173fde-95ea-4584-b904-bb3923ac4bda",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if 'publicly_accessible' field is true or undefined (default is true)",
			"description_id": "9a581503",
			"files": [
				{
					"file_name": "terraform\\aws\\redshift\\redshift_cluster.tf",
					"similarity_id": "48ef37a7d31a74e0ee1ece2895864ce73a55876060e1c0e41d4fd2b16ce06a27",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_redshift_cluster.publicly_accessible is defined and not null",
					"actual_value": "aws_redshift_cluster.publicly_accessible is undefined or null"
				}
			]
		},
		{
			"query_name": "Role Assignment Not Limit Guest User Permissions",
			"query_id": "8e75e431-449f-49e9-b56a-c8f1378025cf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_assignment",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Role Assignment should limit guest user permissions",
			"description_id": "a827491d",
			"files": [
				{
					"file_name": "terraform\\azurerm\\iam\\role_assignment_not_limit_guest_users_permissions.tf",
					"similarity_id": "6c1567263c7dd439a773c2810105b027a83a881ded78e81062889526fa9736a1",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_assignment[example].role_definition_id",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_assignment[example].role_definition_id limits guest user permissions",
					"actual_value": "azurerm_role_assignment[example].role_definition_id does not limit guest user permissions"
				}
			]
		},
		{
			"query_name": "Role Assignment Of Guest Users",
			"query_id": "2bc626a8-0751-446f-975d-8139214fc790",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_assignment",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "There is a role assignment for guest user",
			"description_id": "fa055646",
			"files": [
				{
					"file_name": "terraform\\azurerm\\iam\\role_assignment_of_guest_users.tf",
					"similarity_id": "51808801055a32fca8c4a27eb736910f821c360049b090f5c9506ea702a7614b",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_assignment[positive1].role_definition_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_assignment[positive1].role_definition_name not equal to 'Guest'",
					"actual_value": "azurerm_role_assignment[positive1].role_definition_name equals to 'Guest'"
				},
				{
					"file_name": "terraform\\azurerm\\iam\\role_assignment_not_limit_guest_users_permissions.tf",
					"similarity_id": "c7a16fa214848122b250d7f0e43932b0c13ca0683299a548653d0b6400b571d7",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_assignment[example].role_definition_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_assignment[example].role_definition_name not equal to 'Guest'",
					"actual_value": "azurerm_role_assignment[example].role_definition_name equals to 'Guest'"
				}
			]
		},
		{
			"query_name": "Role Binding To Default Service Account",
			"query_id": "3360c01e-c8c0-4812-96a2-a6329b9b7f9f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/role_binding#subject",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "No role nor cluster role should bind to a default service account",
			"description_id": "a90a96ca",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\role\\role_binding_to_default_service_account.tf",
					"similarity_id": "01bae1e80d55c1f9a7ca0ac48f708b65a121771116c77adffb49e17a09945fba",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "resource.kubernetes_role_binding[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.kubernetes_role_binding[example].subject[1].name is not default",
					"actual_value": "resource.kubernetes_role_binding[example].subject[1].name is default"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "c10c4427ff608be078d722a26011fd77daf3d088904bb09472df1eaf41bdb40c",
					"line": 67,
					"issue_type": "IncorrectValue",
					"search_key": "resource.kubernetes_role_binding[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.kubernetes_role_binding[example].subject[1].name is not default",
					"actual_value": "resource.kubernetes_role_binding[example].subject[1].name is default"
				}
			]
		},
		{
			"query_name": "Root Account Has Active Access Keys",
			"query_id": "970d224d-b42a-416b-81f9-8f4dfe70c4bc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "The AWS Root Account must not have active access keys associated, which means if there are access keys associated to the Root Account, they must be inactive.",
			"description_id": "f0795485",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.4",
			"cis_description_title": "Ensure no 'root' user account access key exists",
			"cis_description_text": "The 'root' user account is the most privileged user in an AWS account. AWS Access Keys provide programmatic access to a given AWS account. It is recommended that all access keys associated with the 'root' user account be removed.\nRemoving access keys associated with the 'root' user account limits vectors by which the account can be compromised. Additionally, removing the 'root' access keys encourages the creation and use of role based accounts that are least privileged.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
					"similarity_id": "b639576eb8a25e49d31790c2645f15c0918271b5f8ff6580f32c2a65f90564e0",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_access_key[fail_key]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[fail_key].status' is defined and set to 'Inactive'",
					"actual_value": "'aws_iam_access_key[fail_key].status' is undefined, that defaults to 'Active'"
				}
			]
		},
		{
			"query_name": "S3 Bucket ACL Allows Read Or Write to All Users",
			"query_id": "38c5ee0d-7f22-4260-ab72-5073048df100",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 bucket with public READ/WRITE access",
			"description_id": "d535387f",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "07ca94fe0ce5bd480df7bbeeea8edc4a30d69dcb76fe23c46841c3621d277708",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[positive1].acl=public-read",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'acl' is equal 'private'",
					"actual_value": "'acl' is equal 'public-read'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "9ab47cb3562e14837604802037250fc0b41492215b92a80c7890e3a972554774",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[public_bucket].acl=public-read-write",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'acl' is equal 'private'",
					"actual_value": "'acl' is equal 'public-read-write'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "51c3534835b0dfd11389db8ba1ac432b04e877a24680ec81966ed3165754c0da",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail].acl=public-read-write",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'acl' is equal 'private'",
					"actual_value": "'acl' is equal 'public-read-write'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "74fdc42a89c8409f2f1ac875f73a28a637b0533f8061b5a81d46c46e670f9a99",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail_static].acl=public-read",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'acl' is equal 'private'",
					"actual_value": "'acl' is equal 'public-read'"
				}
			]
		},
		{
			"query_name": "S3 Bucket Access to Any Principal",
			"query_id": "7af43613-6bb9-4a0e-8c4d-1314b799425e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 Buckets must not allow Actions From All Principals, as to prevent leaking private information to the entire internet or allow unauthorized data tampering / deletion. This means the 'Effect' must not be 'Allow' when there are All Principals",
			"description_id": "4f884b47",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_allows_all_actions_from_all_principals.tf",
					"similarity_id": "99ea052a7d1721c097cf33b3bdc1fe930c8f78f83986438158da14220b8d35eb",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[fail_all].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_policy[fail_all].policy.Principal is not equal to, nor does it contain '*'",
					"actual_value": "aws_s3_bucket_policy[fail_all].policy.Principal is equal to or contains '*'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "e71d6cc7d9833f8255aeccbe8b250694393c6916ec1015ade523268a7f1b6898",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail_permissions].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail_permissions].policy.Principal is not equal to, nor does it contain '*'",
					"actual_value": "aws_s3_bucket[fail_permissions].policy.Principal is equal to or contains '*'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_access_to_any_principal.tf",
					"similarity_id": "d4978fa497056ffad661ee7b1e09dc9b9f3acf574f4b37fde5751a50eac5c492",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[positive1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_policy[positive1].policy.Principal is not equal to, nor does it contain '*'",
					"actual_value": "aws_s3_bucket_policy[positive1].policy.Principal is equal to or contains '*'"
				}
			]
		},
		{
			"query_name": "S3 Bucket Allows All Actions From All Principals",
			"query_id": "51cf6f14-6a52-4642-97fb-10db078382d3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 Buckets must not allow All Actions (wildcard) From All Principals, as to prevent leaking private information to the entire internet or allow unauthorized data tampering / deletion. This means the 'Effect' must not be 'Allow' when the 'Action' is *, for all Principals.",
			"description_id": "aa0f06b5",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_allows_all_actions_from_all_principals.tf",
					"similarity_id": "9a932952e6e33486ab304f03811f4ecf67ab91b9d20cbe0a55e540879c541e71",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[fail_all].policy.Action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*' when 'policy.Statement.Principal' contains '*'",
					"actual_value": "'policy.Statement.Action' contains '*' when 'policy.Statement.Principal' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "cdbbd5cc4f3eddea8788c8857a791406653179c8f1149e6815b22e3bc0b64d9f",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail_permissions].policy.Action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*' when 'policy.Statement.Principal' contains '*'",
					"actual_value": "'policy.Statement.Action' contains '*' when 'policy.Statement.Principal' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_access_to_any_principal.tf",
					"similarity_id": "2b60c31018236ec94bc77d59bf8d4a869f95afdb754fa8fa8eb563c2940f58fa",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[positive1].policy.Action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*' when 'policy.Statement.Principal' contains '*'",
					"actual_value": "'policy.Statement.Action' contains '*' when 'policy.Statement.Principal' contains '*'"
				}
			]
		},
		{
			"query_name": "S3 Bucket Allows Public Policy",
			"query_id": "1a4bc881-9f69-4d44-8c9a-d37d08f54c50",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 bucket allows public policy",
			"description_id": "a8924b3b",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
					"similarity_id": "619c7dd28a40bf36bae2bca2c53185267cb021f4cd1c57377d243f03fab9172c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket_public_access_block[fail].block_public_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'block_public_policy' is equal 'true'",
					"actual_value": "'block_public_policy' is missing"
				}
			]
		},
		{
			"query_name": "S3 Bucket Object Not Encrypted",
			"query_id": "5fb49a69-8d46-4495-a2f8-9c8c622b2b6e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_object#server_side_encryption",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "S3 Bucket Object should have server-side encryption enabled",
			"description_id": "e6b92744",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 2.1.1",
			"cis_description_title": "Ensure all S3 buckets employ encryption-at-rest",
			"cis_description_text": "Amazon S3 provides a variety of no, or low, cost encryption options to protect data at rest.\nEncrypting data at rest reduces the likelihood that it is unintentionally exposed and can nullify the impact of disclosure if the encryption remains unbroken.",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_object.tf",
					"similarity_id": "1f815d50fd44a3a919605672ce5b7f08a32d6571de9e5d068e7aed289e44ca50",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket_object[{{fail}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_object.server_side_encryption is defined and not null",
					"actual_value": "aws_s3_bucket_object.server_side_encryption is undefined or null"
				}
			]
		},
		{
			"query_name": "S3 Bucket SSE Disabled",
			"query_id": "6726dcc0-5ff5-459d-b473-a780bef7665c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#server_side_encryption_configuration",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "If algorithm is AES256 then the master key is null, empty or undefined, otherwise the master key is required",
			"description_id": "b386c506",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "32387f9b312cc28a00c4439131bf5a854c00f681f9ca9d479122a9b6f1da2eba",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "b3447c95a4473abcd15497b9a410f651c7cd984c0b4b717837bbc28f41945683",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[public_bucket]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "2011ff6d1ad52790a5a4962320dc00a76bd267f0abfa314eeae9c3ac243aabe3",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_static]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
					"similarity_id": "d6a05221c8dd0b86a06d3bce432e65c2353f1302a11a61dee0e1f95324468058",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[b]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "e7ff95f1fb0d915b157580a18e0b8d4e5db6ca785591dad5b0118cce9a85755b",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_permissions]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
					"similarity_id": "9a5b0535969301119776ff70ea891f2d88f13abe9007117c44e54187d24bf0e0",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_mfa]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "926febdfa241522c43a008d17fb04dec3f47700a0510b18a9b2168f31ab54196",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'server_side_encryption_configuration' is defined and not null",
					"actual_value": "'server_side_encryption_configuration' is undefined or null"
				}
			]
		},
		{
			"query_name": "S3 Bucket With All Permissions",
			"query_id": "a4966c4f-9141-48b8-a564-ffe9959945bc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 Buckets must not have all permissions, as to prevent leaking private information to the entire internet or allow unauthorized data tampering / deletion",
			"description_id": "aec8fae9",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "2839dad515e2a3865c7c2acda659d2d78967d4a014ae92ee71e3276d6345927e",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail_permissions].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' doesn't contain '*'",
					"actual_value": "'policy.Statement.Action' contains '*'"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Enabled MFA Delete",
			"query_id": "c5b31ab9-0f26-4a49-b8aa-4cc064392f4d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#mfa_delete",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "S3 bucket without MFA Delete Enabled. MFA delete cannot be enabled through Terraform, it can be done by adding a MFA device (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable.html) and enabling versioning and MFA delete by using AWS CLI: 'aws s3api put-bucket-versioning --versioning-configuration=Status=Enabled,MFADelete=Enabled --bucket=\u003cBUCKET_NAME\u003e --mfa=\u003cMFA_SERIAL_NUMBER\u003e'",
			"description_id": "e1699d08",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 2.1.3",
			"cis_description_title": "Ensure MFA Delete is enable on S3 buckets",
			"cis_description_text": "Once MFA Delete is enabled on your sensitive and classified S3 bucket it requires the user to have two forms of authentication.\nAdding MFA delete to an S3 bucket, requires additional authentication when you change the version state of your bucket or you delete and object version adding another layer of security in the event your security credentials are compromised or unauthorized access is granted.",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
					"similarity_id": "09000e6c0eafb28e1955954b4a683ffd8cc363c442d3c453259204843bfc701f",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_mfa]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail_mfa].versioning is defined and not null",
					"actual_value": "aws_s3_bucket[fail_mfa].versioning is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
					"similarity_id": "faad5c06ca10e3f932c1c0c231c5ef08e57d5a578eb93329c0a0d118e4032778",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[b]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[b].versioning is defined and not null",
					"actual_value": "aws_s3_bucket[b].versioning is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "8682c7700cf6e1470faf72cf448dd2373b314a919e91b9a4520ac01cda9aa1ec",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_static]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail_static].versioning is defined and not null",
					"actual_value": "aws_s3_bucket[fail_static].versioning is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "e58f630beab104df869fd1493cf0037780d72bc7bcffd21d4c376fe2c2bb3666",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[public_bucket]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[public_bucket].versioning is defined and not null",
					"actual_value": "aws_s3_bucket[public_bucket].versioning is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "eb79f8b3b5d49cf2abb2ca1ece70eab306a4553c850a7249afe5a95a56b14601",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[positive1].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled' is set to true",
					"actual_value": "'enabled' is set to false"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "32cdbc65a0edf93d93abe37d835f4757b5d4e64661963e488d2180fe2127743e",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[positive1].versioning",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'mfa_delete' is set to true",
					"actual_value": "'mfa_delete' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "f5cc2226ea749a70239a7d19f8a05c62601dec9849bef84af9d37f9a3e2f1050",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail].versioning.mfa_delete",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'mfa_delete' is set to true",
					"actual_value": "'mfa_delete' is set to false"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "9b40899bd897a68ce7e64e168c47e2e6e8b921f7bbfdce77979420c52139da05",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled' is set to true",
					"actual_value": "'enabled' is set to false"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "cde9243147689799b5a7dec3de954e11d66e913343a33a1fc1ac1a9ceaaf2a2a",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_permissions]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail_permissions].versioning is defined and not null",
					"actual_value": "aws_s3_bucket[fail_permissions].versioning is undefined or null"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Restriction Of Public Bucket",
			"query_id": "1ec253ab-c220-4d63-b2de-5b40e0af9293",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "S3 bucket without restriction of public bucket",
			"description_id": "a6e86c32",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
					"similarity_id": "67bad01434f7e806219cb0c4cdf01074385967411f3e264826c3af9187735acb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket_public_access_block[fail].restrict_public_buckets",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'restrict_public_buckets' is equal 'true'",
					"actual_value": "'restrict_public_buckets' is missing"
				}
			]
		},
		{
			"query_name": "S3 Bucket with Unsecured CORS Rule",
			"query_id": "98a8f708-121b-455b-ae2f-da3fb59d17e1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#cors_rule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "If the CORS (Cross-Origin Resource Sharing) rule is defined in an S3 bucket, it should be secure",
			"description_id": "28051a7f",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "def0a27f73a8e80df3b0c0674a5e72b1c6cb608c5d53257929e1d0e4df007952",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[positive1].cors_rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'cors_rule' does not allows all methods, all headers or several origins",
					"actual_value": "'cors_rule' allows all methods, all headers or several origins"
				}
			]
		},
		{
			"query_name": "S3 Static Website Host Enabled",
			"query_id": "42bb6b7f-6d54-4428-b707-666f669d94fb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#website",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Checks if any static websties are hosted on buckets",
			"description_id": "4db5c45a",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "168f131d059f7a3e1303b8c7a6181cfa38c730877c2216481855dfa167da1239",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_s3_bucket[fail_static].website",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_s3_bucket[fail_static].website doesn't have static websites inside",
					"actual_value": "resource.aws_s3_bucket[fail_static].website does have static websites inside"
				}
			]
		},
		{
			"query_name": "SQL DB Instance Backup Disabled",
			"query_id": "cf3c7631-cd1e-42f3-8801-a561214a6e79",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Backup",
			"description": "Checks if backup configuration is enabled for all Cloud SQL Database instances",
			"description_id": "ab1d4131",
			"files": [
				{
					"file_name": "terraform\\google\\sql\\CloudPostgreSql.tf",
					"similarity_id": "9540e2137dcde9e735af939f4b69c98e3a783e55245e34e6f8b5c8745aa875fe",
					"line": 47,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_all].settings.backup_configuration.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "settings.backup_configuration.enabled is true",
					"actual_value": "settings.backup_configuration.enabled is false"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudSqlServer.tf",
					"similarity_id": "910e3388893cdfebd1fc60a9aa92272d0d4eeef0b932837b9936f53f3cb69481",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_auth].settings.backup_configuration.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "settings.backup_configuration.enabled is true",
					"actual_value": "settings.backup_configuration.enabled is false"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudMySql.tf",
					"similarity_id": "5b74127537fae030134eb98744390490f1edfce3b674e648fc3e66e137dbd040",
					"line": 20,
					"issue_type": "MissingAttribute",
					"search_key": "google_sql_database_instance[fail].settings",
					"search_line": 0,
					"search_value": "",
					"expected_value": "settings.backup_configuration is defined and not null",
					"actual_value": "settings.backup_configuration is undefined or null"
				}
			]
		},
		{
			"query_name": "SQL DB Instance Is Publicly Accessible",
			"query_id": "b187edca-b81e-4fdc-aff4-aab57db45edb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Check if any Cloud SQL instances are publicly accessible.",
			"description_id": "9beef444",
			"files": [
				{
					"file_name": "terraform\\google\\sql\\CloudPostgreSql.tf",
					"similarity_id": "e63ae65a6f03e533dbe097e1c1266bdf798951aca767ea21f0af2a34d4fd33e3",
					"line": 74,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_all].settings.ip_configuration.authorized_networks.value=0.0.0.0/0",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'authorized_network' address is trusted",
					"actual_value": "'authorized_network' address is not restricted: '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudSqlServer.tf",
					"similarity_id": "3b98c5f2a291c59c364a5d31ac9b188bccd2f05f0f55efd84f440271c5bb1ed2",
					"line": 61,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_auth].settings.ip_configuration.authorized_networks.value=0.0.0.0/0",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'authorized_network' address is trusted",
					"actual_value": "'authorized_network' address is not restricted: '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudMySql.tf",
					"similarity_id": "040fd55289eea635154d21a46637b9771f78370317e6369211908728772b5c25",
					"line": 30,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail].settings.ip_configuration.authorized_networks.value=0.0.0.0/0",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'authorized_network' address is trusted",
					"actual_value": "'authorized_network' address is not restricted: '0.0.0.0/0'"
				}
			]
		},
		{
			"query_name": "SQL DB Instance With SSL Disabled",
			"query_id": "02474449-71aa-40a1-87ae-e14497747b00",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#require_ssl",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Cloud SQL Database Instance with SSL disabled for incoming connections",
			"description_id": "8983549e",
			"files": [
				{
					"file_name": "terraform\\google\\sql\\CloudMySql.tf",
					"similarity_id": "fd2c4db7ac60ac49199af6a992f25db8dcac66894080e5ca80d101f52354eb42",
					"line": 22,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail].settings.ip_configuration.require_ssl",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'settings.ip_configuration.require_ssl' is true",
					"actual_value": "'settings.ip_configuration.require_ssl' is false"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudSqlServer.tf",
					"similarity_id": "beedb7dce0f0c2658640a2c7c0977634cc4541f39d0ff35e9ee872008281fbcb",
					"line": 48,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_auth].settings.ip_configuration.require_ssl",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'settings.ip_configuration.require_ssl' is true",
					"actual_value": "'settings.ip_configuration.require_ssl' is false"
				},
				{
					"file_name": "terraform\\google\\sql\\CloudPostgreSql.tf",
					"similarity_id": "ed258d7ca3a43f9e8241b7fec8d5a0e7bc384460ff5b13650d752be9a311a6e6",
					"line": 34,
					"issue_type": "IncorrectValue",
					"search_key": "google_sql_database_instance[fail_all].settings.ip_configuration.require_ssl",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'settings.ip_configuration.require_ssl' is true",
					"actual_value": "'settings.ip_configuration.require_ssl' is false"
				}
			]
		},
		{
			"query_name": "SQL Database Audit Disabled",
			"query_id": "83a229ba-483e-47c6-8db7-dc96969bce5a",
			"query_url": "https://www.terraform.io/docs/providers/azurerm/r/sql_database.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Ensure that 'Threat Detection' is enabled for Azure SQL Database",
			"description_id": "8f1137db",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_database.tf",
					"similarity_id": "2ae4466234762096c7962a300450cb0ca37494758909c33c598f44b584c544e8",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_database[example].threat_detection_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'threat_detection_policy' exists",
					"actual_value": "'threat_detection_policy' is missing"
				}
			]
		},
		{
			"query_name": "SQLServer Ingress From Any IP",
			"query_id": "25c0ea09-f1c5-4380-b055-3b83863f2bb8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if all IPs are allowed, check from start 0.0.0.0 to end 255.255.255.255.",
			"description_id": "eb6d3eca",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\no-public-firewall-access.tf",
					"similarity_id": "3b4e4880e96e4c85ca3fa50f951cb4d4634e99f5259e01c4c12a0d5e98ee4510",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_firewall_rule[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_sql_firewall_rule.start_ip_address different from 0.0.0.0 and end_ip_address different from 0.0.0.0 or 255.255.255.255",
					"actual_value": "azurerm_sql_firewall_rule.start_ip_address equal to 0.0.0.0 and end_ip_address equal to 0.0.0.0 or 255.255.255.255"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_firewall_rule.tf",
					"similarity_id": "9a41dc7ce2ac575cc493db049e6081286524e341edb4322b785ff90226c08179",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_firewall_rule[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_sql_firewall_rule.start_ip_address different from 0.0.0.0 and end_ip_address different from 0.0.0.0 or 255.255.255.255",
					"actual_value": "azurerm_sql_firewall_rule.start_ip_address equal to 0.0.0.0 and end_ip_address equal to 0.0.0.0 or 255.255.255.255"
				}
			]
		},
		{
			"query_name": "SQS Queue Exposed",
			"query_id": "abb06e5f-ef9a-4a99-98c6-376d396bfcdf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#policy",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Checks if the SQS Queue is exposed",
			"description_id": "59f958c0",
			"files": [
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue.tf",
					"similarity_id": "af5afc6ad7b03f6d353026f6784b86cae8302ed5aea37f41b5e5c6e5ea17502f",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_sqs_queue[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_sqs_queue[fail].policy.Principal doesn't get the queue publicly accessible",
					"actual_value": "resource.aws_sqs_queue[fail].policy.Principal does get the queue publicly accessible"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue_exposed.tf",
					"similarity_id": "4bcf0a648bb4b2ba453c343ec85e2eefb0cec0b690f1c1172485c2cfcdc5c6c0",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_sqs_queue[positive1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_sqs_queue[positive1].policy.Principal doesn't get the queue publicly accessible",
					"actual_value": "resource.aws_sqs_queue[positive1].policy.Principal does get the queue publicly accessible"
				}
			]
		},
		{
			"query_name": "SQS With SSE Disabled",
			"query_id": "6e8849c1-3aa7-40e3-9063-b85ee300f29f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Amazon Simple Queue Service (SQS) queue is not protecting the contents of their messages using Server-Side Encryption (SSE)",
			"description_id": "e478b54b",
			"files": [
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue_exposed.tf",
					"similarity_id": "ebf24ecc4d90fdb4894d2d647a9b4e59d7cb11788d2e16d9bbb1ea878edef27c",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sqs_queue[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sqs_queue.kms_master_key_id is defined and not null",
					"actual_value": "aws_sqs_queue.kms_master_key_id is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "6368584e221c020d06a1f909f31e0cfbb116b4523b8fc9eae08354a53e764063",
					"line": 108,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sqs_queue[test_queue]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sqs_queue.kms_master_key_id is defined and not null",
					"actual_value": "aws_sqs_queue.kms_master_key_id is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
					"similarity_id": "dc83abc395e3c7a38a58fbed847fb8bb8fc3058321790bdf2adb939ec47e301d",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sqs_queue[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sqs_queue.kms_master_key_id is defined and not null",
					"actual_value": "aws_sqs_queue.kms_master_key_id is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue.tf",
					"similarity_id": "a599431b297aa8cc1541ab9f97fb7de3dcf307d400557794041360b7cb0e09e0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sqs_queue[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sqs_queue.kms_master_key_id is defined and not null",
					"actual_value": "aws_sqs_queue.kms_master_key_id is undefined or null"
				}
			]
		},
		{
			"query_name": "SSH Is Exposed To The Internet",
			"query_id": "3e3c175e-aadf-4e2b-a464-3fdac5748d24",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Port 22 (SSH) is exposed to the internet",
			"description_id": "f98cf1dc",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\ssh-blocked-from-internet.tf",
					"similarity_id": "56883ca67d3fa0cb354e86e0e5127616b6607f88f987d9258daf10eb7df1b509",
					"line": 35,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_security_rule[fail_ssh2].destination_port_range",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_network_security_rule.fail_ssh2.destination_port_range' cannot be 22",
					"actual_value": "'azurerm_network_security_rule.fail_ssh2.destination_port_range' might be 22"
				}
			]
		},
		{
			"query_name": "SSL Enforce Disabled",
			"query_id": "0437633b-daa6-4bbc-8526-c0d2443b946e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Make sure that for PosgreSQL, the 'Enforce SSL connection' is set to 'ENABLED'",
			"description_id": "9549423a",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\secure-tls-policy.tf",
					"similarity_id": "551cf46d1276688d94bbed37b49501d9342f9328b9cf30526dcf2136dea114ce",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_server[fail_psql].ssl_enforcement_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server.fail_psql.ssl_enforcement_enabled' is equal 'true'",
					"actual_value": "'azurerm_postgresql_server.fail_psql.ssl_enforcement_enabled' is equal 'false'"
				},
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgresql_server.tf",
					"similarity_id": "37adba2e16a414e8d11dd81f7290a67a36f0751ac5f20ed7c044f357fd8e6602",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_server[fails].ssl_enforcement_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server.fails.ssl_enforcement_enabled' is equal 'true'",
					"actual_value": "'azurerm_postgresql_server.fails.ssl_enforcement_enabled' is equal 'false'"
				}
			]
		},
		{
			"query_name": "Sagemaker Endpoint Configuration Encryption Disabled",
			"query_id": "58b35504-0287-4154-bf69-02c0573deab8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_endpoint_configuration#kms_key_arn",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Sagemaker endpoint configuration should encrypt data",
			"description_id": "570f99ac",
			"files": [
				{
					"file_name": "terraform\\aws\\sagemaker\\sagemaker_endpoint_configuration.tf",
					"similarity_id": "328cb5c975e9e61f144a635c7f285dbaa3960b8dfa88e802359dc649214116be",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sagemaker_endpoint_configuration[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sagemaker_endpoint_configuration[fail] is defined and not null",
					"actual_value": "aws_sagemaker_endpoint_configuration[fail] is undefined or null"
				}
			]
		},
		{
			"query_name": "Sagemaker Notebook Instance Without KMS",
			"query_id": "f3674e0c-f6be-43fa-b71c-bf346d1aed99",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sagemaker_notebook_instance#kms_key_id",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS SageMaker should encrypt model artifacts at rest using Amazon S3 server-side encryption with an AWS KMS",
			"description_id": "4ad34dae",
			"files": [
				{
					"file_name": "terraform\\aws\\sagemaker\\sagemaker_notebook_instance.tf",
					"similarity_id": "e9808ca32e91cb07d6bd1c372592ff7804f8bf910fa205d0b39604b97e65ee2f",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sagemaker_notebook_instance[{{name}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sagemaker_notebook_instance.kms_key_id is defined and not null",
					"actual_value": "aws_sagemaker_notebook_instance.kms_key_id is undefined or null"
				}
			]
		},
		{
			"query_name": "Secret Expiration Not Set",
			"query_id": "dfa20ffa-f476-428f-a490-424b41e91c7f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Make sure that for all secrets the expiration date is set",
			"description_id": "172cf4e6",
			"files": [
				{
					"file_name": "terraform\\azurerm\\keyvault\\key_vault_secret.tf",
					"similarity_id": "e1be3e493ba0151c14b6472eff2000713c6fce970cb6bd839dd9267296e042db",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_key_vault_secret[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'expiration_date' exists",
					"actual_value": "'expiration_date' is missing"
				}
			]
		},
		{
			"query_name": "Sensitive Port Is Exposed To Entire Network",
			"query_id": "381c3f2a-ef6f-4eff-99f7-b169cda3422c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "A sensitive port, such as port 23 or port 110, is open for the whole network in either TCP or UDP protocol",
			"description_id": "5be78364",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "0edb1670f46030150c8abf1f7003c5091282bb14b21b0a2bbe26d2f5db966ae8",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,137",
					"expected_value": "NetBIOS Name Service (TCP:137) should not be allowed",
					"actual_value": "NetBIOS Name Service (TCP:137) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "05b4db0535f38b37a4c6013248314594a648d5078a4d8f4519ae22edd3deba2c",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2376",
					"expected_value": "Docker (TCP:2376) should not be allowed",
					"actual_value": "Docker (TCP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "79c9b3feaa03dbb915028428a79348b6309708a2f0b5372a4596b54100ba0099",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2383",
					"expected_value": "SQL Server Analysis (TCP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "519a922647a4763ca4e84a1442b3baa5ba666016c36abe0e63f06426d6333d9e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress",
					"search_line": 0,
					"search_value": "TCP,2375",
					"expected_value": "Docker (TCP:2375) should not be allowed",
					"actual_value": "Docker (TCP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "df658ac207a154fa4f599ca0e0f5c73a16752717d13508276e94f1701c699c31",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,110",
					"expected_value": "POP3 (TCP:110) should not be allowed",
					"actual_value": "POP3 (TCP:110) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "c2fee5b6fc0bae0e93393472cd4851e3829da80b88bce0b9174f84415f7d06e8",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2375",
					"expected_value": "Docker (TCP:2375) should not be allowed",
					"actual_value": "Docker (TCP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "3b2bd2547fc02144dae4fcabc105ed519cbfd0a6b2cd3853f3f4f1c300285f5f",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress",
					"search_line": 0,
					"search_value": "TCP,2383",
					"expected_value": "SQL Server Analysis (TCP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "9f2a76a67c31a9919e0cb1b81909791d5fde507029a651cc3f5fdfdfd21b49c1",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2484",
					"expected_value": "Oracle DB SSL (UDP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "f467daac12b14bd7545dbb694db1a90646e4f5b1ffa33d5d138c8daf78a2f316",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,135",
					"expected_value": "MSSQL Debugger (TCP:135) should not be allowed",
					"actual_value": "MSSQL Debugger (TCP:135) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_http_port_open.tf",
					"similarity_id": "24904273be727dedf0303b67846d899a9c8ae8f0f2053a3a0e0a11f5099041ea",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_openport].ingress",
					"search_line": 0,
					"search_value": "TCP,80",
					"expected_value": "HTTP (TCP:80) should not be allowed",
					"actual_value": "HTTP (TCP:80) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "43bc800dfa971127c1d2316e822e976e6b86dd6935d497c5d484dacbc6bd4094",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2382",
					"expected_value": "SQL Server Analysis (UDP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "73a3cf98294f5b61a20a24dde549fbb176520d24ef711ee812fb6ddfc09e0ef0",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2375",
					"expected_value": "Docker (UDP:2375) should not be allowed",
					"actual_value": "Docker (UDP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "c00c107405978c82070355eeefb08c6cc0ca9409666dd028fc1be99452a5f53a",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,161",
					"expected_value": "SNMP (TCP:161) should not be allowed",
					"actual_value": "SNMP (TCP:161) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "0e14c48d57de6af9f1df21ecc77992495ef6923d1f01aebae5421b701af5ec66",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,53",
					"expected_value": "DNS (TCP:53) should not be allowed",
					"actual_value": "DNS (TCP:53) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "dfebac93d5c2806299daa1544c242fde8002f1015d290caf8fb7ad9ca9f967aa",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress",
					"search_line": 0,
					"search_value": "TCP,2376",
					"expected_value": "Docker (TCP:2376) should not be allowed",
					"actual_value": "Docker (TCP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "0418ef18a27d9f80ad875a68ee8ae41e483de986ce76e93b8fbd58b7a1386fd7",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,139",
					"expected_value": "NetBIOS Session Service (TCP:139) should not be allowed",
					"actual_value": "NetBIOS Session Service (TCP:139) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "020db3f7fc658da1c95efd119ad0170237d1bbd033e72bb49c779bf7dd517cac",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,443",
					"expected_value": "HTTPS (TCP:443) should not be allowed",
					"actual_value": "HTTPS (TCP:443) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "8dd90568b87b014dcae89ca6a8d8e2249e33894c3c0197c4bb3cd450c57bca80",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2484",
					"expected_value": "Oracle DB SSL (TCP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "a55f147cf3705f48b8774cc43641226d9f87059e8ba9f92af4bfe1735842f875",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,389",
					"expected_value": "LDAP (TCP:389) should not be allowed",
					"actual_value": "LDAP (TCP:389) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "277063cfb5267be18beeb7add43a08af9b5535edd83021dccc25ef09f3ffaad8",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2376",
					"expected_value": "Docker (UDP:2376) should not be allowed",
					"actual_value": "Docker (UDP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "a11cc7679af39b6f9c100140bd1cc80bc0a3f415039ba8470cf663dd2f6b7afb",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2483",
					"expected_value": "Oracle DB SSL (UDP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2483) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "621a7aff94dea32d198c153e29ea8247f027cffdafa431b0a2efde25eaa9eff9",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "UDP,2383",
					"expected_value": "SQL Server Analysis (UDP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "434936590966ec8cc0684704b93318cc315a41cd44462b164914b3403973fedc",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress",
					"search_line": 0,
					"search_value": "TCP,2382",
					"expected_value": "SQL Server Analysis (TCP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "bf50a80def07d86b53c2e5b41fc8fcce1dc3953dee45c17d5fd4a748ec15e7c9",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2382",
					"expected_value": "SQL Server Analysis (TCP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "513fe6593226e6964934ea14d2398b4ce3ec926ca82a842ffab9937d9473e9f6",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,80",
					"expected_value": "HTTP (TCP:80) should not be allowed",
					"actual_value": "HTTP (TCP:80) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "46a06a8339f83ff2a7beac7189c59b1e81c1b8fd118498c95f08394edca89fda",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress",
					"search_line": 0,
					"search_value": "TCP,2483",
					"expected_value": "Oracle DB SSL (TCP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2483) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "583fd1bfe0c60ab2f0c5eae25483f0d2a5e3f0f335b8ec011cdc8a10e8aa6b2d",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress",
					"search_line": 0,
					"search_value": "TCP,138",
					"expected_value": "NetBIOS Datagram Service (TCP:138) should not be allowed",
					"actual_value": "NetBIOS Datagram Service (TCP:138) is allowed"
				}
			]
		},
		{
			"query_name": "Shared Host IPC Namespace",
			"query_id": "e94d3121-c2d1-4e34-a295-139bfeb73ea3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_ipc",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Container should not share the host IPC namespace",
			"description_id": "e76243f6",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "5cca4ea98fbbf45b72d428a692b6a279052fab4976738480baeab247209ac24d",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.host_ipc",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_ipc' is undefined or false",
					"actual_value": "Attribute 'host_ipc' is true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_sharing_host_ipc.tf",
					"similarity_id": "dd5aa0ab45ccae8bc5c11928c3b727647692a0bdeaf0e8b2ded03041b331877d",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example2].spec.host_ipc",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_ipc' is undefined or false",
					"actual_value": "Attribute 'host_ipc' is true"
				}
			]
		},
		{
			"query_name": "Shared Host Network Namespace",
			"query_id": "ac1564a3-c324-4747-9fa1-9dfc234dace0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_network",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Container should not share the host network namespace",
			"description_id": "bf155ca7",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "0216ecadbf15ee5ceb831b57b5dfc7c29d4c10f7f30b83f3cee679f5ed1e2f4f",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.host_network",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.host_network is undefined or set to false",
					"actual_value": "kubernetes_pod[test].spec.host_network is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_containers_to_share_the_host_network_namespace.tf",
					"similarity_id": "ed8882fa671d187c9adcb2a907b5677d7af6704989e48dac5f6a1e7324bed809",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.host_network",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.host_network is undefined or set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.host_network is set to true"
				}
			]
		},
		{
			"query_name": "Stackdriver Logging Disabled",
			"query_id": "4c7ebcb2-eae2-461e-bc83-456ee2d4f694",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Kubernetes Engine Clusters must have Stackdriver Logging enabled, which means the attribute 'logging_service' must be defined and different from 'none'",
			"description_id": "b292106d",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "e8656616fbb573f8d8a2253dffd9b8176f01238cd8470482639acb78746286ae",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'logging_service' is not 'none'",
					"actual_value": "Attribute 'logging_service' is 'none'"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "0a88aaed6a1ceefca725063a596f98bed3e348d14c17f25a23bd70b6055a0746",
					"line": 36,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'logging_service' is not 'none'",
					"actual_value": "Attribute 'logging_service' is 'none'"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "439d5e749dd7412104f41e52d2a586264e87f1ac4f3a81c42f24f35843f6b3c2",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'logging_service' is defined",
					"actual_value": "Attribute 'logging_service' is undefined"
				}
			]
		},
		{
			"query_name": "Stackdriver Monitoring Disabled",
			"query_id": "30e8dfd2-3591-4d19-8d11-79e93106c93d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Kubernetes Engine Clusters must have Stackdriver Monitoring enabled, which means the attribute 'monitoring_service' must be defined and different than 'none'",
			"description_id": "97635f79",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "a0ab657a9122eb1b17a277cf28534b0bb693ec39c44527028178975bebb1bc06",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'monitoring_service' is not 'none'",
					"actual_value": "Attribute 'monitoring_service' is 'none'"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\legacy.tf",
					"similarity_id": "a06065131b62cd2b57c3340d401249ea5f866146ef30691580f731b8294a9215",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "google_container_cluster[fail1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'monitoring_service' is defined",
					"actual_value": "Attribute 'monitoring_service' is undefined"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "37371cdfd97298b573c2a125767a08df9d4477f7f67253e73293d356de183bb3",
					"line": 36,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'monitoring_service' is not 'none'",
					"actual_value": "Attribute 'monitoring_service' is 'none'"
				}
			]
		},
		{
			"query_name": "Storage Account Not Forcing HTTPS",
			"query_id": "12944ec4-1fa0-47be-8b17-42a034f937c2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "See that Storage Accounts forces the use of HTTPS",
			"description_id": "ab6688ca",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "952df7fd2b44f5dc4cea0047a50a44e78c895a3ddadefd53777f58426a585fbf",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account.positive2.enable_https_traffic_only' equals 'true'",
					"actual_value": "'azurerm_storage_account.positive2.enable_https_traffic_only' does not exist"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\account\\StorageAccountDefaultNetworkAccessDeny.tf",
					"similarity_id": "c6fbdd868196bb97efae6b6e65794167b1b462c34c4f794a76293e4e8c19e438",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[example_deny]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account.example_deny.enable_https_traffic_only' equals 'true'",
					"actual_value": "'azurerm_storage_account.example_deny.enable_https_traffic_only' does not exist"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\account\\storage_account.tf",
					"similarity_id": "2cddbea29ec244aa8bf08c0ced1430b28a878d9fcef2445d0644c913e05cd46b",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account[example].enable_https_traffic_only",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account.example.enable_https_traffic_only' equals 'true'",
					"actual_value": "'azurerm_storage_account.example.enable_https_traffic_only' equals 'false'"
				}
			]
		},
		{
			"query_name": "Storage Container Is Publicly Accessible",
			"query_id": "dd5230f8-a577-4bbb-b7ac-f2c2fe7d5299",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_container#container_access_type",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Anonymous, public read access to a container and its blobs are enabled in Azure Blob Storage",
			"description_id": "a9e178f3",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\container\\storage_container.tf",
					"similarity_id": "1be7680b67371864c8fc8b827f2b296ab6111ef136d41bb636a4f478c678c100",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_container[fail].container_access_type",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'container_access_type' is equal to 'private'",
					"actual_value": "'container_access_type' is not equal to 'private'"
				}
			]
		},
		{
			"query_name": "Tiller (Helm v2) Is Deployed",
			"query_id": "ca2fba76-c1a7-4afd-be67-5249f861cb0e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#image",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if Tiller is deployed.",
			"description_id": "bf1b3f30",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "55308adee6a3399d60fbad8ca58d5b7441b19c2246b9d1b963835d1343bb0a41",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image doesn't have any Tiller containers",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image contains a Tiller container"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "4f456a7e06ecd316baea7cf4fabab548bf5612d3718c71b5f6aea0fe8d12e48e",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata does not refer any to a Tiller resource",
					"actual_value": "kubernetes_pod[positive1].metadata refers to a Tiller resource"
				}
			]
		},
		{
			"query_name": "Trusted Microsoft Services Not Enabled",
			"query_id": "5400f379-a347-4bdd-a032-446465fdcc6f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Trusted MIcrosoft Services are not enabled for Storage Account access",
			"description_id": "2d2af667",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\network_rules\\storage_account_network_rules.tf",
					"similarity_id": "55b6fe82314c763deff33665f164936e73747a6ddfab51eb8f0e50d5794ea86c",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account_network_rules[test].bypass",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'bypass' contains 'AzureServices'",
					"actual_value": "'bypass' does not contain 'AzureServices'"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "f3cbae0cb893f1cdd0238e1bdf1ed4eabd933d67ff3cd3d92ea6929314b0c8af",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'network_rules' is defined and not null",
					"actual_value": "'network_rules' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\network_rules\\default-action-deny.tf",
					"similarity_id": "9072801a617f52a0cd8bd0bef4b2164071a76f8696a26ab494867af0deb852a5",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account_network_rules[fail].bypass",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'bypass' contains 'AzureServices'",
					"actual_value": "'bypass' does not contain 'AzureServices'"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\account\\storage_account.tf",
					"similarity_id": "839db44aed7e8b38b0e694be1e799cf7df1957e45e2f9e93a5a70a60ddfc5a41",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account[example].network_rules.bypass",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'network_rules.bypass' contains 'AzureServices'",
					"actual_value": "'network_rules.bypass' does not contain 'AzureServices'"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\account\\StorageAccountDefaultNetworkAccessDeny.tf",
					"similarity_id": "985ceda5e5ba896b9037016805d6349715f68813402902ed067f77092d11d74c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[example_deny]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'network_rules' is defined and not null",
					"actual_value": "'network_rules' is undefined or null"
				}
			]
		},
		{
			"query_name": "Unknown Port Exposed To Internet",
			"query_id": "590d878b-abdc-428f-895a-e2b68a0e1998",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "AWS Security Group should not have an unknown port exposed to the entire Internet",
			"description_id": "e55e747f",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\security_http_port_open.tf",
					"similarity_id": "8e409cb4373db16e291b7c72363f410834f9924799b8f18ace509f6f4c69095a",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_openport].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[fail_openport].ingress.from_port is known",
					"actual_value": "aws_security_group[fail_openport].ingress.from_port is unknown and is exposed to the entire Internet"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "6dc7eeaf3bfe34e97e0f5585a5c0e07ef889540924d2872dcccd2e42104166fb",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[bad_example].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[bad_example].ingress.from_port is known",
					"actual_value": "aws_security_group[bad_example].ingress.from_port is unknown and is exposed to the entire Internet"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "24dbb7fd9cb1616e79022379a345a3db7d1d0da2316eb0f7b84192701f7b7719",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[fail_2383].ingress.from_port is known",
					"actual_value": "aws_security_group[fail_2383].ingress.from_port is unknown and is exposed to the entire Internet"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "c584ee6f189f448feb89a9afdc41b3270c397de4c6403fa29d6046291d248cc6",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[fail_sensitive].ingress.from_port is known",
					"actual_value": "aws_security_group[fail_sensitive].ingress.from_port is unknown and is exposed to the entire Internet"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "984fb26ea148ba1e72758058f47e100bb078ce72ba7d6ed2b23b63b6eec60d4e",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[positive1].ingress.from_port is known",
					"actual_value": "aws_security_group[positive1].ingress.from_port is unknown and is exposed to the entire Internet"
				}
			]
		},
		{
			"query_name": "Unrestricted Security Group Ingress",
			"query_id": "4728cd65-a20c-49da-8b31-9c08b423e4db",
			"query_url": "https://www.terraform.io/docs/providers/aws/r/security_group.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Security groups allow ingress from 0.0.0.0:0",
			"description_id": "ce3ee5e0",
			"cis_description_id": "CIS Security -  v - Rule ",
			"cis_description_text": "Security groups should restrict ingress only to well-known and allowed origins: IP addresses or ranges. Unrestricted access may expose security groups associated resources to the Internet, allowing, for example, access to remote server open ports.\nPublic access to remote servers increases the resource attack surface and unnecessarily raises the risk of resource compromise.",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "db2a9b8545ba237c438d982d02128ae606415b6eb31488032cc2287868d9195b",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_http_port_open.tf",
					"similarity_id": "3ec5f5f58f2ddacc8066b7f83fcda6add1c08748df7c2a5044e043c011836b33",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_openport].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "8e89123e95fb6bdb0640bb48bc116f884a9f43be71287c36403e869ac4a3f6cb",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\unrestricted_security_group_ingress.tf",
					"similarity_id": "8ab3ff8c3b336d2032a0847b7563b281ab85f7e7b2818ead966f653dc4ee2810",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group_rule[positive1].cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'rule.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'rule.cidr_blocks' is equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "bbb566d46905e2b2f3fb9cefa816125227e0a0b0fc0087292b19bc3bd8f6abfa",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[bad_example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "f662d74c7031ff2306ed40bb0e4ba302f00a386fafb50ca94b4a3915da523315",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1].ingress.cidr_blocks",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "1b1af0d13df02476069d0b966674283197ece338d139b3821cd688f869b2718c",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[bad_example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				}
			]
		},
		{
			"query_name": "VM Not Attached To Network",
			"query_id": "bbf6b3df-4b65-4f87-82cc-da9f30f8c033",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#network_interface_ids",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "No Network Security Group is attached to the Virtual Machine",
			"description_id": "9f51f6b1",
			"files": [
				{
					"file_name": "terraform\\azurerm\\vms\\vm_not_attached_to_network.tf",
					"similarity_id": "8a6f0d7100cece86c15febbd84c4903dfdae28dcffe86214395ddd345ee571d7",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_virtual_machine[positive1].network_interface_ids",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_virtual_machine[positive1].network_interface_ids' list is not empty",
					"actual_value": "'azurerm_virtual_machine[positive1].network_interface_ids' list is empty"
				}
			]
		},
		{
			"query_name": "VPC Default Security Group Accepts All Traffic",
			"query_id": "9a4ef195-74b9-4c58-b8ed-2b2fe4353a75",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Default Security Group attached to every VPC should restrict all traffic",
			"description_id": "d79243b5",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\vpc_default_security_group_accepts_all_traffic.tf",
					"similarity_id": "e86b9bfb6117384081e0fe11b7c6b7aade504672e569e3b87d77a4f11448f9e4",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_default_security_group[{{default}}].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_default_security_group[{{default}}] does not have 'ingress' defined",
					"actual_value": "aws_default_security_group[{{default}}] has 'ingress' defined"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\vpc_default_security_group_accepts_all_traffic.tf",
					"similarity_id": "cba638543bfa4beb0a5a7ce0dcdada5f7719e690326c163c81ad18cf71a6719e",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "aws_default_security_group[{{default}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_default_security_group[{{default}}] does not have 'egress' defined",
					"actual_value": "aws_default_security_group[{{default}}] has 'egress' defined"
				}
			]
		},
		{
			"query_name": "VPC Peering Route Table with Unrestricted CIDR",
			"query_id": "b3a41501-f712-4c4f-81e5-db9a7dc0e34e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "VPC Peering Route Table should restrict CIDR",
			"description_id": "3a60c60e",
			"files": [
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "ee2386e8080922a3a234d7d47b457f9dac5fc528c13874ec41cc47fdb1f6876f",
					"line": 123,
					"issue_type": "IncorrectValue",
					"search_key": "aws_route[public_route_table].route",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_route[public_route_table].route restricts CIDR",
					"actual_value": "aws_route[public_route_table].route does not restrict CIDR"
				}
			]
		},
		{
			"query_name": "Vault Auditing Disabled",
			"query_id": "38c71c00-c177-4cd7-8d36-cd1007cdb190",
			"query_url": "https://www.terraform.io/docs/providers/azurerm/r/key_vault.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Ensure that logging for Azure KeyVault is 'Enabled'",
			"description_id": "047ab315",
			"files": [
				{
					"file_name": "terraform\\azurerm\\keyvault\\key_vault.tf",
					"similarity_id": "22dd4d5c04346cf9bf050cc9b82ac663b32de8ef337b4640d4b60613d981a5f7",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_key_vault[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_key_vault' is associated with 'azurerm_monitor_diagnostic_setting'",
					"actual_value": "'azurerm_key_vault' is not associated with 'azurerm_monitor_diagnostic_setting'"
				}
			]
		},
		{
			"query_name": "Viewer Protocol Policy Allows HTTP",
			"query_id": "55af1353-2f62-4fa0-a8e1-a210ca2708f5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Checks if the connection between the CloudFront and the origin server is encrypted",
			"description_id": "3547cd5a",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "191ac5034e542b31d223ee68395ea1eb803ab5d8acd0b08c715bd86f5f5b591b",
					"line": 33,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_cloudfront_distribution[fail_defaultcert].default_cache_behavior.viewer_protocol_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[fail_defaultcert].default_cache_behavior.viewer_protocol_policy is 'https-only' or 'redirect-to-https'",
					"actual_value": "resource.aws_cloudfront_distribution[fail_defaultcert].default_cache_behavior.viewer_protocol_policy isn't 'https-only' or 'redirect-to-https'"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "ec0379fb4b6fed154bd104a3d20d3b2d44f15d17fab4d7adf95ffbb69f2dbfdb",
					"line": 43,
					"issue_type": "IncorrectValue",
					"search_key": "resource.aws_cloudfront_distribution[s3_distribution].default_cache_behavior.viewer_protocol_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[s3_distribution].default_cache_behavior.viewer_protocol_policy is 'https-only' or 'redirect-to-https'",
					"actual_value": "resource.aws_cloudfront_distribution[s3_distribution].default_cache_behavior.viewer_protocol_policy isn't 'https-only' or 'redirect-to-https'"
				}
			]
		},
		{
			"query_name": "Vulnerable Default SSL Certificate",
			"query_id": "3a1e94df-6847-4c0e-a3b6-6c6af4e128ef",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "CloudFront web distributions should use custom (and not default) SSL certificates. Custom SSL certificates allow only defined users to access content by using an alternate domain name instead of the default one.",
			"description_id": "38579a53",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "0257b441865342eb89f7ff4579155e5a20bea9ad0ab555cbd8905bc8b4007eb5",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[fail_defaultcert]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudfront_distribution[fail_defaultcert].viewer_certificate is defined and not null",
					"actual_value": "aws_cloudfront_distribution[fail_defaultcert].viewer_certificate is undefined or null"
				}
			]
		},
		{
			"query_name": "Web App Accepting Traffic Other Than HTTPS",
			"query_id": "11e9a948-c6c3-4a0f-8dcf-b5cf1763cdbe",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#https_only",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Web app should only accept HTTPS traffic in Azure Web App Service.",
			"description_id": "74140c3d",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "285b37f4788c11041b72960edf4035233440fa8c4b7d4fea0b1f7b8607bd9835",
					"line": 42,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_app_service[fail].https_only",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].https_only' is set to true",
					"actual_value": "'azurerm_app_service[fail].https_only' is not set to true"
				}
			]
		},
		{
			"query_name": "Workspaces Workspace Volume Not Encrypted",
			"query_id": "b9033580-6886-401a-8631-5f19f5bb24c7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled",
			"severity": "HIGH",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS Workspaces Workspace data stored in volumes should be encrypted",
			"description_id": "e3f9c7a9",
			"files": [
				{
					"file_name": "terraform\\aws\\workspace\\workspace_workspace.tf",
					"similarity_id": "5149501b5ab4ac249c65c4f89daf261d8726f1cd1513be5e806dbfc909c08f6f",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_workspaces_workspace[{{fail}}].workspace_properties.root_volume_size_gib",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_workspaces_workspace.root_volume_encryption_enabled is set to true",
					"actual_value": "aws_workspaces_workspace.root_volume_encryption_enabled is missing"
				},
				{
					"file_name": "terraform\\aws\\workspace\\workspace_workspace.tf",
					"similarity_id": "195874751dc6edf1cd3d08d23cd0a6c83f1a84cd645838e521d991b5ede6f3b3",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_workspaces_workspace[{{fail}}].workspace_properties.user_volume_size_gib",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_workspaces_workspace.user_volume_encryption_enabled is set to true",
					"actual_value": "aws_workspaces_workspace.user_volume_encryption_enabled is missing"
				}
			]
		},
		{
			"query_name": "AKS Disk Encryption Set ID Undefined",
			"query_id": "b17d8bb8-4c08-4785-867e-cb9e62a622aa",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#disk_encryption_set_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Azure Container Service (AKS) should use Disk Encryption Set ID",
			"description_id": "4eddeb5c",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "40493f95f62151e891d2951e70c0607de0ae36e5aa223ab1ae34b8f0c03d559b",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].disk_encryption_set_id' is defined and not null",
					"actual_value": "'azurerm_kubernetes_cluster[example].disk_encryption_set_id' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "9dea7e8e6bbeb493f75557f7f87185a09015edc6ec7daa9f933951f66cf08c42",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].disk_encryption_set_id' is defined and not null",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].disk_encryption_set_id' is undefined or null"
				}
			]
		},
		{
			"query_name": "AKS Network Policy Misconfigured",
			"query_id": "f5342045-b935-402d-adf1-8dbbd09c0eef",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/kubernetes_cluster",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if the Azure Kubernetes Service doesn't have the proper network policy configuration.",
			"description_id": "7708dadb",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "8bc4f053e4375df2f9d039100ba7c1169b9d0a1a1a1c833cec3d31b59c4cf6e8",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].network_profile' is set",
					"actual_value": "'azurerm_kubernetes_cluster[example].network_profile' is undefined"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "c7f9f44413e0b42ee5353d4a3b50094b76716cfd5da3223b4b2e5d64b2e24091",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].network_profile' is set",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].network_profile' is undefined"
				}
			]
		},
		{
			"query_name": "AKS RBAC Disabled",
			"query_id": "86f92117-eed8-4614-9c6c-b26da20ff37f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#role_based_access_control",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure Container Service (AKS) instance should have role-based access control (RBAC) enabled",
			"description_id": "d27166a7",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "32e0d219f5e5de726155496d3e0cc316013b0d194952fd624fed057ebb846a44",
					"line": 33,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster].role_based_access_control.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].role_based_access_control.enabled' is set to true",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].role_based_access_control.enabled' is not set to true"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "8834666acc0b2135e82cd10694d0a274b41b97b5bed2e4ca298c7d4536ce01e6",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].role_based_access_control' is defined and not null",
					"actual_value": "'azurerm_kubernetes_cluster[example].role_based_access_control' is undefined or null"
				}
			]
		},
		{
			"query_name": "ALB Is Not Integrated With WAF",
			"query_id": "0afa6ab8-a047-48cf-be07-93a2f8c34cf7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_web_acl_association",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "All Application Load Balancers (ALB) must be protected with Web Application Firewall (WAF) service",
			"description_id": "4e4c668d",
			"cis_description_id": "CIS Security -  v - Rule ",
			"cis_description_text": "AWS Application Load Balancer (ALB) is a service that distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones, serving as the single point of contact for clients. It is recommended that ALB be integrated with the WAF (Web Application Firewall), serving as an additional layer of security to the back-end targets.\nIntegrating ALB with the WAF helps protect back-end web applications and APIs against common web exploits and bots that may affect availability, compromise security, or consume excessive resources.",
			"files": [
				{
					"file_name": "terraform\\aws\\elb\\alb.tf",
					"similarity_id": "097db44ebfbcc62d582a3b9c4b43104335f0831b168ebd4b713a18bd1ac9b6ff",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_alb[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_alb[fail]' is not 'internal' and has a 'aws_wafregional_web_acl_association' associated",
					"actual_value": "'aws_alb[fail]' is not 'internal' and does not have a 'aws_wafregional_web_acl_association' associated"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "d7eeda8de658815f74e562f6626f1ab40c9dabaf6591bc3cf6a263d322f08922",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_alb[disabled]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_alb[disabled]' is not 'internal' and has a 'aws_wafregional_web_acl_association' associated",
					"actual_value": "'aws_alb[disabled]' is not 'internal' and does not have a 'aws_wafregional_web_acl_association' associated"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "8401bbe5977462093d56ab273f73791039d85f5a6523a0dd9abd6b112516d40a",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_lb[default]' is not 'internal' and has a 'aws_wafregional_web_acl_association' associated",
					"actual_value": "'aws_lb[default]' is not 'internal' and does not have a 'aws_wafregional_web_acl_association' associated"
				},
				{
					"file_name": "terraform\\aws\\lb\\redirect.tf",
					"similarity_id": "2dd8f02b819cafbde56cfa469dea50cc1aa9a834b817d4e4657a1d7bf1ed0a01",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[lb_bad_1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_lb[lb_bad_1]' is not 'internal' and has a 'aws_wafregional_web_acl_association' associated",
					"actual_value": "'aws_lb[lb_bad_1]' is not 'internal' and does not have a 'aws_wafregional_web_acl_association' associated"
				}
			]
		},
		{
			"query_name": "ALB Not Dropping Invalid Headers",
			"query_id": "6e3fd2ed-5c83-4c68-9679-7700d224d379",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "It's considered a best practice when using Application Load Balancers to drop invalid header fields",
			"description_id": "7560e4d2",
			"files": [
				{
					"file_name": "terraform\\aws\\elb\\alb.tf",
					"similarity_id": "49b1e5a65f3db7d69024828c4ad319a8a319232b6dcf9604a467a44d1d61cf6c",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "aws_alb[{{fail}}].drop_invalid_header_fields",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_alb[{{fail}}].drop_invalid_header_fields is set to true",
					"actual_value": "aws_alb[{{fail}}].drop_invalid_header_fields is set to false"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_groups_not_used.tf",
					"similarity_id": "4ec8311ebd906d03e0d5e2bee1740d243492b48a495bc0d437be4d2bc352385e",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[{{test}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lb[{{test}}].drop_invalid_header_fields is set to true",
					"actual_value": "aws_lb[{{test}}].drop_invalid_header_fields is missing"
				},
				{
					"file_name": "terraform\\aws\\lb\\redirect.tf",
					"similarity_id": "30915b35711673dca1a29be10f20b1585e9732057961e36a9af24bb772397402",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[{{lb_bad_1}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lb[{{lb_bad_1}}].drop_invalid_header_fields is set to true",
					"actual_value": "aws_lb[{{lb_bad_1}}].drop_invalid_header_fields is missing"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "0a944adeab01aef1d3a7a665394f7137af8408ca146803462e3054840cc1c45a",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_alb[{{disabled}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_alb[{{disabled}}].drop_invalid_header_fields is set to true",
					"actual_value": "aws_alb[{{disabled}}].drop_invalid_header_fields is missing"
				}
			]
		},
		{
			"query_name": "API Gateway Deployment Without Access Log Setting",
			"query_id": "625abc0e-f980-4ac9-a775-f7519ee34296",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_deployment",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "API Gateway Deployment should have access log setting defined when connected to an API Gateway Stage.",
			"description_id": "e28c5797",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "dadf02223df7d8396dcce1114f7a4fdac3438a5cfc255485ce85b06d0832c027",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_deployment[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_deployment[fail] has a 'aws_api_gateway_stage' resource associated with 'access_log_settings' set",
					"actual_value": "aws_api_gateway_deployment[fail] doesn't have a 'aws_api_gateway_stage' resource associated with 'access_log_settings' set"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "5fa8edfdad3ff94110c98a0627d3e36ed480b273369217a0fcb586198452473a",
					"line": 31,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_deployment[api_gw_deploy]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_deployment[api_gw_deploy] has a 'aws_api_gateway_stage' resource associated with 'access_log_settings' set",
					"actual_value": "aws_api_gateway_deployment[api_gw_deploy] doesn't have a 'aws_api_gateway_stage' resource associated with 'access_log_settings' set"
				}
			]
		},
		{
			"query_name": "API Gateway Method Does Not Contains An API Key",
			"query_id": "671211c5-5d2a-4e97-8867-30fc28b02216",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "An API Key should be required on a method request.",
			"description_id": "f133fed2",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "ff7e2c3b8700ca9b20fb67260658d2ee81a586303eea897c24b246a89b0090cb",
					"line": 43,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_api_gateway_method[api_gw_method]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_api_gateway_method[api_gw_method].api_key_required is defined",
					"actual_value": "resource.aws_api_gateway_method[api_gw_method].api_key_required is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-method\\api_gateway_method.tf",
					"similarity_id": "c133208daaaa957dbb4d229ac35e9eebe99baa3ebe8de08d1f1035d4c9125443",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_api_gateway_method[fail_open]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_api_gateway_method[fail_open].api_key_required is defined",
					"actual_value": "resource.aws_api_gateway_method[fail_open].api_key_required is undefined"
				}
			]
		},
		{
			"query_name": "API Gateway With CloudWatch Logging Disabled",
			"query_id": "982aa526-6970-4c59-8b9b-2ce7e019fe36",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS CloudWatch Logs for APIs is not enabled",
			"description_id": "48b9d186",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "28d199ea539c724ec87dcbcede04d735399f9fa6d45ff6cfb438c2b5f8512acf",
					"line": 65,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[api_gw_stage]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_cloudwatch_log_group' is set",
					"actual_value": "'aws_cloudwatch_log_group' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "16c28d3ada53f08c9937a200c0481dce261fd07ae2f7172975d42063fe2b28bd",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_cloudwatch_log_group' is set",
					"actual_value": "'aws_cloudwatch_log_group' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "6a03ffd1db5b72962afd2f89d70ed42c476029a8329a951aab80d3a5e53f8b74",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_cloudwatch_log_group' is set",
					"actual_value": "'aws_cloudwatch_log_group' is undefined"
				}
			]
		},
		{
			"query_name": "API Gateway With Open Access",
			"query_id": "15ccec05-5476-4890-ad19-53991eba1db8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "API Gateway Method should restrict the authorization type, except for the HTTP OPTIONS method.",
			"description_id": "1a1dc17c",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-method\\api_gateway_method.tf",
					"similarity_id": "888ecb44e80f6ea02befe0aa0baa143d407e266e10439618d02b4cde4202a64b",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_method[fail_open].http_method",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_method.authorization is only 'NONE' if http_method is 'OPTIONS'",
					"actual_value": "aws_api_gateway_method[fail_open].authorization type is 'NONE' and http_method is not ''OPTIONS'"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "479e8e9cb396672640a6a6596577f2d23f1b94593f3fb186fe010432668dca52",
					"line": 46,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_method[api_gw_method].http_method",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_method.authorization is only 'NONE' if http_method is 'OPTIONS'",
					"actual_value": "aws_api_gateway_method[api_gw_method].authorization type is 'NONE' and http_method is not ''OPTIONS'"
				}
			]
		},
		{
			"query_name": "API Gateway Without Content Encoding",
			"query_id": "ed35928e-195c-4405-a252-98ccb664ab7b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Enable Content Encoding through the attribute 'minimum_compression_size'. This value should be greater than -1 and smaller than 10485760",
			"description_id": "fc02b8db",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api\\api_gateway_rest_api.tf",
					"similarity_id": "53157221444281f14e8ba3ea88b2002e7ffcfa1a5fffd245afcc1debd833817d",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_rest_api[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'minimum_compression_size' is set, greater than -1 and smaller than 10485760",
					"actual_value": "Attribute 'minimum_compression_size' is undefined"
				}
			]
		},
		{
			"query_name": "API Gateway Without SSL Certificate",
			"query_id": "0b4869fc-a842-4597-aa00-1294df425440",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#client_certificate_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "SSL Client Certificate should be enabled in aws_api_gateway_stage resource",
			"description_id": "6d4941dc",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "b9dc5dbbacc763b947af3f4c6c37f9a7d74fc1518c8a71f8b9390f7be96ea2b3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'client_certificate_id' is set",
					"actual_value": "Attribute 'client_certificate_id' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "a1d8ce1a0350e82a10534bebbc13b4f20819d6bbbef09c92eacf3df74bff2143",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'client_certificate_id' is set",
					"actual_value": "Attribute 'client_certificate_id' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "28da5d04aac0ab1b87c50a2b133d0e1623483e1a183a973518bcfa6b1370ce47",
					"line": 65,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[api_gw_stage]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'client_certificate_id' is set",
					"actual_value": "Attribute 'client_certificate_id' is undefined"
				}
			]
		},
		{
			"query_name": "API Gateway X-Ray Disabled",
			"query_id": "5813ef56-fa94-406a-b35d-977d4a56ff2b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "X-ray Tracing is not enabled",
			"description_id": "21e236a0",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "8ec7a12ad6e4a04e48c495a4be6fec04bbbd03f260a8bd00b10739052b4c7ecb",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail].xray_tracing_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_api_gateway_stage[fail].xray_tracing_enabled' is set",
					"actual_value": "'aws_api_gateway_stage[fail].xray_tracing_enabled' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "6412c6017b6d604ddf1bba03af78de8f3bde5fbea117ce7ee2f273f4192f5005",
					"line": 65,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[api_gw_stage].xray_tracing_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_api_gateway_stage[api_gw_stage].xray_tracing_enabled' is set",
					"actual_value": "'aws_api_gateway_stage[api_gw_stage].xray_tracing_enabled' is undefined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "97ca5034dbf4a469a6634d57efc552d47e45254bd05b76f14ca9710056e32c09",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail].xray_tracing_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_api_gateway_stage[fail].xray_tracing_enabled' is set",
					"actual_value": "'aws_api_gateway_stage[fail].xray_tracing_enabled' is undefined"
				}
			]
		},
		{
			"query_name": "API Gateway without WAF",
			"query_id": "a186e82c-1078-4a7b-85d8-579561fde884",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/wafregional_web_acl_association#resource_arn",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "API Gateway should have WAF (Web Application Firewall) enabled",
			"description_id": "bfefa118",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "42df7f75a715ab20951c1306a65ba76621fadbf90c55e1a6f788428ad4461e53",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "API Gateway Stage is associated with a Web Application Firewall",
					"actual_value": "API Gateway Stage is not associated with a Web Application Firewall"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "e4982a16cd08bc4b48ea907f61920a6850accee5c1f5a71d04d8e66027f6b63f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "API Gateway Stage is associated with a Web Application Firewall",
					"actual_value": "API Gateway Stage is not associated with a Web Application Firewall"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "7b8eb9d502a4b98025712bce397bc3b2b1c6283116857f2f84f8de7ba8ac2455",
					"line": 65,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[api_gw_stage]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "API Gateway Stage is associated with a Web Application Firewall",
					"actual_value": "API Gateway Stage is not associated with a Web Application Firewall"
				}
			]
		},
		{
			"query_name": "AWS Password Policy With Unchangeable Passwords",
			"query_id": "9ef7d25d-9764-4224-9968-fa321c56ef76",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Unchangeable passwords in AWS password policy",
			"description_id": "8163d3cf",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
					"similarity_id": "873a40f0fc87aeaeb5ff4b9aa4c0c3219f2f7af8bae0ea06b5df703182b02ff4",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_account_password_policy[positive2].allow_users_to_change_password",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'allow_users_to_change_password' is equal 'true'",
					"actual_value": "'allow_users_to_change_password' is equal 'false'"
				}
			]
		},
		{
			"query_name": "AmazonMQ Broker Encryption Disabled",
			"query_id": "3db3f534-e3a3-487f-88c7-0a9fbf64b702",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AmazonMQ Broker should have Encryption Options defined",
			"description_id": "81fb6220",
			"files": [
				{
					"file_name": "terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
					"similarity_id": "ba0fa71fbd85f37fd5eb560a4ccf4caa0183f74cd09a2a64ee4cd19840eb44f0",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_mq_broker[pass]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_mq_broker[pass].encryption_options is defined",
					"actual_value": "resource.aws_mq_broker[pass].encryption_options is not defined"
				}
			]
		},
		{
			"query_name": "Api Gateway Access Logging Disabled",
			"query_id": "1b6799eb-4a7a-4b04-9001-8cceb9999326",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#access_log_settings",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "RDS does not have any kind of logger",
			"description_id": "e03531bf",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\apigatewayv2_stage.tf",
					"similarity_id": "56c2c4cdd928a22e210822ef3ced25b8849cd695382a1cc520faf613b5ebe3fd",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_apigatewayv2_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'access_log_settings' is defined",
					"actual_value": "'access_log_settings' is not defined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "ec0400121840eee36151753d36afb27b7d5b95222ecc56fe2b066b2c03d1db95",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'access_log_settings' is defined",
					"actual_value": "'access_log_settings' is not defined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "33e4219c8b1e12dc29bc3d540f37072848531c8cb370cb23aaf90c12a6c06d54",
					"line": 65,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[api_gw_stage]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'access_log_settings' is defined",
					"actual_value": "'access_log_settings' is not defined"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "796ef3f44e8c88350795fc1740d6a523e33f69dc9d2ee1613d47db855afd8a26",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'access_log_settings' is defined",
					"actual_value": "'access_log_settings' is not defined"
				}
			]
		},
		{
			"query_name": "Auto Scaling Group With No Associated ELB",
			"query_id": "8e94dced-9bcc-4203-8eb7-7e41202b2505",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/autoscaling_group#load_balancers",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "AWS Auto Scaling Groups must have associated ELBs to ensure high availability and improve application performance. This means the attribute 'load_balancers' must be defined and not empty.",
			"description_id": "268307dd",
			"files": [
				{
					"file_name": "terraform\\aws\\autoscaling\\autoscaling.tf",
					"similarity_id": "b19a8f9cfe0bb1ea910fd3d786ae11f9ff29c172ffce9d1583aaafa0cd2fe9b7",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_autoscaling_group[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_autoscaling_group[fail].load_balancers is set and not empty",
					"actual_value": "aws_autoscaling_group[fail].load_balancers is undefined"
				},
				{
					"file_name": "terraform\\aws\\autoscaling\\autoscaling_without_lb.tf",
					"similarity_id": "fc20d86a5e8878b0cb3ff4cac45ea8f0e788cdd722c1534374e3e99b52bed4ef",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_autoscaling_group[bar]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_autoscaling_group[bar].load_balancers is set and not empty",
					"actual_value": "aws_autoscaling_group[bar].load_balancers is undefined"
				},
				{
					"file_name": "terraform\\aws\\autoscaling\\ELB.tf",
					"similarity_id": "405dbf0058b40a32af389d24da37bdc5a2b9828369f4a5af7d9c5b8bf8045ead",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_autoscaling_group[autoscalling_bad]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_autoscaling_group[autoscalling_bad].load_balancers is set and not empty",
					"actual_value": "aws_autoscaling_group[autoscalling_bad].load_balancers is undefined"
				}
			]
		},
		{
			"query_name": "Azure Cognitive Search Public Network Access Enabled",
			"query_id": "4a9e0f00-0765-4f72-a0d4-d31110b78279",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/search_service#public_network_access_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Public Network Access should be disabled for Azure Cognitive Search",
			"description_id": "d4766039",
			"files": [
				{
					"file_name": "terraform\\azurerm\\search\\azure_cognitive_search.tf",
					"similarity_id": "05d5e7b65ef890be2af056d7dc28b1c638eb330cd4ef32d3fced9a2f2a27d3cb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_search_service[positive1].public_network_access_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_search_service[positive1].public_network_access_enabled' is set to false",
					"actual_value": "'azurerm_search_service[positive1].public_network_access_enabled' is set to true"
				}
			]
		},
		{
			"query_name": "CMK Is Unusable",
			"query_id": "7350fa23-dcf7-4938-916d-6a60b0c73b50",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#is_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "AWS Key Management Service (KMS) must only possess usable Customer Master Keys (CMK), which means the CMKs must have the attribute 'is_enabled' set to true",
			"description_id": "261d4fc3",
			"files": [
				{
					"file_name": "terraform\\aws\\kms\\kms_key_is_disabled.tf",
					"similarity_id": "94db392a3beabd386b33083ad4f99723ba43ce5d81911fb9a08009cc75c8bd92",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_kms_key[fail].is_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_kms_key[fail].is_enabled is set to true",
					"actual_value": "aws_kms_key[fail].is_enabled is set to false"
				}
			]
		},
		{
			"query_name": "CPU Limits Not Set",
			"query_id": "5f4735ce-b9ba-4d95-a089-a37a767b716f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#limits",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests",
			"description_id": "9dd8e356",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ca6b175778a9ae0071bccb4fced126106894a00fcf48868aa50b5a13190b5a0d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "ef3ff1f7b0fdcff355c4adf01e34ad68a63eedf6caa7f4f4a13808ac6eed0e2a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "c9f21909eaf1040af5d2359fb68bd2a489d06be1a7be85ff4b669f9b77ede079",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "cdda897915cf13c65b3c90aa0ec0ed9feed51af33b2008f84e5f8b3c23df8229",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "4ca73000b8346aac0431be9421e361ac402e8f85284e50cc39f1eea114b03265",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "49c0fbc29f9dbd6f35e0f13a60103e8873610cbf467dc2ee075aac9bdbcdbfea",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "01f97dea6416cc7b54073f37430e6852ecda147156acf0668d54465bb488496a",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "3a97a138629bba4f9f75e4751c69847093389a8239ed2eb4c490e554b40feb7d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "d5388676fe0692b78c9b4047e83daf2d1d3f08b3baf57054db4046074df37e05",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "fdf36f73f3cb41a7bea2e4c956a37ba23d345e484afc3f346e2677048f9bb2ce",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "ca57bacd26375edb186864fb9816979a5866a3f8d421e37dd0f6662920f05a09",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "1be1cff4caf67aaf724051632de884e86db6422428d57be63633453d55adb064",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "ba8a9521fa3f880aa077bef87dda341b1c826d40e759937d735a355c32742e06",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "ba8a9521fa3f880aa077bef87dda341b1c826d40e759937d735a355c32742e06",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "811f7158868e416e0c326eb5231b46153e85e7b7a3395d9c1bcc8b3a3afa1a1a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "c954f3e633cc438ebca7f8906265abdfe36e0b2772ecf1625dae3af6734da690",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "deb8269842372254e0f0d81539fd7a8a54106d497d67caf490b68019a4ec79f9",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[example1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "87826b0571eccad965f3976dba9615dd10f4716be14ca0ac61ac1ec63ea5cff9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "c2804631459c30ea652c39bf2978547645e162cfcf28f8d1be87f1af1571bc9c",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "1b97dd7f83cf10430ef998a214327c826643baec6dd21ee1672c152f513dfe97",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "ead85e7228a32ba2f3e46c8ebc19836c789140cfaac1d1d7dd322d85dd163284",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "db2b7fe44d96df463881e3f503cc9610c4e2e4dbdb61e282a9fe6e149b7b2390",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "17fd35e8b35083f933e05862b33cc8e4d6f4ab10da33b0afd1dd9485acbd586a",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "ee4a57a17c38a385d567505da0bf38f3b40a15db2f472d42163dc1ac15cc9b7e",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "1b97dd7f83cf10430ef998a214327c826643baec6dd21ee1672c152f513dfe97",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "b79aa7fb1facb80b47b89f23c163d03d2da0a493d733de5d055c42654d7ebddf",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "1be1cff4caf67aaf724051632de884e86db6422428d57be63633453d55adb064",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "e9bde5f48ae2e5e07583bc44abb79f48ff38f221dcedc95f72bdcba598ca372d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "811f7158868e416e0c326eb5231b46153e85e7b7a3395d9c1bcc8b3a3afa1a1a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "9961bcf45ca0c45d520a7ba7b09bc4abe258823e49b821d724bb026e877f0306",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[name1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "a03fce31c56582ab25dc1e42b9ddede80c76f66201dcdc5e05b71161299604c9",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test6].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "3be31834ef08314335cb1d62320a5338dd8cac185231c755f0c01159605951a7",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "0dd81126017c460e52e36b03577b55ccf5872ee062efeb5eb22670307dded8d4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "ea4e55c7625178958fc37ed53e59990b2e6d2435cf7cfcc762b28d8852d596f3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "617026dfc2b1973bcd0bd065fff8315551f2b58ce293cbce6f7b3faf803c47ef",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "eada0b9da2eed93c29904dac18edd67251138d521eb0eada70e9a2137541576f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "617026dfc2b1973bcd0bd065fff8315551f2b58ce293cbce6f7b3faf803c47ef",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "811f7158868e416e0c326eb5231b46153e85e7b7a3395d9c1bcc8b3a3afa1a1a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "c9f21909eaf1040af5d2359fb68bd2a489d06be1a7be85ff4b669f9b77ede079",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "3a97a138629bba4f9f75e4751c69847093389a8239ed2eb4c490e554b40feb7d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "336d7098cf92ee3d69af177b16da700c33e48bff36c79ec5d6ad020071be2e91",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "686cf9e34305c47f15cde2aebc26ddc6e9dcdd262586d522b034ab734ffa293b",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "ead85e7228a32ba2f3e46c8ebc19836c789140cfaac1d1d7dd322d85dd163284",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "ebfc83cbe109d065dd3209e0f55b69e45ad732cba0f96eed99c269bcd0067c11",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.resources is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "eada0b9da2eed93c29904dac18edd67251138d521eb0eada70e9a2137541576f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "4c83c204d0f2f44f3a02447a9d965061282e2ba1d668a6c4c3525a31ed0b7dfd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ca6b175778a9ae0071bccb4fced126106894a00fcf48868aa50b5a13190b5a0d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "be7ef6586fe81de2472b4027e767e5b1e9e2d85f69129345fc33e4f1e86ec81e",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.resources is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "4c83c204d0f2f44f3a02447a9d965061282e2ba1d668a6c4c3525a31ed0b7dfd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "fdf36f73f3cb41a7bea2e4c956a37ba23d345e484afc3f346e2677048f9bb2ce",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "06ca47086ddcb175e711cf27a365145bf5837447ee3c2cea9558cd11c7cb4bdd",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "cad67186724c4022257c3c8bb2eea659decd77c89b31dea0a0b130297a6a4fcf",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "ea4e55c7625178958fc37ed53e59990b2e6d2435cf7cfcc762b28d8852d596f3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "3ed5027e88da4f269fdd64be34cce76a6896f8d00ce5555ffdcbc01ef575dd5f",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.resources is undefined"
				}
			]
		},
		{
			"query_name": "CPU Requests Not Set",
			"query_id": "577ac19c-6a77-46d7-9f14-e049cdd15ec2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#requests",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "CPU requests should be set to ensure the sum of the resource requests of the scheduled Containers is less than the capacity of the node",
			"description_id": "957f09a7",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "9e2083ec52a0ae638083c209c5c9efe995e9338abb984d27628eab4443f1e1bb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "453baf93dca30aa43a4c8d82447ba966db258790f9fae97beb35611cc4393af3",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "4ddcb125b039dae0dcccf2e5bd12c66b17b982fc51d0b447e594acb664377980",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "3a596f773cec5787a1c8ab0b7e3b189238341be1cfcb4308a0af5679cec1b758",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "bca78778432e0203b2eb14db5246c3f3d9af06ef7ba03f022ae03d59565646ae",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "3400334cbb5487917fe1acfb47699c7c1a992f89d5991db7d6a494b6aa3abe9f",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[example1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "4b56f40fffd739c83e7ecea6d66c6fe9fa1e6e0fef3704c1d70aa94baefc2148",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "490f90e686d10817a857438815ded4aca566c02e526325d6283557076368c5a9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "99d0993cf79833b11f05e4b677019719fb5e46ea92557e729b68fef9b78e49dd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "8805d15a18eae8c7cc363aac18778e40625f4e48bc042cf0c3d610aed9a75e7e",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "22405708d5bd880448c429d56b49df4c1e13819d72d1eca13967436b9731ab25",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "8805d15a18eae8c7cc363aac18778e40625f4e48bc042cf0c3d610aed9a75e7e",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "b489d4c2665ca8074b7d7cf5f3c69a8d5489e91bcee8bdd6d436642938161680",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "d71f35689210a221a0c1181fdb148bb3cb15fc89a08bcc1c843ce021d06eeef1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "3a596f773cec5787a1c8ab0b7e3b189238341be1cfcb4308a0af5679cec1b758",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "4b56f40fffd739c83e7ecea6d66c6fe9fa1e6e0fef3704c1d70aa94baefc2148",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "5a6afc0ff4156de8da3d8bfdfcbf182d05466911bf73a581c03c07b5d3f6eb6b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "fe234f04b6f02a51aac9d8d0cf0bd1e76958cd98d39f9a7f1ba57c942da62191",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "d3fb97e80ce7d3b870681f31e8306b6f5daf621173dcd5dc873b7db8792a98ed",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.resources is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "9e2083ec52a0ae638083c209c5c9efe995e9338abb984d27628eab4443f1e1bb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "99d0993cf79833b11f05e4b677019719fb5e46ea92557e729b68fef9b78e49dd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "b7db1c8ef5f2d0b7a86c270f4775d3a0b316296b420d8ea79a4a961ed6ee7a9b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "d3f2003554330ded17062ea29eceb60fb3fbf222bd51ac7f62dca0aa0c49f4f1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "e75e3255e9ef28974281963c1de9ea179774b2b31d72afac2f369498c0a85614",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "f85d96ce8f6f3f17fbed886e38eac2d9774ab7de468ed8c948afeda4f9547f5b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "579eaa71c28a13e6cced9302d05e4fbf998990fd9fc9dfad298a4ade544b12d0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "40fc8d457c1f67cb6e19129feeb89172d22329ecd3a2afa2bbfddb9c8c69ab2b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "22405708d5bd880448c429d56b49df4c1e13819d72d1eca13967436b9731ab25",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "f684ada6516ad639ebd248c17ca721c059bbd8e33f0b31ffb1fb876be060b25d",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "4b56f40fffd739c83e7ecea6d66c6fe9fa1e6e0fef3704c1d70aa94baefc2148",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "e6e3b338ccf30d36a29b73e70fb913415a4fadfb295a43a79624f895505db35a",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "543b43f3e3e709207478bc511ee68f2ff7afe671eebbbee7401c9c9d0ad8d1c9",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.resources is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "fe234f04b6f02a51aac9d8d0cf0bd1e76958cd98d39f9a7f1ba57c942da62191",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "f4663f1405767343a65011d9b0f0a8ee3b91654037fff3be9e1863809a749a68",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "bdf0d4ae3e70d5f508d0a794f34a59a1b26f65af57ca5b55c7137ba98aaebe09",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test6].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "ce3f267c9a022089aa858d3d60d15e97dac1e53fe58b896cbef0080465aa2e3a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "3397cb3567db91f62a95b8d44baf83876d2dcf8a9a5d73a51c36f512a8cedf6e",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "cfa09b426fe3c0886b729c6cfc688e05315ae5d1e69aa45cde61a861510aaf03",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "56344465a3d7b0aea56e082d569676239bea4f94165a5d8896254ea68137f47a",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[name1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "f85d96ce8f6f3f17fbed886e38eac2d9774ab7de468ed8c948afeda4f9547f5b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"memory\": \"50Mi\"})].resources.requests.cpu is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "b106e60da14876c3d962ff58423460e5c84407e922bf829ef08e768f9538a910",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "579eaa71c28a13e6cced9302d05e4fbf998990fd9fc9dfad298a4ade544b12d0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "f24acf605a892629ea41c49296fb0d9fb41238291dd97409b41bc58df535fa71",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "e75e3255e9ef28974281963c1de9ea179774b2b31d72afac2f369498c0a85614",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "2f5a43e2c204b4cf8ad1e1147fec26feb73d9014d5e5505aa2bff0ed16579a41",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "168651035a57b1965e8a21ff12e2e768e18cdf814a5af23541dd712a3e15b545",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "954c6045102d68acf8b99e529883c9e7e6e6a0639c258f25cb52b73846b651a3",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "322515bf65cb6d0a74c0b0aa2961499224e6f12e39a15b70d00fa176f3b1d28e",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "8ff76fb4600ddbd0c56c1aa498d4beeaba600c32d44643aa072a19577f4623c5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "b106e60da14876c3d962ff58423460e5c84407e922bf829ef08e768f9538a910",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "dca36aaa70a5037cd8a82951a1037c2f11651ede20df83b42dfc2819fd35cd5b",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "4926f761a4ff62df7f8bf1c25f9fe97a3f58b19d0e846a56107d2654f71cee83",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				}
			]
		},
		{
			"query_name": "Certificate Has Expired",
			"query_id": "c3831315-5ae6-4fa8-b458-3d4d5ab7a3f6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Expired SSL/TLS certificates should be removed",
			"description_id": "998f52fe",
			"files": [
				{
					"file_name": "terraform\\aws\\cert\\certhasexpired.tf",
					"similarity_id": "63e714594bdc034472eedd37b77f36cbb894584c1bd92007032c65253ff7bee2",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_domain_name[fail].certificate_body",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[fail].certificate_body does not have expired",
					"actual_value": "aws_api_gateway_domain_name[fail].certificate_body has expired"
				},
				{
					"file_name": "terraform\\aws\\cert\\certificate_rsa_key_bytes_lower_than_256.tf",
					"similarity_id": "2c8c7853c6b2b20ba375c61d785cc6b274efef0ddda075a3f487efb96f5236d3",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_domain_name[example].certificate_body",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[example].certificate_body does not have expired",
					"actual_value": "aws_api_gateway_domain_name[example].certificate_body has expired"
				}
			]
		},
		{
			"query_name": "Certificate RSA Key Bytes Lower Than 256",
			"query_id": "874d68a3-bfbe-4a4b-aaa0-9e74d7da634b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "The certificate should use a RSA key with a length equal to or higher than 256 bytes",
			"description_id": "ec305dde",
			"files": [
				{
					"file_name": "terraform\\aws\\cert\\certificate_rsa_key_bytes_lower_than_256.tf",
					"similarity_id": "6ade423936a5e26d2d1f90cd733c4435af1469281e1cd94489bd21e33335effd",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_domain_name[example].certificate_body",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[example].certificate_body uses a RSA key with a length equal to or higher than 256 bytes",
					"actual_value": "aws_api_gateway_domain_name[example].certificate_body does not use a RSA key with a length equal to or higher than 256 bytes"
				},
				{
					"file_name": "terraform\\aws\\cert\\certhasexpired.tf",
					"similarity_id": "52a9f682cc8ef7929aca90b3423e50e412348b7a6118dc73675301826a1939af",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_domain_name[fail].certificate_body",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_domain_name[fail].certificate_body uses a RSA key with a length equal to or higher than 256 bytes",
					"actual_value": "aws_api_gateway_domain_name[fail].certificate_body does not use a RSA key with a length equal to or higher than 256 bytes"
				}
			]
		},
		{
			"query_name": "Cloud DNS without DNSSEC",
			"query_id": "5ef61c88-bbb4-4725-b1df-55d23c9676bb",
			"query_url": "https://www.terraform.io/docs/providers/google/d/dns_managed_zone.html",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Cloud DNS without DNSSEC",
			"description_id": "5598ed06",
			"files": [
				{
					"file_name": "terraform\\google\\dns\\dns_managed_zone.tf",
					"similarity_id": "ab81a39d8d2abb83156af0dbd927be7c8100222b9af07de8197b78f89d5bfd58",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "google_dns_managed_zone[fail].dnssec_config.state",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'dnssec_config.state' is equal to 'on'",
					"actual_value": "'dnssec_config.state' is not equal to 'on'"
				}
			]
		},
		{
			"query_name": "Cloud Storage Anonymous or Publicly Accessible",
			"query_id": "a6cd52a1-3056-4910-96a5-894de9f3f3b3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#google_storage_bucket_iam_binding",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Cloud Storage Buckets must not be anonymously or publicly accessible, which means the attribute 'members' must not possess 'allUsers' or 'allAuthenticatedUsers'",
			"description_id": "fd990360",
			"files": [
				{
					"file_name": "terraform\\google\\storage\\storage_bucket_iam_binding.tf",
					"similarity_id": "855088a031f1bf7ceb6e0c1de78420c3b6d93ac58cc0c4ca8f84c791a87a62bc",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "google_storage_bucket_iam_binding[binding].members",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_storage_bucket_iam_binding[binding].members' does not have 'allAuthenticatedUsers'",
					"actual_value": "'google_storage_bucket_iam_binding[binding].members' has 'allAuthenticatedUsers'"
				}
			]
		},
		{
			"query_name": "CloudTrail Multi Region Disabled",
			"query_id": "8173d5eb-96b5-4aa6-a71b-ecfa153c123d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "CloudTrail should have 'is_multi_region_trail' and 'include_global_service_events' enabled",
			"description_id": "feb82a62",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.1",
			"cis_description_title": "Ensure CloudTrail is enabled in all regions",
			"cis_description_text": "AWS CloudTrail is a web service that records AWS API calls for your account and delivers log files to you. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service. CloudTrail provides a history of AWS API calls for an account, including API calls made via the Management Console, SDKs, command line tools, and higher-level AWS services (such as CloudFormation).\nThe AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Additionally, ensuring that a multi-regions trail exists will ensure that unexpected activity occurring in otherwise unused regions is detected ensuring that a multi-regions trail exists will ensure that Global Service Logging is enabled for a trail by default to capture recording of events generated onAWS global services for a multi-regions trail, ensuring that management events configured for all type of Read/Writes ensures recording of management operations that are performed on all resources in an AWS account ",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "157348de1cd5e53053e763b4d1b5224bc616ead82774c37b53cc96e523952b0f",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "aws_cloudtrail[fail].is_multi_region_trail",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudtrail[fail].is_multi_region_trail is set to true",
					"actual_value": "aws_cloudtrail[fail].is_multi_region_trail is set to false"
				}
			]
		},
		{
			"query_name": "CloudTrail Not Integrated With CloudWatch",
			"query_id": "17b30f8f-8dfb-4597-adf6-57600b6cf25e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "CloudTrail should be integrated with CloudWatch",
			"description_id": "11653439",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "ec38534f1e4009d225627fe74e991d03c65abe86d99dd524c8b03326a068bec2",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudtrail[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudtrail[fail].cloud_watch_logs_group_arn is defined and not null",
					"actual_value": "aws_cloudtrail[fail].cloud_watch_logs_group_arn is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "ec38534f1e4009d225627fe74e991d03c65abe86d99dd524c8b03326a068bec2",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudtrail[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudtrail[fail].cloud_watch_logs_role_arn is defined and not null",
					"actual_value": "aws_cloudtrail[fail].cloud_watch_logs_role_arn is undefined or null"
				}
			]
		},
		{
			"query_name": "CloudTrail SNS Topic Name Undefined",
			"query_id": "482b7d26-0bdb-4b5f-bf6f-545826c0a3dd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Check if SNS topic name is set for CloudTrail",
			"description_id": "a9eb3c6c",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "d5c24554d0ae3681411eae1aa4003546dd3cebb7c1f6b950cd80b2083d873f9d",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudtrail[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_cloudtrail[fail].sns_topic_name' is set and is not null",
					"actual_value": "'aws_cloudtrail[fail].sns_topic_name' is undefined or null"
				}
			]
		},
		{
			"query_name": "CloudWatch Logging Disabled",
			"query_id": "7dbba512-e244-42dc-98bb-422339827967",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route53_query_log",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Check if CloudWatch logging is disabled for Route53 hosted zones",
			"description_id": "b4a8c275",
			"files": [
				{
					"file_name": "terraform\\aws\\shield\\todo.tf",
					"similarity_id": "5b35bf544ef0220f22015d854ff4f0524ac1312b197af7580fd80e581d19fb8f",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_route53_zone[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_route53_query_log' is set for respective 'aws_route53_zone'",
					"actual_value": "'aws_route53_query_log' is undefined"
				},
				{
					"file_name": "terraform\\aws\\route53\\cloudwatch_logging_disabled.tf",
					"similarity_id": "5353e9ca42e0bcad636b03eee8c4a23bb143d557bb60cac70d80d4b449590ff3",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_route53_zone[no_query_log]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_route53_query_log' is set for respective 'aws_route53_zone'",
					"actual_value": "'aws_route53_query_log' is undefined"
				},
				{
					"file_name": "terraform\\aws\\route53\\cloudwatch_logging_disabled.tf",
					"similarity_id": "6848ad3ca2a1f16feaf21ec65603e41ea06bbaeebe504f770ebf40b08fd6ff39",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "aws_route53_query_log[log_group_mismatch].cloudwatch_log_group_arn",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_route53_query_log' log group refers to the query log",
					"actual_value": "'aws_route53_query_log' log group does not match with the log name"
				}
			]
		},
		{
			"query_name": "CloudWatch Logs Destination With Vulnerable Policy",
			"query_id": "db0ec4c4-852c-46a2-b4f3-7ec13cdb12a8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_destination_policy#access_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "CloudWatch Logs destination policy should avoid wildcard in 'principals' and 'actions'",
			"description_id": "0f0cc4cf",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudwatch\\cloudwatch_logs_destination_with_vulnerable_policy.tf",
					"similarity_id": "a4de8012f97fe35c65ef70f00878a50642da31b11fc4b6afa0b3c278d0278ea0",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "aws_cloudwatch_log_destination_policy[test_destination_policy].access_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudwatch_log_destination_policy[test_destination_policy].access_policy does not have wildcard in 'principals' and 'actions'",
					"actual_value": "aws_cloudwatch_log_destination_policy[test_destination_policy].access_policy has wildcard in 'principals' or 'actions'"
				}
			]
		},
		{
			"query_name": "CloudWatch Metrics Disabled",
			"query_id": "081069cb-588b-4ce1-884c-2a1ce3029fe5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#metrics_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Checks if CloudWatch Metrics is Enabled",
			"description_id": "f7414ebe",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "4e61ad68b6604777fde0c2fe9483523a58b6fa8f125eedb814084ca76be6302f",
					"line": 77,
					"issue_type": "MissingAttribute",
					"search_key": "aws_api_gateway_method_settings[api_gw_method_sett].settings",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_method_settings[api_gw_method_sett].settings.metrics_enabled is defined and not null",
					"actual_value": "aws_api_gateway_method_settings[api_gw_method_sett].settings.metrics_enabled is undefined or null"
				}
			]
		},
		{
			"query_name": "CloudWatch Without Retention Period Specified",
			"query_id": "ef0b316a-211e-42f1-888e-64efe172b755",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS CloudWatch Log groups should have retention days specified",
			"description_id": "64f08509",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudwatch\\cloudwatch.tf",
					"similarity_id": "55d25e9ee3ee5c0d7cc5136a6d9520ccac499f3e8bcbb6ca68b8215ed49782e8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "cloudwatch_log_group[logs]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'retention_in_days' is set and valid",
					"actual_value": "Attribute 'retention_in_days' is undefined"
				}
			]
		},
		{
			"query_name": "Cloudfront Logging Disabled",
			"query_id": "94690d79-b3b0-43de-b656-84ebef5753e5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS Cloudfront distributions must be have logging enabled, which means the attribute 'logging_config' must be defined",
			"description_id": "9cf96455",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "0a3bf3e2abd4fee37acda53d0c619d9712b5c816f52e1034f4f52e18d3db335a",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[fail_defaultcert]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudfront_distribution[fail_defaultcert].logging_config is defined",
					"actual_value": "aws_cloudfront_distribution[fail_defaultcert].logging_config is undefined"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "f8ef753313e25994311a0ddafd095d42a5540a912a351342b4713401f61f61a3",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[s3_distribution]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudfront_distribution[s3_distribution].logging_config is defined",
					"actual_value": "aws_cloudfront_distribution[s3_distribution].logging_config is undefined"
				}
			]
		},
		{
			"query_name": "Cognito UserPool Without MFA",
			"query_id": "ec28bf61-a474-4dbe-b414-6dd3a067d6f0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cognito_user_pool",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "AWS Cognito UserPool should have MFA (Multi-Factor Authentication) defined to users",
			"description_id": "17f77319",
			"files": [
				{
					"file_name": "terraform\\aws\\cognito\\cognito_userpool_without_mfa.tf",
					"similarity_id": "36a25b2691450a25b304a83f84cbf2e3e85201a5a865aeaffc44055f578c5bee",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cognito_user_pool[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cognito_user_pool[fail].mfa_configuration is set",
					"actual_value": "aws_cognito_user_pool[fail].mfa_configuration is undefined"
				}
			]
		},
		{
			"query_name": "Container Host Pid Is True",
			"query_id": "587d5d82-70cf-449b-9817-f60f9bccb88c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_pid",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Minimize the admission of containers wishing to share the host process ID namespace",
			"description_id": "74aa164e",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "7773aa2f045df78f505bbe3f5334a108d7fda4f0ac3c342be4ff073d723afb9f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.host_pid",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_pid' is undefined or false",
					"actual_value": "Attribute 'host_pid' is true"
				}
			]
		},
		{
			"query_name": "Container Resources Limits Undefined",
			"query_id": "60af03ff-a421-45c8-b214-6741035476fa",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes container should have resource limitations defined such as CPU and memory",
			"description_id": "36651cdf",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "374819a8a0d448941b04566c20cd2539660f23cae790b0d7cd2e6b20d8e9efdf",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "e7b589ed849f9ad129adaceea274bb4ec14200fbc8c67b9731191ba0e98fe0d4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "1f7e558e7dbe5afe78b47bb5f2adc40671c6909eec3b4bdd609604edb1e21b48",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "bf3de8fb23aadf4c9d6dd6f3fe4dce9358a70020a7769f219615a048def49c19",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "374819a8a0d448941b04566c20cd2539660f23cae790b0d7cd2e6b20d8e9efdf",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "b27d93c2ed9e94f2d58a435c3ab96544da365c0d8c4f66663f013da90b6435f9",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "910a1a4c303e2ba7472ef0c412f4a1678fbecf9aea16773f9b6cd0622717a1f6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "6306b1a22b970482f1f281e0fcfeab042cb8db64b2d9c00d8fac2257fe0fb911",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[name1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "bf3de8fb23aadf4c9d6dd6f3fe4dce9358a70020a7769f219615a048def49c19",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "d440b2c48056a8bf923a29198a5d53ce107341e4e087c02701273692f7b8c382",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "8fa55edb43972ac6247cddab77babfa3e41786d07db1edc790348431d19721a8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "8fa55edb43972ac6247cddab77babfa3e41786d07db1edc790348431d19721a8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "7f7192023b730006594a3a16ca62703de0dcdd51de4109425cb81351b27a48d9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "3a99998816e4d26ff04a08794e462c1b964bc6289f18a28dc09120466f68895d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "1f5676b3fa88a81e4296148eae6725e46c9dd853fb5f978e0665b42efb3bf8db",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "3b15e8df76b5d7a94cb1c892fc99c59c7a2afd778b2c69c42c8868048456cec2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "d3fa82372dec36c5a795ce872f336ce9b70a9fdcae5daf30009a61b9371c1418",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "1f5676b3fa88a81e4296148eae6725e46c9dd853fb5f978e0665b42efb3bf8db",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "4c5e70c13f5baf2d79d8fee1a68d96e8b24c85a09c8eb6beeb7a716b2171dbad",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "7f7192023b730006594a3a16ca62703de0dcdd51de4109425cb81351b27a48d9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "36221ac0f9de3e6a2721a0da7371f01fae0815656ad71467c1a60ac4514e64eb",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "e5c5344a161fc31b7bdbc5a91cbbf39a17f389425ec8ab63ad1a677779db985c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "4f697523394fd32811903e6d61cf05bcf98d8a141bebf2f68ffc0f4b1c270052",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "a83cbe0a6c2e282f6004c84faa0d48bb3b24c0b3cfeb02ed982e12286e6f6201",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "424b8376b3b5b8afb7887c417b0898ab03bd51af62655f079a38e000050c5543",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "c9945e3a8513c19445eade837af44d2c426943a63c31e0fdc861a9ba960bfbe6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "c9973273b0f9ac5aea7478a8e2b1a185df185b9e66193689a63ff2503af28947",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.resources is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "e9fe4c41022824af5c24639882577557af949fbb287223a0ea0ede383df9d6dc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"memory\": \"50Mi\"}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "3160a5e5a066b177c2359a79f9d6a4d0d36e18399d9a267dead442166da0b8ab",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test6].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "e01271bd8e87563e10c0d082ad20c0fe686c4a35a0dfa11417210cd5f055efdf",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "46787fdb801e35c1d5fe5ba4863609116ec013faed0bf4afb12b7e4f58af9a40",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "bb3a13b8bfa85b5481b88c373cb3ce4b618582582b523c8c93b1e7ac54870e5c",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "e9fe4c41022824af5c24639882577557af949fbb287223a0ea0ede383df9d6dc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "1f5676b3fa88a81e4296148eae6725e46c9dd853fb5f978e0665b42efb3bf8db",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "d512fe41efe405fce8c27fecea519ef7cadd946c762525a4f7d96d83b7942839",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "956f7de68573ae01bb97aadd62f2a2058921388545346a3ea263bc8592b9575d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "c9945e3a8513c19445eade837af44d2c426943a63c31e0fdc861a9ba960bfbe6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "af946d89e632aac1d19fe4399dad13ce58e255e66db9e5bb5e4add326e682998",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "4f697523394fd32811903e6d61cf05bcf98d8a141bebf2f68ffc0f4b1c270052",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "3b5e120c902d95e534c411310c9aecd6a9adf94ba8ae9c444e3039e643079c30",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "fe3edd761ebcbfb974e7cd286a0a602c37a52f5ae1acaee30346cc8d4dde67bc",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.resources is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "e7910ee07ce212253609ca1ee2f994f87749eab0ef787df44176b8f5f72d3547",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "d512fe41efe405fce8c27fecea519ef7cadd946c762525a4f7d96d83b7942839",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "5d4877fd123847bb629775f9b37dbb43557b26f0e55f7872a3d997e98c2ae8e2",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[example1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "0585e08861a3a5d527dc77149530e7d33c90ba5fbb5c8c2ae32bb0c8ac5ae168",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "3b15e8df76b5d7a94cb1c892fc99c59c7a2afd778b2c69c42c8868048456cec2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "3a99998816e4d26ff04a08794e462c1b964bc6289f18a28dc09120466f68895d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "ceb5d1847d446b449cf4a842166e11853340d0f71ac328248240dd656f5855b5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "02acee34a27872845a5988fe97d4b5e65c1a4d7aab0cd15090f082e102a31fce",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "885f2e920cdbe8f2508528677aabdda8d006bccae31cebaa0696f27781bd647a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "e5c5344a161fc31b7bdbc5a91cbbf39a17f389425ec8ab63ad1a677779db985c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "1f7e558e7dbe5afe78b47bb5f2adc40671c6909eec3b4bdd609604edb1e21b48",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "ca39275dc625a776986b8eb434d4361583d5f0d35de025d4bd6709296695c259",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "8275af5b9ff633c562b00adea3e9bb8b9182ec2fa6c587935d24295f70b9a25a",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is undefined"
				}
			]
		},
		{
			"query_name": "Container Runs Unmasked",
			"query_id": "0ad60203-c050-4115-83b6-b94bde92541d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#allowed_proc_mount_types",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if a container has full access (unmasked) to the host’s /proc command, which would allow to retrieve sensitive information and possibly change the kernel parameters in runtime.",
			"description_id": "bbb3aa40",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_runs_unmasked.tf",
					"similarity_id": "a023defa2a8bb2cea83b27ef9d48a69b90b74aaf166529d8e98c96af871a40f0",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allowed_proc_mount_types",
					"search_line": 0,
					"search_value": "",
					"expected_value": "allowed_proc_mount_types contains the value Default",
					"actual_value": "allowed_proc_mount_types contains the value Unmasked"
				}
			]
		},
		{
			"query_name": "Containers With Added Capabilities",
			"query_id": "fe771ff7-ba15-4f8f-ad7a-8aa232b49a28",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#capabilities-1",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Pod should not have extra capabilities allowed",
			"description_id": "4422c052",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "6b30c720d346ee169fd87c127a517d51076af43888fc857cfdf146dc4a128973",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add is undefined",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add is set"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "22abe349833bab1687904f31ff98baeb40e87dc5c439e56f7e3d52a9cd20e9bb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add is undefined",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add is set"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "ec87562c9a5ff9d0874fa5afb9f8f2c34b70f256bb76c7e586f093b2ada5cd3e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[0].security_context.capabilities.add is undefined",
					"actual_value": "kubernetes_pod[test1].spec.container[0].security_context.capabilities.add is set"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "6b30c720d346ee169fd87c127a517d51076af43888fc857cfdf146dc4a128973",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add is undefined",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add is set"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "22abe349833bab1687904f31ff98baeb40e87dc5c439e56f7e3d52a9cd20e9bb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add is undefined",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add is set"
				}
			]
		},
		{
			"query_name": "Containers With Sys Admin Capabilities",
			"query_id": "3f55386d-75cd-4e9a-ac47-167b26c04724",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#capabilities-1",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Containers should not have CAP_SYS_ADMIN Linux capability",
			"description_id": "03622ad2",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "c3815167f82cadcc6e451b2b4d0d69d2f65cc6fd267d14e4f764c9fafe113667",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add does not have 'SYS_ADMIN'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.capabilities.add has 'SYS_ADMIN'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "c3815167f82cadcc6e451b2b4d0d69d2f65cc6fd267d14e4f764c9fafe113667",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add does not have 'SYS_ADMIN'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].security_context.capabilities.add has 'SYS_ADMIN'"
				}
			]
		},
		{
			"query_name": "Cross-Account IAM Assume Role Policy Without ExternalId or MFA",
			"query_id": "09c35abf-5852-4622-ac7a-b987b331232e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role#assume_role_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Cross-Account IAM Assume Role Policy should require external ID or MFA to protect cross-account access",
			"description_id": "18c64b43",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\role\\IAMRoleAllowAssumeFromAccount.tf",
					"similarity_id": "856e65ab10299ec410a676033c26704c151da0fd76a5bde28a908a42b9494f08",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[fail2].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy' requires external ID or MFA",
					"actual_value": "'assume_role_policy' does not require external ID or MFA"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
					"similarity_id": "53e2fd4353b06cc426bd138a831fd6de717cf2c49655521d941bc465263e4570",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[positive1].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy' requires external ID or MFA",
					"actual_value": "'assume_role_policy' does not require external ID or MFA"
				},
				{
					"file_name": "terraform\\aws\\iam\\role\\IAMRoleAllowAssumeFromAccount.tf",
					"similarity_id": "d45c0a0c5b5fad67c654e55e5e1bc804e1d6fd3a5d98ebc0f8dbf0485174a1ef",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[fail].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy' requires external ID or MFA",
					"actual_value": "'assume_role_policy' does not require external ID or MFA"
				}
			]
		},
		{
			"query_name": "Default Azure Storage Account Network Access Is Too Permissive",
			"query_id": "a5613650-32ec-4975-a305-31af783153ea",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "Default Azure Storage Account network access should be set to Deny",
			"description_id": "a5613650",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\network_rules\\default-action-deny.tf",
					"similarity_id": "9699e02d1012dcc3f70685693c9cd5eb59a4e852dd3db6bf556360180f8ad6a0",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account_network_rules[fail].default_action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Expected 'default_action' to be set to 'Deny'",
					"actual_value": "'default_action' is set to 'Allow'"
				}
			]
		},
		{
			"query_name": "Default Network Access is Allowed",
			"query_id": "9be09caf-2ba4-4fa9-9787-a670dc32c639",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "Default Network Access rule for Storage Accounts must be set to deny, which means the attribute 'default_action' must be 'Deny'",
			"description_id": "09c295e8",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\network_rules\\default-action-deny.tf",
					"similarity_id": "179816053694c199e597f668bae7d2f5eeab3cfbf25eb800fc3784240c3fe115",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account_network_rules[fail].default_action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account_network_rules[fail].default_action' is set to 'Deny'",
					"actual_value": "'azurerm_storage_account_network_rules[fail].default_action' is set to 'Allow'"
				}
			]
		},
		{
			"query_name": "Default Service Account In Use",
			"query_id": "737a0dd9-0aaa-4145-8118-f01778262b8a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/service_account#automount_service_account_token",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Default service accounts should not be actively used",
			"description_id": "b0822187",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\service_account\\default_service_account_in_use.tf",
					"similarity_id": "027a774d18c1e18056f16fd4cd52ae5274c28fccc45815fcf950aa55b0a01a84",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service_account[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service_account[example].automount_service_account_token is set",
					"actual_value": "kubernetes_service_account[example].automount_service_account_token is undefined"
				}
			]
		},
		{
			"query_name": "Default VPC Exists",
			"query_id": "96ed3526-0179-4c73-b1b2-372fde2e0d13",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "It isn't recommended to use resources in default VPC",
			"description_id": "d4f171f3",
			"files": [
				{
					"file_name": "terraform\\aws\\vpc\\default_vpc.tf",
					"similarity_id": "008dcef802660bf2ad05d0a3e2d531b276cdd0aabe44448cd36fb1a518d3667e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_default_vpc[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_default_vpc' should not exist",
					"actual_value": "'aws_default_vpc' exists"
				}
			]
		},
		{
			"query_name": "DynamoDB Table Not Encrypted",
			"query_id": "ce089fd4-1406-47bd-8aad-c259772bb294",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS DynamoDB Tables should have server-side encryption",
			"description_id": "a4233398",
			"files": [
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "4e9d124fec839085cad538efd3dc9dcb35b422c8dcfa80b7a484ae942f05dca8",
					"line": 99,
					"issue_type": "MissingAttribute",
					"search_key": "aws_dynamodb_table[{{basic_dynamodb_table}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_dynamodb_table.server_side_encryption.enabled is set to true",
					"actual_value": "aws_dynamodb_table.server_side_encryption is missing"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_table.tf",
					"similarity_id": "ef90beb91e71f2a2604fc538869e62713fcdd304a2ed39571af1e0d22f3e2776",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_dynamodb_table[{{default}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_dynamodb_table.server_side_encryption.enabled is set to true",
					"actual_value": "aws_dynamodb_table.server_side_encryption is missing"
				}
			]
		},
		{
			"query_name": "EBS Volume Encryption Disabled",
			"query_id": "cc997676-481b-4e93-aa81-d19f8c5e9b12",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "The value on AWS EBS Volume Cluster Encryption must be true",
			"description_id": "977695a1",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 2.2.1",
			"cis_description_title": "Ensure EBS volume encryption is enabled",
			"cis_description_text": "Elastic Compute Cloud (EC2) supports encryption at rest when using the Elastic Block Store (EBS) service. While disabled by default, forcing encryption at EBS volume creation is supported.\nEncrypting data at rest reduces the likelihood that it is unintentionally exposed and can nullify the impact of disclosure if the encryption remains unbroken.",
			"files": [
				{
					"file_name": "terraform\\aws\\ebs\\ebs_volume.tf",
					"similarity_id": "2d30cc786e5144b13ab230fc4f67cfcb7fb560c2b3846c94ddcdcf70a11a5ec0",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ebs_volume[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One of 'aws_ebs_volume.encrypted' is defined",
					"actual_value": "One of 'aws_ebs_volume.encrypted' is undefined"
				}
			]
		},
		{
			"query_name": "ECR Image Tag Not Immutable",
			"query_id": "d1846b12-20c5-4d45-8798-fc35b79268eb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "ECR should have an image tag be immutable",
			"description_id": "1cc5d4e2",
			"files": [
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository.tf",
					"similarity_id": "f152bea8b1f9bd5c3e4cf688618757d864fe8ed7b02afc27a258e36ce7c40e0a",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecr_repository.name.image_tag_mutability",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository.name.image_tag_mutability is 'IMMUTABLE'",
					"actual_value": "aws_ecr_repository.name.image_tag_mutability is 'MUTABLE'"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
					"similarity_id": "4c77c2488ad940a361b28b1a912b721eeb276db7f7d5d0ec0aa96d273b387646",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository.foo",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository.foo.image_tag_mutability is defined and not null",
					"actual_value": "aws_ecr_repository.foo.image_tag_mutability is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
					"similarity_id": "78f3106a82707131e2f45e1723662f4d5960120f2fc98e2e200fa0f9dd9b7630",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository.positive1",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository.positive1.image_tag_mutability is defined and not null",
					"actual_value": "aws_ecr_repository.positive1.image_tag_mutability is undefined or null"
				}
			]
		},
		{
			"query_name": "ECR Repository Is Publicly Accessible",
			"query_id": "e86e26fc-489e-44f0-9bcd-97305e4ba69a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Amazon ECR image repositories shouldn't have public access",
			"description_id": "5a3ad5ce",
			"files": [
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_policy.tf",
					"similarity_id": "3a1c570040509c57fcc764a8ffa7b50ab7b573b94785fe468bbe4b41a4f3e4b5",
					"line": 3,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecr_repository_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Statement.Principal' doesn't contain '*'",
					"actual_value": "'Statement.Principal' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
					"similarity_id": "5cf2b78c85ce603e3b0274aaed20807f719927cd2e83059d5073529fca72a2b9",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecr_repository_policy[positive2].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Statement.Principal' doesn't contain '*'",
					"actual_value": "'Statement.Principal' contains '*'"
				}
			]
		},
		{
			"query_name": "ECR Repository Not Encrypted",
			"query_id": "0e32d561-4b5a-4664-a6e3-a3fa85649157",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "ECR (Elastic Container Registry) Repository encryption should be set",
			"description_id": "e96d149c",
			"files": [
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository.tf",
					"similarity_id": "6f4e0f0903b52eaa7daa285be13197e4d03af25babf704081c762e2518507045",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[name]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'encryption_configuration' is defined and not null",
					"actual_value": "The attribute 'encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
					"similarity_id": "e6e7929d82429605f8e3d2cd75987a1171ba0e58b93931980e9d31377d48cf2e",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[foo]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'encryption_configuration' is defined and not null",
					"actual_value": "The attribute 'encryption_configuration' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
					"similarity_id": "4fc17933041c342e41ee27a3157e423583e30a73ab678bc0f0914dafd0435a85",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'encryption_configuration' is defined and not null",
					"actual_value": "The attribute 'encryption_configuration' is undefined or null"
				}
			]
		},
		{
			"query_name": "ECS Service Without Running Tasks",
			"query_id": "91f16d09-689e-4926-aca7-155157f634ed",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_service",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "ECS Service should have at least 1 task running",
			"description_id": "8bcc00c2",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_service_without_running_tasks.tf",
					"similarity_id": "2ad652afe233442cd2427197622fa7808d43b118dbca52f3a6da8bb24f1953b0",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecs_service[fail_notasks]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_ecs_service[fail_notasks]' has at least 1 task running'",
					"actual_value": "'aws_ecs_service[fail_notasks]' must have at least 1 task running"
				},
				{
					"file_name": "terraform\\aws\\ecs\\ecs_service_admin_role_is_present.tf",
					"similarity_id": "979203841b2f35543806879454c2119adfe19b7aca1cb424d8d6976047a4ea23",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecs_service[fail_service]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_ecs_service[fail_service]' has at least 1 task running'",
					"actual_value": "'aws_ecs_service[fail_service]' must have at least 1 task running"
				}
			]
		},
		{
			"query_name": "EKS Cluster Has Public Access",
			"query_id": "42f4b905-3736-4213-bfe9-c0660518cda8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Amazon EKS public endpoint shoud be set to false",
			"description_id": "653e0650",
			"files": [
				{
					"file_name": "terraform\\aws\\eks\\eks_cluster.tf",
					"similarity_id": "10568a8cb033295bf3cc9991374914540588a787b38c937232c16b0f2213b093",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_eks_cluster[fail].vpc_config.endpoint_public_access",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'vpc_config.endpoint_public_access' is equal 'false'",
					"actual_value": "'vpc_config.endpoint_public_access' is equal 'true'"
				}
			]
		},
		{
			"query_name": "ElastiCache Nodes Not Created Across Multi AZ",
			"query_id": "6db03a91-f933-4f13-ab38-a8b87a7de54d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Check if ElastiCache nodes are not being created across multi AZ",
			"description_id": "1bbfe45b",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_nodes_not_created_across_multi_az.tf",
					"similarity_id": "aa0fce7f4a2e568b8c3f067d5047cbfe14c1b61a9ab6ab7b6bb8c8df76dca015",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'az_mode' is set and must be 'cross-az' in multi nodes cluster",
					"actual_value": "'az_mode' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_without_vpc.tf",
					"similarity_id": "6051e06cfdb1520d6fbc2e60fa4eb6315bce17d1c842c22ff7c29862b5cfffa9",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fail_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'az_mode' is set and must be 'cross-az' in multi nodes cluster",
					"actual_value": "'az_mode' is undefined"
				}
			]
		},
		{
			"query_name": "ElastiCache Redis Cluster Without Backup",
			"query_id": "8fdb08a0-a868-4fdf-9c27-ccab0237f1ab",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Backup",
			"description": "ElastiCache Redis cluster should have 'snapshot_retention_limit' higher than 0",
			"description_id": "0ebd9005",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\redis_not_compliant.tf",
					"similarity_id": "89d01cc0d1c2e630759dc528b8a831161c2783505f6442abed7a4c2dcd179be1",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fails]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'snapshot_retention_limit' is higher than 0",
					"actual_value": "'snapshot_retention_limit' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_cluster.tf",
					"similarity_id": "6075f5e65d52d65b0d890ba07bb7c61f0fc845ad19583029dc5c2abaa13c349e",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fail_redis]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'snapshot_retention_limit' is higher than 0",
					"actual_value": "'snapshot_retention_limit' is undefined"
				}
			]
		},
		{
			"query_name": "ElastiCache Replication Group Not Encrypted At Rest",
			"query_id": "76976de7-c7b1-4f64-a94f-90c1345914c2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "ElastiCache Replication Group encryption should be enabled at Rest",
			"description_id": "b4d49d59",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_replication_group.tf",
					"similarity_id": "251a59a0bf1899d9ced39cedfdeacfb220ea6ed1b130362b1578765ae6b45879",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_replication_group[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'at_rest_encryption_enabled' is set to true",
					"actual_value": "The attribute 'at_rest_encryption_enabled' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
					"similarity_id": "3be2ec88f300ce318f22644f1eefe5b1cd84209520339b356201c41b7b5d9a4d",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticache_replication_group[fail].at_rest_encryption_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'at_rest_encryption_enabled' is set to true",
					"actual_value": "The attribute 'at_rest_encryption_enabled' is not set to true"
				}
			]
		},
		{
			"query_name": "ElastiCache Replication Group Not Encrypted At Transit",
			"query_id": "1afbb3fa-cf6c-4a3d-b730-95e9f4df343e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "ElastiCache Replication Group encryption should be enabled at Transit",
			"description_id": "40f92e86",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
					"similarity_id": "2d8a7750a0beb3170de4f713ff657cb98f5960fd0b1c93486a8f0d1b5bcd1c19",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_replication_group[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'transit_encryption_enabled' is set to true",
					"actual_value": "The attribute 'transit_encryption_enabled' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_replication_group.tf",
					"similarity_id": "a2877ebc422bb68f9bff13a3da4ef50a0702bc7d2bca2e0e6fa4277545804228",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticache_replication_group[fail].transit_encryption_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'transit_encryption_enabled' is set to true",
					"actual_value": "The attribute 'transit_encryption_enabled' is not set to true"
				}
			]
		},
		{
			"query_name": "ElasticSearch Encryption With KMS Disabled",
			"query_id": "7af2f4a3-00d9-47f3-8d15-ca0888f4e5b2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if any ElasticSearch domain isn't encrypted with KMS",
			"description_id": "65a94cf1",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
					"similarity_id": "f80f23bba791061900e2ec318ab983f4e9996b9a11df54da161ae0fdb2f81adc",
					"line": 28,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[node_to_node_encryption_disabled].encrypt_at_rest",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elasticsearch_domain[node_to_node_encryption_disabled].encrypt_at_rest.kms_key_id' is set with encryption at rest",
					"actual_value": "'aws_elasticsearch_domain[node_to_node_encryption_disabled].encrypt_at_rest.kms_key_id' is undefined"
				}
			]
		},
		{
			"query_name": "ElasticSearch Not Encrypted At Rest",
			"query_id": "24e16922-4330-4e9d-be8a-caa90299466a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if ElasticSearch encryption is disabled at Rest",
			"description_id": "c402717e",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
					"similarity_id": "87ce41fdab08306fee044fcc9111ef5970b5edbcc7bcf87cb4af1cd13a913016",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'encrypt_at_rest' is set and enabled",
					"actual_value": "'encrypt_at_rest' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
					"similarity_id": "1892f3f6d02a7631146b82af9e1d10da3e59d001b292c2c69306fab8c438708f",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[es_not_secure_policy]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'encrypt_at_rest' is set and enabled",
					"actual_value": "'encrypt_at_rest' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
					"similarity_id": "6aed28126b685f8cebb66358a39bfd04a3e31805012266cefeab18f425584dd5",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticsearch_domain[node_to_node_encryption_disabled].encrypt_at_rest.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'encrypt_at_rest.enabled' is true",
					"actual_value": "'encrypt_at_rest.enabled' is false"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
					"similarity_id": "96a7aec07f59e56322bef7c56e38ba39b615a0afa94822c0b42ba835ef55cf46",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[no_iam]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'encrypt_at_rest' is set and enabled",
					"actual_value": "'encrypt_at_rest' is undefined"
				}
			]
		},
		{
			"query_name": "Elasticsearch Domain Not Encrypted Node To Node",
			"query_id": "967eb3e6-26fc-497d-8895-6428beb6e8e2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#node_to_node_encryption",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Elasticsearch Domain encryption should be enabled node to node",
			"description_id": "e3dc1b2d",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
					"similarity_id": "4c0457aa94e71663d01dbc26086322fccb71345db37bebed5670fd282ec2968f",
					"line": 33,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticsearch_domain[{{node_to_node_encryption_disabled}}].node_to_node_encryption.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'node_to_node_encryption' is set to true",
					"actual_value": "The attribute 'node_to_node_encryption' is not set to true"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
					"similarity_id": "cd38498fd35e9a9f20187b8b4dfbe6bc4193a9ff0972be971a0151736a8785ec",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{es_not_secure_policy}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'node_to_node_encryption' is set to true",
					"actual_value": "The attribute 'node_to_node_encryption' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
					"similarity_id": "f9a9c2c46c5090d01102674f8d8048d0bc60759af0e54d09833fe7a8f8757490",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{no_iam}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'node_to_node_encryption' is set to true",
					"actual_value": "The attribute 'node_to_node_encryption' is undefined"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
					"similarity_id": "0e33714d6372b5c0bf97f00df3c09b5bad934c7ea3e4a2277975ad848ad5020b",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{positive1}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "The attribute 'node_to_node_encryption' is set to true",
					"actual_value": "The attribute 'node_to_node_encryption' is undefined"
				}
			]
		},
		{
			"query_name": "Elasticsearch Domain With Vulnerable Policy",
			"query_id": "16c4216a-50d3-4785-bfb2-4adb5144a8ba",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain_policy#access_policies",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Elasticsearch Domain policy should avoid wildcard in 'Action' and 'Principal'.",
			"description_id": "265f06df",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
					"similarity_id": "1511b0e315408459efdff5ebe5cd6d07baf11c122495e6303c78e71737a1b940",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticsearch_domain_policy[main].access_policies",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_elasticsearch_domain_policy[main].access_policies does not have wildcard in 'Action' and 'Principal'",
					"actual_value": "aws_elasticsearch_domain_policy[main].access_policies has wildcard in 'Action' or 'Principal'"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
					"similarity_id": "9b7768bf046ce1a6dc5747fa0e29ab012c120a4652f87a8647e43eab01956ef2",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticsearch_domain_policy[no_iam].access_policies",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_elasticsearch_domain_policy[no_iam].access_policies does not have wildcard in 'Action' and 'Principal'",
					"actual_value": "aws_elasticsearch_domain_policy[no_iam].access_policies has wildcard in 'Action' or 'Principal'"
				}
			]
		},
		{
			"query_name": "Elasticsearch Log is disabled",
			"query_id": "acb6b4e2-a086-4f35-aefd-4db6ea51ada2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_publishing_options",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS Elasticsearch should have logs enabled",
			"description_id": "e0526e1b",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
					"similarity_id": "4cd96aac3b0e7e3a57813a52af1b7fca1edf0ff6941dbdf7bb99831bfc2e86e7",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{node_to_node_encryption_disabled}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'log_publishing_options' is defined and not null",
					"actual_value": "'log_publishing_options' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
					"similarity_id": "18c7cf776a6137746e3dff64397887540a634a098ef620a7fbcf90c37670c0da",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{es_not_secure_policy}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'log_publishing_options' is defined and not null",
					"actual_value": "'log_publishing_options' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
					"similarity_id": "fd45d960fbc76577f72a3a7d4f2cef0396d26c14190a9871a66395fc11ca3fdf",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticsearch_domain[{{no_iam}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'log_publishing_options' is defined and not null",
					"actual_value": "'log_publishing_options' is undefined or null"
				}
			]
		},
		{
			"query_name": "Elasticsearch Without Slow Logs",
			"query_id": "e979fcbc-df6c-422d-9458-c33d65e71c45",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_publishing_options",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Ensure that AWS Elasticsearch enables support for slow logs",
			"description_id": "7430bf37",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
					"similarity_id": "988055d859da0d96bf9823cca219dd29b709c3d0f4edb4b263b22e6a0302f5ac",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticsearch_domain[{{positive1}}].log_publishing_options.log_type",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'log_publishing_options.log_type' is not INDEX_SLOW_LOGS or SEARCH_SLOW_LOGS  ",
					"actual_value": "'log_publishing_options.enabled' is ES_APPLICATION_LOGS or AUDIT_LOGS"
				}
			]
		},
		{
			"query_name": "Email Alerts Disabled",
			"query_id": "9db38e87-f6aa-4b5e-a1ec-7266df259409",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that alerts notifications are set to 'On' in the Azure Security Center Contact",
			"description_id": "23aadb20",
			"files": [
				{
					"file_name": "terraform\\azurerm\\security_center\\security_center_contact.tf",
					"similarity_id": "11cfbe489ae2b042d0cfb31ed59266ae8be03250dca3b7321e705a757c48a151",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_security_center_contact[fail].alert_notifications",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_security_center_contact.fail.alert_notifications' is true",
					"actual_value": "'azurerm_security_center_contact.fail.alert_notifications' is false"
				}
			]
		},
		{
			"query_name": "Encryption On Managed Disk Disabled",
			"query_id": "a99130ab-4c0e-43aa-97f8-78d4fcb30024",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk#encryption_settings",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Ensure that the encryption is active on the disk",
			"description_id": "8f6e1fa8",
			"files": [
				{
					"file_name": "terraform\\azurerm\\compute\\managed_disk.tf",
					"similarity_id": "e14709ed67656e3d085140c4bee743ec62c29520a50db0767b192b54541cffc9",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_managed_disk[fail].encryption_settings.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_managed_disk[fail].encryption_settings.enabled is true ",
					"actual_value": "azurerm_managed_disk[fail].encryption_settings.enabled is false"
				},
				{
					"file_name": "terraform\\azurerm\\managed_disk\\managed_disk.tf",
					"similarity_id": "138adc3568f53e956f9019fd55f1195db935880b2be636bc04261b3acca57557",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_managed_disk[example].encryption_settings.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_managed_disk[example].encryption_settings.enabled is true ",
					"actual_value": "azurerm_managed_disk[example].encryption_settings.enabled is false"
				}
			]
		},
		{
			"query_name": "Firewall Rule Allows Too Many Hosts To Access Redis Cache",
			"query_id": "a829b715-cf75-4e92-b645-54c9b739edfb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/redis_firewall_rule",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if any firewall rule allows too many hosts to access Redis Cache",
			"description_id": "6ac1bc00",
			"files": [
				{
					"file_name": "terraform\\azurerm\\redis\\redis_firewall_rule.tf",
					"similarity_id": "bd6dae7d12b3e7363450cd221ce5235547a7b5ee0cd3f9fed577ba79c18bd3ef",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_redis_firewall_rule[positive1].start_ip",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_redis_firewall_rule[positive1].start_ip' and 'end_ip' should allow no more than 255 hosts",
					"actual_value": "'azurerm_redis_firewall_rule[positive1].start_ip' and 'end_ip' allow %!s(float64=3.3554432e+07) hosts"
				}
			]
		},
		{
			"query_name": "Function App Client Certificates Unrequired",
			"query_id": "9bb3c639-5edf-458c-8ee5-30c17c7d671d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#client_cert_mode",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azure Function App should have 'client_cert_mode' set to required",
			"description_id": "436752d7",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "316634745e4de32b6117c3280782a1329d14df042e3b0753ff869b6baec6b5a9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_function_app[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].client_cert_mode' is defined and not null",
					"actual_value": "'azurerm_function_app[fail].client_cert_mode' is undefined or null"
				}
			]
		},
		{
			"query_name": "Function App Managed Identity Disabled",
			"query_id": "c87749b3-ff10-41f5-9df2-c421e8151759",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#identity",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azure Function App should have managed identity enabled",
			"description_id": "37e5ef3f",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "1bddd476fc93255117cdf1926ff72be8692e6278d2ed5b55df395ddee1916273",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_function_app[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].identity' is defined and not null",
					"actual_value": "'azurerm_function_app[fail].identity' is undefined or null"
				}
			]
		},
		{
			"query_name": "GKE Using Default Service Account",
			"query_id": "1c8eef02-17b1-4a3e-b01d-dcc3292d2c38",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_config",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Kubernetes Engine Clusters should not be configured to use the default service account",
			"description_id": "efe7e7b0",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster_public.tf",
					"similarity_id": "a2991c4f01bd4aefd475c416e4d98014f18a07daaac3927aba1aaae085b4668c",
					"line": 22,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail_public].node_config",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'service_account' is not default",
					"actual_value": "'service_account' is default"
				},
				{
					"file_name": "terraform\\google\\container_cluster\\container_cluster.tf",
					"similarity_id": "257e7b2f3c793e7cca412b44a28b59a19c6b8f362235f32b41d80de5617356e0",
					"line": 38,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_cluster[fail].node_config",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'service_account' is not default",
					"actual_value": "'service_account' is default"
				}
			]
		},
		{
			"query_name": "GitHub Repository Set To Public",
			"query_id": "15d8a7fd-465a-4d15-a868-add86552f17b",
			"query_url": "https://www.terraform.io/docs/providers/github/r/repository.html",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Repositories must be set to private, which means the attribute 'visibility' must be set to 'private' and/or the attribute 'private' must be set to true (the attribute 'visibility' overrides 'private')",
			"description_id": "4df8b842",
			"files": [
				{
					"file_name": "terraform\\github\\repositories\\repository.tf",
					"similarity_id": "5650036cdf2d30f74dd3a7f729749e84f657d370cdb496434f3a449eb5ec1918",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "github_repository[fail].visibility",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'visibility' is 'private'",
					"actual_value": "Attribute 'visibility' is 'public'"
				}
			]
		},
		{
			"query_name": "Glue With Vulnerable Policy",
			"query_id": "d25edb51-07fb-4a73-97d4-41cecdc53a22",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/glue_resource_policy#policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Glue policy should avoid wildcard in 'principals' and 'actions'",
			"description_id": "61db62a1",
			"files": [
				{
					"file_name": "terraform\\aws\\glue\\glue_with_vulnerable_policy.tf",
					"similarity_id": "5d286d93cae7994fc7000413f5178454f87ed69d1ecdde2051d472f782fda5ef",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "aws_glue_resource_policy[example].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_glue_resource_policy[example].policy does not have wildcard in 'principals' and 'actions'",
					"actual_value": "aws_glue_resource_policy[example].policy has wildcard in 'principals' or 'actions'"
				}
			]
		},
		{
			"query_name": "Google Compute Network Using Default Firewall Rule",
			"query_id": "40abce54-95b1-478c-8e5f-ea0bf0bb0e33",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#name",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Google Compute Network should not use default firewall rule",
			"description_id": "68898cf7",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\firewall\\google_compute_network_using_firewall_rule_allows_all_ports.tf",
					"similarity_id": "9bb2a2157a0e9ac31cd4280140f1bf63b0669e25b73c96a70056ef237dc6d898",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_network[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_network[positive1]' is not using a default firewall rule",
					"actual_value": "'google_compute_network[positive1]' is using a default firewall rule"
				}
			]
		},
		{
			"query_name": "Google Compute Network Using Firewall Rule that Allows All Ports",
			"query_id": "22ef1d26-80f8-4a6c-8c15-f35aab3cac78",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#allow",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Google Compute Network should not use a firewall rule that allows all ports",
			"description_id": "20fce4e9",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\firewall\\google_compute_network_using_firewall_rule_allows_all_ports.tf",
					"similarity_id": "a3ee05b652a5d5ff5042f53a34e7e400db60f6bfd985183f22f8bd2c6efbcad0",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_network[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_network[positive1]' is not using a firewall rule that allows access to all ports",
					"actual_value": "'google_compute_network[positive1]' is using a firewall rule that allows access to all ports"
				}
			]
		},
		{
			"query_name": "Google Compute SSL Policy Weak Cipher In Use",
			"query_id": "14a457f0-473d-4d1d-9e37-6d99b355b336",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_ssl_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "This query confirms if Google Compute SSL Policy Weak Chyper Suits is Enabled, to do so we need to check if TLS is TLS_1_2, because other version have Weak Chypers",
			"description_id": "27c7da5e",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\security\\compute_ssl_policy.tf",
					"similarity_id": "a08f104a7db44e742c3499be187501eec32ea55b47c7d178ae26c6627d418a5c",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_ssl_policy[modern_profile].min_tls_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_compute_ssl_policy[modern_profile].min_tls_version is TLS_1_2",
					"actual_value": "google_compute_ssl_policy[modern_profile].min_tls_version is not TLS_1_2"
				}
			]
		},
		{
			"query_name": "Google Compute Subnetwork Logging Disabled",
			"query_id": "40430747-442d-450a-a34f-dc57149f4609",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "This query checks if logs are enabled for a Google Compute Subnetwork resource.",
			"description_id": "689ef05b",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\subnetwork\\compute_subnetwork_ipv6.tf",
					"similarity_id": "972f25daf74e8d44edf401e4ebe69714e9b2587282e4adf73580265bef763ffd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "google_compute_subnetwork[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_subnetwork[fail].log_config' is defined and not null",
					"actual_value": "'google_compute_subnetwork[fail].log_config' is undefined or null"
				}
			]
		},
		{
			"query_name": "Google Container Node Pool Auto Repair Disabled",
			"query_id": "acfdbec6-4a17-471f-b412-169d77553332",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Verifies if Google Container Node Pool Auto Repair is Enabled",
			"description_id": "39487293",
			"files": [
				{
					"file_name": "terraform\\google\\container_cluster\\container_node_pool.tf",
					"similarity_id": "8fbb9f7ed4a3dc296a9a54f2ece029d1b65e8acf453fc6619228c7c3f0edf0e3",
					"line": 38,
					"issue_type": "IncorrectValue",
					"search_key": "google_container_node_pool[fail_pool].management.auto_repair",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_container_node_pool[fail_pool].management.auto_repair is true",
					"actual_value": "google_container_node_pool[fail_pool].management.auto_repair is false"
				}
			]
		},
		{
			"query_name": "Google Project Auto Create Network Disabled",
			"query_id": "59571246-3f62-4965-a96f-c7d97e269351",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Verifies if the Google Project Auto Create Network is Disabled",
			"description_id": "9bcdbe82",
			"files": [
				{
					"file_name": "terraform\\google\\project\\project.tf",
					"similarity_id": "2ea10bba3fbf50aefe331445ffa89ec47787339dd71e6e6fdf22a26a2a3c64ba",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "google_project[fail].auto_create_network",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project[fail].auto_create_network is false",
					"actual_value": "google_project[fail].auto_create_network is true"
				}
			]
		},
		{
			"query_name": "Google Project IAM Binding Service Account has Token Creator or Account User Role",
			"query_id": "617ef6ff-711e-4bd7-94ae-e965911b1b40",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam#google_project_iam_binding",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Verifies if Google Project IAM Binding Service Account doesn't have an Account User or Token Creator Role associated",
			"description_id": "2b311b42",
			"files": [
				{
					"file_name": "terraform\\google\\iam\\iam_binding\\project_iam_binding.tf",
					"similarity_id": "cef9eb55a48d776b91cdda553e6515a48944ee1a8492427a264d765dff1c0c20",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_binding[project_123].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_binding[project_123].role is not Service Account User",
					"actual_value": "google_project_iam_binding[project_123].role is Service Account User"
				}
			]
		},
		{
			"query_name": "Google Project IAM Member Service Account has Token Creator or Account User Role",
			"query_id": "c68b4e6d-4e01-4ca1-b256-1e18e875785c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam#google_project_iam_member",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Verifies if Google Poject IAM Member Service Account doesn't have a Account User or Token Creator associated",
			"description_id": "beb4558c",
			"files": [
				{
					"file_name": "terraform\\google\\project\\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf",
					"similarity_id": "1b08410f90c0a1a782488b7d9e392167851b7e22347788bbc32efe6bb080beca",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_member[positive1].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_member[positive1].role is Service Account Token Creator",
					"actual_value": "google_project_iam_member[positive1].role is not Service Account Token Creator"
				},
				{
					"file_name": "terraform\\google\\iam\\iam_member\\no-privileged-service-accounts.tf",
					"similarity_id": "cb97a3a0f5da0cec5c83cd7a2101705853834a4d4215b030e54ca134cb1d44a4",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_member[project].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_member[project].role is Service Account User",
					"actual_value": "google_project_iam_member[project].role is not Service Account User"
				}
			]
		},
		{
			"query_name": "Google Storage Bucket Level Access Disabled",
			"query_id": "bb0db090-5509-4853-a827-75ced0b3caa0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Google Storage Bucket Level Access should be enabled",
			"description_id": "6a48f2c6",
			"files": [
				{
					"file_name": "terraform\\google\\storage\\storage_bucket.tf",
					"similarity_id": "285969508a7c325bd87d25db80c3ebba7fb9ca4ecfb70acb8a97c7de9fc95e4b",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "google_storage_bucket[static_site]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_storage_bucket[static_site].uniform_bucket_level_access is defined and not null",
					"actual_value": "google_storage_bucket[static_site].uniform_bucket_level_access is undefined or null"
				},
				{
					"file_name": "terraform\\google\\storage\\storage_bucket.tf",
					"similarity_id": "7f24c2de060a74f96909e6778ebeccd7946d88092db7325ef3df9c3c22a4eab4",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "google_storage_bucket[fail_self]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_storage_bucket[fail_self].uniform_bucket_level_access is defined and not null",
					"actual_value": "google_storage_bucket[fail_self].uniform_bucket_level_access is undefined or null"
				}
			]
		},
		{
			"query_name": "GuardDuty Detector Disabled",
			"query_id": "704dadd3-54fc-48ac-b6a0-02f170011473",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/guardduty_detector#example-usage",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that Amazon GuardDuty is Enabled",
			"description_id": "0a3448be",
			"files": [
				{
					"file_name": "terraform\\aws\\guardduty\\guarddutydetectordisabled.tf",
					"similarity_id": "8f97ef90fb67b01419fcb12999edef6197e935bc9201e1a34ec2e0bb821c1531",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_guardduty_detector[positive1].enable",
					"search_line": 0,
					"search_value": "",
					"expected_value": "GuardDuty Detector should be Enabled",
					"actual_value": "GuardDuty Detector is not Enabled"
				}
			]
		},
		{
			"query_name": "Hardcoded AWS Access Key In Lambda",
			"query_id": "1402afd8-a95c-4e84-8b0b-6fb43758e6ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Lambda hardcoded AWS access/secret keys",
			"description_id": "63935af4",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda.tf",
					"similarity_id": "54d0500554aefab7d2b81da421191757433a73ce2f3d83cd98a58a304571dceb",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_function[morefail].environment.variables",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'environment.variables' doesn't contain access key",
					"actual_value": "'environment.variables' contains access key"
				}
			]
		},
		{
			"query_name": "High Google KMS Crypto Key Rotation Period",
			"query_id": "d8c57c4e-bf6f-4e32-a2bf-8643532de77b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/kms_crypto_key",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Make sure Encryption keys change after 90 days",
			"description_id": "d43302d0",
			"files": [
				{
					"file_name": "terraform\\google\\kms\\google_kms_crypto_key.tf",
					"similarity_id": "37c3b67d43293e4327b0e24df292ff1bb7c9fa80ea6b853e0584e5fa169e330f",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "resource.google_kms_crypto_key[fails].rotation_period",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_kms_crypto_key.rotation_period' is less or equal to 7776000",
					"actual_value": "'google_kms_crypto_key.rotation_period' is higher than 7776000"
				}
			]
		},
		{
			"query_name": "IAM Access Key Is Exposed",
			"query_id": "7081f85c-b94d-40fd-8b45-a4f1cac75e46",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Check if IAM Access Key is active for some user besides 'root'",
			"description_id": "99b02242",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.11",
			"cis_description_title": "Do not setup access keys during initial user setup for all IAM users that have a console password",
			"cis_description_text": "AWS console defaults to no check boxes selected when creating a new IAM user. When cerating the IAM User credentials you have to determine what type of access they require. Programmatic access: The IAM user might need to make API calls, use the AWS CLI, or use the Tools for Windows PowerShell. In that case, create an access key (access key ID and a secret access key) for that user. AWS Management Console access: If the user needs to access the AWS Management Console, create a password for the user.\nRequiring the additional steps be taken by the user for programmatic access after their profile has been created will give a stronger indication of intent that access keys are [a] necessary for their work and [b] once the access key is established on an account that the keys may be in use somewhere in the organization. Note : Even if it is known the user will need access keys, require them to create the keys themselves or put in a support ticket to have them created as a separate step from user creation.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_access_key_is_exposed.tf",
					"similarity_id": "9c318948119ba0a772925b59c2f1344b247a96a50e3435906e1f3098c973b100",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive1].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[positive1].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[positive1].user' is 'some-user' for an active access key"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_access_key_is_exposed.tf",
					"similarity_id": "50ce4008c01405c9cbc977fe38ef0bb603d5689060bea85fbc4f8b019acd0f6b",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive2].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[positive2].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[positive2].user' is 'some-user' for an active access key"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_full_permissions.tf",
					"similarity_id": "2ba3cc0e37527355de9b9b90b909eb90040c0eb1c71bb3072ac2d5ab63f62c78",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive2].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[positive2].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[positive2].user' is '${aws_iam_user.user.name}' for an active access key"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_user_policy_without_mfa.tf",
					"similarity_id": "13116d220f1704b4f6419fb891e5a45072e1615856b0f084e6324170256616f1",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[fail_mfa].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[fail_mfa].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[fail_mfa].user' is '${aws_iam_user.fail_mfa.name}' for an active access key"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_attached_to_user.tf",
					"similarity_id": "a941768ac6375cc86759f1166b58deadfad7d53319e52f77b6a86fdce3480418",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive1_2].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[positive1_2].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[positive1_2].user' is '${aws_iam_user.user.name}' for an active access key"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_authentication_without_mfa.tf",
					"similarity_id": "4dcde0f22bbbb38937c0f086d0c2a042894f08aa5d448d5fdb4d6eb75d7c41ed",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[mfa].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_access_key[mfa].user' is 'root' for an active access key",
					"actual_value": "'aws_iam_access_key[mfa].user' is '${aws_iam_user.mfa.name}' for an active access key"
				}
			]
		},
		{
			"query_name": "IAM Password Without Lowercase Letter",
			"query_id": "bbc7c137-6c7b-4fc4-984a-0c88e91fcaf9",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if IAM account password has at least one lowercase letter",
			"description_id": "726cd448",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "30e1a897e39c7f256d72ede3ee4aaff46cff98f9a752da634537378865528969",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'require_lowercase_characters' should be set with true value",
					"actual_value": "'require_lowercase_characters' is undefined"
				}
			]
		},
		{
			"query_name": "IAM Password Without Minimum Length",
			"query_id": "1bc1c685-e593-450e-88fb-19db4c82aa1d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Check if IAM account password has the required minimum length",
			"description_id": "594a6a8e",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.8",
			"cis_description_title": "Ensure IAM password policy requires minimum length of 14 or greater",
			"cis_description_text": "Password policies are, in part, used to enforce password complexity requirements. IAM password policies can be used to ensure password are at least a given length. It is recommended that the password policy require a minimum password length 14.\nSetting a password complexity policy increases account resiliency against brute force login attempts.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
					"similarity_id": "92ca64082e7bbca2c0a70b3974b514957330a0905df14d9c2dab8fd8c473a789",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_account_password_policy[positive2].minimum_password_length",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'minimum_password_length' is set and no less than 14",
					"actual_value": "'minimum_password_length' is less than 14"
				},
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "36f973c3b17583c7c0d6dba559fc575efc71eee563c62655e2ccd25ce03dbc0d",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'minimum_password_length' is set and no less than 14",
					"actual_value": "'minimum_password_length' is undefined"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
					"similarity_id": "f871530b4a0170926642dfa43b4161acb54199377a2b5365f3447b095bf577f5",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_account_password_policy[expire].minimum_password_length",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'minimum_password_length' is set and no less than 14",
					"actual_value": "'minimum_password_length' is less than 14"
				}
			]
		},
		{
			"query_name": "IAM Password Without Symbol",
			"query_id": "7a70eed6-de3a-4da2-94da-a2bbc8fe2a48",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Check if IAM account password has the required symbols",
			"description_id": "aaadddd1",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "bad9e2a9f14c0fe779a0ae2e26b3e9ea7a2938e59c69b33a6afd7d04a7c8c882",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'require_symbols' should be set with true value",
					"actual_value": "'require_symbols' is undefined"
				}
			]
		},
		{
			"query_name": "IAM Password Without Uppercase Letter",
			"query_id": "c5ff7bc9-d8ea-46dd-81cb-8286f3222249",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if IAM account password has at least one uppercase letter",
			"description_id": "4e96ea27",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "41221dfc0fd68b34c2ddb4a2a545c362482649023a8de60c9f29d6ed35f63fb5",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'require_uppercase_characters' should be set with true value",
					"actual_value": "'require_uppercase_characters' is undefined"
				}
			]
		},
		{
			"query_name": "IAM Policy Grants Full Permissions",
			"query_id": "575a2155-6af1-4026-b1af-d5bc8fe2a904",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM policies allow all ('*') in a statement action",
			"description_id": "f20cf2cf",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
					"similarity_id": "5d3452d37e6b025518c0a3f7fd8ad17ca9be49489fc73df6a448ab15fa229cab",
					"line": 96,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role_policy[positiveinlinepolicy1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam.tf",
					"similarity_id": "c141abf46f1d319d8db2fad10f441ffd95edba01bcf0b7929da002faaba34ab1",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_full_permissions.tf",
					"similarity_id": "e6b80cf20f9b0fb2a6ecfbffaa51201d148f55dd04c5af950d25b3d683e71aee",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_policy[positive3].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
					"similarity_id": "256a344cec3838df81c728f357a0db3e23b3639e38eb5d90812a62ca3181a08c",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user_policy[fail_key].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\role\\iam_role_policy_passrole_allows_all.tf",
					"similarity_id": "aac0ffaea13c37ef85909cd4505696808d96ff5f4cb585bcbd4e65b34555f45b",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role_policy[test_policy].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_attached_to_user.tf",
					"similarity_id": "6f9e5f033a741a6bca3dd1d682581ea3bdc43ea0dcdfd4af1dd559b5c469ddff",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_policy_attachment[positive1_3].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_with_full_privileges.tf",
					"similarity_id": "8f846701e810aaa5ca69266898d3e36fe36843414619858b57aa8c6d5cc9de36",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role_policy[positive1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Resource' not equal '*'",
					"actual_value": "'policy.Statement.Resource' equal '*'"
				}
			]
		},
		{
			"query_name": "IAM Role Policy passRole Allows All",
			"query_id": "e39bee8c-fe54-4a3f-824d-e5e2d1cca40a",
			"query_url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-policy-checks.html#access-analyzer-reference-policy-checks-security-warning-pass-role-with-star-in-resource",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Using the iam:passrole action with wildcards (*) in the resource can be overly permissive because it allows iam:passrole permissions on multiple resources",
			"description_id": "380dd3f7",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\role\\iam_role_policy_passrole_allows_all.tf",
					"similarity_id": "cf2567dab562a2d52f02e9a125eb81606dce8ddfde5b8902f635f6e2a81885ef",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role_policy[test_policy].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_iam_role_policy.policy.Statement.Action' iam:passrole doesn't have Resource '*'",
					"actual_value": "'aws_iam_role_policy.policy.Statement.Action' iam:passrole has Resource '*'"
				}
			]
		},
		{
			"query_name": "IAM User Has Too Many Access Keys",
			"query_id": "3561130e-9c5f-485b-9e16-2764c82763e5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_access_key#user",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Any IAM User should not have more than one access key since it increases the risk of unauthorized access and compromise credentials",
			"description_id": "387e9522",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_full_permissions.tf",
					"similarity_id": "0f0f92d46fb7dce46ce9af5a0f7675a7ab4921a062c8a708a236e5987e1742c8",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive2].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One Access Key associated with the same IAM User",
					"actual_value": "More than one Access Key associated with the same IAM User"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_attached_to_user.tf",
					"similarity_id": "82db1f09c4e5d869027e52c40db6392974dd9c88a2ea136d2199edd2238f161b",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_access_key[positive1_2].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "One Access Key associated with the same IAM User",
					"actual_value": "More than one Access Key associated with the same IAM User"
				}
			]
		},
		{
			"query_name": "IAM User With Access To Console",
			"query_id": "9ec311bf-dfd9-421f-8498-0b063c8bc552",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_user_login_profile",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "AWS IAM Users should not have access to console",
			"description_id": "28422817",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_no_password_policy_enabled.tf",
					"similarity_id": "b8e7584e96e8a35354fb8f2b5099e1d408265036a3c2a281748ad6c2d5cc4263",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user.example.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_user.example.name doesn't have aws_iam_user_login_profile",
					"actual_value": "aws_iam_user.example.name has aws_iam_user_login_profile"
				},
				{
					"file_name": "terraform\\aws\\iam\\userconsole.tf",
					"similarity_id": "9dda4e40e28f28771530e7db11bc45e0c0af65aca20a3d4efd88cd372ac7e0df",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user.fail_console.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_user.fail_console.name doesn't have aws_iam_user_login_profile",
					"actual_value": "aws_iam_user.fail_console.name has aws_iam_user_login_profile"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_authentication_without_mfa.tf",
					"similarity_id": "dd5e99c51c0804246d004ccf4cd7793a3a456759fd7f17719575e48100202825",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user.mfa.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_user.mfa.name doesn't have aws_iam_user_login_profile",
					"actual_value": "aws_iam_user.mfa.name has aws_iam_user_login_profile"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_user_with_access_to_console.tf",
					"similarity_id": "a79f6af0f013cdb8a9494ea98832d0cc6bdfb2d56dfa2cbd0bb2a786280d1c91",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_user.example.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_user.example.name doesn't have aws_iam_user_login_profile",
					"actual_value": "aws_iam_user.example.name has aws_iam_user_login_profile"
				}
			]
		},
		{
			"query_name": "Incorrect Volume Claim Access Mode ReadWriteOnce",
			"query_id": "26b047a9-0329-48fd-8fb7-05bbe5ba80ee",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/stateful_set#volume_claim_template",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Build Process",
			"description": "Kubernetes Stateful Sets must have one Volume Claim template with the access mode 'ReadWriteOnce'",
			"description_id": "02756212",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "b06cbb78d1ba185d9520c39a92727e26cb85b38f6228ca0c005978ede33f4ee2",
					"line": 166,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.volume_claim_template",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.volume_claim_template has only one template with a 'ReadWriteOnce'",
					"actual_value": "kubernetes_stateful_set[fail].spec.volume_claim_template has multiple templates with 'ReadWriteOnce'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "2aab07e2f0340cd2342ad85061f6402cba5716c898e87f204534070d48b17d84",
					"line": 166,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template has one template with a 'ReadWriteOnce'",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template does not have a template with a 'ReadWriteOnce'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "6ec7d3c0c9fc03e31ea8e20422a503f514ca409076e8c72dbe801e7b278d2261",
					"line": 187,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template has one template with a 'ReadWriteOnce'",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template does not have a template with a 'ReadWriteOnce'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "a3bc29a45a64ec3078966f9e21a8e17ada209629d17d68f721318791ab8e76b6",
					"line": 166,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.volume_claim_template",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.volume_claim_template has one template with a 'ReadWriteOnce'",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.volume_claim_template does not have a template with a 'ReadWriteOnce'"
				}
			]
		},
		{
			"query_name": "Instance With No VPC",
			"query_id": "a31a5a29-718a-4ff4-8001-a69e5e4d029e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Instance should be configured in VPC (Virtual Private Cloud)",
			"description_id": "225a9f30",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
					"similarity_id": "bbc75166662517ba7994c2c8762f8a1dc052413dc257d9e3ed7b01f537a4d45d",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[web]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'vpc_security_group_ids' is defined and not null",
					"actual_value": "Attribute 'vpc_security_group_ids' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
					"similarity_id": "f3d4a06aa6045fb1ac3f1bcf0fa6d1f53ed59bfc5f5b84103587cda1f93cba5b",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'vpc_security_group_ids' is defined and not null",
					"actual_value": "Attribute 'vpc_security_group_ids' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance_with_no_vpc.tf",
					"similarity_id": "d103fb81983f10688e16e1b6d168043751cc032f9f12f55dd0b20ff85cddeb6b",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'vpc_security_group_ids' is defined and not null",
					"actual_value": "Attribute 'vpc_security_group_ids' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
					"similarity_id": "07456a32ea3f6f37605331e66ca3a0f8e794bb4893ea09be1a2a61644801c0a0",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[monitoring_positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'vpc_security_group_ids' is defined and not null",
					"actual_value": "Attribute 'vpc_security_group_ids' is undefined or null"
				}
			]
		},
		{
			"query_name": "Lambda Permission Principal Is Wildcard",
			"query_id": "e08ed7eb-f3ef-494d-9d22-2e3db756a347",
			"query_url": "https://docs.ansible.com/ansible/latest/collections/community/aws/lambda_policy_module.html",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Lambda Permission Principal should not contain a wildcard.",
			"description_id": "b443babe",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda_permission_principal_is_wildcard.tf",
					"similarity_id": "0fec0ea269de19f4bcf38756489f0c357655fd49c9bf0f418d7502e77fc01560",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_permission[positive_wild].principal",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_permission[positive_wild].principal doesn't contain a wildcard",
					"actual_value": "aws_lambda_permission[positive_wild].principal contains a wildcard"
				}
			]
		},
		{
			"query_name": "Lambda With Vulnerable Policy",
			"query_id": "ad9dabc7-7839-4bae-a957-aa9120013f39",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission#action",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "The attribute 'action' should not have wildcard",
			"description_id": "5db376a3",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda_with_vulnerable_policy.tf",
					"similarity_id": "9803ca0d44ad884b40183631c2eceaaca7ce2d3565eb2fdbe4cab0dc7cf8fe75",
					"line": 39,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_permission[all].action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_permission[all].action does not have wildcard",
					"actual_value": "aws_lambda_permission[all].action has wildcard"
				}
			]
		},
		{
			"query_name": "Liveness Probe Is Not Defined",
			"query_id": "5b6d53dd-3ba3-4269-b4d7-f82e880e43c3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#liveness_probe",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Liveness Probe must be defined",
			"description_id": "e5105a57",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "60d3e991e6b3cf1b0eb677c92e3ecdc41571104a56546001aa7f72a94cd97116",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "d7b03004aeb910c90f950d7f26db708d093e5f86c42ec4a1876001c735423436",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "9219295dd6c457291bd65495b8b4f2210c1a1fcb65aa67b3ab62fc54ed6ef494",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "309d019b713651f61ec242e28652351eec3532c5d8301cc42b5ec584d5ec0e71",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "b2e193f543d75112b5a507c25c61f6ec99c77b4375533da8b86b61d5af257049",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "ec150b603d1227b4e49aa18b6b69adc56961ab61ff042aa674df55c9f9d6c8e2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "911b6ad8009bf922f063596c96766c48bbd8818280be3e52214eb197657d97df",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "b9933e975faa029ed698ea156c71e91684a1aff96b7845a82387724820dee5aa",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "ac91d23764a29b2a2aa425a4c95dbd13ebd3b8940e06a3cf0f5d2c83165d6b8e",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "df43a455f4dde02b155d5d2c9dcca53c4a4774247d06c19b027eb31972a7922c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "6cf124a325923980911296d7ee9c43a7d7bc0ea854404bd2f427eb00efa5e044",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "262dade534d67bfd0a783d586be43cab8e19cfc63c84da9d6a60d2ec17ba4ff1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "0b4be80b60f2c4dcd0ff365389423b79e135798c686e4e3989aee1b42924da35",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "774c7646aa496343a6e02503981953f86c4a739242ab2257b33222ea673a3753",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "8d7d16467b03801f8c5c0f91092afa03e93105c24ab76d83b69519f7ce64cba5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "bf6b1a63063cc4582b32f6fb3a246fb67ead6a84ecb86e7fed5ce76ec02feb11",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "dff6babb67cbe9e3aecfe60112be6b315a52cfb53b2e894c9016dafec294c453",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'livenessProbe' is defined and not null",
					"actual_value": "Attribute 'livenessProbe' is undefined or null"
				}
			]
		},
		{
			"query_name": "Log Retention Is Not Set",
			"query_id": "ffb02aca-0d12-475e-b77c-a726f7aeff4b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for PostgreSQL Database, server parameter 'log_retention' is set to 'ON'",
			"description_id": "e14a3a02",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\azurerm_postgresql_configuration.tf",
					"similarity_id": "933b0100604dc81436d5fb7d784e16649a50a3d62bb4abd9ab60d768ad19a0d1",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[fail1].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.fail1.value' is 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.fail1.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "MQ Broker Logging Disabled",
			"query_id": "31245f98-a6a9-4182-9fc1-45482b9d030a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Check if MQ Brokers don't have logging enabled in any of the two options possible (audit and general).",
			"description_id": "cdf2b416",
			"files": [
				{
					"file_name": "terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
					"similarity_id": "434bfbdc96f4c2395119263a7c51d1bb0dbe2b0271c2ed6d52003dea926e01fd",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_mq_broker[pass]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logs' is set and enabling general AND audit logging",
					"actual_value": "'logs' is undefined"
				}
			]
		},
		{
			"query_name": "MSK Cluster Logging Disabled",
			"query_id": "2f56b7ab-7fba-4e93-82f0-247e5ddeb239",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#broker_logs",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Ensure MSK Cluster Logging is enabled",
			"description_id": "816831cc",
			"files": [
				{
					"file_name": "terraform\\aws\\msk\\msk_cluster.tf",
					"similarity_id": "03be3cbee7e743cd022cf389c560824ec8d09488cd73a149a9cf236a85670179",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "msk_cluster[name]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Should exists 'rule.logging_info'",
					"actual_value": "'rule.logging_info' does not exists"
				}
			]
		},
		{
			"query_name": "MSSQL Server Auditing Disabled",
			"query_id": "609839ae-bd81-4375-9910-5bce72ae7b92",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for MSSQL Servers, that 'Auditing' is set to 'On'",
			"description_id": "f0be3ea8",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\mssql_server.tf",
					"similarity_id": "d24691c764f201b0b9803824d36a3ca5f0ff5c3ca5e30f811a982d8791ae0e69",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_mssql_server[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mssql_server.example.extended_auditing_policy' exists",
					"actual_value": "'azurerm_mssql_server.example.extended_auditing_policy' does not exist"
				}
			]
		},
		{
			"query_name": "MariaDB Server Public Network Access Enabled",
			"query_id": "7f0a8696-7159-4337-ad0d-8a3ab4a78195",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "MariaDB Server Public Network Access should be disabled",
			"description_id": "e1decb5e",
			"files": [
				{
					"file_name": "terraform\\azurerm\\maria\\azurerm_mariadb_server.tf",
					"similarity_id": "373e298e3de25badc17db1ce5ada76ecca1b128325c7aa2c150d649988c2ec06",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mariadb_server[example].public_network_access_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mariadb_server[example].public_network_access_enabled.enabled' is set to false",
					"actual_value": "'azurerm_mariadb_server[example].public_network_access_enabled.enabled' is not set to false"
				}
			]
		},
		{
			"query_name": "Memory Limits Not Defined",
			"query_id": "fd097ed0-7fe6-4f58-8b71-fef9f0820a21",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#limits",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Memory limits should be specified",
			"description_id": "c957affa",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "bdfb70a67192b8a5e6336d81678773147be71335177aff1f79f2a3277eb70dda",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "471019a01a6ac0fd8b58487c10a6e4e55b61684589683607a65d9b2db461c675",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "adcb67b1fbc7a35028619627b8af4014aa4a23de9cc7b83bdc3459b5174535c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "4acee5e31354cb3c361c2ae1d92626fba773fff22e63a320061a2ddfcf59e9fd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "776d7632d43258dd8d247efca9a85dfe4c4c363466ab21a5230b3b3388834838",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "45e47d2dea3a7678a5cdbfb9ac14ea35724d2aec3738ec3a4bab0c3c3162534d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "4acee5e31354cb3c361c2ae1d92626fba773fff22e63a320061a2ddfcf59e9fd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "776d7632d43258dd8d247efca9a85dfe4c4c363466ab21a5230b3b3388834838",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "3d1d572e856bb3e2b8719c40d2abdcaa08ebeb696afe222700c7f023c575b544",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "0b77f65ed6585b94afb93ffb37149fc058e2e45960cf50082333d8cdc5a2f3e1",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "adb77da81ced18493a46db4cb0948c436c08d0d4860ddcc25c0733b5cf5be7ef",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "cd370fcb3832d5160a415f0ed463e49566de4e40cdd2b530f0acd3fcf0eb9691",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "abd06693626664734b65282386712b43b47631c02ac4f54332d61fb4f49609b1",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "317e525a9649f8cb927d64f1cff2d1c159425c41f260e49ce2f09da9eb1d2512",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "adcb67b1fbc7a35028619627b8af4014aa4a23de9cc7b83bdc3459b5174535c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "fd3b791c3159149390a76a4b12c751138efe257dd8fbd2c513644642204d8321",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "6a814f79fc7782460a17f31ed6c19d5b71e62068c411c069c030aaee15348be1",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "317e525a9649f8cb927d64f1cff2d1c159425c41f260e49ce2f09da9eb1d2512",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "883eccf19dcb60e289da40efe446568f245acc52e0a6adef2370059794544fa8",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "caf09d5456e40ee7d830305d07dcb4dee38f164a55df57463859403dc72a3c48",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "b7ac1d9186a049a1bfb141e35bdcd336d8b38b9ee1abaff0204d532af83c0007",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[example1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "80015860ae2a3e83d0fc28d1176f9d25357530c5f02131af981f9d2f1ec0822b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "6a814f79fc7782460a17f31ed6c19d5b71e62068c411c069c030aaee15348be1",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "ff5454bd7fb0e3337f49c6f6e06b221686715bdf08fafdc7cc30535d4fedeb3e",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "adcb67b1fbc7a35028619627b8af4014aa4a23de9cc7b83bdc3459b5174535c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "abd06693626664734b65282386712b43b47631c02ac4f54332d61fb4f49609b1",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "7d04ec63759aaeb00155cf4ff9761db07e0ccfd0f4220ba40fc727288705a9dc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "2ab2d2d5e65aa515f13144309a2388b318777d1133821d646e76502f89fa162c",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "7d2f4d715351aaddc0fbe442fb4f613a25afb89b918e67ce508d85a4cfff0e3a",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.resources is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "8d39e69f115585e73778c13a02c215c98431d752c79df023a01a8b3f71021f65",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "09f1e29176e80a8720b4e27b275453e47b65a06d6ae8dd8852c7e9c32b454df3",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[name1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "6c3397d70f6bb67107acbb7b908c91b88c9d4cf30421ac1386a93d08d6d30d3b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "fd3b791c3159149390a76a4b12c751138efe257dd8fbd2c513644642204d8321",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "22e676e0ba5be805846c61cb5e36ebd36b893d223d04808323731c17ac9790d1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "e34d13758b52e560131b01d0df6f26ad220ac33661492e7b7d885347a65b0cb6",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "dec788c205d00ce4c50e83c981fbd94d917cc2e563a8dec802d005bc8eb84954",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "9fbc70a538f4ed3aa0be7a999c01e11723726f7a71928fd859c1d58922cf661f",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "3eea6a0deac1eface738f3b1b04f5ff51dc37e9a19cb78543615a50a162382e7",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.resources is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "25450c9720153a1394fdef9b04ebe06efaa4f4d32b2f929c6766e7aef96c8cc1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "caf09d5456e40ee7d830305d07dcb4dee38f164a55df57463859403dc72a3c48",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "ff5454bd7fb0e3337f49c6f6e06b221686715bdf08fafdc7cc30535d4fedeb3e",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "0a308a859e378fd35bc9455bd9588ed738ec0609ece2f23a21d04cef46b9ebc0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "8d66d2dbd6ebdd84f3e0275c8a900ed2c8a064329506e7d4bda2bbdfb5479d95",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "4a945166263e7acf150621a77f2d45c7327b4ac339e6e1664aaae3f0f851395e",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "0be237bbd1e5ea1984a01d1f32c734d135ce92da5fe9a106f15b170c78a5135d",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "76898ce0fc791e325916d9b9710d05d9fc59c9804d13cdf786726816d5731534",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "7e62d8d9a5dc0d82568845f2a0703f1d79629f5ee0e15408695e843b004ffd4b",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "b4ca85afb9538bdc23f08fa20d56dc9449d9249ec3343a779586e32063114ec4",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "6c3397d70f6bb67107acbb7b908c91b88c9d4cf30421ac1386a93d08d6d30d3b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "7d04ec63759aaeb00155cf4ff9761db07e0ccfd0f4220ba40fc727288705a9dc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].resources.limits is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "ef356bbf959664aa98594a1c37803202b93d49c42c0c4e212c7b41f69af7b544",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test6].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "0a308a859e378fd35bc9455bd9588ed738ec0609ece2f23a21d04cef46b9ebc0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "b4ca85afb9538bdc23f08fa20d56dc9449d9249ec3343a779586e32063114ec4",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "99a59217098916950fc23335f79c0ea4328afe8ad4f7a4937b526ed71be8d4e8",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				}
			]
		},
		{
			"query_name": "Memory Requests Not Defined",
			"query_id": "21719347-d02b-497d-bda4-04a03c8e5b61",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#requests",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Memory requests should be specified",
			"description_id": "a77e5da7",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "b2d366bf2a3eef7b1e5482c28ef483407b62e77205deae45714163e45729493c",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "6757f2edac01597ff996bbdf1594ee7ac26208b24d48064ddd1ced946a1f3396",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "e2e5fe61d373e085cdd32702fe4fd7d04e785d46f4a4c3f46946196190abe29e",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "5efa4b8de3f3c724443ee7f1ee3c1deaa9fd9a7b445743a4d7d66fe5d38aba83",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "8795cc8b1f81dff1b4da7d89fda89147aa57937aeb4761f35fa3c3ac344a4318",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "60059448c588dda7474bca42d2027c07b2aa621e5a9cdd9665bfdcccb722dcb1",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[name1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "fde499680b4f5aeae71310d9e710fd2270325f0d5eadb6ab491b7683e6e6fcbb",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.resources is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "54fb2882aabeb5dbaabff940d1109904337d506594ebc642efff76543a5e6519",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "66665ea61f4d09b35dcd506677279ff81ea6d2ca41c6a686fabc0ccf851000a0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "aad3e91d4a92d6a0170f478fae7481280230aa68517880fa2a0c7802b73588f1",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.resources is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "4b885be3db61ffd436115e7ef223854742bd3a26e3eb9a35a99993bb770bea8b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "7918567ff08ae045f7b0121e4478b7a116d44c6176050e8d48ca39957ea54dbf",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "c038fe0e278c4df373f1a40b13caab75b460f6e19b1d6b4fa81da8237b1d6ea3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "421129a5abbed77e7f66e296cdecf9381a43337348c797601c33213dbfd166ea",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "d9cedc80aa73f1eef33deb186709bd588ffc96cc950da102d404ea98674d04d2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "d23c27ac9df84ef52f0c697df15fc9d55b2faaab34f24cf299ad01d26d8e0134",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[example1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "a006469547afae8214db976fec5534c001e88d46159ca4c6943eadb724da7280",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "4f176a4559636e0000147429d23f1ce9639bc5bf7ef1150ed1a52581538028e3",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "e11adb4ba088e6f0fdf868241f54a28992567156a68197ce3f042a4c2a0244d7",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "76e79408fb817ee255b77da456d9288e5cab00ddc013f8d2c5c7de33ad902cc7",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "c038fe0e278c4df373f1a40b13caab75b460f6e19b1d6b4fa81da8237b1d6ea3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "d947b2e5496c5b71a4dca472f1c97373373d277c70beedf4a85a553823285703",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "d9cedc80aa73f1eef33deb186709bd588ffc96cc950da102d404ea98674d04d2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "da18070eeb28dd3bc09d410181db84ec201d4ba8f7ef8348a5a3efb66d578e0d",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "065a2640b5b250c1826fe3618657f3eb132b6d071db216390e480b05de4e5593",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "7ff855a6de924b73a854c58e823fc8651fb1a418249ca50af4a05445f3d70fc9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "27a391deb7b7ab2398d489ab44571def336f4338292dd11438cdad237859a859",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "9a7b8bfd4f3d4f71241c4192555baa8593e553ac5a838090202675ec1ed46b79",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "77b56cf85fe5e31412ab9445e4be250ab3b096efa30ea2c47667dcdce7d7aa24",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "9211c0d73646189b70dd24b79549053f122823e90a8f601cafb9ee5f68e500fa",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "30110efd6fa8e6bf8c527a29e001d929f95397ba27a5096473083f5289a755ac",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "278dd5af72ba92733c8311b0c3f91a820bb5b8dd0711331fe65c09593d145031",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "32e70869b25a2d0f3c0abfbb5feee9407611447d75757ae33f9623173acbeef1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "b7c8f37128a8047015a3f28155f8b4bd4d16afeee6ae50701bcc5e630ac46811",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "065a2640b5b250c1826fe3618657f3eb132b6d071db216390e480b05de4e5593",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "41285241c475f5cc3d77ccd967438110dbb88fa71c0c2ff7a2bbae9e8940d903",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "0409aeb852224fb96d8c0b3cf5661a46651cfd62b94dccbfa215568967bac283",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "4b885be3db61ffd436115e7ef223854742bd3a26e3eb9a35a99993bb770bea8b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "66665ea61f4d09b35dcd506677279ff81ea6d2ca41c6a686fabc0ccf851000a0",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "89ef95c6bc918ceadcfd5c5088aa8c1b3316d1805d4fe77f9e86e069b4494225",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "c6305137046ffbd3e659d0b29f331707b5843efc08c09963b65be8182773890f",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "5efa4b8de3f3c724443ee7f1ee3c1deaa9fd9a7b445743a4d7d66fe5d38aba83",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "77b56cf85fe5e31412ab9445e4be250ab3b096efa30ea2c47667dcdce7d7aa24",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "e47bb60c3020b43ed5a7819a9f0cb07ebd667019b8d7b316e91bb6bf0f11aab1",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "41720a3f98d1fe764415cecb8a729997aef85a85ee75c44eea29afbb262e4f3f",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "f02183c231f7e016d933599a600cdbb072c550ac86b2d02dfe7efeebdcf6ae02",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.resources is set",
					"actual_value": "kubernetes_pod[test6].spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "d9cedc80aa73f1eef33deb186709bd588ffc96cc950da102d404ea98674d04d2",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "c0dd68302c0f902bf35e9e4d5e4871cd65e9f7c42a6089b521fad35d2add73f9",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.resources is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "d947b2e5496c5b71a4dca472f1c97373373d277c70beedf4a85a553823285703",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].resources is undefined"
				}
			]
		},
		{
			"query_name": "Misconfigured Password Policy Expiration",
			"query_id": "ce60d060-efb8-4bfd-9cf7-ff8945d00d90",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "No password expiration policy",
			"description_id": "23788841",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.12",
			"cis_description_title": "Ensure credentials unused for 45 days or greater are disabled",
			"cis_description_text": "AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.\nDisabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "13975a5ed924e79a6ba677adf96a1eddd2cd6ed8a24a2719d5905f22cbf76ace",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail].max_password_age",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'max_password_age' exists",
					"actual_value": "'max_password_age' is missing"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
					"similarity_id": "0f359d43b34e2fdcd031c9c8808c59f31c1f34aa5a5480af5675ef51f9d5f923",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_account_password_policy[expire].max_password_age",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'max_password_age' is lower 90",
					"actual_value": "'max_password_age' is higher 90"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
					"similarity_id": "46b7f92d65438e9c75ac65402a2cce87d50aa46d7b9400aa65f65bb252ce489a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[positive2].max_password_age",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'max_password_age' exists",
					"actual_value": "'max_password_age' is missing"
				}
			]
		},
		{
			"query_name": "NET_RAW Capabilities Disabled for PSP",
			"query_id": "9aa32890-ac1a-45ee-81ca-5164e2098556",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#required_drop_capabilities",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Containers need to have NET_RAW or All as drop capabilities",
			"description_id": "631e9c61",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\net_raw_capabilities_disabled_for_psp.tf",
					"similarity_id": "139bce23b52680df96f1536938f2c0f1dc306acd21d0a2685c1786e09fe41b32",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.required_drop_capabilities",
					"search_line": 0,
					"search_value": "",
					"expected_value": "spec.required_drop_capabilities 'is ALL or NET_RAW'",
					"actual_value": "spec.required_drop_capabilities 'is not ALL or NET_RAW'"
				}
			]
		},
		{
			"query_name": "Neptune Cluster With IAM Database Authentication Disabled",
			"query_id": "c91d7ea0-d4d1-403b-8fe1-c9961ac082c5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Neptune Cluster should have IAM Database Authentication enabled",
			"description_id": "88b26e61",
			"files": [
				{
					"file_name": "terraform\\aws\\neptune\\neptune.tf",
					"similarity_id": "f7179fb9e557d62facad2cf8f4d964082a969cc604c773b298c0b4920f2f0c2d",
					"line": 44,
					"issue_type": "IncorrectValue",
					"search_key": "aws_neptune_cluster[default].iam_database_authentication_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'iam_database_authentication_enabled' is set to true",
					"actual_value": "'iam_database_authentication_enabled' is set to false"
				}
			]
		},
		{
			"query_name": "Neptune Database Cluster Encryption Disabled",
			"query_id": "98d59056-f745-4ef5-8613-32bca8d40b7e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if Neptune Cluster Storage is securely encrypted",
			"description_id": "06036045",
			"files": [
				{
					"file_name": "terraform\\aws\\neptune\\neptune.tf",
					"similarity_id": "58a677f7203054567ada1419f351af628e6e1cd29241045a27aa71106e4e5566",
					"line": 46,
					"issue_type": "IncorrectValue",
					"search_key": "aws_neptune_cluster[default].storage_encrypted",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'storage_encrypted' should be true",
					"actual_value": "'storage_encrypted' is false"
				}
			]
		},
		{
			"query_name": "Network Interfaces With Public IP",
			"query_id": "c1573577-e494-4417-8854-7e119368dc8b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_interface#public_ip_address_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Network Interfaces must not be exposed with a public IP address",
			"description_id": "49907665",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\network_interface.tf",
					"similarity_id": "6903a4cbfa5a06749d422f976bb117a30324b6f6eaefa4579f9a8327cd2920bb",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_interface[fail].ip_configuration.public_ip_address_id",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_network_interface[fail].ip_configuration.public_ip_address_id' is undefined",
					"actual_value": "'azurerm_network_interface[fail].ip_configuration.public_ip_address_id' is defined"
				}
			]
		},
		{
			"query_name": "Network Policy Is Not Targeting Any Pod",
			"query_id": "b80b14c6-aaa2-4876-b651-8a48b6c32fbf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#match_labels",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if any network policy is not targeting any pod.",
			"description_id": "1598c368",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\network\\network_policy_is_not_targeting_any_pod.tf",
					"similarity_id": "99832ff77055a5efa6c2dc693104891a3e4d42b0ed190409f6bd50792b7c1013",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_network_policy[example].spec.pod_selector.match_labels",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_network_policy[example].spec.pod_selector.match_labels is targeting at least a pod",
					"actual_value": "kubernetes_network_policy[example].spec.pod_selector.match_labels is not targeting any pod"
				}
			]
		},
		{
			"query_name": "Non Kube System Pod With Host Mount",
			"query_id": "86a947ea-f577-4efb-a8b0-5fc00257d521",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "A non kube-system workload should not have hostPath mounted",
			"description_id": "5b17fdb1",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "4cb42e6b97e676b63d14808e3b75f24d9fda7169b7f3fa6b923bca7f87c80497",
					"line": 53,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Resource name 'terraform-example1' in non kube-system namespace 'default' should not have host_path '/var/log' mounted",
					"actual_value": "Resource name 'terraform-example1' in non kube-system namespace 'default' has a host_path '/var/log' mounted"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "debfbc37f54f0f3b5758d554718bf5f5544525bf6526233edd651eef95b4db17",
					"line": 53,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Resource name 'terraform-example' in non kube-system namespace 'kube' should not have host_path '/var/log' mounted",
					"actual_value": "Resource name 'terraform-example' in non kube-system namespace 'kube' has a host_path '/var/log' mounted"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "aa442b0894215ec66005758963289546de328d4cdfdd7a3db8af8148de102cec",
					"line": 112,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_persistent_volume[test2].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Resource name 'terraform-example2' in non kube-system namespace 'default' should not have host_path '/var/log' mounted",
					"actual_value": "Resource name 'terraform-example2' in non kube-system namespace 'default' has a host_path '/var/log' mounted"
				}
			]
		},
		{
			"query_name": "OSLogin Is Disabled For VM Instance",
			"query_id": "d0b4d550-c001-46c3-bbdb-d5d75d33f05f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if any VM instance disables OSLogin",
			"description_id": "a0cc649c",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\instance\\compute_instance.tf",
					"similarity_id": "9c927ef4d20e9cec0915e70df24fd5e9a42f07a3002ca50e14d7edd9d29b9dc0",
					"line": 50,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_instance[default].metadata.enable-oslogin",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_compute_instance[default].metadata.enable-oslogin is true or undefined",
					"actual_value": "google_compute_instance[default].metadata.enable-oslogin is false"
				}
			]
		},
		{
			"query_name": "PSP Allows Privilege Escalation",
			"query_id": "2bff9906-4e9b-4f71-9346-8ebedfdf43ef",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#allow_privilege_escalation",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "PodSecurityPolicy should not allow privilege escalation",
			"description_id": "1cdd3f21",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "cb06d95f752d134013a568a35a3de87c8e2c7de3667942c380dc5b5ac1221052",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_privilege_escalation.tf",
					"similarity_id": "3af735ea9d6d20d97e53ae9ed6900c3a6359355494839bef825e37de15b09995",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to true"
				}
			]
		},
		{
			"query_name": "PSP Allows Sharing Host IPC",
			"query_id": "51bed0ac-a8ae-407a-895e-90c6cb0610ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#host_ipc",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Pod Security Policy allows containers to share the host IPC namespace",
			"description_id": "45566e38",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_sharing_host_ipc.tf",
					"similarity_id": "ea143b34b81a1cc82c7265a3b35f96ba57150b9f0c86a29404b6386e51eb9494",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example2].spec.host_ipc",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_ipc' is undefined or false",
					"actual_value": "Attribute 'host_ipc' is true"
				}
			]
		},
		{
			"query_name": "PSP Set To Privileged",
			"query_id": "a6a4d4fc-4e8f-47d1-969f-e9d4a084f3b9",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#privileged",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Do not allow pod to request execution as privileged",
			"description_id": "5ca96212",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\psp_set_to_privileged.tf",
					"similarity_id": "7dcd709e4eb849c110d196e9b63ae1cf946cfb15b776384f6cafe1ffd34cdce3",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.privileged",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.privileged is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.privileged is not set to false"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "bf6c9f65a98a0711c6ad789b8e43e3d5161bca6859e48e5de31cdbc36f5782f0",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.privileged",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.privileged is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.privileged is not set to false"
				}
			]
		},
		{
			"query_name": "PSP With Added Capabilities",
			"query_id": "48388bd2-7201-4dcc-b56d-e8a9efa58fad",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#allowed_capabilities",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "PodSecurityPolicy should not have added capabilities",
			"description_id": "f3ad2d09",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\psp_with_added_capabilities.tf",
					"similarity_id": "899d64ec787b8f3050b414972395cf63fcc27d95e5ac55e90ed3965dde82b7cf",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allowed_capabilities",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Pod Security Policy example does not have allowed capabilities",
					"actual_value": "Pod Security Policy example has allowed capabilities"
				}
			]
		},
		{
			"query_name": "Password Without Reuse Prevention",
			"query_id": "89806cdc-9c2e-4bd1-a0dc-53f339bcfb2a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy#password_reuse_prevention",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Check if IAM account password has the reuse password configured with 24",
			"description_id": "37be9529",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 1.9",
			"cis_description_title": "Ensure IAM password policy prevents password reuse",
			"cis_description_text": "IAM password policies can prevent the reuse of a given password by the same user. It is recommended that the password policy prevent the reuse of passwords.\nPreventing password reuse increases account resiliency against brute force login attempts.",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
					"similarity_id": "1034e8222c558f04d502819d25e4fad856d748d17f8ac1760b8c8544590aa584",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'password_reuse_prevention' should be set with value 24",
					"actual_value": "'password_reuse_prevention' is undefined"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
					"similarity_id": "8bcf7f55b5786b88882a6c75a01f34544b724417c21d0716a5133888de0778ef",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[expire]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'password_reuse_prevention' should be set with value 24",
					"actual_value": "'password_reuse_prevention' is undefined"
				},
				{
					"file_name": "terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
					"similarity_id": "053bac63a65fae90038567541d29754485c3d679da8e797e107035d1f39ed04f",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_account_password_policy[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'password_reuse_prevention' should be set with value 24",
					"actual_value": "'password_reuse_prevention' is undefined"
				}
			]
		},
		{
			"query_name": "Policy Without Principal",
			"query_id": "bbe3dd3d-fea9-4b68-a785-cfabe2bbbc54",
			"query_url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "All policies, except IAM identity-based policies, should have the 'Principal' element defined",
			"description_id": "954ac1bf",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_attached_to_user.tf",
					"similarity_id": "aa3f412dd2cea286daaf47df4660bf59bf184389f2558532b58f5cd5866c9960",
					"line": 20,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_policy_attachment[positive1_3].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Principal' is set",
					"actual_value": "'Principal' is undefined"
				},
				{
					"file_name": "terraform\\aws\\kms\\kms_key_with_vulnerable_policy.tf",
					"similarity_id": "2e78f530c340f9172b86fb0c1ffc4f612b233988025d2388940d3ecc1c5384f4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_kms_key[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Principal' is set",
					"actual_value": "'Principal' is undefined"
				},
				{
					"file_name": "terraform\\aws\\sns\\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
					"similarity_id": "48363167ae88e41f38cedf4d62c53cac2bc5b799a159342e8a1532b6c4a39a59",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sns_topic_policy[positive2].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Principal' is set",
					"actual_value": "'Principal' is undefined"
				},
				{
					"file_name": "terraform\\aws\\glue\\glue_with_vulnerable_policy.tf",
					"similarity_id": "a9ce167bd0297d38103fdb04a31d0955df5588f5953d93fd4a51a08626ea8bd3",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_glue_resource_policy[example].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'Principal' is set",
					"actual_value": "'Principal' is undefined"
				}
			]
		},
		{
			"query_name": "PostgreSQL Log Checkpoints Disabled",
			"query_id": "3790d386-be81-4dcf-9850-eaa7df6c10d9",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for Postgre SQL Database Server, parameter 'log_checkpoints' is set to 'ON'",
			"description_id": "06d14345",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\PostgreSQLServerLogCheckpointEnabled.tf",
					"similarity_id": "3ea4f418800fbe08e0bfa7671a8960e78cc0f959fa7ab6bfc755267e9fa93c6e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[example_checkpoints].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.example_checkpoints.value' should be 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.example_checkpoints.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "PostgreSQL Log Connections Not Set",
			"query_id": "c640d783-10c5-4071-b6c1-23507300d333",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for PostgreSQL Database, server parameter 'log_connections' is set to 'ON'",
			"description_id": "743324e3",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\PostgreSQLServerLogConnectionsEnabled.tf",
					"similarity_id": "92125be246e76b763393933ea1ba4a6adfb6c123cb6aecb6bb8da069e73a4d01",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[example_connections].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.example_connections.value' is 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.example_connections.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "PostgreSQL Log Disconnections Not Set",
			"query_id": "07f7134f-9f37-476e-8664-670c218e4702",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for PostgreSQL Database, server parameter 'log_disconnections' is set to 'ON'",
			"description_id": "d183d853",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
					"similarity_id": "e4c923132cbd86b5373b50a45552f2efd4c858d1c7ab9051c27b76bca63df945",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[fail3].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.fail3.value' is 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.fail3.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "PostgreSQL Log Duration Not Set",
			"query_id": "16e0879a-c4ae-4ff8-a67d-a2eed5d67b8f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for PostgreSQL Database, server parameter 'log_duration' is set to 'ON'",
			"description_id": "2961eac3",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgre_sql_log_duration_not_set.tf",
					"similarity_id": "575ec587ee6585578cbb04957e342bb54ea87a41079ce4fd4153a6ddda264133",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[fail2].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.fail2.value' is 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.fail2.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "PostgreSQL Server Without Connection Throttling",
			"query_id": "2b3c671f-1b76-4741-8789-ed1fe0785dc4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Ensure that Connection Throttling is set for the PostgreSQL server",
			"description_id": "6f6649db",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\PostgreSQLServerConnectionThrottlingEnabled.tf",
					"similarity_id": "42182408f8c24536f1665f6ebf33a256a66087a3b8bd4b8a11625b48b0c8241a",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_configuration[example].value",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_configuration.example.value' should be 'ON'",
					"actual_value": "'azurerm_postgresql_configuration.example.value' is 'OFF'"
				}
			]
		},
		{
			"query_name": "Project-wide SSH Keys Are Enabled In VM Instances",
			"query_id": "3e4d5ce6-3280-4027-8010-c26eeea1ec01",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if SSH keys are enabled project-wide in VM instances",
			"description_id": "4b9307cd",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\instance\\compute_instance.tf",
					"similarity_id": "669315b58b56aaeda840c9815e14bea5d407da10ee3de065120327b0c27c4f6a",
					"line": 48,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_instance[default].metadata.block-project-ssh-keys",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_compute_instance[default].metadata.block-project-ssh-keys is true",
					"actual_value": "google_compute_instance[default].metadata.block-project-ssh-keys is false"
				}
			]
		},
		{
			"query_name": "Public Lambda via API Gateway",
			"query_id": "3ef8696c-e4ae-4872-92c7-520bb44dfe77",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Allowing to run lambda function using public API Gateway",
			"description_id": "1f20399a",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\public_lambda_via_api_gateway.tf",
					"similarity_id": "510a092ae079aa963fb7279453aadb41bf3efb20e0328004161611683d705081",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_permission[apigw].source_arn",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'source_arn' is not equal '/*/*'",
					"actual_value": "'source_arn' is equal '/*/*'"
				}
			]
		},
		{
			"query_name": "RBAC Roles with Read Secrets Permissions",
			"query_id": "826abb30-3cd5-4e0b-a93b-67729b4f7e63",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/role#rule",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Minimize access to secrets (RBAC)",
			"description_id": "a4fb7558",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\role\\rbac_roles_with_read_secrets_permissions.tf",
					"similarity_id": "d9a3bdbabb654d60d74ad05925a29da25b05a7aac771623d32ddd5dd0832ccf0",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_role[example1].rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Rules don't give access to 'secrets' resources",
					"actual_value": "Some rule is giving access to 'secrets' resources"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "09e7dc556b0c58e72a7be258adc9817072d8af3e07ee33bcd47d746dd421fc97",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cluster_role[cluster_role_name].rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Rules don't give access to 'secrets' resources",
					"actual_value": "Some rule is giving access to 'secrets' resources"
				}
			]
		},
		{
			"query_name": "RDP Access Is Not Restricted",
			"query_id": "678fd659-96f2-454a-a2a0-c2571f83a4a3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if Google Firewall ingress allows RDP access (port 3389)",
			"description_id": "f8156d3b",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\firewall\\google_compute_network_using_firewall_rule_allows_all_ports.tf",
					"similarity_id": "aa7b524eb4e66a6c7bb7dc2b1c1b2a95f1b81835fee16920106726b1156c22ff",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_firewall[fail].allow.ports",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_firewall[fail].allow.ports' does not include RDP port 3389",
					"actual_value": "'google_compute_firewall[fail].allow.ports' includes RDP port 3389"
				},
				{
					"file_name": "terraform\\google\\compute\\firewall\\compute_firewall.tf",
					"similarity_id": "78b36f4004ce681ea27f3748168a2de11ff3b62e6b34a3b73d5a53caa6172694",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_firewall[allow_all].allow.ports",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_firewall[allow_all].allow.ports' does not include RDP port 3389",
					"actual_value": "'google_compute_firewall[allow_all].allow.ports' includes RDP port 3389"
				}
			]
		},
		{
			"query_name": "RDS With Backup Disabled",
			"query_id": "1dc73fb4-5b51-430c-8c5f-25dcf9090b02",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Backup",
			"description": "RDS configured without backup",
			"description_id": "73fdfe55",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "89378140ee672a7da65ea53c78e847d422e978680f4673bcc3865a01a891045e",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'backup_retention_period' exists",
					"actual_value": "'backup_retention_period' is missing"
				},
				{
					"file_name": "terraform\\aws\\db_instance\\db_instance.tf",
					"similarity_id": "c31375bea1704476433f28f54cd284cf80b8f101a6da1b965d289234da9c6858",
					"line": 31,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[default].backup_retention_period",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'backup_retention_period' is not equal '0'",
					"actual_value": "'backup_retention_period' is equal '0'"
				},
				{
					"file_name": "terraform\\aws\\rds\\db_instance.tf",
					"similarity_id": "da3cc74beeb7c884bacad199429584f0d055cd0b6c4ffe2a8578cb6d93845bf7",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[fail].backup_retention_period",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'backup_retention_period' is not equal '0'",
					"actual_value": "'backup_retention_period' is equal '0'"
				},
				{
					"file_name": "terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
					"similarity_id": "0006947d246864d3de047c6336959c8d2a3b25c3c4ac9510409775dff5f20ad2",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'backup_retention_period' exists",
					"actual_value": "'backup_retention_period' is missing"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
					"similarity_id": "030457c2af6303533c4f951a00ddb840a0bcc96a2248a402f2ae654209917745",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'backup_retention_period' exists",
					"actual_value": "'backup_retention_period' is missing"
				}
			]
		},
		{
			"query_name": "REST API With Vulnerable Policy",
			"query_id": "b161c11b-a59b-4431-9a29-4e19f63e6b27",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_rest_api_policy#policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "REST API policy should avoid wildcard in 'Action' and 'Principal'",
			"description_id": "fb6080ac",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "b37a627fe7b3bc3b1931074a6a92710e379eda9194ff4f7a842f64cd2da67101",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_rest_api_policy[test].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_rest_api_policy[test].policy does not have wildcard in 'Action' and 'Principal'",
					"actual_value": "aws_api_gateway_rest_api_policy[test].policy has wildcard in 'Action' or 'Principal'"
				}
			]
		},
		{
			"query_name": "Readiness Probe Is Not Configured",
			"query_id": "8657197e-3f87-4694-892b-8144701d83c1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#readiness_probe",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Check if Readiness Probe is not configured.",
			"description_id": "a333fe96",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "cd9dc106476c8db9dd245e8ebb2de128ed0dbcecd4c51f990aa4b597ba783491",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "172b667eb782da41a4c7d77046978c19b4e79cd06ff8866b181ca6d95528d151",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "353783e25988ee82eaeec696d47662377b2ab3305d2e2e2d91397ea57454c662",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "563975c6e6b7680bc0c830237bf5036c15564ceddf9b3f5e09035b8db9913a02",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "202e53290150bb3ab10778c384b71acc01a664468674a09c9e64a1d16e32f8fb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"read_only_root_filesystem\": false}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "6dbd3b80873a46490025d7fba88b3823c501ad11f3d1164576d5820a0d41e7a9",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "99b882d5955d5649b6d83af6ef621af50219f63ae3a7561c852d60220b90b0dd",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "f585f52079b3235f9658c9596e2b7ad3ce451355eb06d9a3c9a7d30a82ac07dd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "98ab0ee0d6efdb045e5011069bcb9583bd4b215d31bfe0bfa36ff5a752227fd1",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[name1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "7ca83d007944472d8e8216305294ba36e24a080f1d6619d9bf69a4c171fd77f5",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "1e1f09a94e4630ade5409e69bf90273ba9db87cc26903d194fc8b122c031eff9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "2d3e50890e96dfdadc3f563d5f345f4157f4101459a02d8048838090ef2c062a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "e697646634078188176acfec13666962d0559db091414d6bb2aa5f5c24adf1bb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "4c28338c9486e6b004ab33506c48714e8dd90990f0decb3f6ae710c7dea65c7b",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test6].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "bd197fa953ddb07a1e9bd8f442bceb15748b313fca0ccfd652b3317d54b2dfa6",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "9fafe091a85a0f778ece6660e2a6411f58c997adae87f60acb3ebc633745120f",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "b36db7e1507c248bc8fe74b4e48de4a80d2676a974e6856ee8f1211c9247991c",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "2d3e50890e96dfdadc3f563d5f345f4157f4101459a02d8048838090ef2c062a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"privileged\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "6856352c8558cf82bb19d099232e2d20e9489b1cc2685cdc7454591fab32a059",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "ab6d33acef40b213f832b9dc68ed10551d5b1718a296e559e042aed042f0cb8a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "9fe7a68182b86006c4bd2111e4f40e11d4ac72a3e7c090c44279392b3d4a54e1",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "5ad6bb71ac34d00cc77e60fc56e91c8c9e88f41624e8ff71abb9f26effa9f59a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "90340055d4b5f15d6411b087058f53996615ae5256405d7aa51af4d02607e5fe",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "bd197fa953ddb07a1e9bd8f442bceb15748b313fca0ccfd652b3317d54b2dfa6",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "933739bca59ea5e1e8b45037780a20a833cf57851af0a11dd83bf192ce3db47d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "1ceb2395fe795ce9938173ecc1883e4ae7b79cf808c9218c94b81c89ae79672d",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "0112c145f3d15c2e4f5934d752309bdf0fa433c973f23003b8a722097a99733d",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "92eb0d05d84a66a81b7124a89d3a3f2a467284664eabcd404b2342da2a6796e1",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "5cbe7de13a5d588cf78c38c507eabd3f18bb3331e1f52c264b3788313733868d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example2\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"ALL\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "91a577e7484b1d6a64234f687483bde129592c418a08cf632207d088734d4a92",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "991c0b7c345a6cdb357e2ea97363b93d396d5231941536bd39c88ed4fdc7e4a8",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "76b19e88dda82f39b411a372bcfd4ebfd2985537d4605f595c36b1cae5c2bee6",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "5ad6bb71ac34d00cc77e60fc56e91c8c9e88f41624e8ff71abb9f26effa9f59a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"allow_privilege_escalation\": true}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "1b4e080388236bad3c1a0e3aae7ff101f89fe33b7dbe269eabd6d99451d931ee",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[example1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "a570a3dd6fa74ec8cae74a1ab01347792ccd4ce0763a4a2c8ab8f7a9aebaa7c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "a570a3dd6fa74ec8cae74a1ab01347792ccd4ce0763a4a2c8ab8f7a9aebaa7c8",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "89a693b97f3692993b7030d554a57c2fea103ac90ac0c2d092f773e1dcd71ce7",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "057a7fda3d47a4417b977302654a5a76f2f87d97d391e0ae3bbb18f7edbbe143",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "768d68cf82ebac1da22f0ea0c32e022b52f1c22c4e704e759cae50bf9ea1016f",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "89ab5efc16e0c118eceb4277d53466b39ebe2e807c86e67cc93f006348d6299a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "f585f52079b3235f9658c9596e2b7ad3ce451355eb06d9a3c9a7d30a82ac07dd",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "5cbe7de13a5d588cf78c38c507eabd3f18bb3331e1f52c264b3788313733868d",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "f14cba58ee3e420d868e9aebaf9d75cc1f0435e6b7d3c274f0f8417d47fe4b45",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "270e5908f1b95066434f07dd5a6a5234ea622662b0879a10db897a7762ee4b45",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.readiness_probe is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "08f5c4cea57d1507db14f92f1fec7af7f4c179e7412ddcddbb4af966ca418db2",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test1].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "202e53290150bb3ab10778c384b71acc01a664468674a09c9e64a1d16e32f8fb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "e697646634078188176acfec13666962d0559db091414d6bb2aa5f5c24adf1bb",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "1dd578ee9afa4f46ad20866b4581c33fe5bd95426e6f7bd8f37780fb179f24bc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "89ab5efc16e0c118eceb4277d53466b39ebe2e807c86e67cc93f006348d6299a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "a52c8ea66753ec2786cce237abe1d0b96b909d0d2a7c4b1abeff8d5d591fc51a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "57133c0ce99d9178a900da8f2fd3a3436f687444c6742bbd0a00142fa8aacd57",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.readiness_probe is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "e38d6a0542f2a5d39b67eba180fbbe417cb60b2b70f39c604cb1974f67d90927",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "172b667eb782da41a4c7d77046978c19b4e79cd06ff8866b181ca6d95528d151",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}, \"security_context\": {\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "172b667eb782da41a4c7d77046978c19b4e79cd06ff8866b181ca6d95528d151",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "ae15659f04d0e1b9bc90399aa7de7bc82f3b41d2d8df3c8a776d4984b9787cd9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "696d9450689a80eace46755d10617cbf857bc20aa06c136232d09537f97e4c07",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.readiness_probe is set",
					"actual_value": "kubernetes_pod[test].spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "c5bebd25e13d1eb3247c55404cd64c01969b3193be41bbc92f71640495e36eb8",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "6856352c8558cf82bb19d099232e2d20e9489b1cc2685cdc7454591fab32a059",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "1dd578ee9afa4f46ad20866b4581c33fe5bd95426e6f7bd8f37780fb179f24bc",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].readiness_probe is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "1e1f09a94e4630ade5409e69bf90273ba9db87cc26903d194fc8b122c031eff9",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].readiness_probe is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].readiness_probe is undefined"
				}
			]
		},
		{
			"query_name": "Redis Cache Allows Non SSL Connections",
			"query_id": "e29a75e6-aba3-4896-b42d-b87818c16b58",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/redis_cache",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Check if any Redis Cache resource allows non-SSL connections.",
			"description_id": "b7160c8c",
			"files": [
				{
					"file_name": "terraform\\azurerm\\redis\\redis_cache.tf",
					"similarity_id": "833b31d033ed0d66dbe0abacf58d9e631257120f0f017ff5ea94cf99ea2c30ef",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_redis_cache[fail].enable_non_ssl_port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_redis_cache[fail].enable_non_ssl_port' is false or undefined (false as default)",
					"actual_value": "'azurerm_redis_cache[fail].enable_non_ssl_port' is true"
				}
			]
		},
		{
			"query_name": "Redshift Cluster Logging Disabled",
			"query_id": "15ffbacc-fa42-4f6f-a57d-2feac7365caa",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#enable",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure Logging is enabled for Redshift Cluster",
			"description_id": "458fe7a3",
			"files": [
				{
					"file_name": "terraform\\aws\\redshift\\redshift_cluster.tf",
					"similarity_id": "dc4411f2db6f0ca24c06592ab8169feb25d2a124a143eca4aaee79f706e2789b",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_redshift_cluster.logging' is true",
					"actual_value": "'aws_redshift_cluster.logging' is undefined"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_using_default_port.tf",
					"similarity_id": "66ba30bc3edc2329c567833fba13dfc4874c7828b3b79ea802a7a65a71c2267e",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_redshift_cluster.logging' is true",
					"actual_value": "'aws_redshift_cluster.logging' is undefined"
				}
			]
		},
		{
			"query_name": "Redshift Cluster Without VPC",
			"query_id": "0a494a6a-ebe2-48a0-9d77-cf9d5125e1b3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#vpc_security_group_ids",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Redshift Cluster should be configured in VPC (Virtual Private Cloud)",
			"description_id": "6fd531fa",
			"files": [
				{
					"file_name": "terraform\\aws\\redshift\\redshift_using_default_port.tf",
					"similarity_id": "6a57a4395a935dc3466342610527dbdb642a08e7c0f72d8f295b7bcf24686342",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[positive1]",
					"search_line": 0,
					"search_value": "vpc_security_group_ids",
					"expected_value": "aws_redshift_cluster[positive1].vpc_security_group_ids is set",
					"actual_value": "aws_redshift_cluster[positive1].vpc_security_group_ids is undefined"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_cluster.tf",
					"similarity_id": "842aed0c3b6956eb64f43f70c63bd667523286315a811f030b9309590700cd42",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[fail]",
					"search_line": 0,
					"search_value": "vpc_security_group_ids",
					"expected_value": "aws_redshift_cluster[fail].vpc_security_group_ids is set",
					"actual_value": "aws_redshift_cluster[fail].vpc_security_group_ids is undefined"
				},
				{
					"file_name": "terraform\\aws\\redshift\\redshift_using_default_port.tf",
					"similarity_id": "8c37a4e69d06ff6354f15678d2679700c5e9a1627fca0fc4760210f42d23617e",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_redshift_cluster[positive1]",
					"search_line": 0,
					"search_value": "cluster_subnet_group_name",
					"expected_value": "aws_redshift_cluster[positive1].cluster_subnet_group_name is set",
					"actual_value": "aws_redshift_cluster[positive1].cluster_subnet_group_name is undefined"
				}
			]
		},
		{
			"query_name": "Role Definition Allows Custom Role Creation",
			"query_id": "3fa5900f-9aac-4982-96b2-a6143d9c99fb",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition#actions",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Role Definition should not allow custom role creation",
			"description_id": "a96dc1b9",
			"files": [
				{
					"file_name": "terraform\\azurerm\\authorization\\azurerm_role_definition.tf",
					"similarity_id": "3a06ece754cb51d1eba0afbb8a1761eb2aa1aaa80151b4b039466b2458e38dc9",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_definition[example].permissions.actions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_definition[example].permissions.actions does not allow custom role creation",
					"actual_value": "azurerm_role_definition[example].permissions.actions allows custom role creation"
				},
				{
					"file_name": "terraform\\azurerm\\iam\\role_definition_allows_custom_role_creation.tf",
					"similarity_id": "ca735208f129118c147b753aea3c5613b8614d4f3ba81fc4e451d366bb606e43",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_definition[example2].permissions.actions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_definition[example2].permissions.actions does not allow custom role creation",
					"actual_value": "azurerm_role_definition[example2].permissions.actions allows custom role creation"
				},
				{
					"file_name": "terraform\\azurerm\\iam\\role_definition.tf",
					"similarity_id": "6fa0a76cd7da12cc13a3a4a30ae2c1b74217e494feecd05ff29cb9f9105b41cf",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_definition[example].permissions.actions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_definition[example].permissions.actions does not allow custom role creation",
					"actual_value": "azurerm_role_definition[example].permissions.actions allows custom role creation"
				},
				{
					"file_name": "terraform\\azurerm\\iam\\role_assignment_not_limit_guest_users_permissions.tf",
					"similarity_id": "7dafd1883ba5bb2c73b7eee1d2a5da9771f194adae0db62abc19160ec0d6670f",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_role_definition[example].permissions.actions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_role_definition[example].permissions.actions does not allow custom role creation",
					"actual_value": "azurerm_role_definition[example].permissions.actions allows custom role creation"
				}
			]
		},
		{
			"query_name": "Root Containers Admitted",
			"query_id": "4c415497-7410-4559-90e8-f2c8ac64ee38",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod_security_policy#run_as_user",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Containers must not be allowed to run with root privileges, which means the attributes 'privileged' and 'allow_privilege_escalation' must be set to false, 'run_as_user.rule' must be set to 'MustRunAsNonRoot', and adding the root group must be forbidden",
			"description_id": "aa6d70b9",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "4e0f27fbaa39ceafc3fff20114de23d9b51d08996d38998b646ed12f677e1207",
					"line": 27,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.supplemental_groups.rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.supplemental_groups.rule limits its ranges",
					"actual_value": "kubernetes_pod_security_policy[example].spec.supplemental_groups.rule does not limit its ranges"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "8ac9e3c1a3e5be2058d8a02cd445200b7fef6b7b475d07b0b636a38891e0de01",
					"line": 37,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.fs_group.range.min",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.fs_group.range.min does not allow range '0' (root)",
					"actual_value": "kubernetes_pod_security_policy[example].spec.fs_group.range.min allows range '0' (root)"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\psp_set_to_privileged.tf",
					"similarity_id": "75c8f16b179418359b6351ad7d296edca00163d5e30fa5a524694f5e832c748f",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.privileged",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.privileged is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.privileged is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\psp_allows_privilege_escalation.tf",
					"similarity_id": "dbc53cd8a40a6089a2076b81d58215f0ddf406a33552490cb7a544d403b48670",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "6cce58394d378667c62e6a0e88becbeaf61c42617ca3218f5f554f2748eee93c",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.run_as_user.rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.run_as_user.rule is equal to 'MustRunAsNonRoot'",
					"actual_value": "kubernetes_pod_security_policy[example].spec.run_as_user.rule is not equal to 'MustRunAsNonRoot'"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "4d3a1cde3374c827f463afc63dac71cebdf1d0d0bbb0e77e18c3f9e765c34b77",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.allow_privilege_escalation is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\security\\root_containers_admitted.tf",
					"similarity_id": "a7b366bdfefac4c0ee6113237c6012f0b4a0be48bbeb6bc43c2606ce03dbf885",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod_security_policy[example].spec.privileged",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod_security_policy[example].spec.privileged is set to false",
					"actual_value": "kubernetes_pod_security_policy[example].spec.privileged is set to true"
				}
			]
		},
		{
			"query_name": "S3 Bucket Allows Public ACL",
			"query_id": "d0cc8694-fcad-43ff-ac86-32331d7e867f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 bucket allows public ACL",
			"description_id": "7b8886c1",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
					"similarity_id": "f64e8dc2333b131ac518c9e34a1768f0e95177ed126b1bea1cd5cb05f7fd2c81",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket_public_access_block[fail].block_public_acls",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'block_public_acls' is equal 'true'",
					"actual_value": "'block_public_acls' is missing"
				}
			]
		},
		{
			"query_name": "S3 Bucket Policy Accepts HTTP Requests",
			"query_id": "4bc4dd4c-7d8d-405e-a0fb-57fa4c31b4d9",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy#policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "S3 Bucket policy should not accept HTTP Requests",
			"description_id": "edbcd7bc",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
					"similarity_id": "478c2b669697f26df2e70f66f686ed53b53479fabda2686675a44c35eda7b2ee",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[b].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_policy[b].policy does not accept HTTP Requests",
					"actual_value": "aws_s3_bucket_policy[b].policy accepts HTTP Requests"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "52c0570b20867a817662924f35d102a87c082a382864943ca29936c68fcb7736",
					"line": 24,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail].policy does not accept HTTP Requests",
					"actual_value": "aws_s3_bucket[fail].policy accepts HTTP Requests"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_access_to_any_principal.tf",
					"similarity_id": "4c096a9deaa58f37bd211893f7716dea98eac6a9da489c9fb0073ff3c45c3e8a",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[positive1].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_policy[positive1].policy does not accept HTTP Requests",
					"actual_value": "aws_s3_bucket_policy[positive1].policy accepts HTTP Requests"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_allows_all_actions_from_all_principals.tf",
					"similarity_id": "700f18bee568d8f43e19ef2bd9beedceaabe6ba9368ec92972b1d85bb3f7f227",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket_policy[fail_all].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket_policy[fail_all].policy does not accept HTTP Requests",
					"actual_value": "aws_s3_bucket_policy[fail_all].policy accepts HTTP Requests"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "757e867ea3c0d903202eb9cbaadf9186c38b14a26bfd936f1f9be1cf77552dc4",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail_permissions].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_s3_bucket[fail_permissions].policy does not accept HTTP Requests",
					"actual_value": "aws_s3_bucket[fail_permissions].policy accepts HTTP Requests"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Versioning",
			"query_id": "568a4d22-3517-44a6-a7ad-6a7eed88722c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "S3 bucket without versioning",
			"description_id": "7614ce3b",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "0fa4b1f0ff13ad75f9b7185e943b62226bed50c7d90ef3dda5de4fd2d223308d",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_permissions]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning' is set to true",
					"actual_value": "'versioning' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
					"similarity_id": "2ea16772e3174a69df69ee163c1d81fe6b70a12313b1c59553fde3e1f5c3ef31",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[b]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning' is set to true",
					"actual_value": "'versioning' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "8cd74c1c709c09cf45772ab73f1390dae51a7f65095acfe1ff9070fa1e481323",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[positive1].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning.enabled' is set to true",
					"actual_value": "'versioning.enabled' is set to false"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "d853c17c38f090d856b90e4c6d438a1c38c4f2793f27b60271afa56f4d437179",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[public_bucket]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning' is set to true",
					"actual_value": "'versioning' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "23b5c0587075093722fa27c6673545a29d3992fe973e7de2cb596abdade2cd10",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[fail].versioning.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning.enabled' is set to true",
					"actual_value": "'versioning.enabled' is set to false"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "05e11f427f75471e040081b242fcf303138d4ba8e2fb121b88964d2d7d586125",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_static]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning' is set to true",
					"actual_value": "'versioning' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
					"similarity_id": "8a55511523e1b4029b90be31884187ff0cc5640302561cc4a6292380190d1cfe",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_mfa]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'versioning' is set to true",
					"actual_value": "'versioning' is undefined or null"
				}
			]
		},
		{
			"query_name": "SES Policy With Allowed IAM Actions",
			"query_id": "34b921bd-90a0-402e-a0a5-dc73371fd963",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ses_identity_policy#policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "SES policy should not allow IAM actions to all principals",
			"description_id": "3b263662",
			"files": [
				{
					"file_name": "terraform\\aws\\ses\\ses_policy_with_allowed_iam_actions.tf",
					"similarity_id": "0dc9de81b9e0f1c585df4b5af3ae10b0d52886e9087abb17a93b12191c748a99",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ses_identity_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy' does not allow IAM actions to all principals",
					"actual_value": "'policy' allows IAM actions to all principals"
				}
			]
		},
		{
			"query_name": "SNS Topic Not Encrypted",
			"query_id": "28545147-2fc6-42d5-a1f9-cf226658e591",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#kms_master_key_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "SNS (Simple Notification Service) Topic should be encrypted",
			"description_id": "2f15b2d0",
			"files": [
				{
					"file_name": "terraform\\aws\\sns\\sns_topic.tf",
					"similarity_id": "1d99e05b01e9a748ab199b92886a52ab930b0c43ff048c7694c9f5b156fb5590",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sns_topic[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SNS Topic is encrypted",
					"actual_value": "SNS Topic is not encrypted"
				},
				{
					"file_name": "terraform\\aws\\sns\\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
					"similarity_id": "cfd9001726a9d705e3642f7de94abd1d0a780bd7a05cfc4d8753e388d674770f",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_sns_topic[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SNS Topic is encrypted",
					"actual_value": "SNS Topic is not encrypted"
				}
			]
		},
		{
			"query_name": "SNS Topic Publicity Has Allow and NotAction Simultaneously",
			"query_id": "5ea624e4-c8b1-4bb3-87a4-4235a776adcc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "SNS topic Publicity should not have 'Effect: Allow' and argument 'NotAction' at the same time. If it has 'Effect: Allow', the argument stated should be 'Action'.",
			"description_id": "ddd0f677",
			"files": [
				{
					"file_name": "terraform\\aws\\sns\\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
					"similarity_id": "0aa6155e9e357c8f78b4ddd374a43467111047f0aa4d59a96d167a0509a91ba7",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_sns_topic_policy[positive2].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_sns_topic_policy[positive2].policy doesn't have 'Effect: Allow' and 'NotAction' simultaneously",
					"actual_value": "aws_sns_topic_policy[positive2].policy has 'Effect: Allow' and 'NotAction' simultaneously"
				}
			]
		},
		{
			"query_name": "SQL Analysis Services Port 2383 (TCP) Is Publicly Accessible",
			"query_id": "54c417bf-c762-48b9-9d31-b3d87047e3f0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if port 2383 on TCP is publicly accessible by checking the CIDR block range that can access it.",
			"description_id": "37ce6c0d",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "40506bd8bc3eac8669f40db37427c3aeb623b4a7293c8c094cdc2ce46dbfa0f8",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group doesn't openSQL Analysis Services Port 2383",
					"actual_value": "aws_security_group opens SQL Analysis Services Port 2383"
				}
			]
		},
		{
			"query_name": "SQL Server Auditing Disabled",
			"query_id": "f7e296b0-6660-4bc5-8f87-22ac4a815edf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for SQL Servers, 'Auditing' is set to 'On'",
			"description_id": "609638cc",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
					"similarity_id": "fe7f4bc2beb37d29e99a147ed5a068d14d412a500def03e9b2bfc8fd869b694b",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_server.positive2.extended_auditing_policy' exists",
					"actual_value": "'azurerm_sql_server.positive2.extended_auditing_policy' does not exist"
				}
			]
		},
		{
			"query_name": "SQL Server Predictable Active Directory Account Name",
			"query_id": "bcd3fc01-5902-4f2a-b05a-227f9bbf5450",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_active_directory_administrator",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Azure SQL Server must avoid using predictable Active Directory Administrator Account names, like 'Admin', which means the attribute 'login' must be set to a name that is not easy to predict",
			"description_id": "6ed21e26",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
					"similarity_id": "6817e918ab0a6a6505156217f58e1baca795ba9bcf95218ef9b24de0259262bb",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_active_directory_administrator[positive4].login",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_active_directory_administrator[positive4].login' is not predictable'",
					"actual_value": "'azurerm_sql_active_directory_administrator[positive4].login' is predictable"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
					"similarity_id": "ccf577750ebe4166d3666bde8eff942e21b19a23ae4c0ae1d293804d080a0225",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_active_directory_administrator[positive3].login",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_active_directory_administrator[positive3].login' is not empty'",
					"actual_value": "'azurerm_sql_active_directory_administrator[positive3].login' is empty"
				}
			]
		},
		{
			"query_name": "SQL Server Predictable Admin Account Name",
			"query_id": "2ab6de9a-0136-415c-be92-79d2e4fd750f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Azure SQL Server's Admin account login must avoid using names like 'Admin', that are too predictable, which means the attribute 'administrator_login' must be set to a name that is not easy to predict",
			"description_id": "d0bed58e",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "3fd8b15925bdba379c8854d778b1a9bd213ffc0338a5e334ecb21ad7f509ea64",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_server[positive3].administrator_login",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_server[positive3].administrator_login' is not empty'",
					"actual_value": "'azurerm_sql_server[positive3].administrator_login' is empty"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "f6e56e84fc4655a97f21ca1e2341907f0bf1d5eae254d9a9936ef2ee5a12bd4c",
					"line": 41,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_server[positive4].administrator_login",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_server[positive4].administrator_login' is not predictable'",
					"actual_value": "'azurerm_sql_server[positive4].administrator_login' is predictable"
				}
			]
		},
		{
			"query_name": "SQS Policy Allows All Actions",
			"query_id": "816ea8cf-d589-442d-a917-2dd0ce0e45e3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "SQS policy allows ALL (*) actions",
			"description_id": "afcb58e6",
			"files": [
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue_policy.fail.tf",
					"similarity_id": "3b12480ee729c6e9914bfe601d4eaade7f34bc67270d7936f8275e2668331f2e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_sqs_queue_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Action' is not equal '*'",
					"actual_value": "'policy.Statement.Action' is equal '*'"
				}
			]
		},
		{
			"query_name": "SQS Policy With Public Access",
			"query_id": "730675f9-52ed-49b6-8ead-0acb5dd7df7f",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "SQS policy with public access",
			"description_id": "534fb194",
			"files": [
				{
					"file_name": "terraform\\aws\\sqs\\sqs_queue_policy.fail.tf",
					"similarity_id": "f2af7e45a7b97e631674df0741cee86152d32be621d7fe9922d232438e0318bd",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_sqs_queue_policy[fail].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'policy.Statement.Principal.AWS' is not equal '*'",
					"actual_value": "'policy.Statement.Principal.AWS' is equal '*'"
				}
			]
		},
		{
			"query_name": "SQS VPC Endpoint Without DNS Resolution",
			"query_id": "e9b7acf9-9ba0-4837-a744-31e7df1e434d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc#enable_dns_support",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "SQS VPC Endpoint should have DNS resolution enabled",
			"description_id": "3ab3c05c",
			"files": [
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "6c7fc1c3dec0d4622837634640413b4616778667fd68099bbd59a3940612ce8c",
					"line": 99,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc_endpoint[sqs_vpc_endpoint].vpc_id",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_dns_support' is set to true or undefined",
					"actual_value": "'enable_dns_support' is set to false"
				}
			]
		},
		{
			"query_name": "SSH Access Is Not Restricted",
			"query_id": "c4dcdcdf-10dd-4bf4-b4a0-8f6239e6aaa0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if Google Firewall allows SSH access (port 22) from the Internet (public CIDR block)",
			"description_id": "c0e4fb6f",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\firewall\\compute_firewall.tf",
					"similarity_id": "9491ca7dbf41f6c0ebceee49a087341a2189fb69baf11134ef3d8ad076dbeca7",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_firewall[allow_all].allow.ports=0-65535",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_firewall[allow_all].allow.ports' does not include SSH port 22",
					"actual_value": "'google_compute_firewall[allow_all].allow.ports' includes SSH port 22"
				}
			]
		},
		{
			"query_name": "Seccomp Profile Is Not Configured",
			"query_id": "455f2e0c-686d-4fcb-8b5f-3f953f12c43c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#annotations",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if any resource does not configure Seccomp default profile properly",
			"description_id": "ad5436a1",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "4b624ba47cf2ce297ffb475255e85b796752d3fc19cb98b4963737b923179a65",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "9fc61d5a8fffda52b0a800bb6ef221f906c189fee3f4f65c9b7caf04bb7d6855",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "808c6a4017525b2442732d84e5c793086d38de84bedff2b05b77e233f76b48ed",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "c61e757b13a53a264a1c204dc8a6bf8cb6601aed62164cd9bf3157a2996173de",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "665fda98b64912b74e6266a76c8054601195213eb3d35ecf2f743a076cdae872",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].metadata.annotations is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "002fb869333a7cc5c24782c9fe5bfe0770cb7f3f9495d3a64e700daee07e6db5",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "1b4f53887be57b3814ec745e149da65197c95b87374114c8968807c73b586040",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "2b73b3bf5f82cf0f94461528e77f00b21df573605414dbad8fd15eb66814c68a",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "2cd5a23c3b1632e2994b616a9de9d6c5b99cb777318a8cff4940019e17fbe16f",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "d539abafb18a548437253718b9b89b35caeeecf8ea8bef4868c32d36a2d1c3ad",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "104dc9719ba141c3dc45a0502da6e293b9755cee22fd47fd8bc7658a58592f16",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "b7bf4861c4d46f5ef85066e901c849f3dd1cd38d726e3c87c6d5fd775b34612c",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "67e25514c2b117f55b2494662c1499d80fb24596bdf072f091249789d839696e",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "82334106bcb3403f3578a78adb03c9190dcd619f6a051d94cf9b352a27c42d10",
					"line": 19,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_deployment[example].spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "96fc0de20faa201e3079b449a37c1719c9bd6d9a7c3919a3b7579e402b053666",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\using_default_namespace.tf",
					"similarity_id": "d963540e0d52c439e4546a59247df27d3b55607bf02cb2b873f3a6d5397ef1ca",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "de754a217c2608dabc2bb72bc6285fff323efc4db2e25d4717b42ce6a667539b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "d1af73025bc2a26401292bf6f2c5c02d01c8f423a756479c70b740ad00686a63",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "94340ae17b72d81dcdf8a7f9339bb01f43ecfe405c45a46705625efd0bcded9f",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "ab67e3cfcb9817c2edeac6dbaf345cc1d469176bdcfd360fcfae588e24eb54ef",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "fb2c631a6bb6433f1adf3f0d664fd8381816ad86a2eb5a23d36fb7ddd1c63347",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "d46b8cc8f0bfb62a81d32065a5635fdc7461a9f5a730af817fc58300964fb212",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "a06f7d806f40bf5630abe2124e1d92d39aaf8808e3b482764c28677b08ca3318",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "850c253dc14d8d98efabee1528970050ecb0f813e4563692eab0fffbd3cadfa7",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "0c16985ac56c3bf7d558a03e404720a55c96275464c41ae382479194f7089a58",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "cd083b17d540b01187765043b41c339dc4e5e6739a36b8de6bdce861f9dd924e",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "a0cf974101df35bb92c55f0c75428cbb6fef93d9c99a8695856808feae02296c",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "e90a6888f3d5baff9e97eb709fa3e65288daaab3ac7d5d8cf00ea563391685b7",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "bdcd1003d6484ab3261c846d4c2a3093579040a8f002f5175700ba03f182f6db",
					"line": 57,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "7bfcd6ddcd61c0bdf4dab16c4dc5e9b19572a4b7325e5ac5975d19aa23aa66a1",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "b76f10cbe8a0247e5113bb3ff792800ec4e4eb5f62739b225d3019cf9580ebbe",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "81ee1353992686dd573a7acea433b33585934abaff8326988e9cdd9c8c218379",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "f71f3a1692760c1b54363bfd54810514b15f317e51d14d3c9b84ac579f938c4e",
					"line": 19,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_deployment[example].spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "1a2e4b28d88d42c34b2685abc94d08b290980b34d0bc87caccee6b69b4edd75f",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "032c63d02200c71fc0952c34db5c76f295ff38680ab646a7927c5c0118f60c0a",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "8018da84a145704112dc8a253c199a6f91abecc6bc1175fda1b7d406ec9b46ca",
					"line": 19,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_deployment[example].spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "25384b7213a8a39176b2fc3f5d64d6ccabe302d8f97b045a80dabe0d0be55043",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].metadata.annotations is set",
					"actual_value": "kubernetes_pod[busybox].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "4fbb7df050d867b58ad3c82e9fe6a3ea2189405239305ea4a0e05f62ecf19ba8",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[positive1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "a23bee37d56938a5b24407d5fd557d1b2655a54847723f0edf57c2ab6542aa3d",
					"line": 80,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_daemonset[example2].spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "af856d8ea1e5b3b481e0c2f84078a9c4de57711da509768b7ace34b9b5992c0b",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is set",
					"actual_value": "kubernetes_pod[example1].metadata.annotations.seccomp.security.alpha.kubernetes.io/defaultProfileName is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "a36d7c1ea43f9d178df9ac459452da3378c6c2f80b49370f69f7e672c043210b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[pod1].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "cb341e81a57c389095284eb03ff833a4d30d9eada8bb0483a79ca90a989483ca",
					"line": 158,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].metadata.annotations is set",
					"actual_value": "kubernetes_pod[test6].metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "8e0bf1b852d1811cc293e4e07f05ad09348300833dec3f22f3fa022a92d8da3b",
					"line": 142,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.metadata.annotations is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.metadata.annotations is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "c68316edef006c67703041895cdcceb0cac15b21d08df5876b3c48d2b0e8fa43",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].metadata.annotations is set",
					"actual_value": "kubernetes_pod[name1].metadata.annotations is undefined"
				}
			]
		},
		{
			"query_name": "Secrets Manager With Vulnerable Policy",
			"query_id": "fa00ce45-386d-4718-8392-fb485e1f3c5b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret_policy#policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Secrets Manager policy should avoid wildcard in 'Principal' and 'Action'",
			"description_id": "d348a5e7",
			"files": [
				{
					"file_name": "terraform\\aws\\secret_manager\\secrets_manager_with_vulnerable_policy.tf",
					"similarity_id": "13736cf02543786ae24a40fd696e870eef8fa5f2e4572b81c09da9baafbc582b",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "aws_secretsmanager_secret_policy[example].policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_secretsmanager_secret_policy[example].policy does not have wildcard in 'Principal' and 'Action'",
					"actual_value": "aws_secretsmanager_secret_policy[example].policy has wildcard in 'Principal' and 'Action'"
				}
			]
		},
		{
			"query_name": "Secretsmanager Secret Without KMS",
			"query_id": "a2f548f2-188c-4fff-b172-e9a6acb216bd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "AWS Secretmanager should use AWS KMS customer master key (CMK) to encrypt the secret values in the versions stored in the secret",
			"description_id": "c9c95b59",
			"files": [
				{
					"file_name": "terraform\\aws\\secret_manager\\secretsmanager_secret.tf",
					"similarity_id": "947b2cdc3e52a7ad3a2d4c9eeb352e4e4a9b7378401c5d82f1772d5714043695",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_secretsmanager_secret[{{fail}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_secretsmanager_secret.kms_key_id is defined and not null",
					"actual_value": "aws_secretsmanager_secret.kms_key_id is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\secret_manager\\secrets_manager_with_vulnerable_policy.tf",
					"similarity_id": "e748e160c9d8156406c9925d0dec2f9d4f9933ff85024cf3013ee55de8c051c9",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_secretsmanager_secret[{{not_secure_policy}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_secretsmanager_secret.kms_key_id is defined and not null",
					"actual_value": "aws_secretsmanager_secret.kms_key_id is undefined or null"
				}
			]
		},
		{
			"query_name": "Security Center Pricing Tier Is Not Standard",
			"query_id": "819d50fd-1cdf-45c3-9936-be408aaad93e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Make sure that the 'Standard' pricing tiers were selected.",
			"description_id": "6a9ab071",
			"files": [
				{
					"file_name": "terraform\\azurerm\\security_center\\security_center_subscription_pricing.tf",
					"similarity_id": "ea49b3175080ba8c2bd3683410ecb23f632c66206b12a266accc026107e2040a",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_security_center_subscription_pricing[fail_pricing].tier",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_security_center_subscription_pricing.fail_pricing.tier' is 'Standard'",
					"actual_value": "'azurerm_security_center_subscription_pricing.fail_pricing.tier' is 'Free'"
				}
			]
		},
		{
			"query_name": "Security Group is Not Configured",
			"query_id": "5c822443-e1ea-46b8-84eb-758ec602e844",
			"query_url": "https://www.terraform.io/docs/providers/azure/r/virtual_network.html",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Azure Virtual Network subnet must be configured with a Network Security Group, which means the attribute 'security_group' must be defined and not empty",
			"description_id": "e64d2982",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\security_group_is_not_configured.tf",
					"similarity_id": "4d99c7019c75a8206f46624ffbbcdf388a0a1de9b4c6b8fd3cfbdb3688a1e47f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azure_virtual_network[positive1].subnet",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azure_virtual_network[positive1].subnet.security_group' is defined and not null",
					"actual_value": "'azure_virtual_network[positive1].subnet.security_group' is undefined or null"
				}
			]
		},
		{
			"query_name": "Sensitive Port Is Exposed To Small Public Network",
			"query_id": "e35c16a2-d54e-419d-8546-a804d8e024d0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "A sensitive port, such as port 23 or port 110, is open for a small public network in either TCP or UDP protocol",
			"description_id": "9ea13a71",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "7bd85e6727cba45ab38f5c26de27aed6b739c1abd57ee6777b1e2c0cf53a8ade",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2383",
					"expected_value": "SQL Server Analysis (UDP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "f79ff2f7f9aa93a21887db634c64fd3347b82efcb434f010d17c7078f15194dd",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2375",
					"expected_value": "Docker (TCP:2375) should not be allowed",
					"actual_value": "Docker (TCP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "b03464370cad4dfb44ec2330fd7c876389b7a0e1ed0064f19432ad63df764d82",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2484",
					"expected_value": "Oracle DB SSL (UDP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "436dbba7e0f436ec10cd5804b1fee6ebda27e8374ba1f7ca88d0f0e34383c2a7",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2376",
					"expected_value": "Docker (TCP:2376) should not be allowed",
					"actual_value": "Docker (TCP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "7dc698d8d90fcfdf6813cf3cbc6533de60f2674afa494fb22a164ce5b5c9c700",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2483",
					"expected_value": "Oracle DB SSL (TCP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2483) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "ffc4a36cc4cd363ff02374110d4aa018fde14aee5b7b987cdf3388bea6e1cd28",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2383",
					"expected_value": "SQL Server Analysis (TCP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "56ee1fd93d097f4af28231126b28243cc6eb14df32a72929d9c273ce48e553b9",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2484",
					"expected_value": "Oracle DB SSL (TCP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "6c480f93b8c435cda67ab96a9275f31d5dbcccd4a2786f936b7e17855139580b",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2382",
					"expected_value": "SQL Server Analysis (UDP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "c86d51f7137103a2375278ac0502b388fd6fae36f5da0f1c53891f887fb58f80",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2483",
					"expected_value": "Oracle DB SSL (UDP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2483) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "648b63c43e6afd9640f4a5b545bd2fdb6c2a026563de17a37a80ea65641c9b0a",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "TCP,2382",
					"expected_value": "SQL Server Analysis (TCP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "52b8f4673a5d25171ddd6f0c5a107d8210412e56f8a1f6efa95c1cdbee2030f6",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2375",
					"expected_value": "Docker (UDP:2375) should not be allowed",
					"actual_value": "Docker (UDP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "1324efb2a324ae4fc06d9fdad0179f18f070374c6e3f4e7f6b2b81fbe1213188",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public].ingress",
					"search_line": 0,
					"search_value": "UDP,2376",
					"expected_value": "Docker (UDP:2376) should not be allowed",
					"actual_value": "Docker (UDP:2376) is allowed"
				}
			]
		},
		{
			"query_name": "Sensitive Port Is Exposed To Wide Private Network",
			"query_id": "92fe237e-074c-4262-81a4-2077acb928c1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "A sensitive port, such as port 23 or port 110, is open for a wide private network in either TCP or UDP protocol",
			"description_id": "127a32be",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Docker (TCP:2375) should not be allowed",
					"actual_value": "Docker (TCP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SQL Server Analysis (TCP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SQL Server Analysis (TCP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (TCP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Docker (UDP:2375) should not be allowed",
					"actual_value": "Docker (UDP:2375) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Oracle DB SSL (UDP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SQL Server Analysis (UDP:2382) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2382) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "SQL Server Analysis (UDP:2383) should not be allowed",
					"actual_value": "SQL Server Analysis (UDP:2383) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Docker (TCP:2376) should not be allowed",
					"actual_value": "Docker (TCP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Oracle DB SSL (TCP:2484) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2484) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Oracle DB SSL (TCP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (TCP:2483) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Docker (UDP:2376) should not be allowed",
					"actual_value": "Docker (UDP:2376) is allowed"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "6ddf2c001a650639c8af41b04b1b78f328b6de099bb0a46cf27ed0a736a5c05e",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Oracle DB SSL (UDP:2483) should not be allowed",
					"actual_value": "Oracle DB SSL (UDP:2483) is allowed"
				}
			]
		},
		{
			"query_name": "Serial Ports Are Enabled For VM Instances",
			"query_id": "97fa667a-d05b-4f16-9071-58b939f34751",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if VM instance enables serial ports",
			"description_id": "2967cde6",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\instance\\compute_instance.tf",
					"similarity_id": "6aaa737b64a1b708a4cf359191ff15911e30268ebb13d58b09f139104c6e9270",
					"line": 49,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_instance[default].metadata.serial-port-enable",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_compute_instance[default].metadata.serial-port-enable is false or undefined",
					"actual_value": "google_compute_instance[default].metadata.serial-port-enable is true"
				}
			]
		},
		{
			"query_name": "Service Account Allows Access Secrets",
			"query_id": "07fc3413-e572-42f7-9877-5c8fc6fccfb5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/role_binding#subject",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Kubernetes_role and Kubernetes_cluster_role when binded, should not use get, list or watch as verbs",
			"description_id": "93294320",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "1ee02a39f60beb711931b343600a2a88f21d2c3c25ee5f5935ead176b9ee1d00",
					"line": 49,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_role[role_name].rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role[role_name].rule.verbs should not contain the following verbs: [\"get\", \"watch\", \"list\", \"*\"]",
					"actual_value": "kubernetes_role[role_name].rule.verbs contain one of the following verbs: [\"get\", \"watch\", \"list\", \"*\"]"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "e8130b6f9f916a4b391510c28d97fe1a76cbfea61f077b581186911066f71421",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cluster_role[cluster_role_name].rule",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cluster_role[cluster_role_name].rule.verbs should not contain the following verbs: [\"get\", \"watch\", \"list\", \"*\"]",
					"actual_value": "kubernetes_cluster_role[cluster_role_name].rule.verbs contain one of the following verbs: [\"get\", \"watch\", \"list\", \"*\"]"
				}
			]
		},
		{
			"query_name": "Service Account Name Undefined Or Empty",
			"query_id": "24b132df-5cc7-4823-8029-f898e1c50b72",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#service_account_name",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "A Kubernetes Pod should have a Service Account defined so to restrict Kubernetes API access, which means the attribute 'service_account_name' should be defined and not empty.",
			"description_id": "ce3648b0",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "84c824d3d9000e9096c3478bc2bd2f4da36029f7f4694f44582f00c8e67f90df",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "fdaa173a442c7fa7f263a883c7a0a1b8c0af124b60be474cfbf691e8d6b32c0c",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "d0845f08d060e425f90daee6af57dc087560a31efb606e8c801a832cd89cb37e",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "fec56919f81215b01916d50af1df165760ebb6cc38facaa1955bbc6c170b28b5",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "d8f78bfee5b99d126b7577c9639de4388227b50dc5ddf800461b713590d79696",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "3c8f96bbdffd01a2290c00fdc4de4217704b9bdb795b01c525632c818bc40fab",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "77139ca4fc3422789ce56d03cb28574d9a8eb549eaabb073c4de21878d6851ce",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "d39070da1389ef42c72a73ae6076443d20a9d58b8432f60f69da254a722d6c97",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "c5ef6f0ee39daa2044fde99bc849942fcd00f33dd0dd3ca3393970955aebe596",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[pod1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "3af852efd9b0c05774fad76fb30bf9eaad7de3d8a99de72e8ba1a566940394a9",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "0a237d54ff76041024d405cb7aeed3d1a8126bce1a257dedf4c14ad24591da2a",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "22ef280cc2f7525405babbaa342ca5b97a94616942da40c12f7a8503bbdf8714",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "a3833d6f183849b4be1c3357f762bd8a50d65855246fe813f127e04368f0342b",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "738d0ace1d2b02eb38826dbfb5c56c0e81612d5d90bfc9d7718b614e363320c9",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "719c5079d5233ea8e42e123b6932f3b30456ff39384a028613e87124ae2f46ac",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "d2228e5682026c81c85c924adbcddf6438920a3c9ac7978b8d60fd6378285715",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "9388646110b5f3d05e12b95a9e10425bb5df6ee133e8a445537c99af534870ad",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[example1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "e3baa1b9abd18b1521a8e0c1b5ec78300b6b3ddd674477aada1ad1910766f4e6",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "939d4a9c9ef8e480d471a24f98ec606bc620ea2a82290b2b74f9b6b13b0816e4",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "af4883670926a0ac226ee76b3f70c3956e27318a33f86cf1e9cad0bd80007614",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "48d6d561c68a2223e7b6450b32f1ef686de15f0ff8b79a91ea61b0ec3c7f0521",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "6a6af6d77f6d0bb06d8ada3152a85a052029369cf076442b144fce76a8070959",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "bec937628d278ca6c119d78eaf2322dfee2e456f62eb5ce56478dd500d2ec1fb",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "9d2db04663fa4189997d4fac0e46552881d2b0440677b7828537f7f965477fd2",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "339ffe138bdb87880775b620a41834768f16ec620c3daa63fa3cfabbc6580a27",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "6dd28580588cbaf2e6f8a3102f470f208e81f32ea2995199def68d61726beeed",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "1945dabfbc46b8c8f585dd6c813a5630694ee826e70a6956d059266c5de80c31",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "7dea2ffca9c05c3c1f15bcc27bf863643fabdd8f2b1c9c5a5ffd157b09e1e67d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[name1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "b43cf58742a7d5e283131dcebab5c5f547d3c10404f7ad9cce28227cb39c0622",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[busybox].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "4506430406012113053bd92e8ff7214cab52d358474e6f3e5f940bd15dd356a5",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[positive1].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "06cf1065fccaccdc9de7a3a49ae8ca5a34d5223d9ef005f2b5ebfdedb64b1589",
					"line": 162,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test6].spec.service_account_name is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "e86e51a7d912ea3be32b028247aefcdc52dc0ae01bdd88ba8745148111c6289f",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.service_account_name is defined and not null",
					"actual_value": "kubernetes_pod[test].spec.service_account_name is undefined or null"
				}
			]
		},
		{
			"query_name": "Service Account Token Automount Not Disabled",
			"query_id": "a9a13d4f-f17a-491b-b074-f54bffffcb4a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#automount_service_account_token",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Defaults",
			"description": "Service Account Tokens are automatically mounted even if not necessary",
			"description_id": "9674e7f6",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "9e7c7d70929157c4397da16be2cd03c3eb460d8ae49a3edd74a4102198199cb3",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "e143377efe979a679a19df14a48b9f5d1808581e2888aa1684dfa0b384cb11ab",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "fd84784d1553b9d76c9d053b7f23f47ed11248c4db1e090fe37a3feaa34ab3dd",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "43fa1e7c697466e90eff166cb9527216266c05b842f04fae606720a5785e3a13",
					"line": 60,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "a00b4d16a6716309958797c1dc18d2378e3f6c4ae455e5e4832a599e0f71786a",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "503f9d07b5357214d866ace54916eb53e7a57015cc75e583ebfb960ba2436908",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[example1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "0781336f5864adffcfecb8669d2200a277ea5ba5400e161e5ec04ae75f55536d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "1eae846f922e33081be2182a41932fbfab0fd6041d91626ab7c81423713b3941",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[name1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "545585cef9ab08f7d7d0f0896c19b65b603a251401c6725abb780647ae273ac9",
					"line": 162,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test6].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "52a6b972debc04f04cf29f977a45a632e942c289dd908d9b3f2bc0b9d40ca64f",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "8ec691afa699f403a0fee77b42dd1ed48fb9db0e0374a682d8cdef8ea909524d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[pod1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "c8c933d503a1f625f4e88ee63cf5d539871b2e8deee7445472547c08f97f0642",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "2134a61b199aa4570b88445a075491fabc71d0384fef433fb65fe0f6a9667649",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "a2b1c8624b033352dc52d14ce4cf18c9905b1dec920200703636959598d36855",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "14c4e41049e1aad04a273fa10aa285fc4522907170e66a4ccd39a2398fcd2266",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "40d4553874219cf47920e07ee9d3b519d33dae2d6d94ee3a970b75f914a448df",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "1af30932798c16b7a18d5a1f63056c721778b5bffda74e6ef681e2af8c1b6e68",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "0603a24b02bf613d91373aa6df8ba78e3b3dad38d2af80bf6edbab91733cbf77",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "c0108ef9efe64c70c3e5ae8f026321bdc5e6ffeeb863bdae0a66ffdf7e065ab6",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "926ed4a1c4bcf09f16c65f13e6426c683d2e43e09d81681092d3704292c07ea0",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "daae378ed9136ab4f2a9a285bf89797832ba07063683ba8640ff35aea017ff61",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "607105d8ac1fb7429905a7f527063d33b8a6df529ec1e08825d8112153b76d38",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "688082bc794c0fe9f9ed0fa9af7a69e836f51d6ec48a857e6758b810fce30d3d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "3174c092cf6b12c80714a171505b3bb1d8d287aa02afcb98a212d6e1e19e38d1",
					"line": 144,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.automount_service_account_token",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.automount_service_account_token is set to false",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.automount_service_account_token is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "f7acc124ea811c64dcbbacb4b1ba4b61c88fd6a70411639b04056093be783517",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "7c9b930f4317af261d08199b66d5bfb3d34bc76d6aebe9a3453d63079e74354c",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.automount_service_account_token is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "8c372a530c1498d98108515963b339c4747ed5147c05dfff8ec769c37e2c62b6",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "0a6a779442fea1a3b4a65cc898a41bffed382981af0811505e3159f9eaaf5338",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "3a727da82b394533081f5870c41996860d77e371843959feee3c07299667e45b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "bf8389b7c73aabdf49c1092c2c8fb4e9d6f38eb184815421c21f8225340b2e55",
					"line": 88,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.automount_service_account_token",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.automount_service_account_token is set to false",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.automount_service_account_token is set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "1f3478fa25eac7abfb85781bdd6966f19347f6ac87440530f4d163c6976d703a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "186417ec460364a2a4d864de16562f494995f6ba016074b274b29da4bc8b4002",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "d8b048b527afdd5acdd2b9154bd7033dabf898486552c3fdf8af45b2f960b328",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "0d9f0890070cf9a281f8055de2391a2b7c4a6b4ed6259792acd409855458d2dd",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "9a2a40efae668e4c8179b7ea7537e1750c4a94f92d2ea841f16df352e5e3f558",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "907b253ec868614019cbc73981c92c307214c43baacd8c4b48f340758947629d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[busybox].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "43dee6bf167b6ada2413de23e982a14230addea60a31634fcf227dbaf525a04a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "80714c8afeea58c2cf35f21678a8690be7c9027f0360b8fc72b3c3bbf53df704",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "97e5b559d94081bc18223453de81e13bd72e5ece7f68d64bd46e07fff04ae1dd",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "c25741ab217f37cf13f0ed3667ea79ea4d896e1d66af21f77935ac37f82128e9",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[test].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "d114d64f9cc45d058200dca88e26413dddc7b56c7341564c84b324b1981b2e42",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "2900ccb549b48fc44f37b6492da43f87e3c0c8dd4a34b6a525aec38cab764dbd",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.automount_service_account_token is set",
					"actual_value": "kubernetes_pod[positive1].spec.automount_service_account_token is undefined"
				}
			]
		},
		{
			"query_name": "Service Account with Improper Privileges",
			"query_id": "cefdad16-0dd5-4ac5-8ed2-a37502c78672",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/iam_policy#role",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Service account should not have improper privileges like admin, editor, owner, or write roles",
			"description_id": "1b2dbbea",
			"files": [
				{
					"file_name": "terraform\\google\\project\\project_iam_binding.tf",
					"similarity_id": "76428763487160f32c4ac162ad80630ba9ac85755bb5ad2d96059b2059d08b11",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_binding[fail_service].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_binding[fail_service].role does not have admin, editor, owner, or write privileges for service account member",
					"actual_value": "google_project_iam_binding[fail_service].role has admin, editor, owner, or write privilege for service account member"
				}
			]
		},
		{
			"query_name": "Service Control Policies Disabled",
			"query_id": "5ba6229c-8057-433e-91d0-21cf13569ca9",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/organizations_policy",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if the Amazon Organizations' policies ensure that all features are enabled to achieve full control over the use of AWS services and actions across multiple AWS accounts using Service Control Policies (SCPs).",
			"description_id": "0fbcc152",
			"files": [
				{
					"file_name": "terraform\\aws\\service_control_policies\\disabled.tf",
					"similarity_id": "ac225cbe9694786dd6e827aef99359a2a510453e9fc0227c39ec9911008fabb8",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_organizations_policy[positive1].content",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Statements allow all policy actions in all resources",
					"actual_value": "Some or all statements don't allow all policy actions in all resources"
				}
			]
		},
		{
			"query_name": "Service With External Load Balance",
			"query_id": "2a52567c-abb8-4651-a038-52fa27c77aed",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/service",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Service has an external load balancer, which may cause accessibility from other networks and the Internet",
			"description_id": "18a78d03",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\service\\service_with_external_load_balance.tf",
					"similarity_id": "4d0998ada0d5a78a46f480a5f342cc5fb2b06fd935f3788462535e585e9095ce",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_service[example1].metadata.name.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "metadata.annotations using an external Load Balancer provider by cloud provider%!(EXTRA string=example1)",
					"actual_value": "metadata.annotations is exposing a workload, not using an external Load Balancer provider by cloud provider%!(EXTRA string=example1)"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "494d84dc6a432a56d2c30dd8a958116e98b4523d1d195fcc6e2416c8a471d350",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service[example].metadata.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'metadata.annotations' is set",
					"actual_value": "'metadata.annotations' is undefined"
				}
			]
		},
		{
			"query_name": "Small Activity Log Retention Period",
			"query_id": "2b856bf9-8e8c-4005-875f-303a8cba3918",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Ensure that Activity Log Retention is set 365 days or greater",
			"description_id": "224ff4f9",
			"files": [
				{
					"file_name": "terraform\\azurerm\\monitor\\capture-all-regions.tf",
					"similarity_id": "b0afaf053a62ca5bb876010154ea60a405dda7cdf9b64bd24d3d7ff464f0bb17",
					"line": 14,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_monitor_log_profile[fail].retention_policy.days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_monitor_log_profile[fail].retention_policy.days' is greater than or equal to 365 days or 0 (indefinitely)",
					"actual_value": "'azurerm_monitor_log_profile[fail].retention_policy.days' is lesser than 365 days or different than 0 (indefinitely)"
				},
				{
					"file_name": "terraform\\azurerm\\monitor\\monitor_log_profile.tf",
					"similarity_id": "2c985b7c5dded31736bd58a28b1665f1a1dcee69731c16a12686b8e2090a75bd",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_monitor_log_profile[fail_profile].retention_policy.days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_monitor_log_profile[fail_profile].retention_policy.days' is greater than or equal to 365 days or 0 (indefinitely)",
					"actual_value": "'azurerm_monitor_log_profile[fail_profile].retention_policy.days' is lesser than 365 days or different than 0 (indefinitely)"
				}
			]
		},
		{
			"query_name": "Small Flow Logs Retention Period",
			"query_id": "7750fcca-dd03-4d38-b663-4b70289bcfd4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Flow logs enable capturing information about IP traffic flowing in and out of the network security groups. Network Security Group Flow Logs must be enabled with retention period greater than or equal to 90 days. This is important, because these logs are used to check for anomalies and give information of suspected breaches",
			"description_id": "02e10365",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\network_watcher_flow_log.tf",
					"similarity_id": "cfebc8b058313ff41eeca1f8835578e4ef842b793994c3c5b0251d9803fbda62",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_watcher_flow_log[fail].retention_policy.days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'fail.retention_policy.days' is bigger than 90)",
					"actual_value": "'retention_policy.days' is bigger than 90 [7])"
				}
			]
		},
		{
			"query_name": "Small MSSQL Audit Retention Period",
			"query_id": "9c301481-e6ec-44f7-8a49-8ec63e2969ea",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure that for MSSQL Server, the Auditing Retention is greater than 90 days",
			"description_id": "ecd42771",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\mssql_database.tf",
					"similarity_id": "ba648076963f97d36849347745711b3588e980a264eb9026c3d55ea44edde4bc",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mssql_database[test].extended_auditing_policy.retention_in_days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'test.extended_auditing_policy.retention_in_days' is bigger than 90",
					"actual_value": "'extended_auditing_policy.retention_in_days' is 6"
				}
			]
		},
		{
			"query_name": "Small MSSQL Server Audit Retention",
			"query_id": "59acb56b-2b10-4c2c-ba38-f2223c3f5cfc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Make sure for SQL Servers that Auditing Retention is greater than 90 days",
			"description_id": "96124822",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server.tf",
					"similarity_id": "801fa7ef0e8e47eb832020e73994b7592aa29248b083cba7d1a15923906af519",
					"line": 27,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[example].extended_auditing_policy.retention_in_days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'example.extended_auditing_policy.retention_in_days' is bigger than 90",
					"actual_value": "'extended_auditing_policy.retention_in_days' is 6"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "aa56eb43814a098db3f287f574b4615653540a4a27c3d0bcf29f52401870c72e",
					"line": 28,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive3].extended_auditing_policy.retention_in_days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'positive3.extended_auditing_policy.retention_in_days' is bigger than 90",
					"actual_value": "'extended_auditing_policy.retention_in_days' is 6"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_database.tf",
					"similarity_id": "1aabd7ff6e9eb15489e9fa210d43b400f20214e1cbef02b991e4b933a8f5cc7b",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_database[example].extended_auditing_policy.retention_in_days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'example.extended_auditing_policy.retention_in_days' is bigger than 90",
					"actual_value": "'extended_auditing_policy.retention_in_days' is 6"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "b27b14dd5d661350af0ed825790917bbf19c52aeaacbefabbd946222df980d41",
					"line": 48,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_sql_server[positive4].extended_auditing_policy.retention_in_days",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'positive4.extended_auditing_policy.retention_in_days' is bigger than 90",
					"actual_value": "'extended_auditing_policy.retention_in_days' is 6"
				}
			]
		},
		{
			"query_name": "Stack Retention Disabled",
			"query_id": "6e0e2f68-3fd9-4cd8-a5e4-e2213ef0df97",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudformation_stack_set_instance#stack_set_name",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Backup",
			"description": "Make sure that retain_stack is enabled to keep the Stack and it's associated resources during resource destruction",
			"description_id": "fc66d737",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudformation_stack\\stack_retention_disabled.tf",
					"similarity_id": "e31031d41f4d501a66df89ae63112c303891e0b509879914f560a6c5113b8af1",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_cloudformation_stack_set_instance[fail].retain_stack",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudformation_stack_set_instance[fail].retain_stack is true ",
					"actual_value": "aws_cloudformation_stack_set_instance[fail].retain_stack is false"
				}
			]
		},
		{
			"query_name": "Storage Account Not Using Latest TLS Encryption Version",
			"query_id": "8263f146-5e03-43e0-9cfe-db960d56d1e7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Ensure Storage Account is using the latest version of TLS encryption",
			"description_id": "a38872a7",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\account\\storage_account.tf",
					"similarity_id": "17242b081f074050f0556fa0fb170ad80e13d9a2efe32f69527aabc0d082fc22",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_account[example].min_tls_version",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account[example].min_tls_version' is 'TLS1_2'",
					"actual_value": "'azurerm_storage_account[example].min_tls_version' is not 'TLS1_2'"
				},
				{
					"file_name": "terraform\\azurerm\\storage\\account\\StorageAccountDefaultNetworkAccessDeny.tf",
					"similarity_id": "09d650b764fd62e059f4b2628931f2d2428231a8c7bd05b8cc38726c22a631d5",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[example_deny]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account[example_deny].min_tls_version' is defined and not null",
					"actual_value": "'azurerm_storage_account[example_deny].min_tls_version' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
					"similarity_id": "be6031008248ed8cecb95581b56ad3f4d9695e24cc0c3628f5ce8d19b6db5064",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_storage_account[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_storage_account[positive2].min_tls_version' is defined and not null",
					"actual_value": "'azurerm_storage_account[positive2].min_tls_version' is undefined or null"
				}
			]
		},
		{
			"query_name": "Storage Share File Allows All ACL Permissions",
			"query_id": "48bbe0fd-57e4-4678-a4a1-119e79c90fc3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_share_file",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure Storage Share File should not allow all ACL (Access Control List) permissions - r (read), w (write), d (delete), and l (list).",
			"description_id": "33aa1747",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\storage_share_file_allows_all_acl_permissions.tf",
					"similarity_id": "52f7bc0e9d8f3e41bb012a5f153b1b906b7687c60a78e2cef492d67229b8e95b",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_share[example].acl.access_policy.permissions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_storage_share[example].acl.access_policy.permissions does not allow all ACL permissions",
					"actual_value": "azurerm_storage_share[example].acl.access_policy.permissions allows all ACL permissions"
				}
			]
		},
		{
			"query_name": "Storage Table Allows All ACL Permissions",
			"query_id": "3ac3e75c-6374-4a32-8ba0-6ed69bda404e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_table#permissions",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure Storage Table should not allow all ACL (Access Control List) permissions - r (read), w (write), d (delete), and l (list).",
			"description_id": "01751e5a",
			"files": [
				{
					"file_name": "terraform\\azurerm\\storage\\storage_table_allows_all_acl_permissions.tf",
					"similarity_id": "526d910c22016ba4b31cb57cfaf71d9e83cfaf220f616891b9b5c513e152c176",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_storage_table[table_resource].acl.permissions",
					"search_line": 0,
					"search_value": "",
					"expected_value": "azurerm_storage_table[table_resource].acl.permissions does not allow all ACL permissions",
					"actual_value": "azurerm_storage_table[table_resource].acl.permissions allows all ACL permissions"
				}
			]
		},
		{
			"query_name": "Unrestricted SQL Server Access",
			"query_id": "d7ba74da-2da0-4d4b-83c8-2fd72a3f6c28",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Azure SQL Server Accessibility must be set to a minimal address range, which means the difference between the values of the 'end_ip_address' and 'start_ip_address' must be lesser than 256. Additionally, both ips must be different from '0.0.0.0'",
			"description_id": "837de8dd",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\no-public-firewall-access.tf",
					"similarity_id": "830cbbfcba1124cb993a88c31ee105e755b7c72894c4f6743053bf63765a8695",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_firewall_rule[fail].start_ip_address",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_firewall_rule[fail].start_ip_address' The difference between the value of the 'end_ip_address' and of 'start_ip_address' is lesser than 256",
					"actual_value": "'azurerm_sql_firewall_rule[fail].start_ip_address' The difference between the value of the 'end_ip_address' and of 'start_ip_address' is greater than or equal to 256"
				},
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_firewall_rule.tf",
					"similarity_id": "5ede7b236b43d5ba3b8b728738262f52ec1bd82aff62621f79b4d291f5ed4100",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_sql_firewall_rule[fail].start_ip_address",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_sql_firewall_rule[fail].start_ip_address' The difference between the value of the 'end_ip_address' and of 'start_ip_address' is lesser than 256",
					"actual_value": "'azurerm_sql_firewall_rule[fail].start_ip_address' The difference between the value of the 'end_ip_address' and of 'start_ip_address' is greater than or equal to 256"
				}
			]
		},
		{
			"query_name": "Unscanned ECR Image",
			"query_id": "9630336b-3fed-4096-8173-b9afdfe346a7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#scan_on_push",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "Checks if the ECR Image has been scanned",
			"description_id": "791b37b8",
			"files": [
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
					"similarity_id": "378686a8aa165ec6f26cc438f8a8a80bfa033683aba4a50ed85b38189c3ae143",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[positive1].image_scanning_configuration is defined",
					"actual_value": "aws_ecr_repository[positive1].image_scanning_configuration is undefined"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository.tf",
					"similarity_id": "7d889b2ec9089df9500d464b3942fd9c8129cc6351e7bc17327b8ad243ce1098",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[name]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[name].image_scanning_configuration is defined",
					"actual_value": "aws_ecr_repository[name].image_scanning_configuration is undefined"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
					"similarity_id": "4a37f3b57db1f293e3fd7c1e1a5ae4c146077d8eaf85489b3ffc204704429c95",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[foo]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[foo].image_scanning_configuration is defined",
					"actual_value": "aws_ecr_repository[foo].image_scanning_configuration is undefined"
				}
			]
		},
		{
			"query_name": "Using Default Namespace",
			"query_id": "abcb818b-5af7-4d72-aba9-6dd84956b451",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#namespace",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "The default namespace should not be used",
			"description_id": "4d26d672",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\role\\role_binding_to_default_service_account.tf",
					"similarity_id": "1cbd16b86d8094b1c8d703fdcb348cb1e184b7050c144efae12fefb970b8a458",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_role_binding[example].metadata.namespace",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role_binding[example].metadata.namespace is not set to 'default'",
					"actual_value": "kubernetes_role_binding[example].metadata.namespace is set to 'default'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "122b1af521baa92b0ff6aac4d82685b035aa1903827779918094f76c3828684c",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "d783e924a718ec72e91c8a0568a100e55e8f1afb13f1165a29f9e89a3c22338e",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\service\\service_type_is_nodeport.tf",
					"similarity_id": "2ac2b824901e30c02088648d62ffd3edb572c53956639a6eea877f8c66f72acc",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service[example].metadata is set",
					"actual_value": "kubernetes_service[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "bfc01b3cf222aa145d10b789fe05b11b0e91b51b6a7605e450d329f5705affa4",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].metadata is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "a6587498a34aae802801a9d590060734f81fa740873e718616b61e38fa35c41a",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\service\\ingress_controller_exposes_workload.tf",
					"similarity_id": "6888c206c2ae165d647199dec78b48db004648c87d4730545266f55179075f14",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service[example].metadata is set",
					"actual_value": "kubernetes_service[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\using_default_namespace.tf",
					"similarity_id": "239e921f9f2e57d1da68e828f65c55b6d3ae19342e4c69eb81619483235f8f6a",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].metadata.namespace",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata.namespace is not set to 'default'",
					"actual_value": "kubernetes_pod[test].metadata.namespace is set to 'default'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "cd38602ac8e7d224c4078c9de4e88a65a576da5691ee638bf8693d04dd08c48b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].metadata is set",
					"actual_value": "kubernetes_stateful_set[fail].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "f7a4e29a9deb68e1ab85efeab47e1f51d7a1d37fed865ab104130097a069a67c",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].metadata is set",
					"actual_value": "kubernetes_deployment[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "c9083397a7d0ef0e704391bf47aabfcc6e0071b24daf575b682569c992a46bea",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\role\\permissive_access_to_create_pods.tf",
					"similarity_id": "6f3777fb80a125cc41cdeb4dee06682d59fb4c29e29b15b02feeae9282cec08c",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_role[example1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role[example1].metadata is set",
					"actual_value": "kubernetes_role[example1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "ce2867e238ab832c5efb678b7446a895da25b8d786a5675aaa4f2964dd21f3f5",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].metadata is set",
					"actual_value": "kubernetes_pod[name1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "2aaf5d5e3b2452388a70b98fa19613851e35a80edff6121201b96cea96a7550b",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "c73eb0496bfc7e31c121b4260abfc214ea2e5127b672bc18000af774110a439e",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "ac99f856dec7000ac20cffee82791da89eb4e1d137be4b08ca04d58285c38c10",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata is set",
					"actual_value": "kubernetes_pod[test1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "f68e84810e8763378af3146c9dacc9011c99f598fe80e51a3e7545ffc6c01925",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "23aee1a3899be1c0d583c919ab9863f5d118cfab41e7f3f7caf6600a06a72e1f",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_role[role_name].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role[role_name].metadata is set",
					"actual_value": "kubernetes_role[role_name].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "008371e886079a248b15bfeddf228a4d5436ec22bd9e12ca4ee35e7258a77587",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "133d841dc85434136b2300a22216e597c80b1d822120ff67eebf6353565d04e4",
					"line": 127,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].metadata is set",
					"actual_value": "kubernetes_cron_job[demo3].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "6d313f0104dfc9f7e2e150de2e67ae2e4010892ecad6974d5ccd95e1a2d3775d",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].metadata is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "d4d224123de1f7bbdfd89b52a2510fec324252e09bdca1a447a914347cefaf68",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "ca50a3dd593cf2e9907cd47948d1d05882c912ff32ed1de63b3553f41fec13d9",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].metadata is set",
					"actual_value": "kubernetes_pod[busybox].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "73de311744fc9907293bfe3a0374d41348822f7f3f3f39a8a3e5bde7d89548ef",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].metadata is set",
					"actual_value": "kubernetes_cron_job[demo].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\service_account\\default_service_account_in_use.tf",
					"similarity_id": "4bd4146e9ae461b33d82e907eb3bce9fb9782a9f9f96cfbcb4baeef8d9761636",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service_account[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service_account[example].metadata is set",
					"actual_value": "kubernetes_service_account[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "5b7924f4ed05d57b86fe7a00c0d048783746fecdc9c46f232d9546b38cf122d7",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "a6622985bcd6565428336ae92e3fd73c577836ca0f2b9fb07c6b75f754beb0cd",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].metadata is set",
					"actual_value": "kubernetes_deployment[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "166b8947f5c29ca9e347a038fbd54a0485c29f7e603c080e7b4904c700ecc1b2",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "7fda920d2a4bf6e3c3ff8aaea62a31af775a08fd3fd81e2ba1bf4fa21a49035a",
					"line": 158,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].metadata is set",
					"actual_value": "kubernetes_pod[test6].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "1a9a3a08395cfd6a5eeea44caaaddc68fdfc7d4c81fff0ae3da1e4fbcf62b33c",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "f5c7d7528c70ae9863f39a6c245da8edf2ee793d7609d48cda40d63b68ddc04f",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\using_default_namespace.tf",
					"similarity_id": "add5120977b713d0dd93eab27d2616ca3ade19aef6610e9b6a1ed8d7b45cea0d",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[test2].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[test2].metadata is set",
					"actual_value": "kubernetes_cron_job[test2].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\service\\service_with_external_load_balance.tf",
					"similarity_id": "80cf783e428699c94e4726c5924658a637b1fdfddbc040c51191d7a9bfc520cc",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_service[example1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service[example1].metadata is set",
					"actual_value": "kubernetes_service[example1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "802c2fb2aba52e9e9ec62f1d10ca8dcfb71b3926e7738993d94f90a49c0e7a66",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "88bb17506fd08b9f6d44d60813a96bd6d16634b8ed89037d06ee9132fa3de582",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "f96dcae408431980ec8ac72d3a245e3ca476129a1ba156dae796cd5a0b6addde",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata is set",
					"actual_value": "kubernetes_pod[test1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "a291cfed07c8440f01adb24308f96c7f4838337c1353be23df3032064066d9a5",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\service_account_allows_access_secrets.tf",
					"similarity_id": "c0147162db3ef8616662ef0e75a0298e9c378d155cbfcff4c992557289d98433",
					"line": 70,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_role_binding[example].metadata.namespace",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role_binding[example].metadata.namespace is not set to 'default'",
					"actual_value": "kubernetes_role_binding[example].metadata.namespace is set to 'default'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "e8f7ec4fddc82e692bb3b00bd37203243f1f36391bcf10df3b7deb5ced18bea2",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "c992ebf65c2fec26a4c2cbeb7defab893b979e5446e95cccb99d4902f3e51aca",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].metadata is set",
					"actual_value": "kubernetes_stateful_set[prometheus].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "b3028d8d2877868d0331d3f29c9f1453e4b2359a7217442a5c57d2fa400c6f94",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].metadata is set",
					"actual_value": "kubernetes_pod[pod1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "baa43ad09001920d0f37c84a448e43e28852704209eaf584f2dfb6aa8ad983f6",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "94d6326a3ff563cb7c41dfb396bfda1a1a6b76011c63746b1df47a57150e4011",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "d6f512dad0792c32ab23150a9e1983b1c23774012b14d87e6c2f4b3ee7a78e4b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].metadata is set",
					"actual_value": "kubernetes_pod[example1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "3e6b0f523d2ef5571ed5f381bc8c1551e9af894249799a3e81684ec1137e7d9d",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].metadata is set",
					"actual_value": "kubernetes_deployment[example].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "4c993e4e9fd17b8a0424e99ff38e67c93a4088a88e9eda27e2297e86de0c87c1",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata is set",
					"actual_value": "kubernetes_pod[test1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\role\\rbac_roles_with_read_secrets_permissions.tf",
					"similarity_id": "c62840e20b1c8da098d116956963f3ca3505f77139c83a2dd1afccfcd7ded57f",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_role[example1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role[example1].metadata is set",
					"actual_value": "kubernetes_role[example1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "2c517392e3ac0e3b3bf2935c720e3f0eae7ad16bf19126b592190967603ae91b",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "bbaeab8b2ece5f2097d6e2df890931353031f5bfad2eb40bbd7c577da0e1d001",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata is set",
					"actual_value": "kubernetes_pod[test].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "505d8d77b3ec1bed7956f6370581fe810da7f5098b0f03ea1305acac16f21851",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "f2fca1b3307a3401d1587c1f7cba21f0147c83e889ca0e14de00f0f97aba7167",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata is set",
					"actual_value": "kubernetes_pod[positive1].metadata is undefined"
				}
			]
		},
		{
			"query_name": "Using Default Service Account",
			"query_id": "3cb4af0b-056d-4fb1-8b95-fdc4593625ff",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Instances must not be configured to use the Default Service Account, that has full access to all Cloud APIs, which means the attribute 'service_account' and its sub attribute 'email' must be defined. Additionally, 'email' must not be empty and must also not be a default Google Compute Engine service account.",
			"description_id": "5c3e219f",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\instance\\compute_instance.tf",
					"similarity_id": "1bf2961da30b840aeeb3ece86ef1e40147643672f6e4ffea1603c1ed55f6299e",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "google_compute_instance[default].service_account",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_instance[default].service_account.email' is defined and not null",
					"actual_value": "'google_compute_instance[default].service_account.email' is undefined or null"
				}
			]
		},
		{
			"query_name": "VPC FlowLogs Disabled",
			"query_id": "f83121ea-03da-434f-9277-9cd247ab3047",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Observability",
			"description": "VPC hasn't got any FlowLog associated",
			"description_id": "cdbdeb30",
			"files": [
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "0754535ec93fbdcb82d3eb564782ae412b9f49cb4a2d9112a7686c2279ef7d28",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[main]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[main] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[main] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_without_network_firewall.tf",
					"similarity_id": "3368d2ced05cd2c07acd1879532705af34684ddab87f8a7f584fbc85cfb81780",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[positive]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[positive] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[positive] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "1bc813f4b24b97ee126ae6c0746b12b9e51b035dab0fd1fdcff0a10f4b7dc672",
					"line": 41,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[vpc1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[vpc1] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[vpc1] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "57712ecb77f334efa6629bc53e3b98905309dfbb38a85f7cc9e95a082e526bc3",
					"line": 72,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[vpc2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[vpc2] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[vpc2] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "fd7a52cf9ebdb8702ea2e6dd6e700b4e8d49dc1045e07e9e4c9eadd851a77e37",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[main]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[main] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[main] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc.tf",
					"similarity_id": "f56db7705ed615cc2b81f44cf51586d5073ea7574dbca6036155f221ba061b7d",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[eks_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[eks_vpc] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[eks_vpc] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\vpc\\nacl.tf",
					"similarity_id": "ccc3d889fc65f5a4421f88447b2132bb58503c962593a02ac2d80855536a1ef9",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[bad_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[bad_vpc] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[bad_vpc] is not the same as Flow Logs VPC id"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\vpc_default_security_group_accepts_all_traffic.tf",
					"similarity_id": "879f195d660b02d8c1b8789f437c005ab71922185d467b179c6e0da93de782c1",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_vpc[mainvpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[mainvpc] is the same as Flow Logs VPC id",
					"actual_value": "aws_vpc[mainvpc] is not the same as Flow Logs VPC id"
				}
			]
		},
		{
			"query_name": "VPC Subnet Assigns Public IP",
			"query_id": "52f04a44-6bfa-4c41-b1d3-4ae99a2de05c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "VPC Subnet should not assign public IP",
			"description_id": "2b7ea60d",
			"files": [
				{
					"file_name": "terraform\\aws\\subnet\\subnet.tf",
					"similarity_id": "25c06177a9560a127a425c70ce781d7173572c983fc7e3162068f508c3ca24cb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_subnet[test].map_public_ip_on_launch",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_subnet[test].map_public_ip_on_launch is set to false or undefined",
					"actual_value": "aws_subnet[test].map_public_ip_on_launch is set to true"
				}
			]
		},
		{
			"query_name": "VPC Without Network Firewall",
			"query_id": "fd632aaf-b8a1-424d-a4d1-0de22fd3247a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/networkfirewall_firewall#vpc_id",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "VPC should have a Network Firewall associated",
			"description_id": "2e7d55e6",
			"files": [
				{
					"file_name": "terraform\\aws\\vpc\\vpc_without_network_firewall.tf",
					"similarity_id": "4a74fc65a07c38cdc3141647a6a1cf8871055ce714184170e19035e3399bdfad",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[positive]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[positive] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[positive] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "91ee58266c8866c48d51f48d03f3443c5a4742c5e53f8f3bbb3fa01b8e6226cc",
					"line": 72,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[vpc2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[vpc2] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[vpc2] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\vpc\\nacl.tf",
					"similarity_id": "e3c3c3d260276a5346fd9efbe2e6a380837d2a008eed6696de42fddc81ef3191",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[bad_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[bad_vpc] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[bad_vpc] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "e06ff984dfe7b5fd8ec26104532bd4030c788af5b620eba045ef7b6b792ca30a",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[main]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[main] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[main] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "21fc81b2eb3e18cfcecebe2a0d45672421e0f3d7dd4fa43f2283820642c5d907",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[vpc1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[vpc1] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[vpc1] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc.tf",
					"similarity_id": "ca16aed16bcf565006643cae5904a46e5b97038abe34c5b3770d782fe76e3245",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[eks_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[eks_vpc] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[eks_vpc] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "b851f95180f9f263485dde616663f6e64b7c05384d682bd2f29417a50cd85d31",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[main]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[main] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[main] does not have an 'aws_networkfirewall_firewall' associated"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\vpc_default_security_group_accepts_all_traffic.tf",
					"similarity_id": "5149e04672fdb4c35ecea46fcb172a68b3c832826c1717253c85e9e78b0011b3",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_vpc[mainvpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_vpc[mainvpc] has an 'aws_networkfirewall_firewall' associated",
					"actual_value": "aws_vpc[mainvpc] does not have an 'aws_networkfirewall_firewall' associated"
				}
			]
		},
		{
			"query_name": "Virtual Network with DDoS Protection Plan disabled",
			"query_id": "b4cc2c52-34a6-4b43-b57c-4bdeb4514a5a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_network#ddos_protection_plan",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Virtual Network should have DDoS Protection Plan enabled",
			"description_id": "c08cb91b",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\virtual_network_with_ddos_protection_plan_disabled.tf",
					"similarity_id": "b07b45834755f5efa66ffa25a959001ae2b6f1f532428e64053245ae4e638c05",
					"line": 20,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_virtual_network[example_ddos]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_virtual_network[example_ddos].ddos_protection_plan' is defined and not null",
					"actual_value": "'azurerm_virtual_network[example_ddos].ddos_protection_plan' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\compute\\virtual_machine.tf",
					"similarity_id": "1653953b66bbf61bee7a30daefc7ac9c69301b4f1631e79ee00c4664fca8d3ef",
					"line": 39,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_virtual_network[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_virtual_network[example].ddos_protection_plan' is defined and not null",
					"actual_value": "'azurerm_virtual_network[example].ddos_protection_plan' is undefined or null"
				}
			]
		},
		{
			"query_name": "Volume Mount With OS Directory Write Permissions",
			"query_id": "a62a99d1-8196-432f-8f80-3c100b05d62a",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#volume_mount",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Containers can mount sensitive folders from the hosts, giving them potentially dangerous access to critical host configurations and binaries.",
			"description_id": "48833ef2",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "6da7cc08002727a513cce3c50157ab2638199d2a677fa895b6c140d93cb96af8",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "fe2e6f92a2ed214f803890e999eb65c47ba537a3a33ea3071b84b9890af24045",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "6da7cc08002727a513cce3c50157ab2638199d2a677fa895b6c140d93cb96af8",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "fe2e6f92a2ed214f803890e999eb65c47ba537a3a33ea3071b84b9890af24045",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "4aa9a233fc160b79074a546b02f31732f4caf56a21101b34404901bf5a2f6637",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "1214805e9909a7cd7c4bd790f8bfa9f823aa371cea470443b1ff44cbccd9facd",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "1214805e9909a7cd7c4bd790f8bfa9f823aa371cea470443b1ff44cbccd9facd",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"})].read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "ebf74402a8157006887895acb802a621d907a7c56690a62cc84eef9c2e7774c7",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container.volume_mount",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.volume_mount.read_only is set",
					"actual_value": "kubernetes_pod[test].spec.container.volume_mount.read_only is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "4aa9a233fc160b79074a546b02f31732f4caf56a21101b34404901bf5a2f6637",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].volume_mount[%!d(string={\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"})].read_only is undefined"
				}
			]
		},
		{
			"query_name": "WAF Is Disabled For Azure Application Gateway",
			"query_id": "2e48d91c-50e4-45c8-9312-27b625868a72",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/application_gateway",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Check if Web Application Firewall is disabled or not configured for Azure's Application Gateway.",
			"description_id": "97c222ec",
			"files": [
				{
					"file_name": "terraform\\azurerm\\application\\application_gateway.tf",
					"similarity_id": "94859ff8cc2174cfbb0c017712b5a6a550851512069ae678cd6b0bdb3952ce8d",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_application_gateway[network]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_application_gateway[network]' is set",
					"actual_value": "'azurerm_application_gateway[network]' is undefined"
				},
				{
					"file_name": "terraform\\azurerm\\waf\\application_gateway.tf",
					"similarity_id": "d71fca1db7a992cc59344cac80743b76a2fa167e2c3cd4a051ecd031af6771df",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_application_gateway[positive1].waf_configuration.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_application_gateway[positive1].waf_configuration.enabled' is true",
					"actual_value": "'azurerm_application_gateway[positive1].waf_configuration.enabled' is false"
				}
			]
		},
		{
			"query_name": "Workload Mounting With Sensitive OS Directory",
			"query_id": "a737be28-37d8-4bff-aa6d-1be8aa0a0015",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_path",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Workload is mounting a volume with sensitive OS Directory",
			"description_id": "2047253f",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "99af3d8270fdec90bfb721d333ffead8228ef983107157d03f9eeb73efefacd6",
					"line": 53,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Workload name 'terraform-example' should not mount a host sensitive OS directory '/var/log' with host_path",
					"actual_value": "Workload name 'terraform-example' is mounting a host sensitive OS directory '/var/log' with host_path"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "82b799c2dd2138a6da7c2109d321a89c70620f38a087247a4e3c5fdbd75b4611",
					"line": 112,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_persistent_volume[test2].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Workload name 'terraform-example2' should not mount a host sensitive OS directory '/var/log' with host_path",
					"actual_value": "Workload name 'terraform-example2' is mounting a host sensitive OS directory '/var/log' with host_path"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "e86843a7fc5b6960685da2cf4c79e0dc7e447461ef4e1cda91663e4a65b7b0e6",
					"line": 53,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.volume.host_path.path",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Workload name 'terraform-example1' should not mount a host sensitive OS directory '/var/log' with host_path",
					"actual_value": "Workload name 'terraform-example1' is mounting a host sensitive OS directory '/var/log' with host_path"
				}
			]
		},
		{
			"query_name": "AKS Private Cluster Disabled",
			"query_id": "599318f2-6653-4569-9e21-041d06c63a89",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#private_cluster_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Azure Kubernetes Service (AKS) API should not be exposed to the internet",
			"description_id": "3ec5eed5",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "f60907821953ddb09e62161d1a45d8647672c07c56b46b515003192538f4bdbe",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].private_cluster_enabled' is defined and set to true",
					"actual_value": "'azurerm_kubernetes_cluster[example].private_cluster_enabled' is undefined"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "454271214ecf501404db608d1b8a8cc75e01a9a8509dfe0b05510d291f27fb61",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].private_cluster_enabled' is defined and set to true",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].private_cluster_enabled' is undefined"
				}
			]
		},
		{
			"query_name": "AKS Uses Azure Policies Add-On Disabled",
			"query_id": "43789711-161b-4708-b5bb-9d1c626f7492",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#azure_policy",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Azure Container Service (AKS) should use Azure Policies Add-On",
			"description_id": "df6d2dcb",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "c8a492510d53bc4be0432b69bed7b0eacc5e7bdce9dfc928a850f307dc250677",
					"line": 39,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster].addon_profile.azure_policy.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].addon_profile.azure_policy.enabled' is set to true",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].addon_profile.azure_policy.enabled' is set to false"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "63fcac9278f2865ec08ff136a71d9546540b61f27ab83a9caae842198152725e",
					"line": 27,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_kubernetes_cluster[example].addon_profile",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].addon_profile.azure_policy' is defined and set to true",
					"actual_value": "'azurerm_kubernetes_cluster[example].addon_profile.azure_policy' is undefined or null"
				}
			]
		},
		{
			"query_name": "ALB Deletion Protection Disabled",
			"query_id": "afecd1f1-6378-4f7e-bb3b-60c35801fdd4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#enable_deletion_protection",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Application Load Balancer should have deletion protection enabled",
			"description_id": "224b3c6f",
			"files": [
				{
					"file_name": "terraform\\aws\\elb\\alb.tf",
					"similarity_id": "362b9ca1655727d690d316e559292d1406d6d0bde1c9bc156a654ef24272c815",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_alb[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_deletion_protection' is defined and set to true",
					"actual_value": "'enable_deletion_protection' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "cc3b68c49f3d33bc462e81b1f2a568dd79f7480270e79615060dcd6f6bb17ab1",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_deletion_protection' is defined and set to true",
					"actual_value": "'enable_deletion_protection' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_groups_not_used.tf",
					"similarity_id": "1d5c16cafca926e400821c8cc81008b373fb135e353b102a5ce9f4ec4ec80802",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[test]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_deletion_protection' is defined and set to true",
					"actual_value": "'enable_deletion_protection' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "d1ef39378e7b2b2a590f5aa51aef1de4280877b5bf66cba05125f9fd7923bde2",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_alb[disabled]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_deletion_protection' is defined and set to true",
					"actual_value": "'enable_deletion_protection' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lb\\redirect.tf",
					"similarity_id": "adcffb917e078ff1f388606aad919586ff512f689e8642e275da578d42d6f5c4",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[lb_bad_1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enable_deletion_protection' is defined and set to true",
					"actual_value": "'enable_deletion_protection' is undefined or null"
				}
			]
		},
		{
			"query_name": "API Gateway Deployment Without API Gateway UsagePlan Associated",
			"query_id": "b3a59b8e-94a3-403e-b6e2-527abaf12034",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_deployment",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "API Gateway Deployment should have API Gateway UsagePlan defined and associated.",
			"description_id": "a5480b6e",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "3701192706c277651fb01c411fa50153d53f8a1579e8caf10ce473e2b7f469bb",
					"line": 31,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_deployment[api_gw_deploy]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_deployment[api_gw_deploy] has a 'aws_api_gateway_usage_plan' resource associated. ",
					"actual_value": "aws_api_gateway_deployment[api_gw_deploy] doesn't have a 'aws_api_gateway_usage_plan' resource associated."
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "d0633fbb72454b902ea7f6716b594a79f1ffe3ba3b5f8ce4a897d3a34fc0898b",
					"line": 5,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_deployment[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_deployment[fail] has a 'aws_api_gateway_usage_plan' resource associated. ",
					"actual_value": "aws_api_gateway_deployment[fail] doesn't have a 'aws_api_gateway_usage_plan' resource associated."
				}
			]
		},
		{
			"query_name": "API Gateway Stage Without API Gateway UsagePlan Associated",
			"query_id": "c999cf62-0920-40f8-8dda-0caccd66ed7e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "API Gateway Stage should have API Gateway UsagePlan defined and associated.",
			"description_id": "72d08d94",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.tf",
					"similarity_id": "6687c31def1392250e4bd0e0aba369ac2de3e2561e5aee553d86e4adf156f40f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_stage[fail] has a 'aws_api_gateway_usage_plan' resource associated. ",
					"actual_value": "aws_api_gateway_stage[fail] doesn't have a 'aws_api_gateway_usage_plan' resource associated."
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
					"similarity_id": "c6662a0b90b2f31aca656d3aece72d7d1ff7b86d251e78ca76de607add565f6a",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_stage[fail] has a 'aws_api_gateway_usage_plan' resource associated. ",
					"actual_value": "aws_api_gateway_stage[fail] doesn't have a 'aws_api_gateway_usage_plan' resource associated."
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "d42085bd53d9e1c87fc1df87ebcf51c192ca1f28a08d0c06d1075d749e837d17",
					"line": 65,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_stage[api_gw_stage]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_api_gateway_stage[api_gw_stage] has a 'aws_api_gateway_usage_plan' resource associated. ",
					"actual_value": "aws_api_gateway_stage[api_gw_stage] doesn't have a 'aws_api_gateway_usage_plan' resource associated."
				}
			]
		},
		{
			"query_name": "App Service HTTP2 Disabled",
			"query_id": "525b53be-62ed-4244-b4df-41aecfcb4071",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "App Service should have 'http2_enabled' enabled",
			"description_id": "dee0c164",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "ada4ab44f587fa9cc02eb86943b9522d3dc1d556b5644d24920bd0c224d03608",
					"line": 43,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_app_service[fail].site_config",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].site_config.http2_enabled' is defined and not null",
					"actual_value": "'azurerm_app_service[fail].site_config.http2_enabled' is undefined or null"
				}
			]
		},
		{
			"query_name": "Azure Active Directory Authentication",
			"query_id": "a21c8da9-41bf-40cf-941d-330cf0d11fc7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/service_fabric_cluster#tenant_id",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure Active Directory must be used for authentication for Service Fabric",
			"description_id": "2c27e24e",
			"files": [
				{
					"file_name": "terraform\\azurerm\\service_fabric_cluster\\azure_active_directory_authentication.tf",
					"similarity_id": "45a65fc7379333ee8ee98778cb14fc369908a0bd10e8395f9ed10b2d60eaf846",
					"line": 20,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_service_fabric_cluster[fail_ad].azure_active_directory",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_service_fabric_cluster[fail_ad].azure_active_directory.tenant_id' is defined and not null",
					"actual_value": "'azurerm_service_fabric_cluster[fail_ad].azure_active_directory.tenant_id' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\service_fabric_cluster\\ServiceFabricClusterProtectionLevel.tf",
					"similarity_id": "43be791faa37b60c47d4dac87897b705340738b1a1ac5f08bd6b66a162280a34",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_service_fabric_cluster[example_level]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_service_fabric_cluster[example_level].azure_active_directory' is defined and not null",
					"actual_value": "'azurerm_service_fabric_cluster[example_level].azure_active_directory' is undefined or null"
				},
				{
					"file_name": "terraform\\azurerm\\service_fabric_cluster\\service_fabric_cluster.tf",
					"similarity_id": "1c28c1e22fa2e65cf3a6601de4308201b32e647daf292089d371237928c23b85",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_service_fabric_cluster[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_service_fabric_cluster[example].azure_active_directory' is defined and not null",
					"actual_value": "'azurerm_service_fabric_cluster[example].azure_active_directory' is undefined or null"
				}
			]
		},
		{
			"query_name": "Azure Front Door WAF Disabled",
			"query_id": "835a4f2f-df43-437d-9943-545ccfc55961",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/frontdoor#web_application_firewall_policy_link_id",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Azure Front Door WAF should be enabled",
			"description_id": "a84ac10d",
			"files": [
				{
					"file_name": "terraform\\azurerm\\frontdoor\\frontdoor.tf",
					"similarity_id": "8c59465b19137e44a69d5d8a2bebf03b722829e44899f6ab7d36a4f8d0436a76",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_frontdoor[fail].frontend_endpoint",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_frontdoor[fail].frontend_endpoint.web_application_firewall_policy_link_id' is defined and not null",
					"actual_value": "'azurerm_frontdoor[fail].frontend_endpoint.web_application_firewall_policy_link_id' is undefined or null"
				}
			]
		},
		{
			"query_name": "CDN Configuration Is Missing",
			"query_id": "1bc367f6-901d-4870-ad0c-71d79762ef52",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Content Delivery Network (CDN) service is used within an AWS account to secure and accelerate the delivery of websites. The use of a CDN can provide a layer of security between your origin content and the destination.",
			"description_id": "1b311401",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "684368b0b22f65014e1bc0a511645b4d1b67c5f085c5bac7027ef1088d9d26bb",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_cloudfront_distribution[s3_distribution]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[s3_distribution].enabled is set to 'true'",
					"actual_value": "resource.aws_cloudfront_distribution[s3_distribution].enabled is not defined"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "684368b0b22f65014e1bc0a511645b4d1b67c5f085c5bac7027ef1088d9d26bb",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "resource.aws_cloudfront_distribution[s3_distribution]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "resource.aws_cloudfront_distribution[s3_distribution].origin is defined",
					"actual_value": "resource.aws_cloudfront_distribution[s3_distribution].origin is not defined"
				}
			]
		},
		{
			"query_name": "CloudTrail Log File Validation Disabled",
			"query_id": "52ffcfa6-6c70-4ea6-8376-d828d3961669",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "CloudTrail log file validation should be enabled",
			"description_id": "1d528dfd",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 3.2",
			"cis_description_title": "Ensure CloudTrail log file validation is enabled",
			"cis_description_text": "CloudTrail log file validation creates a digitally signed digest file containing a hash of each log that CloudTrail writes to S3. These digest files can be used to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log. It is recommended that file validation be enabled on all CloudTrails.\nEnabling log file validation will provide additional integrity checking of CloudTrail logs.",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudtrail\\cloudtrail.tf",
					"similarity_id": "817cf29837f465d6226e89757db031614a72dc5d85bef7dca51bc109e1baa0d5",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudtrail[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_cloudtrail[fail].enable_log_file_validation' is set",
					"actual_value": "'aws_cloudtrail[fail].enable_log_file_validation' is undefined"
				}
			]
		},
		{
			"query_name": "Cloudfront Without WAF",
			"query_id": "1419b4c6-6d5c-4534-9cf6-6a5266085333",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "All AWS CloudFront distributions should be integrated with the Web Application Firewall (AWS WAF) service",
			"description_id": "8fa5ef1b",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "71133c31477da2f9843c0724aaa7e8605d53946dd0233055dd5a700fcebd278f",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[fail_defaultcert].web_acl_id",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'web_acl_id' exists",
					"actual_value": "'web_acl_id' is missing"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "365c7264cc06df1a194deaf13703a1cda41ddb7e422ed577d56e3b80cb8a03b5",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[s3_distribution].web_acl_id",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'web_acl_id' exists",
					"actual_value": "'web_acl_id' is missing"
				}
			]
		},
		{
			"query_name": "Cluster Admin Rolebinding With Superuser Permissions",
			"query_id": "17172bc2-56fb-4f17-916f-a014147706cd",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/cluster_role_binding#name",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Ensure that the cluster-admin role is only used where required (RBAC)",
			"description_id": "3cfeabe4",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\cluster_admin_role_binding_with_super_user_permissions.tf",
					"similarity_id": "7b0e1a62660dd376e8bd9ba59f16e3dd6ef233f4fc3d057f3e76b8d04cb0fa4c",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cluster_role_binding[example2].role_ref.name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Resource name 'example2' isn't binding 'cluster-admin' role with superuser permissions",
					"actual_value": "Resource name 'example2' is binding 'cluster-admin' role with superuser permissions"
				}
			]
		},
		{
			"query_name": "CronJob Deadline Not Configured",
			"query_id": "58876b44-a690-4e9f-9214-7735fa0dd15d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/cron_job#starting_deadline_seconds",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Cronjobs must have a configured deadline, which means the attribute 'starting_deadline_seconds' must be defined",
			"description_id": "030edc62",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "4e2b641341384ffddff5d7a3e07f7e9eccc5bceb23d0eba1ca8586ddd9ec8779",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.starting_deadline_seconds is set",
					"actual_value": "kubernetes_cron_job[demo].spec.starting_deadline_seconds is undefined"
				}
			]
		},
		{
			"query_name": "Dashboard Is Enabled",
			"query_id": "61c3cb8b-0715-47e4-b788-86dde40dd2db",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Check if the Kubernetes Dashboard is enabled.",
			"description_id": "3f384e51",
			"files": [
				{
					"file_name": "terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
					"similarity_id": "a12d6958d1c796cb35bfe96ee88767dd64e35a5d539599249687acbdc2a4abf1",
					"line": 43,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_kubernetes_cluster[fail_cluster].addon_profile.kube_dashboard.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[fail_cluster].addon_profile.kube_dashboard.enabled' is false or undefined",
					"actual_value": "'azurerm_kubernetes_cluster[fail_cluster].addon_profile.kube_dashboard.enabled' is true"
				},
				{
					"file_name": "terraform\\azurerm\\aks\\kubernetes_cluster.tf",
					"similarity_id": "da528f5b300bc60e817e1f351e576ed4b67f769df821c2ce4e478739ea6bece3",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_kubernetes_cluster[example].addon_profile.kube_dashboard.enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_kubernetes_cluster[example].addon_profile.kube_dashboard.enabled' is false or undefined",
					"actual_value": "'azurerm_kubernetes_cluster[example].addon_profile.kube_dashboard.enabled' is true"
				}
			]
		},
		{
			"query_name": "Deployment Has No PodAntiAffinity",
			"query_id": "461ed7e4-f8d5-4bc1-b3c6-64ddb4fd00a3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/deployment#affinity",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Resource Management",
			"description": "Check if Deployment resources don't have a podAntiAffinity policy, which prevents multiple pods from being scheduled on the same node.",
			"description_id": "4a5ad90d",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "f243eff403cd8ef68e425355cff47a7aa85db8da142b19fded93e64086adc7fb",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.affinity is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.affinity is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "6af1b84087d6eeec11f8c394ae003b8f00d6a746f0894bedbf580957b79d57cd",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.affinity is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.affinity is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "2899e555af238755adaba79fdd12ddc8b4b59445f63c48e4151d787cc33ff43c",
					"line": 25,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.affinity is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.affinity is undefined"
				}
			]
		},
		{
			"query_name": "Deployment Without PodDisruptionBudget",
			"query_id": "a05331ee-1653-45cb-91e6-13637a76e4f0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/deployment#selector",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Deployments should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "add58c0c",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "b1230b5d007e9b34b6e0bf2440c4a03ce4723b8f1bc14252d6212054439047a0",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.selector.match_labels",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.selector.match_labels is targeted by a PodDisruptionBudget",
					"actual_value": "kubernetes_deployment[example].spec.selector.match_labels is not targeted by a PodDisruptionBudget"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "3cb9af6d8255802758c01f2f3fe5aba3e2d1390661f86f5b1eeaa1cfb8264e84",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.selector.match_labels",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.selector.match_labels is targeted by a PodDisruptionBudget",
					"actual_value": "kubernetes_deployment[example].spec.selector.match_labels is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "DocDB Logging Is Disabled",
			"query_id": "56f6a008-1b14-4af4-b9b2-ab7cf7e27641",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "DocDB logging should be enabled",
			"description_id": "7a864a61",
			"files": [
				{
					"file_name": "terraform\\aws\\documentdb\\docdb_cluster.tf",
					"similarity_id": "d4c1586fed6ea00d3d0c9922cf45c3f7dfa0836fc4561a0f83801d4657d50f92",
					"line": 31,
					"issue_type": "IncorrectValue",
					"search_key": "aws_docdb_cluster[{{examplea}}].enabled_cloudwatch_logs_exports",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_docdb_cluster.enabled_cloudwatch_logs_exports should have all following values: profiler, audit",
					"actual_value": "aws_docdb_cluster.enabled_cloudwatch_logs_exports has the following missing values: profiler, audit"
				}
			]
		},
		{
			"query_name": "Docker Daemon Socket is Exposed to Containers",
			"query_id": "4e203a65-c8d8-49a2-b749-b124d43c9dc1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_path",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Sees if Docker Daemon Socket is not exposed to Containers",
			"description_id": "836d927e",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "454331d074a138661c80474a725533af5fb802eaece96ef1d3b63d33eae1e6bb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.volume",
					"search_line": 0,
					"search_value": "",
					"expected_value": "spec.volume[0].host_path.path is not '/var/run/docker.sock'",
					"actual_value": "spec.volume[0].host_path.path is '/var/run/docker.sock'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "454331d074a138661c80474a725533af5fb802eaece96ef1d3b63d33eae1e6bb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.volume",
					"search_line": 0,
					"search_value": "",
					"expected_value": "spec.volume[1].host_path.path is not '/var/run/docker.sock'",
					"actual_value": "spec.volume[1].host_path.path is '/var/run/docker.sock'"
				}
			]
		},
		{
			"query_name": "EC2 Instance Using API Keys",
			"query_id": "0b93729a-d882-4803-bdc3-ac429a21f158",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#iam_instance_profile",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "EC2 instances should use roles to be granted access to other AWS services",
			"description_id": "ffd8ce80",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "acc3b721af3dae2270da0e9e437a06b9124b8883c558ffd388112ec104d629cf",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_instance[fail] should be using iam_instance_profile to assign a role with permissions",
					"actual_value": "aws_instance[fail].user_data is being used to configure AWS API keys"
				}
			]
		},
		{
			"query_name": "EC2 Instance Using Default Security Group",
			"query_id": "f1adc521-f79a-4d71-b55b-a68294687432",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#security_groups",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "EC2 instances should not use default security group(s)",
			"description_id": "d263cf13",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
					"similarity_id": "27ea2f0d392d9d80d966a1c25acc290b7906b6e62056328ec87b490d4c74a404",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "aws_instance[positive1].security_groups",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_instance[positive1].security_groups is not using default security group",
					"actual_value": "aws_instance[positive1].security_groups is using at least one default security group"
				}
			]
		},
		{
			"query_name": "ECR Repository Without Policy",
			"query_id": "69e7c320-b65d-41bb-be02-d63ecc0bcc9d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "ECR Repository should have Policies attached to it",
			"description_id": "cb9636f6",
			"files": [
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
					"similarity_id": "806990e97e66dea2b7b1ad0810db829e87874b41e9ad023a10b0930ee4604404",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[positive1] has policies attached",
					"actual_value": "aws_ecr_repository[positive1] doesn't have policies attached"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
					"similarity_id": "75c37ba3e9cb78040fe0c3bb6a3985387ca7e1f6970283c1a43ed579ba6f95d6",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[foo]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[foo] has policies attached",
					"actual_value": "aws_ecr_repository[foo] doesn't have policies attached"
				},
				{
					"file_name": "terraform\\aws\\ecr\\ecr_repository.tf",
					"similarity_id": "1a857c2787104c16c2a9ede8a376d2dabe0a199cf6682a18825fedbc6b071c9f",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_ecr_repository[name]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_ecr_repository[name] has policies attached",
					"actual_value": "aws_ecr_repository[name] doesn't have policies attached"
				}
			]
		},
		{
			"query_name": "ECS Cluster with Container Insights Disabled",
			"query_id": "97cb0688-369a-4d26-b1f7-86c4c91231bc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "ECS Cluster should enable container insights",
			"description_id": "b48a7a70",
			"files": [
				{
					"file_name": "terraform\\aws\\ecs\\ecs_cluster.tf",
					"similarity_id": "839f5c876ae1eb6c97f562fa682692f23f9e65c876e6d7e5a8af19203eeba980",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_ecs_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_ecs_cluster[fail].setting.name' is set to 'containerInsights' and 'aws_ecs_cluster[fail].setting.value' is set to 'enabled'",
					"actual_value": "'aws_ecs_cluster[fail].setting.name' is not set to 'containerInsights' and/or 'aws_ecs_cluster[fail].setting.value' is not set to 'enabled'"
				}
			]
		},
		{
			"query_name": "EKS cluster logging is not enabled",
			"query_id": "37304d3f-f852-40b8-ae3f-725e87a7cedf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Amazon EKS control plane logging is not enabled",
			"description_id": "80a41f88",
			"files": [
				{
					"file_name": "terraform\\aws\\eks\\eks_cluster.tf",
					"similarity_id": "693d36b0c1cbf501716ab621b0c9f6acf95be8e5cbfae3c1238f4fb68f02d08e",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_eks_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cluster_log_types' is defined and not null",
					"actual_value": "'enabled_cluster_log_types' is undefined or null"
				}
			]
		},
		{
			"query_name": "EMR Without VPC",
			"query_id": "2b3c8a6d-9856-43e6-ab1d-d651094f03b4",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/emr_cluster#subnet_id",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Elastic MapReduce Cluster (EMR) should be launched in a Virtual Private Cloud (VPC)",
			"description_id": "741aebff",
			"files": [
				{
					"file_name": "terraform\\aws\\emr\\emr_cluster.tf",
					"similarity_id": "fc504902d2f3a2cd7141b284954c86796c8ff13c8a746ed6255c50d9fa457d1c",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_emr_cluster[test]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_emr_cluster[test].subnet_id' or 'aws_emr_cluster[test].subnet_ids' is defined and not null'",
					"actual_value": "'aws_emr_cluster[test].subnet_id' or 'aws_emr_cluster[test].subnet_ids' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\emr\\emr_without_vpc.tf",
					"similarity_id": "4026bee17c850fba26dfadcfd8e8dc783c4cdf234bbb7aa5a9beb8d981e2ed55",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_emr_cluster[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_emr_cluster[fail].subnet_id' or 'aws_emr_cluster[fail].subnet_ids' is defined and not null'",
					"actual_value": "'aws_emr_cluster[fail].subnet_id' or 'aws_emr_cluster[fail].subnet_ids' is undefined or null"
				}
			]
		},
		{
			"query_name": "ElastiCache Using Default Port",
			"query_id": "5d89db57-8b51-4b38-bb76-b9bd42bd40f0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#port",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "ElastiCache should not use the default port (an attacker can easily guess the port). For engine set to Redis, the default port is 6379. The Memcached default port is 11211",
			"description_id": "86cc0d57",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\redis_not_compliant.tf",
					"similarity_id": "77b2bb3d9689e6bdf7f52478c209310527e17a6a2fe04b095aaa915c609e18d9",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticache_cluster[fails].port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'port' is not set to 6379",
					"actual_value": "'port' is set to 6379"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_cluster.tf",
					"similarity_id": "db01aeb7fca3a536663644fc4e419c5554be07ab606e866d185cd02ad61ddc14",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fail_redis]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_elasticache_cluster.port is defined and not null",
					"actual_value": "aws_elasticache_cluster.port is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_without_vpc.tf",
					"similarity_id": "2563ab7f86e2d34ec5da019e24a9e1ef89d78e2bf68012e796437a5b68b13861",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_elasticache_cluster[fail_vpc].port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'port' is not set to 11211",
					"actual_value": "'port' is set to 11211"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_nodes_not_created_across_multi_az.tf",
					"similarity_id": "1550cbd82173b6cc44e95e53627b942e5ad158af241beac51e88765b147c90dc",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_elasticache_cluster.port is defined and not null",
					"actual_value": "aws_elasticache_cluster.port is undefined or null"
				}
			]
		},
		{
			"query_name": "ElastiCache Without VPC",
			"query_id": "8c849af7-a399-46f7-a34c-32d3dc96f1fc",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#subnet_group_name",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "ElastiCache should be launched in a Virtual Private Cloud (VPC)",
			"description_id": "cf79a8df",
			"files": [
				{
					"file_name": "terraform\\aws\\elasticache\\redis_not_compliant.tf",
					"similarity_id": "416e93e99b4b36c9a3d304ca3eb393f79c48be0cdfa4bc7d54b4bbab7c13106c",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fails]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elasticache_cluster[fails].subnet_group_name' is defined and not null'",
					"actual_value": "'aws_elasticache_cluster[fails].subnet_group_name' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_nodes_not_created_across_multi_az.tf",
					"similarity_id": "bbb14c017f7be1f235a36b41faffd90d7275208114b2fe998e5fc043a4afb04d",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elasticache_cluster[positive1].subnet_group_name' is defined and not null'",
					"actual_value": "'aws_elasticache_cluster[positive1].subnet_group_name' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_cluster.tf",
					"similarity_id": "95582f26c6e3a50e20118bff84befa621328ca543f3537592055712c7ecb30e2",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fail_redis]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elasticache_cluster[fail_redis].subnet_group_name' is defined and not null'",
					"actual_value": "'aws_elasticache_cluster[fail_redis].subnet_group_name' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elasticache\\elasticache_without_vpc.tf",
					"similarity_id": "d10fcd0dd96698da38fe58a6c9a251e816559f69082cc016898d9c63116f9b71",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elasticache_cluster[fail_vpc]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elasticache_cluster[fail_vpc].subnet_group_name' is defined and not null'",
					"actual_value": "'aws_elasticache_cluster[fail_vpc].subnet_group_name' is undefined or null"
				}
			]
		},
		{
			"query_name": "Function App HTTP2 Disabled",
			"query_id": "ace823d1-4432-4dee-945b-cdf11a5a6bd0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#http2_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Function App should have 'http2_enabled' enabled",
			"description_id": "7c364a67",
			"files": [
				{
					"file_name": "terraform\\azurerm\\functionapp\\function_app.tf",
					"similarity_id": "b07a086ecf77c217915f962732122f7776a6d8703d7e23ae7d8b6a6fca8f0c7a",
					"line": 22,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_function_app[fail].site_config.http2_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_function_app[fail].site_config.http2_enabled' is set to true",
					"actual_value": "'azurerm_function_app[fail].site_config.http2_enabled' is set to false"
				}
			]
		},
		{
			"query_name": "Global Accelerator Flow Logs Disabled",
			"query_id": "96e8183b-e985-457b-90cd-61c0503a3369",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/globalaccelerator_accelerator#flow_logs_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Global Accelerator should have flow logs enabled",
			"description_id": "3670731d",
			"files": [
				{
					"file_name": "terraform\\aws\\globacc\\globacc.tf",
					"similarity_id": "08265315dedaf18e6dd94937e95682a4af8742cdb5d4cb346dff104a9bb4917f",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_globalaccelerator_accelerator[{{example}}].flow_logs_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_globalaccelerator_accelerator[{{example}}].flow_logs_enabled is true",
					"actual_value": "aws_globalaccelerator_accelerator[{{example}}].flow_logs_enabled is false"
				}
			]
		},
		{
			"query_name": "Google Compute Subnetwork with Private Google Access Disabled",
			"query_id": "ee7b93c1-b3f8-4a3b-9588-146d481814f5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#private_ip_google_access",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Google Compute Subnetwork should have 'private_ip_google_access' set to true",
			"description_id": "87e8a4f7",
			"files": [
				{
					"file_name": "terraform\\google\\compute\\subnetwork\\compute_subnetwork_ipv6.tf",
					"similarity_id": "f25b372a8d7ccb72a60c0390b1ac38c0d4a02f7f9c36276a87c0116d29ec6d65",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "google_compute_subnetwork[fail].private_ip_google_access",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'google_compute_subnetwork[fail].private_ip_google_access' is set to true",
					"actual_value": "'google_compute_subnetwork[fail].private_ip_google_access' is set to false"
				}
			]
		},
		{
			"query_name": "HPA Targets Invalid Object",
			"query_id": "17e52ca3-ddd0-4610-9d56-ce107442e110",
			"query_url": "hhttps://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/horizontal_pod_autoscaler#metric",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Availability",
			"description": "The Horizontal Pod Autoscale must target a valid object",
			"description_id": "f4d95aa4",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\hpa_targets_invalid_object.tf",
					"similarity_id": "8a298b2d2363794ce7b610239c10fd45be6e2a6c6c24a55c2660ac7d03e9ae61",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_horizontal_pod_autoscaler[example].spec.metric",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_horizontal_pod_autoscaler[example].spec.metric is a valid object",
					"actual_value": "kubernetes_horizontal_pod_autoscaler[example].spec.metric is a invalid object"
				}
			]
		},
		{
			"query_name": "Hardcoded AWS Access Key",
			"query_id": "d7b9d850-3e06-4a75-852f-c46c2e92240b",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Hard-coded AWS access key / secret key exists in EC2 user data",
			"description_id": "9e8cbdfb",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "496ca7bda3bf44be2da1c4630edbd0fa7391cba5c71b0ea0bae28bb7bd3f289f",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "aws_instance[fail].user_data",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user_data' doesn't contain hardcoded access key",
					"actual_value": "'user_data' contains hardcoded access key"
				}
			]
		},
		{
			"query_name": "IAM Group Without Users",
			"query_id": "fc101ca7-c9dd-4198-a1eb-0fbe92e80044",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_group_membership#users",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM Group should have at least one user associated",
			"description_id": "c5730db9",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\group\\iam_group_without_users.tf",
					"similarity_id": "55d4da6e9ccc319835bb87ca643fe0da43395c134cee50fc1581bc60a4d631e2",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_group[group2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_group[group2] is associated with an aws_iam_group_membership that has at least one user set",
					"actual_value": "aws_iam_group[group2] is not associated with an aws_iam_group_membership that has at least one user set"
				},
				{
					"file_name": "terraform\\aws\\iam\\group\\iam_group_without_users.tf",
					"similarity_id": "b592b9a6ad2001b93c8b6f3e42473e4794694a180496e9f8bb30d11dd016b440",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "aws_iam_group[group3]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_iam_group[group3] is associated with an aws_iam_group_membership that has at least one user set",
					"actual_value": "aws_iam_group[group3] is not associated with an aws_iam_group_membership that has at least one user set"
				}
			]
		},
		{
			"query_name": "IAM Policies Attached To User",
			"query_id": "b4378389-a9aa-44ee-91e7-ef183f11079e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_policy_attachment",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "IAM policies should be attached only to groups or roles",
			"description_id": "32ec58ec",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\iam_authentication_without_mfa.tf",
					"similarity_id": "c6aa4bb575a7c648b4612304c4bb9a1829775dc3aba7b28e588f116c38ec0337",
					"line": 23,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy[{{mfa}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_user_policy_without_mfa.tf",
					"similarity_id": "02a98d6309bf16dddb64aaa7a386b76346655142b75fbd828a182da1bb2a54e7",
					"line": 17,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy[{{fail_mfa}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam.tf",
					"similarity_id": "fb3cb2db675d268594fbc311a5e98596c18972b88ccbd73b82510a6c3424e5e4",
					"line": 13,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy[{{fail}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_full_permissions.tf",
					"similarity_id": "be292e90275563b6e7bea1b1a795960a7e268b475d9a61673a8a529a2a9deb50",
					"line": 18,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy[{{positive3}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam.tf",
					"similarity_id": "cd8ef63ae55eb4db316c4a4b7517e6e41b9f1f0fea0a5a0f4333f512460a9757",
					"line": 9,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_policy_attachment[{{fail}}].users",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'users' is redundant",
					"actual_value": "'users' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
					"similarity_id": "aef6a199b8d79a7ebc7f41441d63dc175efafade2d8cb0e5728a7ee6d1de590b",
					"line": 16,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy[{{fail_key}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam.tf",
					"similarity_id": "2c2559f14a5df24620fe11f4dc19d221ec8199bc2460d603323ef365274642f3",
					"line": 29,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_user_policy_attachment[{{fail}}].user",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'user' is redundant",
					"actual_value": "'user' exists"
				},
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policies_attached_to_user.tf",
					"similarity_id": "b8a0302bb6f6b706e310824715a569243ebeb1852f70b0f3d2b9905040ba7a29",
					"line": 18,
					"issue_type": "RedundantAttribute",
					"search_key": "aws_iam_policy_attachment[{{positive1_3}}].users",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'users' is redundant",
					"actual_value": "'users' exists"
				}
			]
		},
		{
			"query_name": "IAM Policy Grants 'AssumeRole' Permission Across All Services",
			"query_id": "bcdcbdc6-a350-4855-ae7c-d1e6436f7c97",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM role allows All services or principals to assume it",
			"description_id": "948aa2ac",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\policy\\iam_policy_grants_assumerole_permission_across_all_services.tf",
					"similarity_id": "68c88668e3c8bb606d055441bf05766c36504ed9c50e21b6b44fe8c84f5df2b5",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[positive1].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy.Statement.Principal' doesn't contain '*'",
					"actual_value": "'assume_role_policy.Statement.Principal' contains '*'"
				},
				{
					"file_name": "terraform\\aws\\iam\\role\\IAMRoleAllowsPublicAssume.tf",
					"similarity_id": "bff4ae7c245def77e19e322ad428771f95e290eb5ef71146c6aef55077de2b6f",
					"line": 6,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[lambda].assume_role_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy.Statement.Principal' doesn't contain '*'",
					"actual_value": "'assume_role_policy.Statement.Principal' contains '*'"
				}
			]
		},
		{
			"query_name": "IAM Role Allows All Principals To Assume",
			"query_id": "12b7e704-37f0-4d1e-911a-44bf60c48c21",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_role",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "IAM role allows all services or principals to assume it",
			"description_id": "a54d0d27",
			"files": [
				{
					"file_name": "terraform\\aws\\iam\\role\\IAMRoleAllowAssumeFromAccount.tf",
					"similarity_id": "2011ca1e0af540375992c3256ff5eda967d0a29818a11b1a6fa2b589c79305fc",
					"line": 29,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[fail2].assume_role_policy.Principal.AWS",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy.Statement.Principal.AWS' does not contain ':root'",
					"actual_value": "'assume_role_policy.Statement.Principal.AWS' contains ':root'"
				},
				{
					"file_name": "terraform\\aws\\iam\\iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
					"similarity_id": "beaa51a513aadbbff5513ce0a499c505df95bd52c2c1f8e830420122cb7c0528",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_iam_role[positive1].assume_role_policy.Principal.AWS",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'assume_role_policy.Statement.Principal.AWS' does not contain ':root'",
					"actual_value": "'assume_role_policy.Statement.Principal.AWS' contains ':root'"
				}
			]
		},
		{
			"query_name": "Image Pull Policy Of The Container Is Not Set To Always",
			"query_id": "aa737abf-6b1d-4aba-95aa-5c160bd7f96e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#image_pull_policy",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Image Pull Policy of the container must be defined and set to Always",
			"description_id": "d2abf21b",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "2a1003c5b0756a8cbf93b403651256dc8a15bc20aef99aaf72214ae8e8ba1a90",
					"line": 12,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[busybox].spec.container.image_pull_policy",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'image_pull_policy' should be defined as 'Always'",
					"actual_value": "Attribute 'image_pull_policy' is incorrect"
				}
			]
		},
		{
			"query_name": "Image Without Digest",
			"query_id": "228c4c19-feeb-4c18-848c-800ac70fdfb7",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#image",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Sees if Kubernetes image has digest on",
			"description_id": "fec9b353",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "e38e28fa0bd1c10d82cd31f67e58310382241290707e485bb85df1c28135c538",
					"line": 44,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.image has '@'",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "98993d8a3dd803add049188794048472a90ea12b389c4ba211fd456fcc1f25a1",
					"line": 65,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "caed1a90a758d29be957c4fc44c1011014e449a44527be8e3c013de854a523ce",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "c01f3a8d77c13f3e5673720418d72b7eeb6e1cdd80be0e420c0ccef5ef44c7d9",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "20b26c4dfa66bbc661a5c40f2ce946f2060b15ff5742678eaf02945be6d06aac",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[busybox].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[busybox].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "8508cf3e9a630d846532848ec07754cfa0fe85f217dcec2860068f83cc6ab47f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "7ad5ed7c704ec995658e53f82d4f7490f146988897831bce837769d27d5a9846",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "c93321ec91d7559e0d39c65cd92406cf853b8ad924acd66893068acb6e1b594a",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "caed1a90a758d29be957c4fc44c1011014e449a44527be8e3c013de854a523ce",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "ef670f0f91937851549c803056362561e57c22fbbcc04de470a534b1b957170f",
					"line": 25,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[name1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[name1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "b1a8df85bba1067fba1fadf5f7342fbcfc45112499e31df2e730863916aee54c",
					"line": 164,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test6].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test6].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "88955a03f53a4871ad5d67bfc55f2a6e3aedb0d57a7f9e4d109effbf7fa0a75f",
					"line": 27,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "f63205a6249f5756a770afa806682045e06528949767658462b556dceb511fe9",
					"line": 27,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "d9ca784b537122e8729cffded8a2ac07c1ef2e108a0db1acd7ddb342e62b72cf",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "d88aef1c31c693f1785084a76c0bc78b35e0c411303cce57f27cbd9ba117f94e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "10bb4c75564bc4d815c0f1aa0ae2c5961e50bda6e1b0f73439d066a417f6be0a",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "d88aef1c31c693f1785084a76c0bc78b35e0c411303cce57f27cbd9ba117f94e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "0c59c8fd8127b30d0ea7864b6bcb7638f1dfdb39475275246d77ac5002641f30",
					"line": 76,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[0].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "a4cf46f8a25faff17cc45bb8e91d077555a9199ab2d296babb4a9eba915bcc2e",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ea7412c219abc8d4c43ddafb0733170f36d9ecffe6924805c99eec396d7563ee",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "6ad3e012f8ac318f63c5cc22b670a86aae3bab6b133dc8fafadb2ef43f2206b9",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "641a7752517898bb657e660441d08194df952275dd00d3384364d53d9ee7ec54",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[test1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "bdd56d27f720317f90b2c6aeb8334e1c888f0e2ea5161ba03547b5e3b0998c5e",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "f21a404f6440887f87b0d40aa2f0267cd1bb9293fcfac10b3d093d219bfcd9ac",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "5930595e3de0c8bbd6529c84fe8b80a287f485fb167262b4bec00de83a7ebc70",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "10de95b9740fb986da04555ddf0b06918937ce0853630e486e97d9f66c06cb7e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ea7412c219abc8d4c43ddafb0733170f36d9ecffe6924805c99eec396d7563ee",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "aa016e8abf440fe78b072b0f18de9033328892d7c58b2d8128c6eaa2121e2bf5",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "aa016e8abf440fe78b072b0f18de9033328892d7c58b2d8128c6eaa2121e2bf5",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "641a7752517898bb657e660441d08194df952275dd00d3384364d53d9ee7ec54",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[test1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "8b869b8ac89cec8e1d64baf0255ac61ff9ad32d2a46e9b36759c378d157ca750",
					"line": 91,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "fc39d4f353d7b85eeb12156e42a589ca710390bf5a285c4557e1528557d84117",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[2].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[2].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "ce30aa5768a47b1484d5b9f9f7a60c240726745224378b6feab612eda61e31bb",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "27faef60a21fabefb8f99a0a5e322e80adbd0c54fc76fb861fc1d6c18f4c3dcc",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "6ad3e012f8ac318f63c5cc22b670a86aae3bab6b133dc8fafadb2ef43f2206b9",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "61baaa05dd81a381409283ee2276da7cd504ae8f2a05b5357e658afee78361f9",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[example1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[example1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "16dc79460e8e854c0ca103a9dbc511e3b4f4378d7c08c1e85e62c153d732ba22",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "72c6504ad93692fac66a856f9f979a4fdb97d4ecb6fa296aa0e469f5aeff6ec2",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "0076f47f35342f03931462685e9fe6e19454efbe5e602602eec0b4efceb386ec",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "981d4293860433d01ae80ea496bd6e35e6795a3cf3517ccc056ba51783f96613",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "fc39d4f353d7b85eeb12156e42a589ca710390bf5a285c4557e1528557d84117",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "a2930ae473c7c0ac4c6fded5d0663cdf824f9173f16720b42c8d446003e3d422",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[pod1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[pod1].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "d9ca784b537122e8729cffded8a2ac07c1ef2e108a0db1acd7ddb342e62b72cf",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[0].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "cb0e7b0e20a1221ba51bcfc2fa7e49f74cfc2e15e90e6f7ea3e2bdcf54cf0812",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "fcf0a40c623c9091f439a797b16289e24b3220aa7c8cafb05dacdaf58aef3712",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "8508cf3e9a630d846532848ec07754cfa0fe85f217dcec2860068f83cc6ab47f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "dc3cf79d07c63f7d97738159ad787be09f0661daedaec0befb99ceea67725fc7",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[0].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "34567f9a52e067b77eacaade611c5a1a0a5654b30b5f9e8380a48281d26efbdc",
					"line": 147,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "f21a404f6440887f87b0d40aa2f0267cd1bb9293fcfac10b3d093d219bfcd9ac",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "981d4293860433d01ae80ea496bd6e35e6795a3cf3517ccc056ba51783f96613",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "fc39d4f353d7b85eeb12156e42a589ca710390bf5a285c4557e1528557d84117",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "10de95b9740fb986da04555ddf0b06918937ce0853630e486e97d9f66c06cb7e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "87faf04b1bd954bb8323cce8f9014fedaa6eb71baa9498c2a62c704eb29a551b",
					"line": 43,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "433464fee47054e58ed99f51979751dbac146853bb6388c4b8e907ade103d142",
					"line": 68,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_persistent_volume[test2].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.image has '@'",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "dc3cf79d07c63f7d97738159ad787be09f0661daedaec0befb99ceea67725fc7",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "54352f9c748258aa91429d0a82f2c0a9cfe53838b217a2008892c7860db38cbb",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].image has '@'",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "0c59c8fd8127b30d0ea7864b6bcb7638f1dfdb39475275246d77ac5002641f30",
					"line": 76,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "ea33ed55fd3622f5e5ae63debb05394f170ec45615cc60abc64e4a993ed3f98d",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "ff53fe95ffa71e30009b074a1ebce990bfdd6b708474dbeb31f71379fff7328c",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "c38eaedd62a318a5fc6bec3b82cb6b8546d4bc7199f0a4ed6ad87e2bdeab5e7b",
					"line": 27,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.image has '@'",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "cb0e7b0e20a1221ba51bcfc2fa7e49f74cfc2e15e90e6f7ea3e2bdcf54cf0812",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[1].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[1].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "fcf0a40c623c9091f439a797b16289e24b3220aa7c8cafb05dacdaf58aef3712",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].image has '@'",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "e10733117fbcef87176b5d5c5b85e65706fa25e1a0070777dbd160dbd28e1b2f",
					"line": 44,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "6bef7d86535db38122711124f03ffd9d34b156320262ecd3af970bade17f63a5",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.image has '@'",
					"actual_value": "kubernetes_pod[test].spec.container.image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "54352f9c748258aa91429d0a82f2c0a9cfe53838b217a2008892c7860db38cbb",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[0].image has '@'",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[0].image does not have '@'"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "1746a792691872fb721adf275b9fb418198c4eda657b17154106f438e89b6512",
					"line": 44,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.image has '@'",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.image does not have '@'"
				}
			]
		},
		{
			"query_name": "Invalid Image",
			"query_id": "e76cca7c-c3f9-4fc9-884c-b2831168ebd8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#image",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Supply-Chain",
			"description": "Image must be defined and not be empty or equal to latest.",
			"description_id": "56713716",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "73600d921ae29ef706a6bab86d2ad4a4f9c806b146ce3d8282b7dc44e19d3daf",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.image",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.image is not empty or latest",
					"actual_value": "kubernetes_pod[positive1].spec.container.image is empty or latest"
				}
			]
		},
		{
			"query_name": "Key Vault Secrets Content Type Undefined",
			"query_id": "f8e08a38-fc6e-4915-abbe-a7aadf1d59ef",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Key Vault Secrets should have set Content Type",
			"description_id": "4aacc07b",
			"files": [
				{
					"file_name": "terraform\\azurerm\\keyvault\\key_vault_secret.tf",
					"similarity_id": "e47b6a765b73280d5ce6e01b5eb1d3d5e19cb57dc64824e0c6a0e352c86f4c7f",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_key_vault_secret[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_key_vault_secret[example].content_type' is defined and not null",
					"actual_value": "'azurerm_key_vault_secret[example].content_type' is undefined or null"
				}
			]
		},
		{
			"query_name": "Lambda Functions Without X-Ray Tracing",
			"query_id": "8152e0cf-d2f0-47ad-96d5-d003a76eabd1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#tracing_config",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "AWS Lambda functions should have TracingConfig enabled. For this, property 'tracing_Config.mode' should have the value 'Active'",
			"description_id": "2f90e1e9",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda_with_vulnerable_policy.tf",
					"similarity_id": "9f9ec2033e78a7b6ac176fd095272f22e4261d05ef07d82cbe34adaa54cc8994",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lambda_function[my_lambda]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_function[my_lambda].tracing_config is defined and not null",
					"actual_value": "aws_lambda_function[my_lambda].tracing_config is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lambda\\public_lambda_via_api_gateway.tf",
					"similarity_id": "e90a5e17c141675615faa1d016981026272c338d804bce62b937a619ee56bee5",
					"line": 12,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lambda_function[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_function[example].tracing_config is defined and not null",
					"actual_value": "aws_lambda_function[example].tracing_config is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lambda\\lambda.tf",
					"similarity_id": "5e12b102b40f0fcab6113f425e507eba531739a61fafbde5546ad58272db9f05",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lambda_function[morefail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_function[morefail].tracing_config is defined and not null",
					"actual_value": "aws_lambda_function[morefail].tracing_config is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
					"similarity_id": "b9ec4621fd7e8a809f36c058257465413668d44944a3bbb4be4bbd86ce68266f",
					"line": 21,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lambda_function[positivefunction2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_function[positivefunction2].tracing_config is defined and not null",
					"actual_value": "aws_lambda_function[positivefunction2].tracing_config is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
					"similarity_id": "9cac1b4d5735458af987e088571dda76f0c91440f78f27a50460d21f26a92f41",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lambda_function[positivefunction1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_function[positivefunction1].tracing_config is defined and not null",
					"actual_value": "aws_lambda_function[positivefunction1].tracing_config is undefined or null"
				}
			]
		},
		{
			"query_name": "Lambda Permission Misconfigured",
			"query_id": "75ec6890-83af-4bf1-9f16-e83726df0bd0",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Lambda permission may be misconfigured if the action field is not filled in by 'lambda:InvokeFunction'",
			"description_id": "8fb6f06e",
			"files": [
				{
					"file_name": "terraform\\aws\\lambda\\lambda_with_vulnerable_policy.tf",
					"similarity_id": "684313f809f4a8b2249feed9a96b00f3740b8be4fed7e18723e43edf5e5a510f",
					"line": 39,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_permission[all].action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_permission[name].action is 'lambda:InvokeFunction'%!(EXTRA string=all)",
					"actual_value": "aws_lambda_permission[name].action is all%!(EXTRA string=lambda:*)"
				},
				{
					"file_name": "terraform\\aws\\lambda\\lambda_permission_misconfigured.tf",
					"similarity_id": "602ea5924516d677755be2db5ff57c52246b8e8a390ca3a0ab4f8908b1aa7cd3",
					"line": 2,
					"issue_type": "IncorrectValue",
					"search_key": "aws_lambda_permission[positive1].action",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lambda_permission[name].action is 'lambda:InvokeFunction'%!(EXTRA string=positive1)",
					"actual_value": "aws_lambda_permission[name].action is positive1%!(EXTRA string=lambda:DeleteFunction)"
				}
			]
		},
		{
			"query_name": "MariaDB Server Geo-redundant Backup Disabled",
			"query_id": "0a70d5f3-1ecd-4c8e-9292-928fc9a8c4f1",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#geo_redundant_backup_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Backup",
			"description": "MariaDB Server Geo-redundant Backup should be enabled",
			"description_id": "f9f97af4",
			"files": [
				{
					"file_name": "terraform\\azurerm\\maria\\azurerm_mariadb_server.tf",
					"similarity_id": "c3c7db7e63d9e6a712ffd958273eb7783abe80c0d05a251862bd3e807fe9aef9",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mariadb_server[example].geo_redundant_backup_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mariadb_server[example].geo_redundant_backup_enabled' is set to true",
					"actual_value": "'azurerm_mariadb_server[example].geo_redundant_backup_enabled' is set to false"
				}
			]
		},
		{
			"query_name": "Missing App Armor Config",
			"query_id": "bd6bd46c-57db-4887-956d-d372f21291b6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#annotations",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Containers should be configured with AppArmor for any application to reduce its potential attack",
			"description_id": "ba36908b",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "83873c1f3fb227f32dbade13f56e0e92a7c75f59cd673942c7a8c96ca6ea8045",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "4d14ecc782ec20976e89f56561f62e3c40253484c2d0e457415abbe08361e786",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "573b6345cec14578fe02c2030aa029caf2201f709afe6536b98c51f573cee898",
					"line": 158,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test6].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "bdfed036634c543f4deaedd4d12623ea853d030e2632f330af87ae1b8bc71d38",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "d55bc8b83d0af5a8e968e1002482da834aa35ba957d0604909fe5bf4602194d7",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[pod1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "85192284c4c7dd6732a5b47cef87c4f7eb542184c37ed5908fdf1af2db7bba55",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "cec0b1bca65f918cc5e6e958f717e602984b98e940da00ce955a54e3caa0d63b",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "d3f19510e0e886326f8d3cc5f24176f2bf617a2726b1aaa834fc1d7edf17e7bb",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "a04d75009b5915de38f4020c862c2657a0657c253528ee53e3a0bdf3e8d6bfb5",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "a635d05e1331c5bcbcb833172c0dec33f3f72912ac601ab5fa7f82188279a706",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[busybox].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "041856c329f8ca97cccc2afdb92e5f6d21d97e95f7949e2d1714e06f65318865",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\using_default_namespace.tf",
					"similarity_id": "6741aaf33a68686f11045049b096ae1685449bc47bad80dca030b6546c857bd3",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "25e1026cf6bb1ca8dc3267b0975dd044d3734b03dc2eef113da73cbe30c36a44",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "e6f7692a29ecd7d58603232c866088e019ab19551b833fb63f1999ef35ef9040",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "b2771048890ef599f25a18614dd7ffc433a98345e59ae7dde262b660fb5144ad",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "4f5b3d9f68ba52afc825d19e8da0b04110a4eee10984dc1f932f1bae5c876c72",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "4b7d22f33eb327999071923a5b383929e7e13591d3ec8a029d54b1f6404e2b2d",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "964c6e558e70f2807f3e74aa38a6a564694ae748174ba6efaabe48762a252138",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "7d6909de2c25d3ec95c53741f4c2d3ddf8f58a3683d8b19564fe8060712a879c",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "740c6b813f0aed89fb4b61315f781757b26cce3b3ae3daec813f9751e19f7456",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "7db95b58d26cab586f2737acfa1343b88d141862d78969bd7f86d10c5e7922c9",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "d54af8cfe4ce26d8cf87c25854756965d4d73542a587e5cfda93cfa51193b656",
					"line": 4,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[example1].metadata.annotations",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].metadata.annotations should contain AppArmor profile config: 'container.apparmor.security.beta.kubernetes.io'",
					"actual_value": "kubernetes_pod[example1].metadata.annotations doesn't contain AppArmor profile config: 'container.apparmor.security.beta.kubernetes.io'"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "1126d758e84c20c7f6bdb037dd927a9b93fa0800b64f8ac5e186ce85311815b8",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "268fd875d7566c71ea83de3edc595a519ba5d1b820fb68ee1ffa55fdd08d0dac",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[name1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "235c266b1b1d789f9babc3605a07bdc8c468e2126d0e34ffda8110d84757f444",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "f95f008c9e16d063dae6721cc273c3ddcb3b838ff849e9e0afb1374938eb80cb",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "eef52917bcf760b8265f4cf3e641dd1caff6a88a8436ebd423f75700ebc5d682",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "3b88cb6ec2afa6c28d0450247b3bf87d27cc518a87d7f04d05d7d474acd83c5b",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "308382e828153426230e8e33d6680d36fd690d5b0fca4cb0371453a49f900a6a",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "e4416a21ed54903ea912f94eaef4a21749c05bbf1b04f84a4360a7adb71438d7",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[with_pod_affinity].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "2273c9279989b0f0b1b35bdfcab66d7208669a460f60e057b3aab49b1a459c50",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "d3d01dbfc6f0bc77aba55e980153d5b3632e0c3e1daf725c7631985df94de79e",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "e577549872b0089918acc74982b3ebc58b5f59ed5076470416a663e21adae152",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[test1].metadata doesn't contain AppArmor profile config in annotations"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "da4e1c948c655135801800b93fc78a710ddc2271f67e3521273edc55032be460",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].metadata",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].metadata should include annotations for AppArmor profile config",
					"actual_value": "kubernetes_pod[positive1].metadata doesn't contain AppArmor profile config in annotations"
				}
			]
		},
		{
			"query_name": "Network Interfaces IP Forwarding Enabled",
			"query_id": "4216ebac-d74c-4423-b437-35025cb88af5",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_interface#enable_ip_forwarding",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Network Interfaces IP Forwarding should be disabled",
			"description_id": "890cf9a4",
			"files": [
				{
					"file_name": "terraform\\azurerm\\network\\network_interface.tf",
					"similarity_id": "758c73eedae59ffa0c2c44df8d19e55c7da9a79375b19e66a4f435787ee53c32",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_network_interface[fail].enable_ip_forwarding",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_network_interface[fail].enable_ip_forwarding' is set to false or undefined",
					"actual_value": "'azurerm_network_interface[fail].enable_ip_forwarding' is set to true"
				}
			]
		},
		{
			"query_name": "No Drop Capabilities for Containers",
			"query_id": "21cef75f-289f-470e-8038-c7cee0664164",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#drop",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "Sees if Kubernetes Drop Capabilities exists to ensure containers security context",
			"description_id": "f547f3d7",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "00c8efb91bf2e81fafb515989619edc6a0d4aa33c4d326912ac571be80a7a5c3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "8a2001e98a94d22e6f1dd976043ad5f48d8f840974d6adfa71ea572a25e855e2",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "1a8a8f038cda85ff9a7699d83c4bc8a639bf4b61b78d3fb1a61ede5483469a36",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "a7a994661da0134bcdecb170fcbf5b0ae547ab76ea624793565308fd523f6fc0",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "c2cedcdb9e4711e3795f74f4c00205b203c32a98406b0ae9f339c43d58e5380d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "2c964f776676f31a0d0a8c5cac2edd841c77ea373fe20f974d507d049dd6c806",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "d7202747e236a1b2d713aee136c4ac1ccabba1abc2e0f789dea7ed2fad8f40f8",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "a8c268c8c8813ab8ee918bc60da3768bd9b6a4f1f6345785541424e2ad0a694a",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "bd8f67e74e30c658d7ac0f186eebc0e5d8aad4d23e08476f9707bec024dfb4f5",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[example1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "28abbc90d85f180d29d9669ac34fec82bb5dd05a20c07289de581c402615f984",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"SYS_ADMIN\"]})].security_context.capabilities.drop is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"SYS_ADMIN\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "7a2b0542f6521b3a80e123d2a50fc1d52581668a7bf8793cdd3304a0a2926305",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "9b2977f1d32432cdc9deec0eec4d9e229b8628a45a9f12dc0502a72b2d79dca1",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "c0a954809fa10f485f77f4dc18547ab18b22901390de082f16908c8d43e01703",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "2c964f776676f31a0d0a8c5cac2edd841c77ea373fe20f974d507d049dd6c806",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "4631d82b931a1f1a0b7b4624c06069019840d853d09994671bd4758fe2b26aab",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ac889e191c4fba9172beabe90c0638e54fbacd6214b75e19b22a8291b5a42218",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "0809da09473f8dda438c276c8dfefb78b93ac938afccd622c2a741c1f32f3e8a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "abe92fe0f48836814d9233833fab2fa0bf708878a25dfa2b2bc2ac86f6b37fe8",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "ef5d8331523dd43e336e6a56a0bfc1d382d09c7dca6b1066a6b2092690c8c22c",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.security_context is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "30a704c53e693de71f9f30604de5fd1972b679d171fb264508349ca389b54d79",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "5cbe4131b32ccaae363d2d8ec319853bfeefe9a7b263518b1e19e3767e076f64",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "200375918de614eab10e7b6eed61b8a553aff3f4bf6be40cf27ec2f8a890f12f",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "4631d82b931a1f1a0b7b4624c06069019840d853d09994671bd4758fe2b26aab",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "8a2001e98a94d22e6f1dd976043ad5f48d8f840974d6adfa71ea572a25e855e2",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "caa9aba885bf3ee8241798794b24c6abc14dca9ed9a5e20e514e2f2d6a67f8f1",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "4a7f7dfc9fded4db1f7e66d1dd0ee0c71386d64e9403136cc2bb28e3c6843614",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[name1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "0ce9fe2b645e9b5f453d417bbc096a8f4c9f777806611e8be492c04545238144",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "3c75c73d75c5d5cf91749d53b9f829b53da2804ac99ddf96924b346cadb55847",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "36ce3f686ac928f1422626ea59db5e24eeaee5ae7438aefc5c1b7d1cd4a68dc7",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "72bcee24e0aaf8b89a660a21c42011b8d897e30fe66fc9dbab2cd7dcfb3aa722",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "c87dbf3482306358094c9524caee442d0f62e87dfce22ccc89a972798d9c4545",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "fe1e323bffb6f71c141588991516f15d10ee6a4c641796fdf58e67cba87b4d6a",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "af3dce21637fe3bc6093b47a6570fe5edfcbb2ebf8045c6c123bb92374de5f15",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "8693107ef96ab235513b386d8f329d2a1cf75545415fd026c16f1eafc319adc3",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "81f9c25a00eb064a7a28e1b53151fbb658379b736201689bf57c02141c18496b",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "ac889e191c4fba9172beabe90c0638e54fbacd6214b75e19b22a8291b5a42218",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": false})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"read_only_root_filesystem\": false})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "1a8a8f038cda85ff9a7699d83c4bc8a639bf4b61b78d3fb1a61ede5483469a36",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "5cbe4131b32ccaae363d2d8ec319853bfeefe9a7b263518b1e19e3767e076f64",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "ec6e3969f4c86cf6420bcb309f1f5f73faa20d9f10e2b6f1638aef06161fce00",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "7d426c4d411c908c40f1b20d96a68412c9101ffe90c391cb44c951cc3486bf72",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "ba436e76afd393f0e4512b95135440b1d6b8fbf467ec9413f121a4b3d5649261",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "f8c1adcd95c92a278423b9f416412c8a752e50809383fb55498cd02184a268c1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "f5389cab153b44ded8b08ffa30736f12ccc9ab171978dfecf119dbcfb2cbcace",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "ba436e76afd393f0e4512b95135440b1d6b8fbf467ec9413f121a4b3d5649261",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "f5389cab153b44ded8b08ffa30736f12ccc9ab171978dfecf119dbcfb2cbcace",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "a625009c1c97f3cafd2835ae91e91739f7c8cc650f82418f73f58f4e2872ca0b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "2cb14f9c1c5c7f1f984b6801c2a7ba52f222d336a8d2b3e5c7fc842b33f458df",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "e9008f04388b408b0582bb95f45875ad436d10895a21e61e60ec684653870c48",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "e1715245bd680e9ab75aaeda979a3816e61a8f302e2166c141d51a2b5a9bac9f",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "a8523b34860215e0685a67355388ecd7bbf549fa709ac4e83a0fa22dd021fba5",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.capabilities is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.capabilities is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "059c083e114ba8f5ee5f6cd9e2a2f90f581d10a0f27b8a11e569b2237c20687f",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "ccb00f353fa005801f1b755bc113e01218aedf480b4af1b331c97ddd6069d958",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "48564bd2fc71c678a453121e51dbe0947fb399f6403b8f286008e9687daf4f4c",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test6].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "d525c22194827da40c6753a2a786032adcfa8b55c1cc960710dc2629f34a1ce3",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "7a819391ac6d85069d699137a375737d7a47806f6f8ac14abdb00445f82e3d75",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"add\": [\"NET_BIND_SERVICE\"]})].security_context.capabilities.drop is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "d525c22194827da40c6753a2a786032adcfa8b55c1cc960710dc2629f34a1ce3",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "a625009c1c97f3cafd2835ae91e91739f7c8cc650f82418f73f58f4e2872ca0b",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "72bcee24e0aaf8b89a660a21c42011b8d897e30fe66fc9dbab2cd7dcfb3aa722",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "80f33848008dc44f573cf451c2d15620bb87f4e71be9cb064364bce280d556a1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "200375918de614eab10e7b6eed61b8a553aff3f4bf6be40cf27ec2f8a890f12f",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				}
			]
		},
		{
			"query_name": "Open Access To Resources Through API",
			"query_id": "108aa260-6dab-4a75-ae3f-de917d634840",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "Open access to back-end resources through API",
			"description_id": "13e1db34",
			"files": [
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-method\\api_gateway_method.tf",
					"similarity_id": "aad3f98c3ec1f4163063811d4992a4d2ab1919aa3f8f67bc825165b9de1fdb10",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_method[fail_open].authorization",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'authorization' is not equal 'NONE'",
					"actual_value": "'authorization' is equal 'NONE'"
				},
				{
					"file_name": "terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
					"similarity_id": "77920585b47a77d541a638cbd858b142bc057d53110971759663b05f329651aa",
					"line": 47,
					"issue_type": "IncorrectValue",
					"search_key": "aws_api_gateway_method[api_gw_method].authorization",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'authorization' is not equal 'NONE'",
					"actual_value": "'authorization' is equal 'NONE'"
				}
			]
		},
		{
			"query_name": "Permissive Access to Create Pods",
			"query_id": "522d4a64-4dc9-44bd-9240-7d8a0d5cb5ba",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/role#rule",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "The permission to create pods in a cluster should be restricted because it allows privilege escalation.",
			"description_id": "cca5f42d",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\role\\permissive_access_to_create_pods.tf",
					"similarity_id": "1db8059799378bd59751eb2c65b915b4e45396ecdb9d8820459aa3b0ea50face",
					"line": 13,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_role[example1].rule.verbs.create",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_role[example1].rule.verbs should not contain the value 'create' when kubernetes_role[example1].rule.resources contains the value 'pods'",
					"actual_value": "kubernetes_role[example1].rule.verbs contains the value 'create' and kubernetes_role[example1].rule.resources contains the value 'pods'"
				}
			]
		},
		{
			"query_name": "Pod or Container Without Security Context",
			"query_id": "ad69e38a-d92e-4357-a8da-f2f29d545883",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#security_context",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "A security context defines privilege and access control settings for a Pod or Container",
			"description_id": "a465ab52",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "8038bea35e2189e9d1ab1c5e015338a171e9eeb3186a6e22f54e356ef3a02baf",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "56bf7a6d46e9463285ec1d7c42fbf8b78a86caa47b8920ceb3b7ceaeb79e06da",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "b72490e8418e83843bc41ad0912a22d1f87bacb66dcf8b9f8a0b041c03d62d9d",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "9fda8525883d5d11c36ccdbcbfafeaec6c9f6510c1ca48436f0d38f53d533b8a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "190fac53c0e3abaec7107e0109a14ffcb54b60f692cc54abceb48a88f10b0398",
					"line": 24,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "5ba84bf46b032e2833d5900e00eaede4a70087b471a7db5497dd81ab7449880d",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "10d4173a455fa9108bbd0dcc559e86b977bb5abb40136580db05c91deef9ff3c",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "ec78fc557481d537fd26efc533e6ddfdac8da81a990daf1aa15c2976b046023c",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "56bc2039ce8be02bddf293bd5c128089d4f7507a613aa4b6a1148a8da85f2d00",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "bc9b7fb40e35a85520a423dfd5960d79afca5775189193a8355d4e521956da20",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "bd2332744cafcabaf49532b41f3cdd639cb7a6ec700914ae29073d6d9df8cf4f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "5b7285ec50e2600dddc1e7ce4d8b15d18cba05e7ad0c23ba94e4d160fcdaa437",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "7ca1513f76c98d0ad7dfb3b91cab661a0c435b1f39c8223942071fb52544862b",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "8e1318958f0a0e831bbe62323bab012f846ec7632c373799f679fc4bc9039440",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "32bb93e222f82301a520f77ecb9bc7e9c1306baaf83fa1a45dc07f1534e190ec",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.security_context is set",
					"actual_value": "kubernetes_pod[busybox].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "76d999db7d46d96d28545194b29e5361022eeada94bb13505f3a1375e5a05127",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "84479d9f587546fb4455061ae1efa746548339777fef2bb8a3788618474eab61",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[name1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "15609c40ca615eeba5ca822f819788893d8815e0819d5a984530794c8efeb396",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "c2afc277ed5bed37bf7dd6725508d41895d881a3c4e87ac9503760864d0c26f1",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "fd07116e3d835c4a624eac44d3a1d961651eccc16bc63522f7f2ee4f4ea55246",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "8df65836e80e6640ba6c3bdf453b42c1fca0a745dd335b1042ef26acbd9bc2e0",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "86add64c820ce7239d32c1abe3b3779284fef49f0161721fae70b9df09b29be0",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "66f51ef9fbb38362bee3f5cf6c2e14b6d1b2c278e3b31777347c0e552cbb23fc",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "f38240858602e0c939b5e76ea60adf4f6ff296ccc5f795d304aaec79113adce6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "7bac902555ba4c7746a3af809a205aef511e6cdc76791e089abaf82ea710f87d",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "247bd04edc9c8a79d0e79cd16def29b1bf2f75bfd7298ca84fc457578376d900",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "4d592c91553047df2b3a0454954d7faca4db4472a2822a488d503120d729d7c6",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "4a92653a447b401107b186982e97e96f882e85921aef63b19981255d475f972e",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "bd2332744cafcabaf49532b41f3cdd639cb7a6ec700914ae29073d6d9df8cf4f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "8c197e1bbdd36afddbbee67d217ab96b0e8f3f1a5e7b24480f77393ecc06712c",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "15609c40ca615eeba5ca822f819788893d8815e0819d5a984530794c8efeb396",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "c49f9f45b7f9ac64ec79f08ceacc93d387dce6fd20f85d13b1aa37555341e4d0",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "1048079a88655cca4cb21a1ff82be59ed5a7dc5f1dfbdf039640360e699659d2",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "42ce67477dab3dcc3da2f12459cca76cb1bc3d21af77b69515d2e07b9f32ef33",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "5f901c1df9ef2b1c553aeb624db8ea8b304ff811f075705e8ee4fcbbff49dc03",
					"line": 163,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test6].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "b9a931f2806526361bd941138c0824766e7acffdb7ab088befc1e076c25afaae",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "9fda8525883d5d11c36ccdbcbfafeaec6c9f6510c1ca48436f0d38f53d533b8a",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "411bec39dddfbd1cf1b8dc214570129c635e23f69714240ce1d32c7e31d0d06d",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.security_context is set",
					"actual_value": "kubernetes_pod[example1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "58b9aa301458b3e2e48d370f205641be2c3b4c74831453f183e702f64f817830",
					"line": 162,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test6].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.security_context is set",
					"actual_value": "kubernetes_pod[test6].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "fffd00f08231e6512d026bce7d0197f48246ae2fa0240c592e14778d18cb9265",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "9b2ef6a32f2dc39ec67cc333c2c969a1b3c50542524d600002a3a0193cc69e12",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "c12b08012f7b3dec06105c595a26aec277f2ff6c3685f23f3293c72266cbe0d4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "b864ef1dccf79a50c49c1fc64b395019ebd2a7b93d52bf48da6f5e90ce021d4d",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "6a98a925900f798e3ff9664f6651c13eb33b709e46b27304c9b29594e44fe554",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "555b56cd8f5e5fc57df5ff5fe7a1bfa8091597dc7267e1254afc4a279c6bed26",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "f4806740eac9187c9bf845f5c722c3489eb0e159e393ac19f40a624cd1d38e02",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "a0be3b4c0d850e4e4bfc5155716ccdd09156ccabfe5d529faebb5068d86cb4a3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "bda441cdda8093615aeea9481c00818dccff0273162d63c2ac70e5b6b21a821c",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "e3577ae0a4a3ce527cc3d282523abeab5d2fc48dee477de77dc2b5be943ee908",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "ebeca3bd781c8b4fcf6c5edc61a865a93d591c3c839835a5e3a66c0fb7bd052c",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "7bac902555ba4c7746a3af809a205aef511e6cdc76791e089abaf82ea710f87d",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "7b78c5e4cfb0e03f38bbece9b7cc556a0d3114ac6ec02ddff3861e5d5cb05d4b",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "a4ae26955b651c03181b27250495747bafb9713d32fcf63369d3a1ad225d86ed",
					"line": 145,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "56bc2039ce8be02bddf293bd5c128089d4f7507a613aa4b6a1148a8da85f2d00",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "f70e7abd88baef6f3c3b4cde6c07e7f402315907f4efccd94beb7eacad7cdd9a",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "41efb0847a3dee32b41ccd0583823d2c36737a6a373cca86247d303f2207b4ae",
					"line": 41,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "52157ccdb9b24e481eaf46ad65d35f8c4e692495349de0c677366f2cb7cfef2c",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "f9867e0bf0a54d390aa8f73ad12db3316241427228ac81d1a1c6d50382e7ee39",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[example1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "fa59abf0c1ec1070f3f74999ba7fb0b8a72aef3e179848e9a04bd60cfe499932",
					"line": 67,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.security_context is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "890f14dd7b71e5d1e8e970aa10897709252e7a5776ce03376d85444ab05058b6",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "6d6de2f546d6c5a276670e8933e13ca350d658835cb61df90e5e8c6d43226b27",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "76d999db7d46d96d28545194b29e5361022eeada94bb13505f3a1375e5a05127",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "d07b9f8895f799d5032b22c9ba12e0d86f1669f76cefa2cc00f9bb2f7b2691a6",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "d708b9835c3d438a16a455e92d1f77d2374594af6164b3a6b95e95b9aa051dad",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "a3d084873b723806bb68cb610cdcbddbada1d875e99dbb4687a3bcf23de57bf2",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "cc0d31f2d8eed917ca2210950681c8bba0cd3b04e15a5ed34d38b1e7de51f223",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[name1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.security_context is set",
					"actual_value": "kubernetes_pod[name1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "44f8b217d1926567bf63529fff849d0135dc28a874fe65cf71b3f2116cda1130",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "123faba109395d11cb8e065f39f6f41359679c324bacbd88cd84212f9f928fc9",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[with_pod_affinity].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.security_context is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "88d212208f81a0f4e28e67e76cbe58bf4cc76b51e7e6f69645c63aa9475dab54",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[pod1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.security_context is set",
					"actual_value": "kubernetes_pod[pod1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "1bfbd61e0f1c149dfb2873cc0753ed9a8fcce96de67c87b005f35b77e1cb403a",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "a4a66f51f7264c6feac8724c246cfe19795c2d02c02da423e6db6b9f1b8801df",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "0587d5d1b24b6bf0ebe6915224a465ed81208f9a39d1cbe36c89c1bca9709754",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "e3663406e2b8af851a3738f29a9ffdb3f795910ac186aa57f6495aafd68901b5",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "3733ae4188e372c4fb0236721f778c05c9dbf0bf4b520ab8a9b853ec0a3467ce",
					"line": 26,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "0e60e0f2eae23fb3704c48f99ebead5c49b3b4bd1c95f4dea3a5bd6f83e874d4",
					"line": 42,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "9fd896da469d725cd6ebbd1f3955df3249498f86f1b5e9b5fde75d5a2a523be6",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "60abcdbcc64be31d559eea94a0bf0ae5500210e6e266379e07a8b17a6872da0c",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "247bd04edc9c8a79d0e79cd16def29b1bf2f75bfd7298ca84fc457578376d900",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "c529acee1977261b2c2ce39bdfb8f16222a5b750242dff2c46fa8edc663334f4",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "65235bf39b2e7fa3cd66d00fba084b8436db7512ea69b2716d2a22bb953a68dc",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "6c62e2ea513e140665585c0868f20c205e7a53e199a2ebe2445b9f4caae6e1e7",
					"line": 63,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "4d592c91553047df2b3a0454954d7faca4db4472a2822a488d503120d729d7c6",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "34b01fa65de94c2f1e81b73b3640648fc2e7470c91590366cbccadfedce27be0",
					"line": 7,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[positive1].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "a610968076c39ac25bad55ec76808e269c03e7981ff32f0f2855beb3456d4122",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_pod[test].spec",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "10d4173a455fa9108bbd0dcc559e86b977bb5abb40136580db05c91deef9ff3c",
					"line": 55,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "bda441cdda8093615aeea9481c00818dccff0273162d63c2ac70e5b6b21a821c",
					"line": 76,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				}
			]
		},
		{
			"query_name": "PostgreSQL Server Infrastructure Encryption Disabled",
			"query_id": "6425c98b-ca4e-41fe-896a-c78772c131f8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#infrastructure_encryption_enabled",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Encryption",
			"description": "PostgreSQL Server Infrastructure Encryption should be enabled",
			"description_id": "b982dca0",
			"files": [
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\postgresql_server.tf",
					"similarity_id": "b6a603268779fe7fdc69baacd0429c24afbe939727ed733a0133697c56275eb9",
					"line": 24,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_postgresql_server[fails].infrastructure_encryption_enabled",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server[fails].infrastructure_encryption_enabled' is set to true",
					"actual_value": "'azurerm_postgresql_server[fails].infrastructure_encryption_enabled' is set to false"
				},
				{
					"file_name": "terraform\\azurerm\\postgreSQL\\secure-tls-policy.tf",
					"similarity_id": "a4de44c6d3e3f8e20b5aad40e07d39136907b9aa0172044fff10cb9b341f9cd9",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_postgresql_server[fail_psql]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_postgresql_server[fail_psql].infrastructure_encryption_enabled' is defined and set to true",
					"actual_value": "'azurerm_postgresql_server[fail_psql].infrastructure_encryption_enabled' is undefined or null"
				}
			]
		},
		{
			"query_name": "RDS Using Default Port",
			"query_id": "bca7cc4d-b3a4-4345-9461-eb69c68fcd26",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#port",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "RDS should not use the default port (an attacker can easily guess the port). For engines related to Aurora, MariaDB or MySQL, the default port is 3306. PostgreSQL default port is 5432, Oracle default port is 1521 and SQL Server default port is 1433",
			"description_id": "6cbad3f4",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "fbf73c905a50eb3fed82d313f553ba8843d238bef4f62198d2769e4c1b0d5345",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "aws_db_instance[positive1].port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_db_instance[positive1].port is not set to 3306",
					"actual_value": "aws_db_instance[positive1].port is set to 3306"
				}
			]
		},
		{
			"query_name": "Root Container Not Mounted As Read-only",
			"query_id": "d532566b-8d9d-4f3b-80bd-361fe802f9c2",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#read_only_root_filesystem",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Build Process",
			"description": "Check if the root container filesystem is not being mounted as read-only.",
			"description_id": "b7afed50",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "8e1b0806061117a6f5b678fa2a4e1aeb09b3ba3db6c81a888016bb6b654c0e29",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "e9f0103732c05770b82e393a20a8ee4918e424d2496ab0bb78462dc05c28940e",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "b98751554b7a6ea7fd9c225c729515bb4db39b462156a591ae3fdeaab5c52c5f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "a801b8cff15065209487bd99dd26796aea7b99f73752762ed52a0538f543eb9c",
					"line": 67,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_persistent_volume[test2].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_persistent_volume[test2].spec.container.security_context is set",
					"actual_value": "kubernetes_persistent_volume[test2].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\host_aliases_undefined_or_empty.tf",
					"similarity_id": "c050639f0b1724c77334f9621865a9fd3f377fe89b3f3957eca3bf82f585475e",
					"line": 23,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[name1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[name1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[name1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "73b2243e4b025ce50ead5050efd33a7c13cc72f5bf0defb7df84e2992daf8bb5",
					"line": 76,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "888f8415025f46684a9cb4e0f19929c64d4d43310d6cd58221944c4f0e32cf77",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[pod1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[pod1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[pod1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "93ba9cf41191b8eb2b5cc7660320d160f767f540b78863c6af04dad13d5e9e98",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "afd2c9f1185bcae9b76c74b06412c5951d761380a9856c193e4589b1daeb9a1c",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"drop\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "6f962f0608021693b8abf780af87920cb5d28851d28dac13c9bbe042a7e5d746",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "0b26562f47350acd57390a2268d64191b1cc9d55c62eda2d73be4ba4d3c2b6d6",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_pull_policy_of_container_is_not_always.tf",
					"similarity_id": "2c0fe119398a3a200723121b7173ca6e45efd1e99de3b91fac5d1944a9fa06cc",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[busybox].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[busybox].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[busybox].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\pod_or_container_without_security_context.tf",
					"similarity_id": "e9f0103732c05770b82e393a20a8ee4918e424d2496ab0bb78462dc05c28940e",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "38f3ccea0e77a23c4dc5f48c7c366300fa9b66a2b7a38ec5379a582f00319d67",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "93ba9cf41191b8eb2b5cc7660320d160f767f540b78863c6af04dad13d5e9e98",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "f71f6a2b96f444bffb6c4b8385819b685c470eda32aec1b21e5901c887d279ed",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "6b0b74474a2d4523ed78046b9489baec77f0a43e43eed095447d9379c3657e60",
					"line": 145,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo3].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "4f15934dc26615faaed2d7b8fe5abfa596c989bafce6eb6fd97bb65817156296",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "a06052267b6c36a827ebf79db7e79130de07ad98fa7c0b995d6498aeb350b8cd",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[example1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[example1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[example1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "92ec1880060c89d5b36b86db4f7aec96ad62f9f5b8ba0925a5f26dc0c2a17d20",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "4a58896fb4ca396f4c9bb2c8064cdbd071139d4e92703e56a4c8722d6017ad71",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "e867525efce898457261b77f2dfd9e99567bee11a75a400aaaba049df5e18492",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "68b529eb4d841007cada3765003373de259b192c68a1fa897bcc307a9364eb85",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "5e652a781eb3f0448e296fb4c3fc11efe62d86ef5b8e8e903292528c396ea022",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "9aa72f1bdbcf42fd7591a41c255b9bc7aff45c8c4127361c9cb59530d0c17603",
					"line": 90,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_daemonset[example2].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_daemonset[example2].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\containers_with_sys_admin_capabilities.tf",
					"similarity_id": "cdd137bf57741c3be6ee89414ce94a2fb7be592a53018feb5e5852ec6db2545f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"SYS_ADMIN\"]}})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "f3727d474894f8a749f99235684f66d82f9d40014c9e1f453378a12cc7b4120a",
					"line": 163,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test6].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test6].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test6].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "bb512c8e43a9087367336418d38da86f91a92af739004ef15a7a6bfde696eb57",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "50bcc3b8b77f5b49dd8a965bd68758304392b04a34c68ebcc11f53812e990361",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "8ebc6da529470ad01e78878b260f549f087c0e3bf388d4fddf82a083e76850c5",
					"line": 63,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "c003d5f44d808bba9853ba5901a9414de255f1ad474b5b3c6c23d3a6fc1d89a3",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "f4f59d5cbac9c4483b8fa32eb86b317f5fee9ee864d273c54f6d71e262a36cb4",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"tiller-image\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "f1dca1071fd0c1bc5c634d5b17e6c4e2407ab0c1754905af78ff98d35c809d5a",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[positive1].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_service_account.tf",
					"similarity_id": "7fda2770c1311d2b0c68e79f25baed7b790ca60b51c50bad4ee0b1cdde11b117",
					"line": 41,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[with_pod_affinity].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[with_pod_affinity].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "73b2243e4b025ce50ead5050efd33a7c13cc72f5bf0defb7df84e2992daf8bb5",
					"line": 76,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus_fail].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\privilege_escalation_allowed.tf",
					"similarity_id": "469c6ecb698090df15109c06baac5f31e94ec20603f40e122377b5eb4b81e1ca",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"allow_privilege_escalation\": true})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "abbcda3d9d27a4cd891853132236253a6f1e179f2a64577790a93f64048e432c",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_without_pod_disruption_budget.tf",
					"similarity_id": "1fea01c0b535ff72375e3806ca088693c4c439f42f00b280d15ae6981b2dff06",
					"line": 26,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\cron_job\\cronjob_deadline_not_configured.tf",
					"similarity_id": "3eb4fe4fa610b3522d28f1c000b4d009a81cd2de8a399d633fb317f7e32dc399",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_cron_job[demo].spec.job_template.spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\no_drop_capabilities_for_containers.tf",
					"similarity_id": "f71f6a2b96f444bffb6c4b8385819b685c470eda32aec1b21e5901c887d279ed",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test1].spec.container[%!d(string={\"capabilities\": {\"drop\": [\"ALL\"]}})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[test1].spec.container[%!d(string={\"capabilities\": {\"drop\": [\"ALL\"]}})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "dd0442eb3edbdd9bb818b474e85d974d5f2b261dc3657fbc07a6f87b6d1bc059",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "8e938ed49d1a3774cb4f137d2da8e8131cc8fa68e5d0355f7796771aff07349a",
					"line": 42,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "b78368d28bb06d0558d4985e7a8a81f75e508d2c9c623742c7949df58e2687fc",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "2548e93a0bca689a43c29e4a40c0b5972bfc0b738c3094bc47fe6af5fb0b8ab6",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "ed20eaf2635c23b267098f20e7b4defd540e7f7ade62df6dc23a2781167b84bb",
					"line": 42,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[fail].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "7f990f4eabf89354562430b590963cecd1714f392c43b8169f01c8a8e483a574",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_requests_not_set.tf",
					"similarity_id": "b78368d28bb06d0558d4985e7a8a81f75e508d2c9c623742c7949df58e2687fc",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "28073f5b833a18ef672cb2b7a1864f4bfdb3a0e787491bd361eb61a0a5bbf2e9",
					"line": 42,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.init_container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_is_privileged.tf",
					"similarity_id": "57d839078015bc7c0ca937fb8f91c63df4390e8f91de75c21c2ef5e30b40af6e",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"privileged\": true})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\memory_limits_not_defined.tf",
					"similarity_id": "4f15934dc26615faaed2d7b8fe5abfa596c989bafce6eb6fd97bb65817156296",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_resources_limits_undefined.tf",
					"similarity_id": "b98751554b7a6ea7fd9c225c729515bb4db39b462156a591ae3fdeaab5c52c5f",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\tiller_is_deployed.tf",
					"similarity_id": "f4f59d5cbac9c4483b8fa32eb86b317f5fee9ee864d273c54f6d71e262a36cb4",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"cpu\": \"250m\", \"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\root_container_not_mounted_as_read_only.tf",
					"similarity_id": "bb512c8e43a9087367336418d38da86f91a92af739004ef15a7a6bfde696eb57",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[0].security_context.read_only_root_filesystem is set to true",
					"actual_value": "kubernetes_pod[positive1].spec.container[0].security_context.read_only_root_filesystem is not set to true"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "60a91320cd04fa4d45859aa9e5ed512045754b7c313794fb025f3574d89e5f4e",
					"line": 26,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\container_with_added_capabilities.tf",
					"similarity_id": "e2b634561902f624fd4caf438aba1a0e2c9b42678cf4c71f4941019d5db83db7",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is set",
					"actual_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"capabilities\": {\"add\": [\"NET_BIND_SERVICE\"]}})].security_context.read_only_root_filesystem is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "e867525efce898457261b77f2dfd9e99567bee11a75a400aaaba049df5e18492",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus_budget].spec.template.spec.container[%!d(string={\"args\": [\"--volume-dir=/etc/config\", \"--webhook-url=http://localhost:9090/-/reload\"], \"image\": \"jimmidyson/configmap-reload:v0.1\", \"image_pull_policy\": \"IfNotPresent\", \"name\": \"prometheus-server-configmap-reload\", \"resources\": {\"limits\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}, \"requests\": {\"cpu\": \"10m\", \"memory\": \"10Mi\"}}, \"volume_mount\": {\"mount_path\": \"/etc/config\", \"name\": \"config-volume\", \"read_only\": true}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\net_raw_capabilities_not_being_dropped.tf",
					"similarity_id": "afd2c9f1185bcae9b76c74b06412c5951d761380a9856c193e4589b1daeb9a1c",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example3\", \"port\": {\"container_port\": 8080}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\deployment_has_no_pod_anti_affinity.tf",
					"similarity_id": "ba01f9933c6f8d95416714f1e5a9a4369e3137fe4be87925d7b744820ab949dd",
					"line": 26,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_deployment[example].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is set",
					"actual_value": "kubernetes_deployment[example].spec.template.spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "25078fcb61d26fb34fb800914b719fee1b8accb3e9a6075fd29ef41463e49057",
					"line": 24,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.security_context is set",
					"actual_value": "kubernetes_pod[test].spec.container.security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\cpu_limits_not_set.tf",
					"similarity_id": "c003d5f44d808bba9853ba5901a9414de255f1ad474b5b3c6c23d3a6fc1d89a3",
					"line": 8,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is set",
					"actual_value": "kkubernetes_pod[positive1].spec.container[%!d(string={\"env\": {\"name\": \"environment\", \"value\": \"test\"}, \"image\": \"nginx:1.7.9\", \"liveness_probe\": {\"http_get\": {\"http_header\": {\"name\": \"X-Custom-Header\", \"value\": \"Awesome\"}, \"path\": \"/nginx_status\", \"port\": 80}, \"initial_delay_seconds\": 3, \"period_seconds\": 3}, \"name\": \"example22222\", \"port\": {\"container_port\": 8080}, \"resources\": {\"requests\": {\"memory\": \"50Mi\"}}})].security_context is undefined"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "abbcda3d9d27a4cd891853132236253a6f1e179f2a64577790a93f64048e432c",
					"line": 55,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.template.spec.container",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is set",
					"actual_value": "kkubernetes_stateful_set[prometheus].spec.template.spec.container[%!d(string={\"args\": [\"--config.file=/etc/config/prometheus.yml\", \"--storage.tsdb.path=/data\", \"--web.console.libraries=/etc/prometheus/console_libraries\", \"--web.console.templates=/etc/prometheus/consoles\", \"--web.enable-lifecycle\"], \"image\": \"prom/prometheus:v2.2.1\", \"image_pull_policy\": \"IfNotPresent\", \"liveness_probe\": {\"http_get\": {\"path\": \"/-/healthy\", \"port\": 9090, \"scheme\": \"HTTPS\"}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"name\": \"prometheus-server\", \"port\": {\"container_port\": 9090}, \"readiness_probe\": {\"http_get\": {\"path\": \"/-/ready\", \"port\": 9090}, \"initial_delay_seconds\": 30, \"timeout_seconds\": 30}, \"resources\": {\"limits\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}, \"requests\": {\"cpu\": \"200m\", \"memory\": \"1000Mi\"}}, \"volume_mount\": [{\"mount_path\": \"/etc/config\", \"name\": \"config-volume\"}, {\"mount_path\": \"/data\", \"name\": \"prometheus-data\", \"sub_path\": \"\"}]})].security_context is undefined"
				}
			]
		},
		{
			"query_name": "S3 Bucket Logging Disabled",
			"query_id": "f861041c-8c9f-4156-acfc-5e6e524f5884",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Observability",
			"description": "S3 bucket without logging",
			"description_id": "fa5c7c72",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
					"similarity_id": "7aaf7cb603985224cafd7c868ddb598d01d992d5e525ecef95b9a181e06cd608",
					"line": 2,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_static]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
					"similarity_id": "0f842a6f917466cb894c1813d6debb77c8bf554619a3c27e53d2422faa4094ed",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
					"similarity_id": "d0c723aa67e2b1d80a1f51cd2aa02e00f4fcbc072c624b3fea33445bdd2cb821",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_mfa]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
					"similarity_id": "f254b406dd44c5059b84d7761b0d3dce357ae03aa7f0311a7f805caa23d0e18d",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[b]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "60e2b106305cf06575c0c9d579e5bc8a1ac9f7f5251094821ad8440725b3db8d",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[public_bucket]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
					"similarity_id": "09f9cd1cca079cd208ddcc3d8fc31482ae4d11f58dbff9019f7e48fd04b2c3ac",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail_permissions]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\s3\\s3.tf",
					"similarity_id": "0f023925e5211dda7a72ffcc04e1d0ad34f80f9b97c02faa04b8760eddb5ae82",
					"line": 11,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'logging' is defined and not null",
					"actual_value": "'logging' is undefined or null"
				}
			]
		},
		{
			"query_name": "S3 Bucket Public ACL Overridden By Public Access Block",
			"query_id": "bf878b1a-7418-4de3-b13c-3a86cf894920",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "S3 bucket public access is overridden by S3 bucket Public Access Block when the following attributes are set to true - 'block_public_acls', 'block_public_policy', 'ignore_public_acls', and 'restrict_public_buckets'",
			"description_id": "aa9967ef",
			"cis_description_id": "CIS Security - CIS Amazon Web Services Foundations Benchmark v1.4.0 - Rule 2.1.5",
			"cis_description_title": "Ensure that S3 Buckets are configured with 'Block public access (bucket settings)'",
			"cis_description_text": "Amazon S3 provides Block public access (bucket settings) and Block public access (account settings) to help you manage public access to Amazon S3 resources. By default, S3 buckets and objects are created with public access disabled. However, an IAM principal with sufficient S3 permissions can enable public access at the bucket and/or object level. While enabled, Block public access (bucket settings) prevents an individual bucket, and its contained objects, from becoming publicly accessible. Similarly, Block public access (account settings) prevents all buckets, and contained objects, from becoming publicly accessible across the entire account.\nAmazon S3 Block public access (bucket settings) prevents the accidental or malicious public exposure of data contained within the respective bucket(s). Amazon S3 Block public access (account settings) prevents the accidental or malicious public exposure of data contained within all buckets of the respective AWS account. Whether blocking public access to all or some buckets is an organizational decision that should be based on data sensitivity, least privilege, and use case.",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
					"similarity_id": "66e9587b24f4c35f67bcf2146511450e7352c6156fa320372cbe1d42cc695cba",
					"line": 7,
					"issue_type": "IncorrectValue",
					"search_key": "aws_s3_bucket[public_bucket].acl",
					"search_line": 0,
					"search_value": "",
					"expected_value": "S3 Bucket public ACL is not overridden by S3 bucket Public Access Block",
					"actual_value": "S3 Bucket public ACL is overridden by S3 bucket Public Access Block"
				}
			]
		},
		{
			"query_name": "S3 Bucket Without Ignore Public ACL",
			"query_id": "4fa66806-0dd9-4f8d-9480-3174d39c7c91",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Insecure Configurations",
			"description": "S3 bucket without ignore public ACL",
			"description_id": "28aa7150",
			"files": [
				{
					"file_name": "terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
					"similarity_id": "5d9c50e8faaddfd9f64f7c43c5668cf81c9e16a3899abff56ac429bb234280c3",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_s3_bucket_public_access_block[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ignore_public_acls' is equal 'true'",
					"actual_value": "'ignore_public_acls' is missing"
				}
			]
		},
		{
			"query_name": "Secrets As Environment Variables",
			"query_id": "6d8f1a10-b6cd-48f0-b960-f7c535d5cdb8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#secret_key_ref",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Secret Management",
			"description": "Container should not use secrets as environment variables",
			"description_id": "f5c43d1e",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "65788af5eb92052b369d025ea5160c21c2c8d5aa319be7c6224fc999592641e7",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.env",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.env.value_from.secret_key_ref is undefined",
					"actual_value": "kubernetes_pod[test].spec.container.env.value_from.secret_key_ref is set"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "124119e90f4380d75cac29016c8430b7756be0782710ab25e4c43c8207ef9867",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.env_from",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_pod[test].spec.container.env_from.secret_ref is undefined",
					"actual_value": "kubernetes_pod[test].spec.container.env_from.secret_ref is set"
				}
			]
		},
		{
			"query_name": "Service Type is NodePort",
			"query_id": "5c281bf8-d9bb-47f2-b909-3f6bb11874ad",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/service#type",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Service type should not be NodePort",
			"description_id": "50e2c36f",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\service\\service_type_is_nodeport.tf",
					"similarity_id": "c5eaf1c5f6668a5586b276113ac0c1747c7880718f0ee9fb51db92a9c48dad1b",
					"line": 15,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_service[example].spec.type",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service[example].spec.type is not 'NodePort'",
					"actual_value": "kubernetes_service[example].spec.type is 'NodePort'"
				},
				{
					"file_name": "terraform\\kubernetes\\service\\ingress_controller_exposes_workload.tf",
					"similarity_id": "f410dd210268af429f14e18b3bd480533ce11c618027cd0d5fee787664c2dff5",
					"line": 11,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_service[example].spec.type",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_service[example].spec.type is not 'NodePort'",
					"actual_value": "kubernetes_service[example].spec.type is 'NodePort'"
				}
			]
		},
		{
			"query_name": "Shield Advanced Not In Use",
			"query_id": "084c6686-2a70-4710-91b1-000393e54c12",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/shield_protection#resource_arn",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "AWS Shield Advanced should be used for Amazon Route 53 hosted zone, AWS Global Accelerator accelerator, Elastic IP Address, Elastic Load Balancing, and Amazon CloudFront Distribution to protect these resources against robust DDoS attacks",
			"description_id": "e09b31c7",
			"files": [
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
					"similarity_id": "abfdc907f8c62c0f3ead4484efec6f231882a3d8f40b60a64beffce211e99994",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[fail_defaultcert]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudfront_distribution has shield advanced associated",
					"actual_value": "aws_cloudfront_distribution does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\route53\\cloudwatch_logging_disabled.tf",
					"similarity_id": "0bd97c31382146ddb02fae79e8dd3c18470c0dd06e18d8360f555dd20c548ee2",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_route53_zone[no_query_log]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_route53_zone has shield advanced associated",
					"actual_value": "aws_route53_zone does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\vpc\\vpc_peering_route_table_with_unrestricted_cidr.tf",
					"similarity_id": "efc080704af562ba686742ddbe9ea17eb7392b63aeb42fc0b714ce110f0c506b",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "aws_eip[nat]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_eip has shield advanced associated",
					"actual_value": "aws_eip does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\lb\\redirect.tf",
					"similarity_id": "1d77d0d03c8eff9351a01b4d8bbc4de1ea2334f528f5f400d40259dfbf5ff268",
					"line": 9,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[lb_bad_1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lb has shield advanced associated",
					"actual_value": "aws_lb does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\globacc\\globacc.tf",
					"similarity_id": "ba6bd0e185b99906cdabd16fb518a2faf7e21458a776e85fcadb1705995fdb22",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_globalaccelerator_accelerator[example]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_globalaccelerator_accelerator has shield advanced associated",
					"actual_value": "aws_globalaccelerator_accelerator does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\shield\\todo.tf",
					"similarity_id": "24a4ce8b3c09585f5fec2105a15d2940966c6daebf5fbb114cfebd9d200c9e71",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_route53_zone[positive2]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_route53_zone has shield advanced associated",
					"actual_value": "aws_route53_zone does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\lb\\lb.tf",
					"similarity_id": "bfc5193525ff3bc5a461f08fdd3a087fd3733640c13a4efd076c8294194ad8e5",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lb has shield advanced associated",
					"actual_value": "aws_lb does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\cloudfront\\cloudfront.tf",
					"similarity_id": "c317722beb3a8e6835177a97bb8c8b991ee34b315b35d7cb54d471fafc95aab9",
					"line": 13,
					"issue_type": "MissingAttribute",
					"search_key": "aws_cloudfront_distribution[s3_distribution]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_cloudfront_distribution has shield advanced associated",
					"actual_value": "aws_cloudfront_distribution does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\eip\\eip.tf",
					"similarity_id": "ac79e87676aa834ebf7d9bfe7bc537ff267b6bccd1feab74ce78cf12e9a0adf3",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_eip[solo]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_eip has shield advanced associated",
					"actual_value": "aws_eip does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_groups_not_used.tf",
					"similarity_id": "af6a47bff16b49a05786c7a272f3233478d7046bf082fa9308bb48f2719090f0",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_lb[test]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_lb has shield advanced associated",
					"actual_value": "aws_lb does not have shield advanced associated"
				},
				{
					"file_name": "terraform\\aws\\route53\\cloudwatch_logging_disabled.tf",
					"similarity_id": "1b1583f9d907795bf7f906c8b32e913f43cd52cd0f918c7ca571b6120bbbe84f",
					"line": 8,
					"issue_type": "MissingAttribute",
					"search_key": "aws_route53_zone[log_group_mismatch]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_route53_zone has shield advanced associated",
					"actual_value": "aws_route53_zone does not have shield advanced associated"
				}
			]
		},
		{
			"query_name": "StatefulSet Requests Storage",
			"query_id": "fcc2612a-1dfe-46e4-8ce6-0320959f0040",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/stateful_set#volume_claim_template",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Build Process",
			"description": "A StatefulSet requests volume storage.",
			"description_id": "3a82ccdb",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "59465e3653dfc2d1d503cb07169852ad4f8cf904b86b60526bc7d3dbbdabd400",
					"line": 177,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template.spec.resources.requests.storage",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template.spec.resources.requests.storage should not be set",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.volume_claim_template.spec.resources.requests.storage is set to 16Gi"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "8c8a3222c585e137f738f0365231e5ac781ae0112c06cccc7802519c9e9ef3fe",
					"line": 177,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.volume_claim_template.spec.resources.requests.storage",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.volume_claim_template.spec.resources.requests.storage should not be set",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.volume_claim_template.spec.resources.requests.storage is set to 16Gi"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "f2e2d545e111ae3cdc04daa77661c53c7b04c7910122c8fddc1079e867744c9c",
					"line": 198,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template.spec.resources.requests.storage",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template.spec.resources.requests.storage should not be set",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.volume_claim_template.spec.resources.requests.storage is set to 16Gi"
				}
			]
		},
		{
			"query_name": "StatefulSet Without PodDisruptionBudget",
			"query_id": "7249e3b0-9231-4af3-bc5f-5daf4988ecbf",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/stateful_set#selector",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Availability",
			"description": "StatefulSets should be assigned with a PodDisruptionBudget to ensure high availability",
			"description_id": "efa415db",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "8ac7d0dbb4f25e567be69902d76dd54d514ffb572dd511ab958c8cfd94110d56",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.selector.match_labels",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.selector.match_labels is targeted by a PodDisruptionBudget",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.selector.match_labels is not targeted by a PodDisruptionBudget"
				}
			]
		},
		{
			"query_name": "StatefulSet Without Service Name",
			"query_id": "420e6360-47bb-46f6-9072-b20ed22c842d",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/stateful_set#selector",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Availability",
			"description": "Check if the StatefulSet have a headless 'serviceName'",
			"description_id": "a0d17b18",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_requests_storage.tf",
					"similarity_id": "dd7464cf77c0ec1fe0b1aa8614bb0e08369916e36f63b42a4c3795ae840d9c12",
					"line": 28,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus].spec.service_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus].spec.service_name refers to a Headless Service",
					"actual_value": "kubernetes_stateful_set[prometheus].spec.service_name does not refer to a Headless Service"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_pod_disruption_budget.tf",
					"similarity_id": "55cdb0413059cc39673ec2fda02738675134c5794f2a997c28b5149abd65563d",
					"line": 28,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_budget].spec.service_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_budget].spec.service_name refers to a Headless Service",
					"actual_value": "kubernetes_stateful_set[prometheus_budget].spec.service_name does not refer to a Headless Service"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\statefulset_without_service_name.tf",
					"similarity_id": "42dd6a045b9c9e1870c922d9cee1ad0e8184e8bb71c24c762d95249ab16a1756",
					"line": 49,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[prometheus_fail].spec.service_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[prometheus_fail].spec.service_name refers to a Headless Service",
					"actual_value": "kubernetes_stateful_set[prometheus_fail].spec.service_name does not refer to a Headless Service"
				},
				{
					"file_name": "terraform\\kubernetes\\stateful_set\\incorrect_volume_claim_access_mode_read_write_once.tf",
					"similarity_id": "bd688bb1ae7dc4ed3d575d4e2fd8f408fcdcbbccc055f4771eab4c02fb502383",
					"line": 28,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_stateful_set[fail].spec.service_name",
					"search_line": 0,
					"search_value": "",
					"expected_value": "kubernetes_stateful_set[fail].spec.service_name refers to a Headless Service",
					"actual_value": "kubernetes_stateful_set[fail].spec.service_name does not refer to a Headless Service"
				}
			]
		},
		{
			"query_name": "User with IAM Role",
			"query_id": "704fcc44-a58f-4af5-82e2-93f2a58ef918",
			"query_url": "https://registry.terraform.io/providers/hashicorp/google/latest/docs/data-sources/iam_policy#role",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "As a best practice, it is better to assign an IAM Role to a group than to a user",
			"description_id": "256939e9",
			"files": [
				{
					"file_name": "terraform\\google\\project\\RoleServiceAccountUser.tf",
					"similarity_id": "543664d32afd5b0b232021dc725bd36d78bccd30922f2ded01845e27590d2b5b",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_member[project].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_member[project].role is not set",
					"actual_value": "google_project_iam_member[project].role is set"
				},
				{
					"file_name": "terraform\\google\\kms\\kms_crypto_key_publicly_accessible.tf",
					"similarity_id": "8c9c987a6fc6059546f63b2122ede6963305a1760414df1427fc46793703d2a5",
					"line": 18,
					"issue_type": "IncorrectValue",
					"search_key": "google_iam_policy[fail_access].binding.role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_iam_policy[fail_access].binding.role is not set",
					"actual_value": "google_iam_policy[fail_access].binding.role is set"
				},
				{
					"file_name": "terraform\\google\\project\\project_iam_member.tf",
					"similarity_id": "5c7b6ecb9eb1edd7e44a83c85d2338420da7f9edfd5e181c9111b6e1910e9601",
					"line": 10,
					"issue_type": "IncorrectValue",
					"search_key": "google_project_iam_member[fail].role",
					"search_line": 0,
					"search_value": "",
					"expected_value": "google_project_iam_member[fail].role is not set",
					"actual_value": "google_project_iam_member[fail].role is set"
				}
			]
		},
		{
			"query_name": "Workload Host Port Not Specified",
			"query_id": "4e74cf4f-ff65-4c1a-885c-67ab608206ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/pod#host_port",
			"severity": "LOW",
			"platform": "Terraform",
			"category": "Networking and Firewall",
			"description": "Verifies if Kubernetes workload's host port is specified",
			"description_id": "b7ddd063",
			"files": [
				{
					"file_name": "terraform\\kubernetes\\pod\\container_host_pid_is_true.tf",
					"similarity_id": "9854c55c03e16218d3e9ab0f7f896e2e3a4bb3f29a1c40aa8d5f2bb663b3f727",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\cluster\\container_host_ipc_is_true.tf",
					"similarity_id": "86236d8f49f8fb499191a4bec4b50ca08b1b72040bdd1f0536d249cb0be60d8a",
					"line": 20,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\image_without_digest.tf",
					"similarity_id": "dc8f6e9459f08ad83274c9547154b149d535bfd866c492973bd0a53d2e64444f",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_mounting_with_sensitive_os_directory.tf",
					"similarity_id": "16e3234badff0388709dfe2a306b9259ed2dd0efefd1aa03ac364f6c928a9289",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\liveness_probe_is_not_defined.tf",
					"similarity_id": "867e4522e6f4364c1b75dc4b8e9cee438e2f8cce4f0b7a1d8b7da4c187c29d13",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\deployment\\service_account_token_automount_not_disabled.tf",
					"similarity_id": "d28896c6d9322d250a32383617294bac43963c6e5f78d43a46e0929f12d8b2b2",
					"line": 172,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test6].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\volume_mount_with_os_directory_write_permissions.tf",
					"similarity_id": "b6629a3ebb1cee3f2a13471d6aaec48c7ac761c554fe312df69e2a7b4d632146",
					"line": 21,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\workload_host_port_not_specified.tf",
					"similarity_id": "e5afa24bd9fdfa39e52d8a302d447af36189c24b321dca9de8538f648d17f29c",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\readiness_probe_is_not_configured.tf",
					"similarity_id": "dc4f094d0f96e2440f4e3423d05545711437166701652be44885f3b0562ba488",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\service_account_name_undefined_or_empty.tf",
					"similarity_id": "c1c70f7bbbda93021b461aaf3c7f3faa5111d7bc1b9b887b53086f0157bd3ab5",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secrets_as_environment_variables.tf",
					"similarity_id": "855ae54c8dc12b14ee1cf209a6cc0a74d912401ba217978205e35b3e696dcde5",
					"line": 24,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\missing_app_armor_config.tf",
					"similarity_id": "3034145d3d4d3f3389b572c982d07ca3f448341ea0388e9aab74ec131ffe2f7a",
					"line": 19,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[example1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\shared_host_network_namespace.tf",
					"similarity_id": "92dfc86847985e59767ef0fada7be1465d569ebd811123cb211dd498d8e49251",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\secoomp_profile_is_not_configured.tf",
					"similarity_id": "30f417b2811d2a38fc35b2dc88bea979f996db100ff73a1411ccdd74356b0213",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[pod1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\docker_daemon_socket_is_exposed_to_containers.tf",
					"similarity_id": "88d4b8ae09c31261ec5b9295fbc2692dbe392ea43a029371ba6f8e93891461f7",
					"line": 33,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\invalid_image.tf",
					"similarity_id": "539f6da2aa503e454dc1e677a536e60e64d297afca76c307838cf2a682389870",
					"line": 16,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[positive1].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				},
				{
					"file_name": "terraform\\kubernetes\\pod\\non_kube_system_pod_with_host_mount.tf",
					"similarity_id": "a92d50d6d29b0947503df6b0ee17989025029073a4bdc072b435be13ebd0514c",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "kubernetes_pod[test].spec.container.port",
					"search_line": 0,
					"search_value": "",
					"expected_value": "Attribute 'host_port' is defined and not null",
					"actual_value": "Attribute 'host_port' is undefined or null"
				}
			]
		},
		{
			"query_name": "App Service Authentication Disabled",
			"query_id": "c7fc1481-2899-4490-bbd8-544a3a61a2f3",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Azure App Service authentication settings should be enabled",
			"description_id": "ec37a064",
			"files": [
				{
					"file_name": "terraform\\azurerm\\appservice\\app_service.tf",
					"similarity_id": "6acaac4e07239ea23bb10fb60ed3bbceb6096a33cf2ddcffd552013f0097281c",
					"line": 36,
					"issue_type": "MissingAttribute",
					"search_key": "azurerm_app_service[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_app_service[fail].auth_settings' is defined",
					"actual_value": "'azurerm_app_service[fail].auth_settings' is undefined"
				}
			]
		},
		{
			"query_name": "DynamoDB Table Point In Time Recovery Disabled",
			"query_id": "741f1291-47ac-4a85-a07b-3d32a9d6bd3e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "It's considered a best practice to have point in time recovery enabled for DynamoDB Table",
			"description_id": "205ac3d1",
			"files": [
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_table.tf",
					"similarity_id": "9a370d13b4ae947012beffb0d98f159cc49d01a3d3511e9848071b12acf9ead5",
					"line": 10,
					"issue_type": "MissingAttribute",
					"search_key": "aws_dynamodb_table[{{default}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_dynamodb_table.point_in_time_recovery.enabled is enabled",
					"actual_value": "aws_dynamodb_table.point_in_time_recovery is missing"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "40eec6d52175341a4105b93a673b7c4bc8ac023b90f23b438fd1afb0d6bd1dce",
					"line": 99,
					"issue_type": "MissingAttribute",
					"search_key": "aws_dynamodb_table[{{basic_dynamodb_table}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_dynamodb_table.point_in_time_recovery.enabled is enabled",
					"actual_value": "aws_dynamodb_table.point_in_time_recovery is missing"
				}
			]
		},
		{
			"query_name": "EC2 Instance Monitoring Disabled",
			"query_id": "23b70e32-032e-4fa6-ba5c-82f56b9980e6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#monitoring",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Observability",
			"description": "EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods",
			"description_id": "0d5413e6",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
					"similarity_id": "7345ff97e4e91ca8fc4d3fd7f059baebd791b978a1a2b46b3ef46caf170921b2",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{positive1}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=positive1)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=positive1)"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "7c5b6ea141b85a571353cf0fc7e86991671f13f2262a73d72bdf4c8bfef66678",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{test_ec2_instance}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=test_ec2_instance)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=test_ec2_instance)"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "b4053a16a3ff470f9da7a3b76c47a48b1a889cb99872c106113228c93214bada",
					"line": 91,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{test}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=test)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=test)"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
					"similarity_id": "1867121127c944b21d97c5d0ff73d4fd672838ab67bccc0568ce41c3cf7fc91d",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{monitoring_positive1}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=monitoring_positive1)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=monitoring_positive1)"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
					"similarity_id": "ab26fba14a951143e8d1497e3afd02784012c180ba82619fad1f6859eed345aa",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{web}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=web)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=web)"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance_with_no_vpc.tf",
					"similarity_id": "538b9917a7b94d8ba0e75a237d313db36fe39eb73db0df8be7ba1a20d6c7c425",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{positive1}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=positive1)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=positive1)"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "8f824b3a694a55ed0f4b86912ad4725da4caa8b92418e418ff20186ec8560f64",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{fail}}",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'monitoring' is defined and not null%!(EXTRA string=fail)",
					"actual_value": "'monitoring' is undefined or null%!(EXTRA string=fail)"
				}
			]
		},
		{
			"query_name": "EC2 Not EBS Optimized",
			"query_id": "60224630-175a-472a-9e23-133827040766",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs_optimized",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance",
			"description_id": "ddce4bd9",
			"files": [
				{
					"file_name": "terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
					"similarity_id": "b81ee0432ac05ed2859d934f12d9361b14301fd63cb4895e23bdab277c139500",
					"line": 18,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{web}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "332e03e218a5b06a083c5c3ebe29411a05d27a64a7bfc3a38f41948da65861f9",
					"line": 91,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{test}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance.tf",
					"similarity_id": "3eeb2230f499eb90ff926785e5f8ab525ec271f05dc4d43614c3ceef20f40652",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{fail}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
					"similarity_id": "6ecefc1eaff15bd3f39ab681ce7d943f92745f385ddc3a782a50abbf9392f2b4",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{positive1}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
					"similarity_id": "a6e74a056fec1f526ec131b5de784441f582116879d7cdb0e486878821a4515c",
					"line": 17,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{monitoring_positive1}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\instance\\instance_with_no_vpc.tf",
					"similarity_id": "e6d5ac40d1792282cbec7da3961fc482c320843aa69040ab51aff328c9a37bed",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{positive1}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "04b49fe379f3f26c0f30a1e40c6a30adf2aab464bd632de7a1064e0fef1775aa",
					"line": 90,
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{test_ec2_instance}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'ebs_optimized' is set to true",
					"actual_value": "'ebs_optimized' is undefined or null"
				}
			]
		},
		{
			"query_name": "ELB Access Logging Disabled",
			"query_id": "20018359-6fd7-4d05-ab26-d4dffccbdf79",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elb#enabled",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Observability",
			"description": "ELB should have logging enabled to help on error investigation",
			"description_id": "c745bca6",
			"files": [
				{
					"file_name": "terraform\\aws\\elb\\elb.tf",
					"similarity_id": "d3dc4df9aa2a17d93c202c27e80c0a18d56e8cf2decd1bbf4429a3b7d3400ba7",
					"line": 5,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elb[{{test}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elb[{{test}}].access_logs' is defined and not null",
					"actual_value": "'aws_elb[{{test}}].access_logs' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\autoscaling\\ELB.tf",
					"similarity_id": "3e02dea93230902f5cf3dbeb6b545b699921d3eb72696079dca2f9454ed05df9",
					"line": 29,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elb[{{test_bad}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elb[{{test_bad}}].access_logs' is defined and not null",
					"actual_value": "'aws_elb[{{test_bad}}].access_logs' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elb\\elb_using_weak_ciphers.tf",
					"similarity_id": "fef254a1335415d70535bfc66fddaa62ee452c5c08b95884fd6f19e7c235f647",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elb[{{fail}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elb[{{fail}}].access_logs' is defined and not null",
					"actual_value": "'aws_elb[{{fail}}].access_logs' is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
					"similarity_id": "b5eb5cf6704b5076ceacded97937e2138923684a46da98c06377044daacf7caa",
					"line": 4,
					"issue_type": "MissingAttribute",
					"search_key": "aws_elb[{{wu_tang}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_elb[{{wu_tang}}].access_logs' is defined and not null",
					"actual_value": "'aws_elb[{{wu_tang}}].access_logs' is undefined or null"
				}
			]
		},
		{
			"query_name": "Neptune Logging Is Disabled",
			"query_id": "45cff7b6-3b80-40c1-ba7b-2cf480678bb8",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Observability",
			"description": "Neptune logging should be enabled",
			"description_id": "eb6f1a3b",
			"files": [
				{
					"file_name": "terraform\\aws\\neptune\\neptune.tf",
					"similarity_id": "23c7450430e31b8e593b3a51bdca0ff7a06e2b8b4f51e95012c59dee2a3e7ebd",
					"line": 38,
					"issue_type": "MissingAttribute",
					"search_key": "aws_neptune_cluster[{{default}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_neptune_cluster.enable_cloudwatch_logs_exports is defined",
					"actual_value": "aws_neptune_cluster.enable_cloudwatch_logs_exports is undefined"
				}
			]
		},
		{
			"query_name": "RDS Without Logging",
			"query_id": "8d7f7b8c-6c7c-40f8-baa6-62006c6c7b56",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#enabled_cloudwatch_logs_exports",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Observability",
			"description": "RDS does not have any kind of logger",
			"description_id": "c499a58c",
			"files": [
				{
					"file_name": "terraform\\aws\\rds\\rds_using_default_port.tf",
					"similarity_id": "f413dce94c5110f34f28d7d244c0b1b623b6017d68e884c970af8f852f2cad33",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cloudwatch_logs_exports' is defined",
					"actual_value": "'enabled_cloudwatch_logs_exports' is undefined"
				},
				{
					"file_name": "terraform\\aws\\rds\\db_instance.tf",
					"similarity_id": "7582fa85294857eb65ab516d4a84216a944de3477cb322b9b1691f94c78d6a08",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cloudwatch_logs_exports' is defined",
					"actual_value": "'enabled_cloudwatch_logs_exports' is undefined"
				},
				{
					"file_name": "terraform\\aws\\db_instance\\db_instance.tf",
					"similarity_id": "1518f85802c206790ab1193f2105879b5c2e973265ccc418aa9bfd2d5661fa6a",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[default]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cloudwatch_logs_exports' is defined",
					"actual_value": "'enabled_cloudwatch_logs_exports' is undefined"
				},
				{
					"file_name": "terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
					"similarity_id": "602e30283c577b4a02fafe250b8aaa85064b3951b0b4acba8b2476d6a1eab853",
					"line": 6,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[fail]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cloudwatch_logs_exports' is defined",
					"actual_value": "'enabled_cloudwatch_logs_exports' is undefined"
				},
				{
					"file_name": "terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
					"similarity_id": "aefeacd8ca7409f82a5bd247c522505397beffbdabed6d25271c308a1d6454f1",
					"line": 1,
					"issue_type": "MissingAttribute",
					"search_key": "aws_db_instance[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'enabled_cloudwatch_logs_exports' is defined",
					"actual_value": "'enabled_cloudwatch_logs_exports' is undefined"
				}
			]
		},
		{
			"query_name": "Resource Not Using Tags",
			"query_id": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/resource-tagging",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "AWS services resource tags are an essential part of managing components",
			"description_id": "09db2d52",
			"files": [
				{
					"file_name": "terraform\\aws\\codeartifact\\codeartifact_domain.tf",
					"similarity_id": "58d008302edabf436b25371870129a7de97bdbcf91c815daf4e7afcad6ac3956",
					"line": 3,
					"issue_type": "MissingAttribute",
					"search_key": "aws_codeartifact_domain[{{example}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_codeartifact_domain[{{example}}].tags is defined and not null",
					"actual_value": "aws_codeartifact_domain[{{example}}].tags is undefined or null"
				}
			]
		},
		{
			"query_name": "SQL Server Alert Email Disabled",
			"query_id": "55975007-f6e7-4134-83c3-298f1fe4b519",
			"query_url": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "SQL Server alert email should be enabled",
			"description_id": "4eb880dd",
			"files": [
				{
					"file_name": "terraform\\azurerm\\mssql\\sql_server_security_alert_policy.tf",
					"similarity_id": "5341690dd71b696b6f71ffc7f32fa98a4426d69ef8691c62437e9c07c030e063",
					"line": 17,
					"issue_type": "IncorrectValue",
					"search_key": "azurerm_mssql_server_security_alert_policy[fail].email_account_admins",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'azurerm_mssql_server_security_alert_policy[fail].email_account_admins' is true",
					"actual_value": "'azurerm_mssql_server_security_alert_policy[fail].email_account_admins' is false"
				}
			]
		},
		{
			"query_name": "Security Group Not Used",
			"query_id": "4849211b-ac39-479e-ae78-5694d506cb24",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Access Control",
			"description": "Security group must be used or not declared",
			"description_id": "eff2383a",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
					"similarity_id": "35695b470ff0ade6eba30bdb80a44c04984bc1b2e88108cd857c94b321f39b83",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_2383]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[fail_2383]' is used",
					"actual_value": "'aws_security_group[fail_2383]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
					"similarity_id": "b5c08c258491b2443429531e2a88441bee1e423916cfe21f9408081c4e496648",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_sensitive]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[fail_sensitive]' is used",
					"actual_value": "'aws_security_group[fail_sensitive]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_http_port_open.tf",
					"similarity_id": "fcc437591537bcd0d46708f7a50e50e09cac4f0c1e67380c272cd57ce986e2d1",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_openport]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[fail_openport]' is used",
					"actual_value": "'aws_security_group[fail_openport]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
					"similarity_id": "eebe66c9ee9e769523fd6c68aa7fa367d7c50fe5b144f43ccd6d0e7a58be7744",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_public]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[fail_public]' is used",
					"actual_value": "'aws_security_group[fail_public]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_groups_not_used.tf",
					"similarity_id": "62913f0bba0a4721645ab26f0875bd8093b6d224061760a0d7e193fc7c44ac0a",
					"line": 9,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[allow_tls]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[allow_tls]' is used",
					"actual_value": "'aws_security_group[allow_tls]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_wide_private_network.tf",
					"similarity_id": "fdb6f52015c6f3de7317533a34a23029b2d72b6e93b45b336c4fbbd91ec10c5e",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[fail_private]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[fail_private]' is used",
					"actual_value": "'aws_security_group[fail_private]' is not used"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "53c5ff282c0c333ee9ee5792da3d05745111927505be1f40c3515b0e3cf913a6",
					"line": 1,
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[positive1]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "'aws_security_group[positive1]' is used",
					"actual_value": "'aws_security_group[positive1]' is not used"
				}
			]
		},
		{
			"query_name": "Security Group Rules Without Description",
			"query_id": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "It's considered a best practice for all rules in AWS Security Group to have a description",
			"description_id": "cee242dd",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "9dfb699bb531a82d91aeb4db0a03bb366a7a87f8f42b1561d7ed26d6e20df860",
					"line": 16,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{bad_example}}].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{bad_example}}].ingress description is defined and not null",
					"actual_value": "aws_security_group[{{bad_example}}].ingress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "385047f35760d125d1fe9c831e1687f1afae93c6eadc6a23bc5655d5f5993961",
					"line": 58,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{public_internet_sg}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{public_internet_sg}}].egress description is defined and not null",
					"actual_value": "aws_security_group[{{public_internet_sg}}].egress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
					"similarity_id": "4b21678798876a0d6d873127b6bb3bb2f370d7109987c1e85b4dc73a4aa50990",
					"line": 66,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{allow_public_outbound_sg}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{allow_public_outbound_sg}}].egress description is defined and not null",
					"actual_value": "aws_security_group[{{allow_public_outbound_sg}}].egress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "52be67635f1ef083f6ebd25ff917ce39cb4ae24d8b34974e53b0df113650eccb",
					"line": 28,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{bad_example}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{bad_example}}].egress description is defined and not null",
					"actual_value": "aws_security_group[{{bad_example}}].egress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
					"similarity_id": "c7314492b081bb7f0d8bb8e513010dcfff91d13cf6ce0902ef08f8e164c077cc",
					"line": 14,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{positive1}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{positive1}}].egress description is defined and not null",
					"actual_value": "aws_security_group[{{positive1}}].egress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
					"similarity_id": "eb5a85b2479cb9a55239e7280cc12a33fe52e35277f6b1cd95a8457d0ce00aac",
					"line": 65,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{public_internet_sg}}].ingress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{public_internet_sg}}].ingress description is defined and not null",
					"actual_value": "aws_security_group[{{public_internet_sg}}].ingress description is undefined or null"
				},
				{
					"file_name": "terraform\\aws\\security_groups\\security_groups_not_used.tf",
					"similarity_id": "774bd29a9d4563bad49bed827a274785d9d70bf0af5a6869d15a16d034ebbb14",
					"line": 23,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{allow_tls}}].egress",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{allow_tls}}].egress description is defined and not null",
					"actual_value": "aws_security_group[{{allow_tls}}].egress description is undefined or null"
				}
			]
		},
		{
			"query_name": "Security Group Without Description",
			"query_id": "cb3f5ed6-0d18-40de-a93d-b3538db31e8c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
			"severity": "INFO",
			"platform": "Terraform",
			"category": "Best Practices",
			"description": "It's considered a best practice for AWS Security Group to have a description",
			"description_id": "bc535d27",
			"files": [
				{
					"file_name": "terraform\\aws\\security_groups\\security_group.tf",
					"similarity_id": "a05d96d6266833e01018d3466e4beaa8af2dbaae68ebc0ca52289273eb630936",
					"line": 15,
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{bad_example}}]",
					"search_line": 0,
					"search_value": "",
					"expected_value": "aws_security_group[{{bad_example}}] description is defined and not null",
					"actual_value": "aws_security_group[{{bad_example}}] description is undefined or null"
				}
			]
		}
	]
}

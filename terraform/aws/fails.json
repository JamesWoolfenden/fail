[
    {
        "check_type": "terraform",
        "results": {
            "passed_checks": [
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            17,
                            "provider \"aws\" {\n"
                        ],
                        [
                            18,
                            "  region = \"eu-west-2\"\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ami/notencrypted.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ami/notencrypted.tf",
                    "repo_file_path": "/terraform/aws/ami/notencrypted.tf",
                    "file_line_range": [
                        17,
                        19
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "provider \"aws\" {\n"
                        ],
                        [
                            5,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        6
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            21,
                            "provider \"aws\" {\n"
                        ],
                        [
                            22,
                            "  region = \"eu-west-1\"\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        21,
                        23
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_153",
                    "bc_check_id": "BC_AWS_GENERAL_82",
                    "check_name": "Autoscaling groups should supply tags to launch configurations",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "tag",
                            "tags"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_autoscaling_group\" \"autoscalling_bad\" {\n"
                        ],
                        [
                            11,
                            "  max_size                  = 5\n"
                        ],
                        [
                            12,
                            "  min_size                  = 2\n"
                        ],
                        [
                            13,
                            "  health_check_grace_period = 300\n"
                        ],
                        [
                            14,
                            "  health_check_type         = \"ELB\"\n"
                        ],
                        [
                            15,
                            "  desired_capacity          = 4\n"
                        ],
                        [
                            16,
                            "  force_delete              = true\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  lifecycle {\n"
                        ],
                        [
                            19,
                            "    ignore_changes = [load_balancers, target_group_arns]\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/ELB.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/ELB.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/ELB.tf",
                    "file_line_range": [
                        10,
                        22
                    ],
                    "resource": "aws_autoscaling_group.autoscalling_bad",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AutoScalingTagging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations"
                },
                {
                    "check_id": "CKV_AWS_153",
                    "bc_check_id": "BC_AWS_GENERAL_82",
                    "check_name": "Autoscaling groups should supply tags to launch configurations",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "tag",
                            "tags"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_autoscaling_group\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  name                 = \"foobar3-terraform-test\"\n"
                        ],
                        [
                            6,
                            "  max_size             = 5\n"
                        ],
                        [
                            7,
                            "  min_size             = 2\n"
                        ],
                        [
                            8,
                            "  launch_configuration = aws_launch_configuration.foobar.name\n"
                        ],
                        [
                            9,
                            "  vpc_zone_identifier  = [aws_subnet.example1.id, aws_subnet.example2.id]\n"
                        ],
                        [
                            10,
                            "  tags = {\n"
                        ],
                        [
                            11,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/autoscaling.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/autoscaling.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/autoscaling.tf",
                    "file_line_range": [
                        4,
                        13
                    ],
                    "resource": "aws_autoscaling_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AutoScalingTagging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            24,
                            "provider \"aws\" {\n"
                        ],
                        [
                            25,
                            "  region = \"eu-west-1\"\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/autoscaling_without_lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "file_line_range": [
                        24,
                        26
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_153",
                    "bc_check_id": "BC_AWS_GENERAL_82",
                    "check_name": "Autoscaling groups should supply tags to launch configurations",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "tag",
                            "tags"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_autoscaling_group\" \"bar\" {\n"
                        ],
                        [
                            4,
                            "  availability_zones = [\"us-east-1a\"]\n"
                        ],
                        [
                            5,
                            "  desired_capacity   = 1\n"
                        ],
                        [
                            6,
                            "  max_size           = 1\n"
                        ],
                        [
                            7,
                            "  min_size           = 1\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  launch_template {\n"
                        ],
                        [
                            10,
                            "    id      = aws_launch_template.foobar.id\n"
                        ],
                        [
                            11,
                            "    version = \"$Latest\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/autoscaling_without_lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_autoscaling_group.bar",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AutoScalingTagging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "network_interfaces/[0]/associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_launch_template\" \"foobar\" {\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/autoscaling_without_lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "file_line_range": [
                        18,
                        22
                    ],
                    "resource": "aws_launch_template.foobar",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_161",
                    "bc_check_id": "BC_AWS_IAM_65",
                    "check_name": "Ensure RDS database has IAM authentication enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_4",
                    "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_4"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            37,
                            "provider \"aws\" {\n"
                        ],
                        [
                            38,
                            "  region = \"eu-west-1\"\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudformation_stack/cloudformation_stack.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudformation_stack/cloudformation_stack.tf",
                    "repo_file_path": "/terraform/aws/cloudformation_stack/cloudformation_stack.tf",
                    "file_line_range": [
                        37,
                        39
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_86",
                    "bc_check_id": "BC_AWS_LOGGING_20",
                    "check_name": "Ensure Cloudfront distribution has Access Logging enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "logging_config/[0]/bucket"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_cloudfront_distribution\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  origin {\n"
                        ],
                        [
                            9,
                            "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                        ],
                        [
                            10,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "    s3_origin_config {\n"
                        ],
                        [
                            13,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  enabled             = false\n"
                        ],
                        [
                            18,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            19,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            20,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  logging_config {\n"
                        ],
                        [
                            23,
                            "    include_cookies = false\n"
                        ],
                        [
                            24,
                            "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                        ],
                        [
                            25,
                            "    prefix          = \"myprefix\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            32,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            33,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = false\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = \"none\"\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            45,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            46,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  restrictions {\n"
                        ],
                        [
                            52,
                            "    geo_restriction {\n"
                        ],
                        [
                            53,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            54,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "  }\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  tags = {\n"
                        ],
                        [
                            59,
                            "    Environment = \"production\"\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  viewer_certificate {\n"
                        ],
                        [
                            63,
                            "    cloudfront_default_certificate = true\n"
                        ],
                        [
                            64,
                            "  }\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        7,
                        66
                    ],
                    "resource": "aws_cloudfront_distribution.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "production"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_20"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_108",
                    "bc_check_id": "BC_AWS_IAM_55",
                    "check_name": "Ensure IAM policies does not allow data exfiltration",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration"
                },
                {
                    "check_id": "CKV_AWS_111",
                    "bc_check_id": "BC_AWS_IAM_57",
                    "check_name": "Ensure IAM policies does not allow write access without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_49",
                    "bc_check_id": "BC_AWS_IAM_43",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_43"
                },
                {
                    "check_id": "CKV_AWS_107",
                    "bc_check_id": "BC_AWS_IAM_54",
                    "check_name": "Ensure IAM policies does not allow credentials exposure",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure"
                },
                {
                    "check_id": "CKV_AWS_109",
                    "bc_check_id": "BC_AWS_IAM_56",
                    "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_1",
                    "bc_check_id": "BC_AWS_IAM_23",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_23"
                },
                {
                    "check_id": "CKV_AWS_110",
                    "bc_check_id": "BC_AWS_IAM_64",
                    "check_name": "Ensure IAM policies does not allow privilege escalation",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"test_destination_policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    principals {\n"
                        ],
                        [
                            9,
                            "      type = \"AWS\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "      identifiers = [\n"
                        ],
                        [
                            12,
                            "        data.aws_caller_identity.current.id,\n"
                        ],
                        [
                            13,
                            "      ]\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"logs:*\",\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch_logs_destination_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        21
                    ],
                    "resource": "aws_iam_policy_document.test_destination_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation"
                },
                {
                    "check_id": "CKV_AWS_211",
                    "bc_check_id": null,
                    "check_name": "Ensure RDS uses a modern CaCert",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ca_cert_identifier"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_165",
                    "bc_check_id": "BC_AWS_GENERAL_88",
                    "check_name": "Ensure Dynamodb point in time recovery (backup) is enabled for global tables",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_dynamodb_global_table\" \"my_table\" {\n"
                        ],
                        [
                            2,
                            "\n"
                        ],
                        [
                            3,
                            "  depends_on = [\n"
                        ],
                        [
                            4,
                            "    aws_dynamodb_table.us_east_1,\n"
                        ],
                        [
                            5,
                            "    aws_dynamodb_table.us_west_2,\n"
                        ],
                        [
                            6,
                            "  ]\n"
                        ],
                        [
                            7,
                            "  provider = aws.us_east_1\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  name = \"myTable\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  replica {\n"
                        ],
                        [
                            12,
                            "    region_name = \"us-east-1\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  replica {\n"
                        ],
                        [
                            16,
                            "    region_name = \"us-west-2\"\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_global_table.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_global_table.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_global_table.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_dynamodb_global_table.my_table",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DynamoDBGlobalTableRecovery",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-dynamodb-point-in-time-recovery-is-enabled-for-global-tables"
                },
                {
                    "check_id": "CKV_AWS_130",
                    "bc_check_id": "BC_AWS_NETWORKING_53",
                    "check_name": "Ensure VPC subnets do not assign public IP by default",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "map_public_ip_on_launch"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_subnet\" \"private_subnet\" {\n"
                        ],
                        [
                            18,
                            "  vpc_id     = aws_vpc.main.id\n"
                        ],
                        [
                            19,
                            "  cidr_block = \"192.168.100.128/25\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"private-subnet\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_subnet.private_subnet",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "private-subnet",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            61,
                            "resource \"aws_security_group\" \"allow_public_outbound_sg\" {\n"
                        ],
                        [
                            62,
                            "  name        = \"allow-public-outbound-sg\"\n"
                        ],
                        [
                            63,
                            "  description = \"Allow HTTPS outbound traffic\"\n"
                        ],
                        [
                            64,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "  egress {\n"
                        ],
                        [
                            67,
                            "    from_port   = 443\n"
                        ],
                        [
                            68,
                            "    to_port     = 443\n"
                        ],
                        [
                            69,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            70,
                            "    cidr_blocks = [local.s3_prefix_list_cidr_block]\n"
                        ],
                        [
                            71,
                            "  }\n"
                        ],
                        [
                            72,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            73,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        61,
                        73
                    ],
                    "resource": "aws_security_group.allow_public_outbound_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            61,
                            "resource \"aws_security_group\" \"allow_public_outbound_sg\" {\n"
                        ],
                        [
                            62,
                            "  name        = \"allow-public-outbound-sg\"\n"
                        ],
                        [
                            63,
                            "  description = \"Allow HTTPS outbound traffic\"\n"
                        ],
                        [
                            64,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "  egress {\n"
                        ],
                        [
                            67,
                            "    from_port   = 443\n"
                        ],
                        [
                            68,
                            "    to_port     = 443\n"
                        ],
                        [
                            69,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            70,
                            "    cidr_blocks = [local.s3_prefix_list_cidr_block]\n"
                        ],
                        [
                            71,
                            "  }\n"
                        ],
                        [
                            72,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            73,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        61,
                        73
                    ],
                    "resource": "aws_security_group.allow_public_outbound_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "provider \"aws\" {\n"
                        ],
                        [
                            5,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        4,
                        6
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            48,
                            "provider \"aws\" {\n"
                        ],
                        [
                            49,
                            "  region = \"eu-west-2\"\n"
                        ],
                        [
                            50,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition.tf",
                    "file_line_range": [
                        48,
                        50
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_97",
                    "bc_check_id": "BC_AWS_GENERAL_39",
                    "check_name": "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "volume"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ecs_task_definition\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  family       = \"service\"\n"
                        ],
                        [
                            5,
                            "  network_mode = \"none\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  volume {\n"
                        ],
                        [
                            8,
                            "    name      = \"service-storage\"\n"
                        ],
                        [
                            9,
                            "    host_path = \"/ecs/service-storage\"\n"
                        ],
                        [
                            10,
                            "  }\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  placement_constraints {\n"
                        ],
                        [
                            13,
                            "    type       = \"memberOf\"\n"
                        ],
                        [
                            14,
                            "    expression = \"attribute:ecs.availability-zone in [us-west-2a, us-west-2b]\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  container_definitions = jsonencode([\n"
                        ],
                        [
                            18,
                            "    {\n"
                        ],
                        [
                            19,
                            "      \"command\" : [],\n"
                        ],
                        [
                            20,
                            "      \"cpu\" : 0,\n"
                        ],
                        [
                            21,
                            "      \"disableNetworking\" : null,\n"
                        ],
                        [
                            22,
                            "      \"dnsSearchDomains\" : null,\n"
                        ],
                        [
                            23,
                            "      \"dnsServers\" : null,\n"
                        ],
                        [
                            24,
                            "      \"dockerLabels\" : null,\n"
                        ],
                        [
                            25,
                            "      \"dockerSecurityOptions\" : null,\n"
                        ],
                        [
                            26,
                            "      \"entryPoint\" : [],\n"
                        ],
                        [
                            27,
                            "      \"environment\" : [\n"
                        ],
                        [
                            28,
                            "        {\n"
                        ],
                        [
                            29,
                            "          \"name\" : \"password\",\n"
                        ],
                        [
                            30,
                            "          \"value\" : \"123231231213\"\n"
                        ],
                        [
                            31,
                            "        }\n"
                        ],
                        [
                            32,
                            "      ],\n"
                        ],
                        [
                            33,
                            "      \"essential\" : true,\n"
                        ],
                        [
                            34,
                            "      \"extraHosts\" : null,\n"
                        ],
                        [
                            35,
                            "      \"hostname\" : null,\n"
                        ],
                        [
                            36,
                            "      \"image\" : \"cassandra:2\",\n"
                        ],
                        [
                            37,
                            "      \"links\" : [],\n"
                        ],
                        [
                            38,
                            "      \"logConfiguration\" : null,\n"
                        ],
                        [
                            39,
                            "      \"memory\" : 512,\n"
                        ],
                        [
                            40,
                            "      \"mountPoints\" : [],\n"
                        ],
                        [
                            41,
                            "      \"name\" : \"cassandra\",\n"
                        ],
                        [
                            42,
                            "      \"portMappings\" : [\n"
                        ],
                        [
                            43,
                            "        {\n"
                        ],
                        [
                            44,
                            "          \"containerPort\" : 9042,\n"
                        ],
                        [
                            45,
                            "          \"hostPort\" : 9042,\n"
                        ],
                        [
                            46,
                            "          \"protocol\" : \"tcp\"\n"
                        ],
                        [
                            47,
                            "        }\n"
                        ],
                        [
                            48,
                            "      ],\n"
                        ],
                        [
                            49,
                            "      \"privileged\" : null,\n"
                        ],
                        [
                            50,
                            "      \"readonlyRootFilesystem\" : null,\n"
                        ],
                        [
                            51,
                            "      \"ulimits\" : null,\n"
                        ],
                        [
                            52,
                            "      \"user\" : null,\n"
                        ],
                        [
                            53,
                            "      \"volumesFrom\" : [],\n"
                        ],
                        [
                            54,
                            "      \"workingDirectory\" : null\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "    ]\n"
                        ],
                        [
                            57,
                            "  )\n"
                        ],
                        [
                            58,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            59,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition_network_mode_not_recommended.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition_network_mode_not_recommended.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition_network_mode_not_recommended.tf",
                    "file_line_range": [
                        3,
                        59
                    ],
                    "resource": "aws_ecs_task_definition.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSTaskDefinitionEFSVolumeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_39"
                },
                {
                    "check_id": "CKV_AWS_97",
                    "bc_check_id": "BC_AWS_GENERAL_39",
                    "check_name": "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "volume"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_ecs_task_definition\" \"fail_password\" {\n"
                        ],
                        [
                            3,
                            "  family = \"service\"\n"
                        ],
                        [
                            4,
                            "  container_definitions = jsonencode([\n"
                        ],
                        [
                            5,
                            "    {\n"
                        ],
                        [
                            6,
                            "      \"command\" : [],\n"
                        ],
                        [
                            7,
                            "      \"cpu\" : 0,\n"
                        ],
                        [
                            8,
                            "      \"disableNetworking\" : null,\n"
                        ],
                        [
                            9,
                            "      \"dnsSearchDomains\" : null,\n"
                        ],
                        [
                            10,
                            "      \"dnsServers\" : null,\n"
                        ],
                        [
                            11,
                            "      \"dockerLabels\" : null,\n"
                        ],
                        [
                            12,
                            "      \"dockerSecurityOptions\" : null,\n"
                        ],
                        [
                            13,
                            "      \"entryPoint\" : [],\n"
                        ],
                        [
                            14,
                            "      \"environment\" : [\n"
                        ],
                        [
                            15,
                            "        {\n"
                        ],
                        [
                            16,
                            "          \"name\" : \"password\",\n"
                        ],
                        [
                            17,
                            "          \"value\" : \"123231231213\"\n"
                        ],
                        [
                            18,
                            "        }\n"
                        ],
                        [
                            19,
                            "      ],\n"
                        ],
                        [
                            20,
                            "      \"essential\" : true,\n"
                        ],
                        [
                            21,
                            "      \"extraHosts\" : null,\n"
                        ],
                        [
                            22,
                            "      \"hostname\" : null,\n"
                        ],
                        [
                            23,
                            "      \"image\" : \"cassandra:2\",\n"
                        ],
                        [
                            24,
                            "      \"links\" : [],\n"
                        ],
                        [
                            25,
                            "      \"logConfiguration\" : null,\n"
                        ],
                        [
                            26,
                            "      \"memory\" : 512,\n"
                        ],
                        [
                            27,
                            "      \"mountPoints\" : [],\n"
                        ],
                        [
                            28,
                            "      \"name\" : \"cassandra\",\n"
                        ],
                        [
                            29,
                            "      \"portMappings\" : [\n"
                        ],
                        [
                            30,
                            "        {\n"
                        ],
                        [
                            31,
                            "          \"containerPort\" : 9042,\n"
                        ],
                        [
                            32,
                            "          \"hostPort\" : 9042,\n"
                        ],
                        [
                            33,
                            "          \"protocol\" : \"tcp\"\n"
                        ],
                        [
                            34,
                            "        }\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"privileged\" : null,\n"
                        ],
                        [
                            37,
                            "      \"readonlyRootFilesystem\" : null,\n"
                        ],
                        [
                            38,
                            "      \"ulimits\" : null,\n"
                        ],
                        [
                            39,
                            "      \"user\" : null,\n"
                        ],
                        [
                            40,
                            "      \"volumesFrom\" : [],\n"
                        ],
                        [
                            41,
                            "      \"workingDirectory\" : null\n"
                        ],
                        [
                            42,
                            "    }\n"
                        ],
                        [
                            43,
                            "    ]\n"
                        ],
                        [
                            44,
                            "  )\n"
                        ],
                        [
                            45,
                            "\n"
                        ],
                        [
                            46,
                            "  volume {\n"
                        ],
                        [
                            47,
                            "    name      = \"service-storage\"\n"
                        ],
                        [
                            48,
                            "    host_path = \"/ecs/service-storage\"\n"
                        ],
                        [
                            49,
                            "  }\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  placement_constraints {\n"
                        ],
                        [
                            52,
                            "    type       = \"memberOf\"\n"
                        ],
                        [
                            53,
                            "    expression = \"attribute:ecs.availability-zone in [us-west-2a, us-west-2b]\"\n"
                        ],
                        [
                            54,
                            "  }\n"
                        ],
                        [
                            55,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            56,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition_with_plaintext_password.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition_with_plaintext_password.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition_with_plaintext_password.tf",
                    "file_line_range": [
                        2,
                        56
                    ],
                    "resource": "aws_ecs_task_definition.fail_password",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSTaskDefinitionEFSVolumeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_39"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "provider \"aws\" {\n"
                        ],
                        [
                            5,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        6
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            17,
                            "provider \"aws\" {\n"
                        ],
                        [
                            18,
                            "  region = \"eu-west-2\"\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_without_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_without_vpc.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_without_vpc.tf",
                    "file_line_range": [
                        17,
                        19
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "provider \"aws\" {\n"
                        ],
                        [
                            2,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            3,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        1,
                        3
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_6",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_5",
                    "check_name": "Ensure all Elasticsearch has node-to-node encryption enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "cluster_config"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elasticsearch_domain\" \"es_not_secure_policy\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"es-not-secure-policy\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_options {\n"
                        ],
                        [
                            9,
                            "    ebs_enabled = true\n"
                        ],
                        [
                            10,
                            "    volume_size = 10\n"
                        ],
                        [
                            11,
                            "    volume_type = \"gp2\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_elasticsearch_domain.es_not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchNodeToNodeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_5"
                },
                {
                    "check_id": "CKV_AWS_6",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_5",
                    "check_name": "Ensure all Elasticsearch has node-to-node encryption enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "cluster_config"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"no_iam\" {\n"
                        ],
                        [
                            4,
                            "  domain_name           = \"tf-test\"\n"
                        ],
                        [
                            5,
                            "  elasticsearch_version = \"2.3\"\n"
                        ],
                        [
                            6,
                            "  tags                  = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_elasticsearch_domain.no_iam",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchNodeToNodeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_5"
                },
                {
                    "check_id": "CKV_AWS_84",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_7",
                    "check_name": "Ensure Elasticsearch Domain Logging is enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "log_publishing_options/[0]/cloudwatch_log_group_arn"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  log_publishing_options {\n"
                        ],
                        [
                            5,
                            "    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            6,
                            "    log_type                 = \"ES_APPLICATION_LOGS\"\n"
                        ],
                        [
                            7,
                            "    enabled                  = true\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "  # log_publishing_options {\n"
                        ],
                        [
                            10,
                            "  #   log_type=\n"
                        ],
                        [
                            11,
                            "  # }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticsearch_domain.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_7"
                },
                {
                    "check_id": "CKV_AWS_6",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_5",
                    "check_name": "Ensure all Elasticsearch has node-to-node encryption enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "cluster_config"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  log_publishing_options {\n"
                        ],
                        [
                            5,
                            "    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            6,
                            "    log_type                 = \"ES_APPLICATION_LOGS\"\n"
                        ],
                        [
                            7,
                            "    enabled                  = true\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "  # log_publishing_options {\n"
                        ],
                        [
                            10,
                            "  #   log_type=\n"
                        ],
                        [
                            11,
                            "  # }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticsearch_domain.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchNodeToNodeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_5"
                },
                {
                    "check_id": "CKV_AWS_127",
                    "bc_check_id": "BC_AWS_GENERAL_67",
                    "check_name": "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "listener"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elb\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name               = \"wu-tang\"\n"
                        ],
                        [
                            5,
                            "  availability_zones = [\"us-east-1a\"]\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  listener {\n"
                        ],
                        [
                            8,
                            "    instance_port      = 443\n"
                        ],
                        [
                            9,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            10,
                            "    lb_port            = 443\n"
                        ],
                        [
                            11,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            12,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            17,
                            "    test = \"fail\"\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb_using_weak_ciphers.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "repo_file_path": "/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "file_line_range": [
                        3,
                        19
                    ],
                    "resource": "aws_elb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBUsesSSL",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager"
                },
                {
                    "check_id": "CKV_AWS_138",
                    "bc_check_id": "BC_AWS_NETWORKING_43",
                    "check_name": "Ensure that ELB is cross-zone-load-balancing enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "cross_zone_load_balancing"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elb\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name               = \"wu-tang\"\n"
                        ],
                        [
                            5,
                            "  availability_zones = [\"us-east-1a\"]\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  listener {\n"
                        ],
                        [
                            8,
                            "    instance_port      = 443\n"
                        ],
                        [
                            9,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            10,
                            "    lb_port            = 443\n"
                        ],
                        [
                            11,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            12,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            17,
                            "    test = \"fail\"\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb_using_weak_ciphers.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "repo_file_path": "/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "file_line_range": [
                        3,
                        19
                    ],
                    "resource": "aws_elb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBCrossZoneEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled"
                },
                {
                    "check_id": "CKV_AWS_213",
                    "bc_check_id": null,
                    "check_name": "Ensure ELB Policy uses only secure protocols",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy_attribute"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_load_balancer_policy\" \"positive2\" {\n"
                        ],
                        [
                            22,
                            "  load_balancer_name = aws_elb.fail.name\n"
                        ],
                        [
                            23,
                            "  policy_name        = \"wu-tang-ca-pubkey-policy\"\n"
                        ],
                        [
                            24,
                            "  policy_type_name   = \"PublicKeyPolicyType\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  policy_attribute {\n"
                        ],
                        [
                            27,
                            "    name  = \"PublicKey\"\n"
                        ],
                        [
                            28,
                            "    value = file(\"wu-tang-pubkey\")\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            31,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb_using_weak_ciphers.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "repo_file_path": "/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "file_line_range": [
                        21,
                        31
                    ],
                    "resource": "aws_load_balancer_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBPolicyUsesSecureProtocols",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "load_balancer_name": [
                            {
                                "type": "resource",
                                "name": "aws_elb.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_213",
                    "bc_check_id": null,
                    "check_name": "Ensure ELB Policy uses only secure protocols",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy_attribute"
                        ]
                    },
                    "code_block": [
                        [
                            33,
                            "resource \"aws_load_balancer_policy\" \"positive3\" {\n"
                        ],
                        [
                            34,
                            "  load_balancer_name = aws_elb.wu-tang.name\n"
                        ],
                        [
                            35,
                            "  policy_name        = \"wu-tang-root-ca-backend-auth-policy\"\n"
                        ],
                        [
                            36,
                            "  policy_type_name   = \"BackendServerAuthenticationPolicyType\"\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "  policy_attribute {\n"
                        ],
                        [
                            39,
                            "    name  = \"PublicKeyPolicyName\"\n"
                        ],
                        [
                            40,
                            "    value = aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name\n"
                        ],
                        [
                            41,
                            "  }\n"
                        ],
                        [
                            42,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            43,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb_using_weak_ciphers.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "repo_file_path": "/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "file_line_range": [
                        33,
                        43
                    ],
                    "resource": "aws_load_balancer_policy.positive3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBPolicyUsesSecureProtocols",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            40,
                            "provider \"aws\" {\n"
                        ],
                        [
                            41,
                            "  region = \"eu-west-2\"\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "repo_file_path": "/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_line_range": [
                        40,
                        42
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_127",
                    "bc_check_id": "BC_AWS_GENERAL_67",
                    "check_name": "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "listener"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_elb\" \"wu_tang\" {\n"
                        ],
                        [
                            5,
                            "  name = \"wu-tang\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  subnets = [\"subnet-08d97e381dbc80d40\", \"subnet-03fdfb13a135366a7\"]\n"
                        ],
                        [
                            8,
                            "  listener {\n"
                        ],
                        [
                            9,
                            "    instance_port      = 443\n"
                        ],
                        [
                            10,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            11,
                            "    lb_port            = 443\n"
                        ],
                        [
                            12,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            13,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  tags = {\n"
                        ],
                        [
                            17,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            18,
                            "    test = \"fails\"\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "repo_file_path": "/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_line_range": [
                        4,
                        20
                    ],
                    "resource": "aws_elb.wu_tang",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBUsesSSL",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager"
                },
                {
                    "check_id": "CKV_AWS_138",
                    "bc_check_id": "BC_AWS_NETWORKING_43",
                    "check_name": "Ensure that ELB is cross-zone-load-balancing enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "cross_zone_load_balancing"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_elb\" \"wu_tang\" {\n"
                        ],
                        [
                            5,
                            "  name = \"wu-tang\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  subnets = [\"subnet-08d97e381dbc80d40\", \"subnet-03fdfb13a135366a7\"]\n"
                        ],
                        [
                            8,
                            "  listener {\n"
                        ],
                        [
                            9,
                            "    instance_port      = 443\n"
                        ],
                        [
                            10,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            11,
                            "    lb_port            = 443\n"
                        ],
                        [
                            12,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            13,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  tags = {\n"
                        ],
                        [
                            17,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            18,
                            "    test = \"fails\"\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "repo_file_path": "/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_line_range": [
                        4,
                        20
                    ],
                    "resource": "aws_elb.wu_tang",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBCrossZoneEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled"
                },
                {
                    "check_id": "CKV_AWS_108",
                    "bc_check_id": "BC_AWS_IAM_55",
                    "check_name": "Ensure IAM policies does not allow data exfiltration",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration"
                },
                {
                    "check_id": "CKV_AWS_111",
                    "bc_check_id": "BC_AWS_IAM_57",
                    "check_name": "Ensure IAM policies does not allow write access without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_49",
                    "bc_check_id": "BC_AWS_IAM_43",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_43"
                },
                {
                    "check_id": "CKV_AWS_107",
                    "bc_check_id": "BC_AWS_IAM_54",
                    "check_name": "Ensure IAM policies does not allow credentials exposure",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure"
                },
                {
                    "check_id": "CKV_AWS_109",
                    "bc_check_id": "BC_AWS_IAM_56",
                    "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_1",
                    "bc_check_id": "BC_AWS_IAM_23",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_23"
                },
                {
                    "check_id": "CKV_AWS_110",
                    "bc_check_id": "BC_AWS_IAM_64",
                    "check_name": "Ensure IAM policies does not allow privilege escalation",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "data \"aws_iam_policy_document\" \"glue-example-policy\" {\n"
                        ],
                        [
                            5,
                            "  statement {\n"
                        ],
                        [
                            6,
                            "    actions = [\n"
                        ],
                        [
                            7,
                            "      \"glue:*\",\n"
                        ],
                        [
                            8,
                            "    ]\n"
                        ],
                        [
                            9,
                            "    resources = [\"arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*\"]\n"
                        ],
                        [
                            10,
                            "    principals {\n"
                        ],
                        [
                            11,
                            "      identifiers = [\"*\"]\n"
                        ],
                        [
                            12,
                            "      type        = \"AWS\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_iam_policy_document.glue-example-policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_iam_user_policy\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  user = \"example\"\n"
                        ],
                        [
                            14,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            15,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            16,
                            "    Statement = [\n"
                        ],
                        [
                            17,
                            "      {\n"
                        ],
                        [
                            18,
                            "        Action = [\n"
                        ],
                        [
                            19,
                            "          \"ec2:Describe*\",\n"
                        ],
                        [
                            20,
                            "        ]\n"
                        ],
                        [
                            21,
                            "        Effect   = \"Allow\"\n"
                        ],
                        [
                            22,
                            "        Resource = \"*\"\n"
                        ],
                        [
                            23,
                            "      },\n"
                        ],
                        [
                            24,
                            "    ]\n"
                        ],
                        [
                            25,
                            "  })\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam.tf",
                    "repo_file_path": "/terraform/aws/iam/iam.tf",
                    "file_line_range": [
                        12,
                        26
                    ],
                    "resource": "aws_iam_user_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_iam_user_policy\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  user = \"example\"\n"
                        ],
                        [
                            14,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            15,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            16,
                            "    Statement = [\n"
                        ],
                        [
                            17,
                            "      {\n"
                        ],
                        [
                            18,
                            "        Action = [\n"
                        ],
                        [
                            19,
                            "          \"ec2:Describe*\",\n"
                        ],
                        [
                            20,
                            "        ]\n"
                        ],
                        [
                            21,
                            "        Effect   = \"Allow\"\n"
                        ],
                        [
                            22,
                            "        Resource = \"*\"\n"
                        ],
                        [
                            23,
                            "      },\n"
                        ],
                        [
                            24,
                            "    ]\n"
                        ],
                        [
                            25,
                            "  })\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam.tf",
                    "repo_file_path": "/terraform/aws/iam/iam.tf",
                    "file_line_range": [
                        12,
                        26
                    ],
                    "resource": "aws_iam_user_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            74,
                            "resource \"aws_iam_policy\" \"fail4\" {\n"
                        ],
                        [
                            75,
                            "  name = \"fail4\"\n"
                        ],
                        [
                            76,
                            "  path = \"/\"\n"
                        ],
                        [
                            77,
                            "  # implicit allow, not actually valid, but it's a default that we check\n"
                        ],
                        [
                            78,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            79,
                            "{\n"
                        ],
                        [
                            80,
                            "  \"Statement\": [\n"
                        ],
                        [
                            81,
                            "    {\n"
                        ],
                        [
                            82,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            83,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            84,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            85,
                            "    }\n"
                        ],
                        [
                            86,
                            "  ],\n"
                        ],
                        [
                            87,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            88,
                            "}\n"
                        ],
                        [
                            89,
                            "POLICY\n"
                        ],
                        [
                            90,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        74,
                        91
                    ],
                    "resource": "aws_iam_policy.fail4",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            93,
                            "resource \"aws_iam_policy\" \"pass2\" {\n"
                        ],
                        [
                            94,
                            "  name = \"pass2\"\n"
                        ],
                        [
                            95,
                            "  path = \"/\"\n"
                        ],
                        [
                            96,
                            "  # deny\n"
                        ],
                        [
                            97,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            98,
                            "{\n"
                        ],
                        [
                            99,
                            "  \"Statement\": [\n"
                        ],
                        [
                            100,
                            "    {\n"
                        ],
                        [
                            101,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            102,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            103,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            104,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            105,
                            "    }\n"
                        ],
                        [
                            106,
                            "  ],\n"
                        ],
                        [
                            107,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            108,
                            "}\n"
                        ],
                        [
                            109,
                            "POLICY\n"
                        ],
                        [
                            110,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            111,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        93,
                        111
                    ],
                    "resource": "aws_iam_policy.pass2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            93,
                            "resource \"aws_iam_policy\" \"pass2\" {\n"
                        ],
                        [
                            94,
                            "  name = \"pass2\"\n"
                        ],
                        [
                            95,
                            "  path = \"/\"\n"
                        ],
                        [
                            96,
                            "  # deny\n"
                        ],
                        [
                            97,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            98,
                            "{\n"
                        ],
                        [
                            99,
                            "  \"Statement\": [\n"
                        ],
                        [
                            100,
                            "    {\n"
                        ],
                        [
                            101,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            102,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            103,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            104,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            105,
                            "    }\n"
                        ],
                        [
                            106,
                            "  ],\n"
                        ],
                        [
                            107,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            108,
                            "}\n"
                        ],
                        [
                            109,
                            "POLICY\n"
                        ],
                        [
                            110,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            111,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        93,
                        111
                    ],
                    "resource": "aws_iam_policy.pass2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            114,
                            "resource \"aws_ssoadmin_permission_set_inline_policy\" \"pass1\" {\n"
                        ],
                        [
                            115,
                            "  instance_arn       = aws_ssoadmin_permission_set.example.instance_arn\n"
                        ],
                        [
                            116,
                            "  permission_set_arn = aws_ssoadmin_permission_set.example.arn\n"
                        ],
                        [
                            117,
                            "  inline_policy      = <<POLICY\n"
                        ],
                        [
                            118,
                            "{\n"
                        ],
                        [
                            119,
                            "  \"Statement\": [\n"
                        ],
                        [
                            120,
                            "    {\n"
                        ],
                        [
                            121,
                            "      \"Action\": [\n"
                        ],
                        [
                            122,
                            "        \"s3:ListBucket*\",\n"
                        ],
                        [
                            123,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            124,
                            "        \"s3:Get*\"\n"
                        ],
                        [
                            125,
                            "      ],\n"
                        ],
                        [
                            126,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            127,
                            "      \"Resource\": [\n"
                        ],
                        [
                            128,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            129,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            130,
                            "        \"arn:aws:s3:::b2\",\n"
                        ],
                        [
                            131,
                            "        \"arn:aws:s3:::b2/*\"\n"
                        ],
                        [
                            132,
                            "      ],\n"
                        ],
                        [
                            133,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            134,
                            "    },\n"
                        ],
                        [
                            135,
                            "    {\n"
                        ],
                        [
                            136,
                            "      \"Action\": \"s3:PutObject*\",\n"
                        ],
                        [
                            137,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            138,
                            "      \"Resource\": \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            139,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            140,
                            "    }\n"
                        ],
                        [
                            141,
                            "  ],\n"
                        ],
                        [
                            142,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            143,
                            "}\n"
                        ],
                        [
                            144,
                            "POLICY\n"
                        ],
                        [
                            145,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            146,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        114,
                        146
                    ],
                    "resource": "aws_ssoadmin_permission_set_inline_policy.pass1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            114,
                            "resource \"aws_ssoadmin_permission_set_inline_policy\" \"pass1\" {\n"
                        ],
                        [
                            115,
                            "  instance_arn       = aws_ssoadmin_permission_set.example.instance_arn\n"
                        ],
                        [
                            116,
                            "  permission_set_arn = aws_ssoadmin_permission_set.example.arn\n"
                        ],
                        [
                            117,
                            "  inline_policy      = <<POLICY\n"
                        ],
                        [
                            118,
                            "{\n"
                        ],
                        [
                            119,
                            "  \"Statement\": [\n"
                        ],
                        [
                            120,
                            "    {\n"
                        ],
                        [
                            121,
                            "      \"Action\": [\n"
                        ],
                        [
                            122,
                            "        \"s3:ListBucket*\",\n"
                        ],
                        [
                            123,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            124,
                            "        \"s3:Get*\"\n"
                        ],
                        [
                            125,
                            "      ],\n"
                        ],
                        [
                            126,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            127,
                            "      \"Resource\": [\n"
                        ],
                        [
                            128,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            129,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            130,
                            "        \"arn:aws:s3:::b2\",\n"
                        ],
                        [
                            131,
                            "        \"arn:aws:s3:::b2/*\"\n"
                        ],
                        [
                            132,
                            "      ],\n"
                        ],
                        [
                            133,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            134,
                            "    },\n"
                        ],
                        [
                            135,
                            "    {\n"
                        ],
                        [
                            136,
                            "      \"Action\": \"s3:PutObject*\",\n"
                        ],
                        [
                            137,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            138,
                            "      \"Resource\": \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            139,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            140,
                            "    }\n"
                        ],
                        [
                            141,
                            "  ],\n"
                        ],
                        [
                            142,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            143,
                            "}\n"
                        ],
                        [
                            144,
                            "POLICY\n"
                        ],
                        [
                            145,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            146,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        114,
                        146
                    ],
                    "resource": "aws_ssoadmin_permission_set_inline_policy.pass1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "provider \"aws\" {\n"
                        ],
                        [
                            2,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            3,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_authentication_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "file_line_range": [
                        1,
                        3
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_iam_user_policy\" \"mfa\" {\n"
                        ],
                        [
                            22,
                            "  name_prefix = \"aws-foundations-benchmark-1-4-0\"\n"
                        ],
                        [
                            23,
                            "  user        = aws_iam_user.mfa.name\n"
                        ],
                        [
                            24,
                            "\n"
                        ],
                        [
                            25,
                            "  policy = <<EOF\n"
                        ],
                        [
                            26,
                            "{\n"
                        ],
                        [
                            27,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            28,
                            "   \"Statement\": [\n"
                        ],
                        [
                            29,
                            "     {\n"
                        ],
                        [
                            30,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            31,
                            "       \"Resource\": \"${aws_iam_user.mfa.arn}\",\n"
                        ],
                        [
                            32,
                            "       \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            33,
                            "       \"Condition\": {\n"
                        ],
                        [
                            34,
                            "         \"BoolIfExists\": {\n"
                        ],
                        [
                            35,
                            "           \"aws:MultiFactorAuthPresent\" : \"false\"\n"
                        ],
                        [
                            36,
                            "         }\n"
                        ],
                        [
                            37,
                            "       }\n"
                        ],
                        [
                            38,
                            "     }\n"
                        ],
                        [
                            39,
                            "   ]\n"
                        ],
                        [
                            40,
                            "}\n"
                        ],
                        [
                            41,
                            "EOF\n"
                        ],
                        [
                            42,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            43,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_authentication_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "file_line_range": [
                        21,
                        43
                    ],
                    "resource": "aws_iam_user_policy.mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_iam_user_policy\" \"mfa\" {\n"
                        ],
                        [
                            22,
                            "  name_prefix = \"aws-foundations-benchmark-1-4-0\"\n"
                        ],
                        [
                            23,
                            "  user        = aws_iam_user.mfa.name\n"
                        ],
                        [
                            24,
                            "\n"
                        ],
                        [
                            25,
                            "  policy = <<EOF\n"
                        ],
                        [
                            26,
                            "{\n"
                        ],
                        [
                            27,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            28,
                            "   \"Statement\": [\n"
                        ],
                        [
                            29,
                            "     {\n"
                        ],
                        [
                            30,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            31,
                            "       \"Resource\": \"${aws_iam_user.mfa.arn}\",\n"
                        ],
                        [
                            32,
                            "       \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            33,
                            "       \"Condition\": {\n"
                        ],
                        [
                            34,
                            "         \"BoolIfExists\": {\n"
                        ],
                        [
                            35,
                            "           \"aws:MultiFactorAuthPresent\" : \"false\"\n"
                        ],
                        [
                            36,
                            "         }\n"
                        ],
                        [
                            37,
                            "       }\n"
                        ],
                        [
                            38,
                            "     }\n"
                        ],
                        [
                            39,
                            "   ]\n"
                        ],
                        [
                            40,
                            "}\n"
                        ],
                        [
                            41,
                            "EOF\n"
                        ],
                        [
                            42,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            43,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_authentication_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "file_line_range": [
                        21,
                        43
                    ],
                    "resource": "aws_iam_user_policy.mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_168",
                    "bc_check_id": "BC_AWS_GENERAL_91",
                    "check_name": "Ensure SQS queue policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_sqs_queue\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"examplequeue\"\n"
                        ],
                        [
                            3,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_sqs_queue.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueuePolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_11",
                    "bc_check_id": "BC_AWS_IAM_6",
                    "check_name": "Ensure IAM password policy requires at least one lowercase letter",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_lowercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLowercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_6"
                },
                {
                    "check_id": "CKV_AWS_15",
                    "bc_check_id": "BC_AWS_IAM_5",
                    "check_name": "Ensure IAM password policy requires at least one uppercase letter",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_uppercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyUppercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_5"
                },
                {
                    "check_id": "CKV_AWS_12",
                    "bc_check_id": "BC_AWS_IAM_8",
                    "check_name": "Ensure IAM password policy requires at least one number",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_numbers"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyNumber",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_8"
                },
                {
                    "check_id": "CKV_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_7",
                    "check_name": "Ensure IAM password policy requires at least one symbol",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_symbols"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicySymbol",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_7"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_role\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Statement\": [\n"
                        ],
                        [
                            8,
                            "    {\n"
                        ],
                        [
                            9,
                            "      \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            10,
                            "      \"Principal\": {\n"
                        ],
                        [
                            11,
                            "        \"AWS\": \"arn:aws:iam::987654321145:root\"\n"
                        ],
                        [
                            12,
                            "      },\n"
                        ],
                        [
                            13,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            16,
                            "    }\n"
                        ],
                        [
                            17,
                            "  ]\n"
                        ],
                        [
                            18,
                            "}\n"
                        ],
                        [
                            19,
                            "EOF\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "file_line_range": [
                        1,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_11",
                    "bc_check_id": "BC_AWS_IAM_6",
                    "check_name": "Ensure IAM password policy requires at least one lowercase letter",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_lowercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLowercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_6"
                },
                {
                    "check_id": "CKV_AWS_15",
                    "bc_check_id": "BC_AWS_IAM_5",
                    "check_name": "Ensure IAM password policy requires at least one uppercase letter",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_uppercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyUppercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_5"
                },
                {
                    "check_id": "CKV_AWS_12",
                    "bc_check_id": "BC_AWS_IAM_8",
                    "check_name": "Ensure IAM password policy requires at least one number",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_numbers"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyNumber",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_8"
                },
                {
                    "check_id": "CKV_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_7",
                    "check_name": "Ensure IAM password policy requires at least one symbol",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "require_symbols"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicySymbol",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_7"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_iam_user_policy\" \"fail_key\" {\n"
                        ],
                        [
                            15,
                            "  name = \"test\"\n"
                        ],
                        [
                            16,
                            "  user = aws_iam_user.fail_key.name\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  policy = <<EOF\n"
                        ],
                        [
                            19,
                            "{\n"
                        ],
                        [
                            20,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            21,
                            "  \"Statement\": [\n"
                        ],
                        [
                            22,
                            "    {\n"
                        ],
                        [
                            23,
                            "      \"Action\": [\n"
                        ],
                        [
                            24,
                            "        \"ec2:Describe*\"\n"
                        ],
                        [
                            25,
                            "      ],\n"
                        ],
                        [
                            26,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            27,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            28,
                            "    }\n"
                        ],
                        [
                            29,
                            "  ]\n"
                        ],
                        [
                            30,
                            "}\n"
                        ],
                        [
                            31,
                            "EOF\n"
                        ],
                        [
                            32,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_root_account_has_active_access_keys.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "file_line_range": [
                        14,
                        33
                    ],
                    "resource": "aws_iam_user_policy.fail_key",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_key",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_iam_user_policy\" \"fail_key\" {\n"
                        ],
                        [
                            15,
                            "  name = \"test\"\n"
                        ],
                        [
                            16,
                            "  user = aws_iam_user.fail_key.name\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  policy = <<EOF\n"
                        ],
                        [
                            19,
                            "{\n"
                        ],
                        [
                            20,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            21,
                            "  \"Statement\": [\n"
                        ],
                        [
                            22,
                            "    {\n"
                        ],
                        [
                            23,
                            "      \"Action\": [\n"
                        ],
                        [
                            24,
                            "        \"ec2:Describe*\"\n"
                        ],
                        [
                            25,
                            "      ],\n"
                        ],
                        [
                            26,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            27,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            28,
                            "    }\n"
                        ],
                        [
                            29,
                            "  ]\n"
                        ],
                        [
                            30,
                            "}\n"
                        ],
                        [
                            31,
                            "EOF\n"
                        ],
                        [
                            32,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_root_account_has_active_access_keys.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "file_line_range": [
                        14,
                        33
                    ],
                    "resource": "aws_iam_user_policy.fail_key",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_key",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_iam_user_policy\" \"fail_mfa\" {\n"
                        ],
                        [
                            16,
                            "  name = \"test\"\n"
                        ],
                        [
                            17,
                            "  user = aws_iam_user.fail_mfa.name\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  policy = <<EOF\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            22,
                            "   \"Statement\": [\n"
                        ],
                        [
                            23,
                            "     {\n"
                        ],
                        [
                            24,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            25,
                            "       \"Principal\": {\n"
                        ],
                        [
                            26,
                            "         \"AWS\": \"arn:aws:iam::111122223333:root\"\n"
                        ],
                        [
                            27,
                            "       },\n"
                        ],
                        [
                            28,
                            "       \"Action\": \"sts:AssumeRole\"\n"
                        ],
                        [
                            29,
                            "     }\n"
                        ],
                        [
                            30,
                            "   ]\n"
                        ],
                        [
                            31,
                            "}\n"
                        ],
                        [
                            32,
                            "EOF\n"
                        ],
                        [
                            33,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_user_policy_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "file_line_range": [
                        15,
                        34
                    ],
                    "resource": "aws_iam_user_policy.fail_mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_iam_user_policy\" \"fail_mfa\" {\n"
                        ],
                        [
                            16,
                            "  name = \"test\"\n"
                        ],
                        [
                            17,
                            "  user = aws_iam_user.fail_mfa.name\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  policy = <<EOF\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            22,
                            "   \"Statement\": [\n"
                        ],
                        [
                            23,
                            "     {\n"
                        ],
                        [
                            24,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            25,
                            "       \"Principal\": {\n"
                        ],
                        [
                            26,
                            "         \"AWS\": \"arn:aws:iam::111122223333:root\"\n"
                        ],
                        [
                            27,
                            "       },\n"
                        ],
                        [
                            28,
                            "       \"Action\": \"sts:AssumeRole\"\n"
                        ],
                        [
                            29,
                            "     }\n"
                        ],
                        [
                            30,
                            "   ]\n"
                        ],
                        [
                            31,
                            "}\n"
                        ],
                        [
                            32,
                            "EOF\n"
                        ],
                        [
                            33,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_user_policy_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "file_line_range": [
                        15,
                        34
                    ],
                    "resource": "aws_iam_user_policy.fail_mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name_prefix = \"openshift-instance-role\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            13,
                            "            \"Principal\": {\n"
                        ],
                        [
                            14,
                            "                \"Service\": \"ec2.amazonaws.com\",\n"
                        ],
                        [
                            15,
                            "                \"AWS\": \"*\"\n"
                        ],
                        [
                            16,
                            "            },\n"
                        ],
                        [
                            17,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            18,
                            "            \"Sid\": \"\"\n"
                        ],
                        [
                            19,
                            "        }\n"
                        ],
                        [
                            20,
                            "    ]\n"
                        ],
                        [
                            21,
                            "}\n"
                        ],
                        [
                            22,
                            "EOF\n"
                        ],
                        [
                            23,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "file_line_range": [
                        4,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_user_policy\" \"positive3\" {\n"
                        ],
                        [
                            17,
                            "  name = \"excess_policy\"\n"
                        ],
                        [
                            18,
                            "  user = aws_iam_user.user.name\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  policy = <<EOF\n"
                        ],
                        [
                            21,
                            "{\n"
                        ],
                        [
                            22,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            23,
                            "  \"Statement\": [\n"
                        ],
                        [
                            24,
                            "    {\n"
                        ],
                        [
                            25,
                            "      \"Action\": [\n"
                        ],
                        [
                            26,
                            "        \"ec2:*\",\n"
                        ],
                        [
                            27,
                            "        \"s3:*\",\n"
                        ],
                        [
                            28,
                            "        \"lambda:*\",\n"
                        ],
                        [
                            29,
                            "        \"cloudwatch:*\"\n"
                        ],
                        [
                            30,
                            "      ],\n"
                        ],
                        [
                            31,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            32,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            33,
                            "    }\n"
                        ],
                        [
                            34,
                            "  ]\n"
                        ],
                        [
                            35,
                            "}\n"
                        ],
                        [
                            36,
                            "EOF\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_line_range": [
                        16,
                        37
                    ],
                    "resource": "aws_iam_user_policy.positive3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_user_policy\" \"positive3\" {\n"
                        ],
                        [
                            17,
                            "  name = \"excess_policy\"\n"
                        ],
                        [
                            18,
                            "  user = aws_iam_user.user.name\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  policy = <<EOF\n"
                        ],
                        [
                            21,
                            "{\n"
                        ],
                        [
                            22,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            23,
                            "  \"Statement\": [\n"
                        ],
                        [
                            24,
                            "    {\n"
                        ],
                        [
                            25,
                            "      \"Action\": [\n"
                        ],
                        [
                            26,
                            "        \"ec2:*\",\n"
                        ],
                        [
                            27,
                            "        \"s3:*\",\n"
                        ],
                        [
                            28,
                            "        \"lambda:*\",\n"
                        ],
                        [
                            29,
                            "        \"cloudwatch:*\"\n"
                        ],
                        [
                            30,
                            "      ],\n"
                        ],
                        [
                            31,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            32,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            33,
                            "    }\n"
                        ],
                        [
                            34,
                            "  ]\n"
                        ],
                        [
                            35,
                            "}\n"
                        ],
                        [
                            36,
                            "EOF\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_line_range": [
                        16,
                        37
                    ],
                    "resource": "aws_iam_user_policy.positive3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_iam_role\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name               = \"fail-default\"\n"
                        ],
                        [
                            5,
                            "  assume_role_policy = <<POLICY\n"
                        ],
                        [
                            6,
                            "{\n"
                        ],
                        [
                            7,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "    \"Statement\": [\n"
                        ],
                        [
                            9,
                            "       {\n"
                        ],
                        [
                            10,
                            "           \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            11,
                            "           \"Principal\": {\"AWS\": \"123123123123\"},\n"
                        ],
                        [
                            12,
                            "           \"Effect\": \"Allow\",\n"
                        ],
                        [
                            13,
                            "           \"Sid\": \"\"\n"
                        ],
                        [
                            14,
                            "        }]\n"
                        ],
                        [
                            15,
                            "}\n"
                        ],
                        [
                            16,
                            "POLICY\n"
                        ],
                        [
                            17,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_line_range": [
                        3,
                        18
                    ],
                    "resource": "aws_iam_role.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_iam_role\" \"fail2\" {\n"
                        ],
                        [
                            22,
                            "  name               = \"fail-default\"\n"
                        ],
                        [
                            23,
                            "  assume_role_policy = <<POLICY\n"
                        ],
                        [
                            24,
                            "{\n"
                        ],
                        [
                            25,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            26,
                            "  \"Statement\": [\n"
                        ],
                        [
                            27,
                            "      {\n"
                        ],
                        [
                            28,
                            "    \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            29,
                            "    \"Principal\": {\"AWS\": \"arn:aws:iam::123123123123:root\"},\n"
                        ],
                        [
                            30,
                            "    \"Effect\": \"Allow\",\n"
                        ],
                        [
                            31,
                            "    \"Sid\": \"\"\n"
                        ],
                        [
                            32,
                            "  }]\n"
                        ],
                        [
                            33,
                            "}\n"
                        ],
                        [
                            34,
                            "POLICY\n"
                        ],
                        [
                            35,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_line_range": [
                        21,
                        36
                    ],
                    "resource": "aws_iam_role.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"lambda\" {\n"
                        ],
                        [
                            5,
                            "  namename_prefix    = \"test\"\n"
                        ],
                        [
                            6,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            7,
                            "{\n"
                        ],
                        [
                            8,
                            "\"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\"Statement\": [\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            12,
                            "\"Principal\" : {\"Service\": \"lambda.amazonaws.com\"},\n"
                        ],
                        [
                            13,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            14,
                            "},\n"
                        ],
                        [
                            15,
                            "{\n"
                        ],
                        [
                            16,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            17,
                            "\"Principal\" : {\"AWS\": \"*\"},\n"
                        ],
                        [
                            18,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            19,
                            "},\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            22,
                            "\"Principal\" : {\"Service\": \"events.amazonaws.com\"},\n"
                        ],
                        [
                            23,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            24,
                            "}\n"
                        ],
                        [
                            25,
                            "]\n"
                        ],
                        [
                            26,
                            "}\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "EOF\n"
                        ],
                        [
                            29,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            30,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "file_line_range": [
                        4,
                        30
                    ],
                    "resource": "aws_iam_role.lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"fail_principle\" {\n"
                        ],
                        [
                            5,
                            "  name_prefix = \"openshift-instance-role\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            13,
                            "            \"Principal\": {\n"
                        ],
                        [
                            14,
                            "                \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            15,
                            "            },\n"
                        ],
                        [
                            16,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            17,
                            "            \"Sid\": \"\"\n"
                        ],
                        [
                            18,
                            "        }\n"
                        ],
                        [
                            19,
                            "    ]\n"
                        ],
                        [
                            20,
                            "}\n"
                        ],
                        [
                            21,
                            "EOF\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "file_line_range": [
                        4,
                        25
                    ],
                    "resource": "aws_iam_role.fail_principle",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"fail_principle\" {\n"
                        ],
                        [
                            5,
                            "  name_prefix = \"openshift-instance-role\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            13,
                            "            \"Principal\": {\n"
                        ],
                        [
                            14,
                            "                \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            15,
                            "            },\n"
                        ],
                        [
                            16,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            17,
                            "            \"Sid\": \"\"\n"
                        ],
                        [
                            18,
                            "        }\n"
                        ],
                        [
                            19,
                            "    ]\n"
                        ],
                        [
                            20,
                            "}\n"
                        ],
                        [
                            21,
                            "EOF\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_allows_all_principals_to_assume.tf",
                    "file_line_range": [
                        4,
                        25
                    ],
                    "resource": "aws_iam_role.fail_principle",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role_policy\" \"test_policy\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_policy\"\n"
                        ],
                        [
                            3,
                            "  role = aws_iam_role.test_role.id\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<-EOF\n"
                        ],
                        [
                            6,
                            "  {\n"
                        ],
                        [
                            7,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "    \"Statement\": [\n"
                        ],
                        [
                            9,
                            "      {\n"
                        ],
                        [
                            10,
                            "        \"Action\": [\n"
                        ],
                        [
                            11,
                            "          \"iam:passrole\"\n"
                        ],
                        [
                            12,
                            "        ],\n"
                        ],
                        [
                            13,
                            "        \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "        \"Resource\": \"*\"\n"
                        ],
                        [
                            15,
                            "      }\n"
                        ],
                        [
                            16,
                            "    ]\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "  EOF\n"
                        ],
                        [
                            19,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "file_line_range": [
                        1,
                        20
                    ],
                    "resource": "aws_iam_role_policy.test_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role_policy\" \"test_policy\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_policy\"\n"
                        ],
                        [
                            3,
                            "  role = aws_iam_role.test_role.id\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<-EOF\n"
                        ],
                        [
                            6,
                            "  {\n"
                        ],
                        [
                            7,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "    \"Statement\": [\n"
                        ],
                        [
                            9,
                            "      {\n"
                        ],
                        [
                            10,
                            "        \"Action\": [\n"
                        ],
                        [
                            11,
                            "          \"iam:passrole\"\n"
                        ],
                        [
                            12,
                            "        ],\n"
                        ],
                        [
                            13,
                            "        \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "        \"Resource\": \"*\"\n"
                        ],
                        [
                            15,
                            "      }\n"
                        ],
                        [
                            16,
                            "    ]\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "  EOF\n"
                        ],
                        [
                            19,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_policy_passrole_allows_all.tf",
                    "file_line_range": [
                        1,
                        20
                    ],
                    "resource": "aws_iam_role_policy.test_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_role\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Statement\": [\n"
                        ],
                        [
                            8,
                            "    {\n"
                        ],
                        [
                            9,
                            "      \"Action\": [\"*\"],\n"
                        ],
                        [
                            10,
                            "      \"Principal\": {\n"
                        ],
                        [
                            11,
                            "        \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            12,
                            "      },\n"
                        ],
                        [
                            13,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            16,
                            "    }\n"
                        ],
                        [
                            17,
                            "  ]\n"
                        ],
                        [
                            18,
                            "}\n"
                        ],
                        [
                            19,
                            "EOF\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "file_line_range": [
                        1,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_role\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Statement\": [\n"
                        ],
                        [
                            8,
                            "    {\n"
                        ],
                        [
                            9,
                            "      \"Action\": [\"*\"],\n"
                        ],
                        [
                            10,
                            "      \"Principal\": {\n"
                        ],
                        [
                            11,
                            "        \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            12,
                            "      },\n"
                        ],
                        [
                            13,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            16,
                            "    }\n"
                        ],
                        [
                            17,
                            "  ]\n"
                        ],
                        [
                            18,
                            "}\n"
                        ],
                        [
                            19,
                            "EOF\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "file_line_range": [
                        1,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            26,
                            "resource \"aws_iam_role\" \"positive2\" {\n"
                        ],
                        [
                            27,
                            "  name = \"test_role2\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            30,
                            "{\n"
                        ],
                        [
                            31,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            32,
                            "  \"Statement\": [\n"
                        ],
                        [
                            33,
                            "    {\n"
                        ],
                        [
                            34,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            35,
                            "      \"Principal\": {\n"
                        ],
                        [
                            36,
                            "        \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            37,
                            "      },\n"
                        ],
                        [
                            38,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            39,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            40,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "  ]\n"
                        ],
                        [
                            43,
                            "}\n"
                        ],
                        [
                            44,
                            "EOF\n"
                        ],
                        [
                            45,
                            "\n"
                        ],
                        [
                            46,
                            "  tags = {\n"
                        ],
                        [
                            47,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            48,
                            "  }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "file_line_range": [
                        26,
                        49
                    ],
                    "resource": "aws_iam_role.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            26,
                            "resource \"aws_iam_role\" \"positive2\" {\n"
                        ],
                        [
                            27,
                            "  name = \"test_role2\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            30,
                            "{\n"
                        ],
                        [
                            31,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            32,
                            "  \"Statement\": [\n"
                        ],
                        [
                            33,
                            "    {\n"
                        ],
                        [
                            34,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            35,
                            "      \"Principal\": {\n"
                        ],
                        [
                            36,
                            "        \"Service\": \"ec2.amazonaws.com\"\n"
                        ],
                        [
                            37,
                            "      },\n"
                        ],
                        [
                            38,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            39,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            40,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "  ]\n"
                        ],
                        [
                            43,
                            "}\n"
                        ],
                        [
                            44,
                            "EOF\n"
                        ],
                        [
                            45,
                            "\n"
                        ],
                        [
                            46,
                            "  tags = {\n"
                        ],
                        [
                            47,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            48,
                            "  }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/iam_role_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/role/iam_role_with_full_privileges.tf",
                    "file_line_range": [
                        26,
                        49
                    ],
                    "resource": "aws_iam_role.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            25,
                            "provider \"aws\" {\n"
                        ],
                        [
                            26,
                            "  region = \"eu-west-1\"\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/imagebuilder/aws_imagebuilder_component.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/imagebuilder/aws_imagebuilder_component.tf",
                    "repo_file_path": "/terraform/aws/imagebuilder/aws_imagebuilder_component.tf",
                    "file_line_range": [
                        25,
                        27
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_200",
                    "bc_check_id": null,
                    "check_name": "Ensure that Image Recipe EBS Disk are encrypted with CMK",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_imagebuilder_image_recipe\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  block_device_mapping {\n"
                        ],
                        [
                            6,
                            "    device_name = \"/dev/xvdb\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "    # ebs {\n"
                        ],
                        [
                            9,
                            "    # #   encrypted             = true\n"
                        ],
                        [
                            10,
                            "    # #   kms_key_id            = aws_kms_key.fail.arn\n"
                        ],
                        [
                            11,
                            "    #   delete_on_termination = true\n"
                        ],
                        [
                            12,
                            "    #   volume_size           = 100\n"
                        ],
                        [
                            13,
                            "    #   volume_type           = \"gp2\"\n"
                        ],
                        [
                            14,
                            "    # }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  component {\n"
                        ],
                        [
                            19,
                            "    component_arn = aws_imagebuilder_component.fail.arn\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  name         = \"example\"\n"
                        ],
                        [
                            23,
                            "  parent_image = \"arn:${data.aws_partition.current.partition}:imagebuilder:${data.aws_region.current.name}:aws:image/amazon-linux-2-x86/x.x.x\"\n"
                        ],
                        [
                            24,
                            "  version      = \"1.0.0\"\n"
                        ],
                        [
                            25,
                            "  tags         = { test = \"fail\" }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/imagebuilder/aws_imagebuilder_image_recipe.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/imagebuilder/aws_imagebuilder_image_recipe.tf",
                    "repo_file_path": "/terraform/aws/imagebuilder/aws_imagebuilder_image_recipe.tf",
                    "file_line_range": [
                        4,
                        26
                    ],
                    "resource": "aws_imagebuilder_image_recipe.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ImagebuilderImageRecipeEBSEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_33",
                    "bc_check_id": "BC_AWS_IAM_63",
                    "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_kms_key\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  description = \"KMS key 1\"\n"
                        ],
                        [
                            5,
                            "  is_enabled  = false\n"
                        ],
                        [
                            6,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms_key_is_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms_key_is_disabled.tf",
                    "repo_file_path": "/terraform/aws/kms/kms_key_is_disabled.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_kms_key.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            38,
                            "provider \"aws\" {\n"
                        ],
                        [
                            39,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            40,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms_key_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "file_line_range": [
                        38,
                        40
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_33",
                    "bc_check_id": "BC_AWS_IAM_63",
                    "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy/[0]/Statement"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_kms_key\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  description             = \"KMS key + secure_policy\"\n"
                        ],
                        [
                            5,
                            "  deletion_window_in_days = 7\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2008-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Sid\": \"Secure Policy\",\n"
                        ],
                        [
                            13,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "            \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "            \"Action\": [\n"
                        ],
                        [
                            16,
                            "            \"kms:Create*\",\n"
                        ],
                        [
                            17,
                            "            \"kms:Describe*\",\n"
                        ],
                        [
                            18,
                            "            \"kms:Enable*\",\n"
                        ],
                        [
                            19,
                            "            \"kms:List*\",\n"
                        ],
                        [
                            20,
                            "            \"kms:Put*\",\n"
                        ],
                        [
                            21,
                            "            \"kms:Update*\",\n"
                        ],
                        [
                            22,
                            "            \"kms:Revoke*\",\n"
                        ],
                        [
                            23,
                            "            \"kms:Disable*\",\n"
                        ],
                        [
                            24,
                            "            \"kms:Get*\",\n"
                        ],
                        [
                            25,
                            "            \"kms:Delete*\",\n"
                        ],
                        [
                            26,
                            "            \"kms:TagResource\",\n"
                        ],
                        [
                            27,
                            "            \"kms:UntagResource\",\n"
                        ],
                        [
                            28,
                            "            \"kms:ScheduleKeyDeletion\",\n"
                        ],
                        [
                            29,
                            "            \"kms:CancelKeyDeletion\"\n"
                        ],
                        [
                            30,
                            "            ]\n"
                        ],
                        [
                            31,
                            "        }\n"
                        ],
                        [
                            32,
                            "    ]\n"
                        ],
                        [
                            33,
                            "}\n"
                        ],
                        [
                            34,
                            "EOF\n"
                        ],
                        [
                            35,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms_key_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "file_line_range": [
                        3,
                        36
                    ],
                    "resource": "aws_kms_key.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal"
                },
                {
                    "check_id": "CKV_AWS_45",
                    "bc_check_id": "BC_AWS_SECRETS_3",
                    "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "environment/[0]/variables"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
                },
                {
                    "check_id": "CKV_AWS_45",
                    "bc_check_id": "BC_AWS_SECRETS_3",
                    "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "environment/[0]/variables"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_iam_role\" \"positiverole1\" {\n"
                        ],
                        [
                            42,
                            "  name = \"positiverole1\"\n"
                        ],
                        [
                            43,
                            "\n"
                        ],
                        [
                            44,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            45,
                            "{\n"
                        ],
                        [
                            46,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            47,
                            "  \"Statement\": [\n"
                        ],
                        [
                            48,
                            "    {\n"
                        ],
                        [
                            49,
                            "      \"Action\": [\"some:action\"],\n"
                        ],
                        [
                            50,
                            "      \"Principal\": {\n"
                        ],
                        [
                            51,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            52,
                            "      },\n"
                        ],
                        [
                            53,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            54,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            55,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            56,
                            "    }\n"
                        ],
                        [
                            57,
                            "  ]\n"
                        ],
                        [
                            58,
                            "}\n"
                        ],
                        [
                            59,
                            "EOF\n"
                        ],
                        [
                            60,
                            "  tags = {\n"
                        ],
                        [
                            61,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            62,
                            "  }\n"
                        ],
                        [
                            63,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        41,
                        63
                    ],
                    "resource": "aws_iam_role.positiverole1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_iam_role\" \"positiverole1\" {\n"
                        ],
                        [
                            42,
                            "  name = \"positiverole1\"\n"
                        ],
                        [
                            43,
                            "\n"
                        ],
                        [
                            44,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            45,
                            "{\n"
                        ],
                        [
                            46,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            47,
                            "  \"Statement\": [\n"
                        ],
                        [
                            48,
                            "    {\n"
                        ],
                        [
                            49,
                            "      \"Action\": [\"some:action\"],\n"
                        ],
                        [
                            50,
                            "      \"Principal\": {\n"
                        ],
                        [
                            51,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            52,
                            "      },\n"
                        ],
                        [
                            53,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            54,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            55,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            56,
                            "    }\n"
                        ],
                        [
                            57,
                            "  ]\n"
                        ],
                        [
                            58,
                            "}\n"
                        ],
                        [
                            59,
                            "EOF\n"
                        ],
                        [
                            60,
                            "  tags = {\n"
                        ],
                        [
                            61,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            62,
                            "  }\n"
                        ],
                        [
                            63,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        41,
                        63
                    ],
                    "resource": "aws_iam_role.positiverole1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            65,
                            "resource \"aws_iam_role\" \"positiverole2\" {\n"
                        ],
                        [
                            66,
                            "  name = \"positiverole2\"\n"
                        ],
                        [
                            67,
                            "\n"
                        ],
                        [
                            68,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            69,
                            "{\n"
                        ],
                        [
                            70,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            71,
                            "  \"Statement\": [\n"
                        ],
                        [
                            72,
                            "    {\n"
                        ],
                        [
                            73,
                            "      \"Action\": [\"some:action\"],\n"
                        ],
                        [
                            74,
                            "      \"Principal\": {\n"
                        ],
                        [
                            75,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            76,
                            "      },\n"
                        ],
                        [
                            77,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            78,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            79,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            80,
                            "    }\n"
                        ],
                        [
                            81,
                            "  ]\n"
                        ],
                        [
                            82,
                            "}\n"
                        ],
                        [
                            83,
                            "EOF\n"
                        ],
                        [
                            84,
                            "  tags = {\n"
                        ],
                        [
                            85,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            86,
                            "  }\n"
                        ],
                        [
                            87,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        65,
                        87
                    ],
                    "resource": "aws_iam_role.positiverole2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            65,
                            "resource \"aws_iam_role\" \"positiverole2\" {\n"
                        ],
                        [
                            66,
                            "  name = \"positiverole2\"\n"
                        ],
                        [
                            67,
                            "\n"
                        ],
                        [
                            68,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            69,
                            "{\n"
                        ],
                        [
                            70,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            71,
                            "  \"Statement\": [\n"
                        ],
                        [
                            72,
                            "    {\n"
                        ],
                        [
                            73,
                            "      \"Action\": [\"some:action\"],\n"
                        ],
                        [
                            74,
                            "      \"Principal\": {\n"
                        ],
                        [
                            75,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            76,
                            "      },\n"
                        ],
                        [
                            77,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            78,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            79,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            80,
                            "    }\n"
                        ],
                        [
                            81,
                            "  ]\n"
                        ],
                        [
                            82,
                            "}\n"
                        ],
                        [
                            83,
                            "EOF\n"
                        ],
                        [
                            84,
                            "  tags = {\n"
                        ],
                        [
                            85,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            86,
                            "  }\n"
                        ],
                        [
                            87,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        65,
                        87
                    ],
                    "resource": "aws_iam_role.positiverole2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_iam_role_policy\" \"positiveinlinepolicy1\" {\n"
                        ],
                        [
                            91,
                            "  name = \"positiveinlinepolicy1\"\n"
                        ],
                        [
                            92,
                            "  role = aws_iam_role.positiverole1.id\n"
                        ],
                        [
                            93,
                            "\n"
                        ],
                        [
                            94,
                            "  # Terraform's \"jsonencode\" function converts a\n"
                        ],
                        [
                            95,
                            "  # Terraform expression result to valid JSON syntax.\n"
                        ],
                        [
                            96,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            97,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            98,
                            "    Statement = [\n"
                        ],
                        [
                            99,
                            "      {\n"
                        ],
                        [
                            100,
                            "        Action = [\n"
                        ],
                        [
                            101,
                            "          \"ec2:Describe*\",\n"
                        ],
                        [
                            102,
                            "          \"iam:*\"\n"
                        ],
                        [
                            103,
                            "        ]\n"
                        ],
                        [
                            104,
                            "        Effect   = \"Allow\"\n"
                        ],
                        [
                            105,
                            "        Resource = \"*\"\n"
                        ],
                        [
                            106,
                            "      },\n"
                        ],
                        [
                            107,
                            "    ]\n"
                        ],
                        [
                            108,
                            "  })\n"
                        ],
                        [
                            109,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            110,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        90,
                        110
                    ],
                    "resource": "aws_iam_role_policy.positiveinlinepolicy1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_iam_role_policy\" \"positiveinlinepolicy1\" {\n"
                        ],
                        [
                            91,
                            "  name = \"positiveinlinepolicy1\"\n"
                        ],
                        [
                            92,
                            "  role = aws_iam_role.positiverole1.id\n"
                        ],
                        [
                            93,
                            "\n"
                        ],
                        [
                            94,
                            "  # Terraform's \"jsonencode\" function converts a\n"
                        ],
                        [
                            95,
                            "  # Terraform expression result to valid JSON syntax.\n"
                        ],
                        [
                            96,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            97,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            98,
                            "    Statement = [\n"
                        ],
                        [
                            99,
                            "      {\n"
                        ],
                        [
                            100,
                            "        Action = [\n"
                        ],
                        [
                            101,
                            "          \"ec2:Describe*\",\n"
                        ],
                        [
                            102,
                            "          \"iam:*\"\n"
                        ],
                        [
                            103,
                            "        ]\n"
                        ],
                        [
                            104,
                            "        Effect   = \"Allow\"\n"
                        ],
                        [
                            105,
                            "        Resource = \"*\"\n"
                        ],
                        [
                            106,
                            "      },\n"
                        ],
                        [
                            107,
                            "    ]\n"
                        ],
                        [
                            108,
                            "  })\n"
                        ],
                        [
                            109,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            110,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        90,
                        110
                    ],
                    "resource": "aws_iam_role_policy.positiveinlinepolicy1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            112,
                            "resource \"aws_iam_policy\" \"positivecustomermanagedpolicy1\" {\n"
                        ],
                        [
                            113,
                            "  name = \"positivecustomermanagedpolicy1\"\n"
                        ],
                        [
                            114,
                            "\n"
                        ],
                        [
                            115,
                            "  policy = <<EOF\n"
                        ],
                        [
                            116,
                            "{\n"
                        ],
                        [
                            117,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            118,
                            "  \"Statement\": [\n"
                        ],
                        [
                            119,
                            "    {\n"
                        ],
                        [
                            120,
                            "      \"Action\": [\n"
                        ],
                        [
                            121,
                            "        \"ec2:Describe*\",\n"
                        ],
                        [
                            122,
                            "        \"sts:AssumeRole\"\n"
                        ],
                        [
                            123,
                            "      ],\n"
                        ],
                        [
                            124,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            125,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            126,
                            "    }\n"
                        ],
                        [
                            127,
                            "  ]\n"
                        ],
                        [
                            128,
                            "}\n"
                        ],
                        [
                            129,
                            "EOF\n"
                        ],
                        [
                            130,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            131,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        112,
                        131
                    ],
                    "resource": "aws_iam_policy.positivecustomermanagedpolicy1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            112,
                            "resource \"aws_iam_policy\" \"positivecustomermanagedpolicy1\" {\n"
                        ],
                        [
                            113,
                            "  name = \"positivecustomermanagedpolicy1\"\n"
                        ],
                        [
                            114,
                            "\n"
                        ],
                        [
                            115,
                            "  policy = <<EOF\n"
                        ],
                        [
                            116,
                            "{\n"
                        ],
                        [
                            117,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            118,
                            "  \"Statement\": [\n"
                        ],
                        [
                            119,
                            "    {\n"
                        ],
                        [
                            120,
                            "      \"Action\": [\n"
                        ],
                        [
                            121,
                            "        \"ec2:Describe*\",\n"
                        ],
                        [
                            122,
                            "        \"sts:AssumeRole\"\n"
                        ],
                        [
                            123,
                            "      ],\n"
                        ],
                        [
                            124,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            125,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            126,
                            "    }\n"
                        ],
                        [
                            127,
                            "  ]\n"
                        ],
                        [
                            128,
                            "}\n"
                        ],
                        [
                            129,
                            "EOF\n"
                        ],
                        [
                            130,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            131,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        112,
                        131
                    ],
                    "resource": "aws_iam_policy.positivecustomermanagedpolicy1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            133,
                            "resource \"aws_iam_policy\" \"positivecustomermanagedpolicy2\" {\n"
                        ],
                        [
                            134,
                            "  name = \"positivecustomermanagedpolicy2\"\n"
                        ],
                        [
                            135,
                            "\n"
                        ],
                        [
                            136,
                            "  policy = <<EOF\n"
                        ],
                        [
                            137,
                            "{\n"
                        ],
                        [
                            138,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            139,
                            "  \"Statement\": [\n"
                        ],
                        [
                            140,
                            "    {\n"
                        ],
                        [
                            141,
                            "      \"Action\": [\n"
                        ],
                        [
                            142,
                            "        \"ec2:Describe*\",\n"
                        ],
                        [
                            143,
                            "        \"sts:AssumeRole\"\n"
                        ],
                        [
                            144,
                            "      ],\n"
                        ],
                        [
                            145,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            146,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            147,
                            "    }\n"
                        ],
                        [
                            148,
                            "  ]\n"
                        ],
                        [
                            149,
                            "}\n"
                        ],
                        [
                            150,
                            "EOF\n"
                        ],
                        [
                            151,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            152,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        133,
                        152
                    ],
                    "resource": "aws_iam_policy.positivecustomermanagedpolicy2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            133,
                            "resource \"aws_iam_policy\" \"positivecustomermanagedpolicy2\" {\n"
                        ],
                        [
                            134,
                            "  name = \"positivecustomermanagedpolicy2\"\n"
                        ],
                        [
                            135,
                            "\n"
                        ],
                        [
                            136,
                            "  policy = <<EOF\n"
                        ],
                        [
                            137,
                            "{\n"
                        ],
                        [
                            138,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            139,
                            "  \"Statement\": [\n"
                        ],
                        [
                            140,
                            "    {\n"
                        ],
                        [
                            141,
                            "      \"Action\": [\n"
                        ],
                        [
                            142,
                            "        \"ec2:Describe*\",\n"
                        ],
                        [
                            143,
                            "        \"sts:AssumeRole\"\n"
                        ],
                        [
                            144,
                            "      ],\n"
                        ],
                        [
                            145,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            146,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            147,
                            "    }\n"
                        ],
                        [
                            148,
                            "  ]\n"
                        ],
                        [
                            149,
                            "}\n"
                        ],
                        [
                            150,
                            "EOF\n"
                        ],
                        [
                            151,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            152,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        133,
                        152
                    ],
                    "resource": "aws_iam_policy.positivecustomermanagedpolicy2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            160,
                            "resource \"aws_iam_policy_attachment\" \"positivedirectpolicyattachment1\" {\n"
                        ],
                        [
                            161,
                            "  roles      = [aws_iam_role.positiverole1.name]\n"
                        ],
                        [
                            162,
                            "  policy_arn = aws_iam_policy.positivecustomermanagedpolicy2.arn\n"
                        ],
                        [
                            163,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        160,
                        163
                    ],
                    "resource": "aws_iam_policy_attachment.positivedirectpolicyattachment1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "roles": [
                            {
                                "type": "resource",
                                "name": "aws_iam_role.positiverole1",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            171,
                            "resource \"aws_iam_policy_attachment\" \"positivedirectpolicyattachment2\" {\n"
                        ],
                        [
                            172,
                            "  roles      = [aws_iam_role.positiverole2.name]\n"
                        ],
                        [
                            173,
                            "  policy_arn = \"arn:aws:iam::policy/AmazonPersonalizeFullAccess\"\n"
                        ],
                        [
                            174,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        171,
                        174
                    ],
                    "resource": "aws_iam_policy_attachment.positivedirectpolicyattachment2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "roles": [
                            {
                                "type": "resource",
                                "name": "aws_iam_role.positiverole2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "provider \"aws\" {\n"
                        ],
                        [
                            2,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            3,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        1,
                        3
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_45",
                    "bc_check_id": "BC_AWS_SECRETS_3",
                    "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_lambda_function\" \"my_lambda\" {\n"
                        ],
                        [
                            6,
                            "  filename      = \"~/Downloads/lambda.json.zip\"\n"
                        ],
                        [
                            7,
                            "  function_name = \"my-lambda\"\n"
                        ],
                        [
                            8,
                            "  role          = aws_iam_role.lambda_role.arn\n"
                        ],
                        [
                            9,
                            "  handler       = \"lambda_function.lambda_handler\"\n"
                        ],
                        [
                            10,
                            "  runtime       = \"python3.8\"\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_lambda_function.my_lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_role\" \"lambda_role\" {\n"
                        ],
                        [
                            17,
                            "  name_name_prefix = \"lambda\"\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            22,
                            "  \"Statement\": [\n"
                        ],
                        [
                            23,
                            "    {\n"
                        ],
                        [
                            24,
                            "      \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            25,
                            "      \"Principal\": {\n"
                        ],
                        [
                            26,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            27,
                            "      },\n"
                        ],
                        [
                            28,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            29,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            30,
                            "    }\n"
                        ],
                        [
                            31,
                            "  ]\n"
                        ],
                        [
                            32,
                            "}\n"
                        ],
                        [
                            33,
                            "EOF\n"
                        ],
                        [
                            34,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        16,
                        35
                    ],
                    "resource": "aws_iam_role.lambda_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_role\" \"lambda_role\" {\n"
                        ],
                        [
                            17,
                            "  name_name_prefix = \"lambda\"\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            22,
                            "  \"Statement\": [\n"
                        ],
                        [
                            23,
                            "    {\n"
                        ],
                        [
                            24,
                            "      \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            25,
                            "      \"Principal\": {\n"
                        ],
                        [
                            26,
                            "        \"Service\": \"lambda.amazonaws.com\"\n"
                        ],
                        [
                            27,
                            "      },\n"
                        ],
                        [
                            28,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            29,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            30,
                            "    }\n"
                        ],
                        [
                            31,
                            "  ]\n"
                        ],
                        [
                            32,
                            "}\n"
                        ],
                        [
                            33,
                            "EOF\n"
                        ],
                        [
                            34,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        16,
                        35
                    ],
                    "resource": "aws_iam_role.lambda_role",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_45",
                    "bc_check_id": "BC_AWS_SECRETS_3",
                    "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_lambda_function\" \"example\" {\n"
                        ],
                        [
                            13,
                            "  function_name = \"ServerlessPerson\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  handler = \"MyHandler::handleRequest\"\n"
                        ],
                        [
                            16,
                            "  runtime = \"java11\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  role = aws_iam_role.lambda_exec.arn\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/public_lambda_via_api_gateway.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "repo_file_path": "/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "file_line_range": [
                        12,
                        22
                    ],
                    "resource": "aws_lambda_function.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
                },
                {
                    "check_id": "CKV_AWS_69",
                    "bc_check_id": "BC_AWS_PUBLIC_11",
                    "check_name": "Ensure MQ Broker is not publicly exposed",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerNotPubliclyExposed",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_11"
                },
                {
                    "check_id": "CKV_AWS_33",
                    "bc_check_id": "BC_AWS_IAM_63",
                    "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            35,
                            "resource \"aws_kms_key\" \"example\" {\n"
                        ],
                        [
                            36,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        35,
                        37
                    ],
                    "resource": "aws_kms_key.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal"
                },
                {
                    "check_id": "CKV_AWS_211",
                    "bc_check_id": null,
                    "check_name": "Ensure RDS uses a modern CaCert",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ca_cert_identifier"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_161",
                    "bc_check_id": "BC_AWS_IAM_65",
                    "check_name": "Ensure RDS database has IAM authentication enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_211",
                    "bc_check_id": null,
                    "check_name": "Ensure RDS uses a modern CaCert",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ca_cert_identifier"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_4",
                    "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_4"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_211",
                    "bc_check_id": null,
                    "check_name": "Ensure RDS uses a modern CaCert",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ca_cert_identifier"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_87",
                    "bc_check_id": "BC_AWS_PUBLIC_9",
                    "check_name": "Redshift cluster should not be publicly accessible",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshitClusterPubliclyAvailable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_9"
                },
                {
                    "check_id": "CKV_AWS_141",
                    "bc_check_id": "BC_AWS_GENERAL_70",
                    "check_name": "Ensured that redshift cluster allowing version upgrade by default",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "allow_version_upgrade"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterAllowVersionUpgrade",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-allow-version-upgrade-by-default"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            11,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            12,
                            "      \"Principal\": {\n"
                        ],
                        [
                            13,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            14,
                            "      },\n"
                        ],
                        [
                            15,
                            "      \"Action\": \"s3:*\",\n"
                        ],
                        [
                            16,
                            "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",\n"
                        ],
                        [
                            17,
                            "      \"Condition\": {\n"
                        ],
                        [
                            18,
                            "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}\n"
                        ],
                        [
                            19,
                            "      }\n"
                        ],
                        [
                            20,
                            "    }\n"
                        ],
                        [
                            21,
                            "  ]\n"
                        ],
                        [
                            22,
                            "}\n"
                        ],
                        [
                            23,
                            "POLICY\n"
                        ],
                        [
                            24,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_access_to_any_principal.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_access_to_any_principal.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_access_to_any_principal.tf",
                    "file_line_range": [
                        1,
                        25
                    ],
                    "resource": "aws_s3_bucket_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            11,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            12,
                            "      \"Principal\": {\n"
                        ],
                        [
                            13,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            14,
                            "      },\n"
                        ],
                        [
                            15,
                            "      \"Action\": \"s3:*\",\n"
                        ],
                        [
                            16,
                            "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",\n"
                        ],
                        [
                            17,
                            "      \"Condition\": {\n"
                        ],
                        [
                            18,
                            "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}\n"
                        ],
                        [
                            19,
                            "      }\n"
                        ],
                        [
                            20,
                            "    }\n"
                        ],
                        [
                            21,
                            "  ]\n"
                        ],
                        [
                            22,
                            "}\n"
                        ],
                        [
                            23,
                            "POLICY\n"
                        ],
                        [
                            24,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_access_to_any_principal.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_access_to_any_principal.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_access_to_any_principal.tf",
                    "file_line_range": [
                        1,
                        25
                    ],
                    "resource": "aws_s3_bucket_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            11,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            12,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            13,
                            "      \"Action\": \"s3:*\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",\n"
                        ],
                        [
                            15,
                            "      \"Condition\": {\n"
                        ],
                        [
                            16,
                            "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}\n"
                        ],
                        [
                            17,
                            "      }\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  ]\n"
                        ],
                        [
                            20,
                            "}\n"
                        ],
                        [
                            21,
                            "POLICY\n"
                        ],
                        [
                            22,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "file_line_range": [
                        1,
                        23
                    ],
                    "resource": "aws_s3_bucket_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            11,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            12,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            13,
                            "      \"Action\": \"s3:*\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",\n"
                        ],
                        [
                            15,
                            "      \"Condition\": {\n"
                        ],
                        [
                            16,
                            "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}\n"
                        ],
                        [
                            17,
                            "      }\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  ]\n"
                        ],
                        [
                            20,
                            "}\n"
                        ],
                        [
                            21,
                            "POLICY\n"
                        ],
                        [
                            22,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_allows_all_actions_from_all_principals.tf",
                    "file_line_range": [
                        1,
                        23
                    ],
                    "resource": "aws_s3_bucket_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket_policy\" \"b\" {\n"
                        ],
                        [
                            7,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  policy = <<EOF\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "    \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            13,
                            "    \"Statement\": [\n"
                        ],
                        [
                            14,
                            "      {\n"
                        ],
                        [
                            15,
                            "        \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            16,
                            "        \"Effect\": \"Deny\",\n"
                        ],
                        [
                            17,
                            "        \"Principal\": \"*\",\n"
                        ],
                        [
                            18,
                            "        \"Action\": \"s3:*\",\n"
                        ],
                        [
                            19,
                            "        \"Resource\": [\n"
                        ],
                        [
                            20,
                            "          \"aws_s3_bucket.b.arn\"\n"
                        ],
                        [
                            21,
                            "        ],\n"
                        ],
                        [
                            22,
                            "        \"Condition\": {\n"
                        ],
                        [
                            23,
                            "          \"IpAddress\": {\n"
                        ],
                        [
                            24,
                            "            \"aws:SourceIp\": \"8.8.8.8/32\"\n"
                        ],
                        [
                            25,
                            "          }\n"
                        ],
                        [
                            26,
                            "        }\n"
                        ],
                        [
                            27,
                            "      }\n"
                        ],
                        [
                            28,
                            "    ]\n"
                        ],
                        [
                            29,
                            "}\n"
                        ],
                        [
                            30,
                            "EOF\n"
                        ],
                        [
                            31,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            32,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        6,
                        32
                    ],
                    "resource": "aws_s3_bucket_policy.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket_policy\" \"b\" {\n"
                        ],
                        [
                            7,
                            "  bucket = aws_s3_bucket.b.id\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  policy = <<EOF\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "    \"Id\": \"MYBUCKETPOLICY\",\n"
                        ],
                        [
                            13,
                            "    \"Statement\": [\n"
                        ],
                        [
                            14,
                            "      {\n"
                        ],
                        [
                            15,
                            "        \"Sid\": \"IPAllow\",\n"
                        ],
                        [
                            16,
                            "        \"Effect\": \"Deny\",\n"
                        ],
                        [
                            17,
                            "        \"Principal\": \"*\",\n"
                        ],
                        [
                            18,
                            "        \"Action\": \"s3:*\",\n"
                        ],
                        [
                            19,
                            "        \"Resource\": [\n"
                        ],
                        [
                            20,
                            "          \"aws_s3_bucket.b.arn\"\n"
                        ],
                        [
                            21,
                            "        ],\n"
                        ],
                        [
                            22,
                            "        \"Condition\": {\n"
                        ],
                        [
                            23,
                            "          \"IpAddress\": {\n"
                        ],
                        [
                            24,
                            "            \"aws:SourceIp\": \"8.8.8.8/32\"\n"
                        ],
                        [
                            25,
                            "          }\n"
                        ],
                        [
                            26,
                            "        }\n"
                        ],
                        [
                            27,
                            "      }\n"
                        ],
                        [
                            28,
                            "    ]\n"
                        ],
                        [
                            29,
                            "}\n"
                        ],
                        [
                            30,
                            "EOF\n"
                        ],
                        [
                            31,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            32,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        6,
                        32
                    ],
                    "resource": "aws_s3_bucket_policy.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "provider \"aws\" {\n"
                        ],
                        [
                            2,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            3,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        1,
                        3
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_53",
                    "bc_check_id": "BC_AWS_S3_19",
                    "check_name": "Ensure S3 bucket has block public ACLS enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket_public_access_block\" \"block_public_bucket_3\" {\n"
                        ],
                        [
                            12,
                            "  bucket                  = aws_s3_bucket.public_bucket.id\n"
                        ],
                        [
                            13,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            14,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            15,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            16,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            17,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        11,
                        18
                    ],
                    "resource": "aws_s3_bucket_public_access_block.block_public_bucket_3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_19"
                },
                {
                    "check_id": "CKV_AWS_54",
                    "bc_check_id": "BC_AWS_S3_20",
                    "check_name": "Ensure S3 bucket has block public policy enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket_public_access_block\" \"block_public_bucket_3\" {\n"
                        ],
                        [
                            12,
                            "  bucket                  = aws_s3_bucket.public_bucket.id\n"
                        ],
                        [
                            13,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            14,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            15,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            16,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            17,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        11,
                        18
                    ],
                    "resource": "aws_s3_bucket_public_access_block.block_public_bucket_3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_20"
                },
                {
                    "check_id": "CKV_AWS_55",
                    "bc_check_id": "BC_AWS_S3_21",
                    "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "ignore_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket_public_access_block\" \"block_public_bucket_3\" {\n"
                        ],
                        [
                            12,
                            "  bucket                  = aws_s3_bucket.public_bucket.id\n"
                        ],
                        [
                            13,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            14,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            15,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            16,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            17,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        11,
                        18
                    ],
                    "resource": "aws_s3_bucket_public_access_block.block_public_bucket_3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_21"
                },
                {
                    "check_id": "CKV_AWS_56",
                    "bc_check_id": "BC_AWS_S3_22",
                    "check_name": "Ensure S3 bucket has 'restrict_public_bucket' enabled",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "restrict_public_buckets"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket_public_access_block\" \"block_public_bucket_3\" {\n"
                        ],
                        [
                            12,
                            "  bucket                  = aws_s3_bucket.public_bucket.id\n"
                        ],
                        [
                            13,
                            "  block_public_acls       = true\n"
                        ],
                        [
                            14,
                            "  block_public_policy     = true\n"
                        ],
                        [
                            15,
                            "  ignore_public_acls      = true\n"
                        ],
                        [
                            16,
                            "  restrict_public_buckets = true\n"
                        ],
                        [
                            17,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        11,
                        18
                    ],
                    "resource": "aws_s3_bucket_public_access_block.block_public_bucket_3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_22"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_70",
                    "bc_check_id": "BC_AWS_S3_23",
                    "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_93",
                    "bc_check_id": "BC_AWS_S3_24",
                    "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "provider \"aws\" {\n"
                        ],
                        [
                            5,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "file_line_range": [
                        4,
                        6
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 44\n"
                        ],
                        [
                            9,
                            "    to_port     = 443\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  egress {\n"
                        ],
                        [
                            15,
                            "    from_port   = 0\n"
                        ],
                        [
                            16,
                            "    to_port     = 0\n"
                        ],
                        [
                            17,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            18,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "repo_file_path": "/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_line_range": [
                        1,
                        25
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 44\n"
                        ],
                        [
                            9,
                            "    to_port     = 443\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  egress {\n"
                        ],
                        [
                            15,
                            "    from_port   = 0\n"
                        ],
                        [
                            16,
                            "    to_port     = 0\n"
                        ],
                        [
                            17,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            18,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "repo_file_path": "/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_line_range": [
                        1,
                        25
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            42,
                            "  security_group_id = aws_security_group.bad_example.id\n"
                        ],
                        [
                            43,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            44,
                            "  cidr_blocks       = [\"172.31.0.0/16\"]\n"
                        ],
                        [
                            45,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            46,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        41,
                        46
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            42,
                            "  security_group_id = aws_security_group.bad_example.id\n"
                        ],
                        [
                            43,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            44,
                            "  cidr_blocks       = [\"172.31.0.0/16\"]\n"
                        ],
                        [
                            45,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            46,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        41,
                        46
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            11,
                            "  from_port         = 0\n"
                        ],
                        [
                            12,
                            "  to_port           = 65535\n"
                        ],
                        [
                            13,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            14,
                            "  cidr_blocks       = [aws_vpc.example.cidr_block]\n"
                        ],
                        [
                            15,
                            "  ipv6_cidr_blocks  = [aws_vpc.example.ipv6_cidr_block]\n"
                        ],
                        [
                            16,
                            "  security_group_id = \"sg-123456\"\n"
                        ],
                        [
                            17,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group_rule.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group_rule.tf",
                    "file_line_range": [
                        9,
                        18
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            11,
                            "  from_port         = 0\n"
                        ],
                        [
                            12,
                            "  to_port           = 65535\n"
                        ],
                        [
                            13,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            14,
                            "  cidr_blocks       = [aws_vpc.example.cidr_block]\n"
                        ],
                        [
                            15,
                            "  ipv6_cidr_blocks  = [aws_vpc.example.ipv6_cidr_block]\n"
                        ],
                        [
                            16,
                            "  security_group_id = \"sg-123456\"\n"
                        ],
                        [
                            17,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group_rule.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group_rule.tf",
                    "file_line_range": [
                        9,
                        18
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group\" \"allow_tls\" {\n"
                        ],
                        [
                            10,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            11,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            12,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    description      = \"TLS from VPC\"\n"
                        ],
                        [
                            16,
                            "    from_port        = 443\n"
                        ],
                        [
                            17,
                            "    to_port          = 443\n"
                        ],
                        [
                            18,
                            "    protocol         = \"tcp\"\n"
                        ],
                        [
                            19,
                            "    cidr_blocks      = [aws_vpc.main.cidr_block]\n"
                        ],
                        [
                            20,
                            "    ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  egress {\n"
                        ],
                        [
                            24,
                            "    from_port        = 0\n"
                        ],
                        [
                            25,
                            "    to_port          = 0\n"
                        ],
                        [
                            26,
                            "    protocol         = \"-1\"\n"
                        ],
                        [
                            27,
                            "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            28,
                            "    ipv6_cidr_blocks = [\"::/0\"]\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  tags = {\n"
                        ],
                        [
                            32,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            33,
                            "    test = \"fails\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        9,
                        35
                    ],
                    "resource": "aws_security_group.allow_tls",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group\" \"allow_tls\" {\n"
                        ],
                        [
                            10,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            11,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            12,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    description      = \"TLS from VPC\"\n"
                        ],
                        [
                            16,
                            "    from_port        = 443\n"
                        ],
                        [
                            17,
                            "    to_port          = 443\n"
                        ],
                        [
                            18,
                            "    protocol         = \"tcp\"\n"
                        ],
                        [
                            19,
                            "    cidr_blocks      = [aws_vpc.main.cidr_block]\n"
                        ],
                        [
                            20,
                            "    ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  egress {\n"
                        ],
                        [
                            24,
                            "    from_port        = 0\n"
                        ],
                        [
                            25,
                            "    to_port          = 0\n"
                        ],
                        [
                            26,
                            "    protocol         = \"-1\"\n"
                        ],
                        [
                            27,
                            "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            28,
                            "    ipv6_cidr_blocks = [\"::/0\"]\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  tags = {\n"
                        ],
                        [
                            32,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            33,
                            "    test = \"fails\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        9,
                        35
                    ],
                    "resource": "aws_security_group.allow_tls",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"http_positive_tcp_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Gets the HTTP port open with the tcp protocol\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  ingress {\n"
                        ],
                        [
                            6,
                            "    description = \"HTTP port open\"\n"
                        ],
                        [
                            7,
                            "    from_port   = 78\n"
                        ],
                        [
                            8,
                            "    to_port     = 91\n"
                        ],
                        [
                            9,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            10,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_http_port_open.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_http_port_open.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_http_port_open.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "description"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"http_positive_tcp_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Gets the HTTP port open with the tcp protocol\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  ingress {\n"
                        ],
                        [
                            6,
                            "    description = \"HTTP port open\"\n"
                        ],
                        [
                            7,
                            "    from_port   = 78\n"
                        ],
                        [
                            8,
                            "    to_port     = 91\n"
                        ],
                        [
                            9,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            10,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_http_port_open.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_http_port_open.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_http_port_open.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"http_positive_tcp_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Gets the HTTP port open with the tcp protocol\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  ingress {\n"
                        ],
                        [
                            6,
                            "    description = \"HTTP port open\"\n"
                        ],
                        [
                            7,
                            "    from_port   = 78\n"
                        ],
                        [
                            8,
                            "    to_port     = 91\n"
                        ],
                        [
                            9,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            10,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_http_port_open.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_http_port_open.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_http_port_open.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_line_range": [
                        1,
                        16
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "description"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_line_range": [
                        1,
                        16
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_entire_network.tf",
                    "file_line_range": [
                        1,
                        16
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"12.0.0.0/25\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "description"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"12.0.0.0/25\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"12.0.0.0/25\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_small_public_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"10.0.0.0/8\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "description"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"10.0.0.0/8\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2200\n"
                        ],
                        [
                            9,
                            "    to_port     = 2500\n"
                        ],
                        [
                            10,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"10.0.0.0/8\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sensitive_port_is_exposed_to_wide_private_network.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2300\n"
                        ],
                        [
                            9,
                            "    to_port     = 2400\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "description"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2300\n"
                        ],
                        [
                            9,
                            "    to_port     = 2400\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 2300\n"
                        ],
                        [
                            9,
                            "    to_port     = 2400\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/security_groups/sql_analysis_services_port_2383_is_publicly_accessible.tf",
                    "file_line_range": [
                        1,
                        14
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group_rule\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            3,
                            "  from_port         = 3306\n"
                        ],
                        [
                            4,
                            "  to_port           = 3306\n"
                        ],
                        [
                            5,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            6,
                            "  cidr_blocks       = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            7,
                            "  security_group_id = aws_security_group.default.id\n"
                        ],
                        [
                            8,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/unrestricted_security_group_ingress.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "repo_file_path": "/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_security_group_rule.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "from_port",
                            "to_port",
                            "cidr_blocks",
                            "ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group_rule\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            3,
                            "  from_port         = 3306\n"
                        ],
                        [
                            4,
                            "  to_port           = 3306\n"
                        ],
                        [
                            5,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            6,
                            "  cidr_blocks       = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            7,
                            "  security_group_id = aws_security_group.default.id\n"
                        ],
                        [
                            8,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/unrestricted_security_group_ingress.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "repo_file_path": "/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_security_group_rule.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_169",
                    "bc_check_id": "BC_AWS_GENERAL_92",
                    "check_name": "Ensure SNS topic policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_sns_topic_policy\" \"positive2\" {\n"
                        ],
                        [
                            7,
                            "  arn = aws_sns_topic.test.arn\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "  \"Id\": \"MYPOLICYTEST\",\n"
                        ],
                        [
                            13,
                            "  \"Statement\": [\n"
                        ],
                        [
                            14,
                            "    {\n"
                        ],
                        [
                            15,
                            "      \"NotAction\": \"s3:DeleteBucket\",\n"
                        ],
                        [
                            16,
                            "      \"Resource\": \"arn:aws:s3:::*\",\n"
                        ],
                        [
                            17,
                            "      \"Sid\": \"MyStatementId\",\n"
                        ],
                        [
                            18,
                            "      \"Effect\": \"Allow\"\n"
                        ],
                        [
                            19,
                            "    }\n"
                        ],
                        [
                            20,
                            "  ]\n"
                        ],
                        [
                            21,
                            "}\n"
                        ],
                        [
                            22,
                            "POLICY\n"
                        ],
                        [
                            23,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "repo_file_path": "/terraform/aws/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "file_line_range": [
                        6,
                        24
                    ],
                    "resource": "aws_sns_topic_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SNSTopicPolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sns-topic-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_168",
                    "bc_check_id": "BC_AWS_GENERAL_91",
                    "check_name": "Ensure SQS queue policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_sqs_queue\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"examplequeue\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "  \"Id\": \"sqspolicy\",\n"
                        ],
                        [
                            11,
                            "  \"Statement\": [\n"
                        ],
                        [
                            12,
                            "    {\n"
                        ],
                        [
                            13,
                            "      \"Sid\": \"First\",\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            16,
                            "      \"Action\": \"sqs:SendMessage\",\n"
                        ],
                        [
                            17,
                            "      \"Resource\": \"${aws_sqs_queue.q.arn}\",\n"
                        ],
                        [
                            18,
                            "      \"Condition\": {\n"
                        ],
                        [
                            19,
                            "        \"ArnEquals\": {\n"
                        ],
                        [
                            20,
                            "          \"aws:SourceArn\": \"${aws_sns_topic.example.arn}\"\n"
                        ],
                        [
                            21,
                            "        }\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  ]\n"
                        ],
                        [
                            25,
                            "}\n"
                        ],
                        [
                            26,
                            "POLICY\n"
                        ],
                        [
                            27,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            28,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue_exposed.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue_exposed.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue_exposed.tf",
                    "file_line_range": [
                        4,
                        28
                    ],
                    "resource": "aws_sqs_queue.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueuePolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_72",
                    "bc_check_id": "BC_AWS_IAM_46",
                    "check_name": "Ensure SQS policy does not allow ALL (*) actions.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sqs_queue_policy\" \"fail_policy\" {\n"
                        ],
                        [
                            6,
                            "  queue_url = aws_sqs_queue.fail.id\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            9,
                            "{\n"
                        ],
                        [
                            10,
                            "    \"Version\":\"2012-10-17\",\n"
                        ],
                        [
                            11,
                            "    \"Statement\":[\n"
                        ],
                        [
                            12,
                            "       {\n"
                        ],
                        [
                            13,
                            "           \"Principal\": {\n"
                        ],
                        [
                            14,
                            "            \"AWS\": [,\n"
                        ],
                        [
                            15,
                            "                \"*\"\n"
                        ],
                        [
                            16,
                            "            ]\n"
                        ],
                        [
                            17,
                            "          },\n"
                        ],
                        [
                            18,
                            "          \"Effect\": \"Allow\",\n"
                        ],
                        [
                            19,
                            "          \"Action\": \"*\",\n"
                        ],
                        [
                            20,
                            "          \"Resource\": \"${aws_sqs_queue_policy.fail_policy.arn}\"\n"
                        ],
                        [
                            21,
                            "       }\n"
                        ],
                        [
                            22,
                            "    ]\n"
                        ],
                        [
                            23,
                            "}\n"
                        ],
                        [
                            24,
                            "POLICY\n"
                        ],
                        [
                            25,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue_policy.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue_policy.tf",
                    "file_line_range": [
                        5,
                        26
                    ],
                    "resource": "aws_sqs_queue_policy.fail_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_46"
                },
                {
                    "check_id": "CKV_AWS_130",
                    "bc_check_id": "BC_AWS_NETWORKING_53",
                    "check_name": "Ensure VPC subnets do not assign public IP by default",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "map_public_ip_on_launch"
                        ]
                    },
                    "code_block": [
                        [
                            19,
                            "resource \"aws_subnet\" \"public_subnet\" {\n"
                        ],
                        [
                            20,
                            "  vpc_id     = aws_vpc.main.id\n"
                        ],
                        [
                            21,
                            "  cidr_block = local.public_subnet_cidr_block\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  tags = {\n"
                        ],
                        [
                            24,
                            "    Name = \"public-subnet\"\n"
                        ],
                        [
                            25,
                            "    test = \"fail\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        19,
                        27
                    ],
                    "resource": "aws_subnet.public_subnet",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "public-subnet",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "locals",
                                "name": "public_subnet_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            53,
                            "resource \"aws_security_group\" \"public_internet_sg\" {\n"
                        ],
                        [
                            54,
                            "  name        = \"public-internet-sg\"\n"
                        ],
                        [
                            55,
                            "  description = \"Allow all local traffic with internet access\"\n"
                        ],
                        [
                            56,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  egress {\n"
                        ],
                        [
                            59,
                            "    from_port   = 0\n"
                        ],
                        [
                            60,
                            "    to_port     = 0\n"
                        ],
                        [
                            61,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            62,
                            "    cidr_blocks = [local.quad_zero_cidr_block]\n"
                        ],
                        [
                            63,
                            "  }\n"
                        ],
                        [
                            64,
                            "\n"
                        ],
                        [
                            65,
                            "  ingress {\n"
                        ],
                        [
                            66,
                            "    from_port   = 0\n"
                        ],
                        [
                            67,
                            "    to_port     = 0\n"
                        ],
                        [
                            68,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            69,
                            "    cidr_blocks = [local.cidr_block]\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        53,
                        72
                    ],
                    "resource": "aws_security_group.public_internet_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "ingress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            53,
                            "resource \"aws_security_group\" \"public_internet_sg\" {\n"
                        ],
                        [
                            54,
                            "  name        = \"public-internet-sg\"\n"
                        ],
                        [
                            55,
                            "  description = \"Allow all local traffic with internet access\"\n"
                        ],
                        [
                            56,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  egress {\n"
                        ],
                        [
                            59,
                            "    from_port   = 0\n"
                        ],
                        [
                            60,
                            "    to_port     = 0\n"
                        ],
                        [
                            61,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            62,
                            "    cidr_blocks = [local.quad_zero_cidr_block]\n"
                        ],
                        [
                            63,
                            "  }\n"
                        ],
                        [
                            64,
                            "\n"
                        ],
                        [
                            65,
                            "  ingress {\n"
                        ],
                        [
                            66,
                            "    from_port   = 0\n"
                        ],
                        [
                            67,
                            "    to_port     = 0\n"
                        ],
                        [
                            68,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            69,
                            "    cidr_blocks = [local.cidr_block]\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        53,
                        72
                    ],
                    "resource": "aws_security_group.public_internet_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "ingress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_168",
                    "bc_check_id": "BC_AWS_GENERAL_91",
                    "check_name": "Ensure SQS queue policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            108,
                            "resource \"aws_sqs_queue\" \"test_queue\" {\n"
                        ],
                        [
                            109,
                            "  name = \"test-queue\"\n"
                        ],
                        [
                            110,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            111,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        108,
                        111
                    ],
                    "resource": "aws_sqs_queue.test_queue",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueuePolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "provider \"aws\" {\n"
                        ],
                        [
                            9,
                            "  region = local.region\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        8,
                        10
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_130",
                    "bc_check_id": "BC_AWS_NETWORKING_53",
                    "check_name": "Ensure VPC subnets do not assign public IP by default",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "map_public_ip_on_launch"
                        ]
                    },
                    "code_block": [
                        [
                            50,
                            "resource \"aws_subnet\" \"public\" {\n"
                        ],
                        [
                            51,
                            "  vpc_id            = aws_vpc.vpc1.id\n"
                        ],
                        [
                            52,
                            "  cidr_block        = var.vpc_cidr_public_block\n"
                        ],
                        [
                            53,
                            "  availability_zone = \"us-east-1a\"\n"
                        ],
                        [
                            54,
                            "\n"
                        ],
                        [
                            55,
                            "  tags = {\n"
                        ],
                        [
                            56,
                            "    Name    = \"public-subnet-1\"\n"
                        ],
                        [
                            57,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            58,
                            "  }\n"
                        ],
                        [
                            59,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        50,
                        59
                    ],
                    "resource": "aws_subnet.public",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "public-subnet-1",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_cidr_public_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
                },
                {
                    "check_id": "CKV_AWS_130",
                    "bc_check_id": "BC_AWS_NETWORKING_53",
                    "check_name": "Ensure VPC subnets do not assign public IP by default",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": [
                            "map_public_ip_on_launch"
                        ]
                    },
                    "code_block": [
                        [
                            61,
                            "resource \"aws_subnet\" \"private\" {\n"
                        ],
                        [
                            62,
                            "  vpc_id            = aws_vpc.vpc1.id\n"
                        ],
                        [
                            63,
                            "  cidr_block        = var.vpc_cidr_private_block\n"
                        ],
                        [
                            64,
                            "  availability_zone = \"us-east-1a\"\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "  tags = {\n"
                        ],
                        [
                            67,
                            "    Name    = \"private-subnet-1\"\n"
                        ],
                        [
                            68,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        61,
                        70
                    ],
                    "resource": "aws_subnet.private",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "private-subnet-1",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_cidr_private_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "PASSED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            13,
                            "provider \"aws\" {\n"
                        ],
                        [
                            14,
                            "  region = \"us-east-1\"\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        13,
                        15
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_security_group": {
                                "allow_public_outbound_sg": {
                                    "description": [
                                        "Allow HTTPS outbound traffic"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "${local.s3_prefix_list_cidr_block}"
                                                ]
                                            ],
                                            "from_port": [
                                                443
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "to_port": [
                                                443
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "allow-public-outbound-sg"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            61,
                            "resource \"aws_security_group\" \"allow_public_outbound_sg\" {\n"
                        ],
                        [
                            62,
                            "  name        = \"allow-public-outbound-sg\"\n"
                        ],
                        [
                            63,
                            "  description = \"Allow HTTPS outbound traffic\"\n"
                        ],
                        [
                            64,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "  egress {\n"
                        ],
                        [
                            67,
                            "    from_port   = 443\n"
                        ],
                        [
                            68,
                            "    to_port     = 443\n"
                        ],
                        [
                            69,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            70,
                            "    cidr_blocks = [local.s3_prefix_list_cidr_block]\n"
                        ],
                        [
                            71,
                            "  }\n"
                        ],
                        [
                            72,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            73,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        61,
                        73
                    ],
                    "resource": "aws_security_group.allow_public_outbound_sg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_security_group": {
                                "public_internet_sg": {
                                    "description": [
                                        "Allow all local traffic with internet access"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "${local.quad_zero_cidr_block}"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "${local.cidr_block}"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "public-internet-sg"
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            53,
                            "resource \"aws_security_group\" \"public_internet_sg\" {\n"
                        ],
                        [
                            54,
                            "  name        = \"public-internet-sg\"\n"
                        ],
                        [
                            55,
                            "  description = \"Allow all local traffic with internet access\"\n"
                        ],
                        [
                            56,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  egress {\n"
                        ],
                        [
                            59,
                            "    from_port   = 0\n"
                        ],
                        [
                            60,
                            "    to_port     = 0\n"
                        ],
                        [
                            61,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            62,
                            "    cidr_blocks = [local.quad_zero_cidr_block]\n"
                        ],
                        [
                            63,
                            "  }\n"
                        ],
                        [
                            64,
                            "\n"
                        ],
                        [
                            65,
                            "  ingress {\n"
                        ],
                        [
                            66,
                            "    from_port   = 0\n"
                        ],
                        [
                            67,
                            "    to_port     = 0\n"
                        ],
                        [
                            68,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            69,
                            "    cidr_blocks = [local.cidr_block]\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        53,
                        72
                    ],
                    "resource": "aws_security_group.public_internet_sg",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "ingress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
                },
                {
                    "check_id": "CKV2_AWS_35",
                    "bc_check_id": null,
                    "check_name": "AWS NAT Gateways should be utilized for the default route",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route_table": {
                                "private_rtb": {
                                    "tags": [
                                        {
                                            "Name": "private-rtb",
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "route/*/cidr_block",
                            "route/*/instance_id",
                            "instance_id",
                            "destination_cidr_block"
                        ]
                    },
                    "code_block": [
                        [
                            27,
                            "resource \"aws_route_table\" \"private_rtb\" {\n"
                        ],
                        [
                            28,
                            "  vpc_id = aws_vpc.main.id\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  tags = {\n"
                        ],
                        [
                            31,
                            "    Name = \"private-rtb\"\n"
                        ],
                        [
                            32,
                            "    test = \"fail\"\n"
                        ],
                        [
                            33,
                            "  }\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        27,
                        34
                    ],
                    "resource": "aws_route_table.private_rtb",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "private-rtb",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV2_AWS_35",
                    "bc_check_id": null,
                    "check_name": "AWS NAT Gateways should be utilized for the default route",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route_table": {
                                "public_rtb": {
                                    "route": [
                                        {
                                            "cidr_block": [
                                                "${local.cidr_block}"
                                            ],
                                            "vpc_endpoint_id": [
                                                "${aws_vpc_endpoint.sqs_vpc_endpoint.id}"
                                            ]
                                        },
                                        {
                                            "cidr_block": [
                                                "0.0.0.0/0"
                                            ],
                                            "gateway_id": [
                                                "${aws_internet_gateway.igw.id}"
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Name": "public-rtb",
                                            "test": "fails"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "route/*/cidr_block",
                            "route/*/instance_id",
                            "instance_id",
                            "destination_cidr_block"
                        ]
                    },
                    "code_block": [
                        [
                            29,
                            "resource \"aws_route_table\" \"public_rtb\" {\n"
                        ],
                        [
                            30,
                            "  vpc_id = aws_vpc.main.id\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  route {\n"
                        ],
                        [
                            33,
                            "    cidr_block      = local.cidr_block\n"
                        ],
                        [
                            34,
                            "    vpc_endpoint_id = aws_vpc_endpoint.sqs_vpc_endpoint.id\n"
                        ],
                        [
                            35,
                            "  }\n"
                        ],
                        [
                            36,
                            "\n"
                        ],
                        [
                            37,
                            "  route {\n"
                        ],
                        [
                            38,
                            "    cidr_block = \"0.0.0.0/0\"\n"
                        ],
                        [
                            39,
                            "    gateway_id = aws_internet_gateway.igw.id\n"
                        ],
                        [
                            40,
                            "  }\n"
                        ],
                        [
                            41,
                            "\n"
                        ],
                        [
                            42,
                            "  tags = {\n"
                        ],
                        [
                            43,
                            "    Name = \"public-rtb\"\n"
                        ],
                        [
                            44,
                            "    test = \"fails\"\n"
                        ],
                        [
                            45,
                            "  }\n"
                        ],
                        [
                            46,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        29,
                        46
                    ],
                    "resource": "aws_route_table.public_rtb",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "public-rtb",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "route.0.cidr_block": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "route.0": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": null
                },
                {
                    "check_id": "CKV2_AWS_35",
                    "bc_check_id": null,
                    "check_name": "AWS NAT Gateways should be utilized for the default route",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route_table": {
                                "public_route_table": {
                                    "route": [
                                        {
                                            "cidr_block": [
                                                "0.0.0.0/0"
                                            ],
                                            "vpc_peering_connection_id": [
                                                "aws_vpc_peering_connection.my_peering.id"
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Name": "public_route_table",
                                            "Project": "CIS Certification"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.vpc1.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "route/*/cidr_block",
                            "route/*/instance_id",
                            "instance_id",
                            "destination_cidr_block"
                        ]
                    },
                    "code_block": [
                        [
                            120,
                            "resource \"aws_route_table\" \"public_route_table\" {\n"
                        ],
                        [
                            121,
                            "  vpc_id = aws_vpc.vpc1.id\n"
                        ],
                        [
                            122,
                            "\n"
                        ],
                        [
                            123,
                            "  route {\n"
                        ],
                        [
                            124,
                            "    cidr_block                = \"0.0.0.0/0\"\n"
                        ],
                        [
                            125,
                            "    vpc_peering_connection_id = aws_vpc_peering_connection.my_peering.id\n"
                        ],
                        [
                            126,
                            "  }\n"
                        ],
                        [
                            127,
                            "\n"
                        ],
                        [
                            128,
                            "  tags = {\n"
                        ],
                        [
                            129,
                            "    Name    = \"public_route_table\"\n"
                        ],
                        [
                            130,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            131,
                            "  }\n"
                        ],
                        [
                            132,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        120,
                        132
                    ],
                    "resource": "aws_route_table.public_route_table",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "public_route_table",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV2_AWS_35",
                    "bc_check_id": null,
                    "check_name": "AWS NAT Gateways should be utilized for the default route",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_route_table": {
                                "private_route_table": {
                                    "route": [
                                        {
                                            "cidr_block": [
                                                "10.2.0.0/16"
                                            ],
                                            "vpc_peering_connection_id": [
                                                "aws_vpc_peering_connection.my_peering.id"
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Name": "private_route_table",
                                            "Project": "CIS Certification"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.vpc1.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "route/*/cidr_block",
                            "route/*/instance_id",
                            "instance_id",
                            "destination_cidr_block"
                        ]
                    },
                    "code_block": [
                        [
                            134,
                            "resource \"aws_route_table\" \"private_route_table\" {\n"
                        ],
                        [
                            135,
                            "  vpc_id = aws_vpc.vpc1.id\n"
                        ],
                        [
                            136,
                            "\n"
                        ],
                        [
                            137,
                            "  route {\n"
                        ],
                        [
                            138,
                            "    cidr_block                = aws_vpc.vpc2.cidr_block\n"
                        ],
                        [
                            139,
                            "    vpc_peering_connection_id = aws_vpc_peering_connection.my_peering.id\n"
                        ],
                        [
                            140,
                            "  }\n"
                        ],
                        [
                            141,
                            "\n"
                        ],
                        [
                            142,
                            "  tags = {\n"
                        ],
                        [
                            143,
                            "    Name    = \"private_route_table\"\n"
                        ],
                        [
                            144,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            145,
                            "  }\n"
                        ],
                        [
                            146,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        134,
                        146
                    ],
                    "resource": "aws_route_table.private_route_table",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "private_route_table",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "route.cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_2_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_vpc.vpc2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": null
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "default": {
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "network"
                                    ],
                                    "name": [
                                        "nlb"
                                    ],
                                    "subnets": [
                                        "var.public_subnet_ids"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "default_action/redirect/*/protocol",
                            "port",
                            "default_action/type",
                            "protocol",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            23,
                            "resource \"aws_lb\" \"default\" {\n"
                        ],
                        [
                            24,
                            "  internal           = false\n"
                        ],
                        [
                            25,
                            "  load_balancer_type = \"network\"\n"
                        ],
                        [
                            26,
                            "  name               = \"nlb\"\n"
                        ],
                        [
                            27,
                            "  subnets            = var.public_subnet_ids\n"
                        ],
                        [
                            28,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        23,
                        29
                    ],
                    "resource": "aws_lb.default",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_alb": {
                                "fail": {
                                    "drop_invalid_header_fields": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "bad_alb"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "default_action/redirect/*/protocol",
                            "port",
                            "default_action/type",
                            "protocol",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_alb\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  name               = \"bad_alb\"\n"
                        ],
                        [
                            14,
                            "  internal           = false\n"
                        ],
                        [
                            15,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  # access_logs {\n"
                        ],
                        [
                            18,
                            "  #   bucket  = aws_s3_bucket.lb_logs.bucket\n"
                        ],
                        [
                            19,
                            "  #   prefix  = \"test-lb\"\n"
                        ],
                        [
                            20,
                            "  #   enabled = true\n"
                        ],
                        [
                            21,
                            "  # }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  drop_invalid_header_fields = false\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb.tf",
                    "repo_file_path": "/terraform/aws/elb/alb.tf",
                    "file_line_range": [
                        12,
                        27
                    ],
                    "resource": "aws_alb.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_alb": {
                                "disabled": {
                                    "enable_cross_zone_load_balancing": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "alb"
                                    ],
                                    "subnets": [
                                        "var.public_subnet_ids"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "default_action/redirect/*/protocol",
                            "port",
                            "default_action/type",
                            "protocol",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_alb\" \"disabled\" {\n"
                        ],
                        [
                            15,
                            "  internal                         = false\n"
                        ],
                        [
                            16,
                            "  load_balancer_type               = \"application\"\n"
                        ],
                        [
                            17,
                            "  name                             = \"alb\"\n"
                        ],
                        [
                            18,
                            "  subnets                          = var.public_subnet_ids\n"
                        ],
                        [
                            19,
                            "  enable_cross_zone_load_balancing = false\n"
                        ],
                        [
                            20,
                            "  tags                             = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        14,
                        21
                    ],
                    "resource": "aws_alb.disabled",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "test": {
                                    "internal": [
                                        true
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "test"
                                    ],
                                    "subnets": [
                                        [
                                            "aws_subnet.subnet1.id",
                                            "aws_subnet.subnet2.id"
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "default_action/redirect/*/protocol",
                            "port",
                            "default_action/type",
                            "protocol",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lb\" \"test\" {\n"
                        ],
                        [
                            2,
                            "  name               = \"test\"\n"
                        ],
                        [
                            3,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            4,
                            "  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]\n"
                        ],
                        [
                            5,
                            "  internal           = true\n"
                        ],
                        [
                            6,
                            "  tags               = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        1,
                        7
                    ],
                    "resource": "aws_lb.test",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "fail_key": {
                                    "name": [
                                        "loadbalancer"
                                    ],
                                    "path": [
                                        "/system/"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_iam_user\" \"fail_key\" {\n"
                        ],
                        [
                            9,
                            "  name = \"loadbalancer\"\n"
                        ],
                        [
                            10,
                            "  path = \"/system/\"\n"
                        ],
                        [
                            11,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_root_account_has_active_access_keys.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "file_line_range": [
                        8,
                        12
                    ],
                    "resource": "aws_iam_user.fail_key",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "user_one2": {
                                    "name": [
                                        "test-user"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_iam_user\" \"user_one2\" {\n"
                        ],
                        [
                            18,
                            "  name = \"test-user\"\n"
                        ],
                        [
                            19,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        17,
                        20
                    ],
                    "resource": "aws_iam_user.user_one2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "positive1_1": {
                                    "force_destroy": [
                                        true
                                    ],
                                    "name": [
                                        "local.resource_prefix.value-user"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "local.resource_prefix.value",
                                            "Name": "local.resource_prefix.value-user"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_user\" \"positive1_1\" {\n"
                        ],
                        [
                            2,
                            "  name          = \"${local.resource_prefix.value}-user\"\n"
                        ],
                        [
                            3,
                            "  force_destroy = true\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"${local.resource_prefix.value}-user\"\n"
                        ],
                        [
                            7,
                            "    Environment = local.resource_prefix.value\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policies_attached_to_user.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policies_attached_to_user.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policies_attached_to_user.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_user.positive1_1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "local.resource_prefix.value",
                        "Name": "local.resource_prefix.value-user"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "user_two2": {
                                    "name": [
                                        "test-user-two"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            22,
                            "resource \"aws_iam_user\" \"user_two2\" {\n"
                        ],
                        [
                            23,
                            "  name = \"test-user-two\"\n"
                        ],
                        [
                            24,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        22,
                        25
                    ],
                    "resource": "aws_iam_user.user_two2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "positive1": {
                                    "force_destroy": [
                                        true
                                    ],
                                    "name": [
                                        "local.resource_prefix.value-user"
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "local.resource_prefix.value",
                                            "Name": "local.resource_prefix.value-user"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_user\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name          = \"${local.resource_prefix.value}-user\"\n"
                        ],
                        [
                            3,
                            "  force_destroy = true\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"${local.resource_prefix.value}-user\"\n"
                        ],
                        [
                            7,
                            "    Environment = local.resource_prefix.value\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_user.positive1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "local.resource_prefix.value",
                        "Name": "local.resource_prefix.value-user"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_iam_user": {
                                "fail_mfa": {
                                    "name": [
                                        "root"
                                    ],
                                    "path": [
                                        "/system/"
                                    ],
                                    "tags": [
                                        {
                                            "tag-key": "tag-value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_user\" \"fail_mfa\" {\n"
                        ],
                        [
                            2,
                            "  name = \"root\"\n"
                        ],
                        [
                            3,
                            "  path = \"/system/\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            7,
                            "  }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_user_policy_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "file_line_range": [
                        1,
                        8
                    ],
                    "resource": "aws_iam_user.fail_mfa",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_1",
                    "bc_check_id": "BC_AWS_NETWORKING_50",
                    "check_name": "Ensure that all NACL are attached to subnets",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_network_acl": {
                                "allow_public_outbound_nacl": {
                                    "egress": [
                                        {
                                            "action": [
                                                "allow"
                                            ],
                                            "cidr_block": [
                                                "3.218.183.128/25"
                                            ],
                                            "from_port": [
                                                443
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "rule_no": [
                                                200
                                            ],
                                            "to_port": [
                                                443
                                            ]
                                        }
                                    ],
                                    "subnet_ids": [
                                        [
                                            "aws_subnet.private_subnet.id"
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "Name": "allow-public-outbound-nacl",
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking",
                            "subnet_ids"
                        ]
                    },
                    "code_block": [
                        [
                            42,
                            "resource \"aws_network_acl\" \"allow_public_outbound_nacl\" {\n"
                        ],
                        [
                            43,
                            "  vpc_id     = aws_vpc.main.id\n"
                        ],
                        [
                            44,
                            "  subnet_ids = [aws_subnet.private_subnet.id]\n"
                        ],
                        [
                            45,
                            "\n"
                        ],
                        [
                            46,
                            "  egress {\n"
                        ],
                        [
                            47,
                            "    protocol   = \"tcp\"\n"
                        ],
                        [
                            48,
                            "    rule_no    = 200\n"
                        ],
                        [
                            49,
                            "    action     = \"allow\"\n"
                        ],
                        [
                            50,
                            "    cidr_block = local.s3_prefix_list_cidr_block\n"
                        ],
                        [
                            51,
                            "    from_port  = 443\n"
                        ],
                        [
                            52,
                            "    to_port    = 443\n"
                        ],
                        [
                            53,
                            "  }\n"
                        ],
                        [
                            54,
                            "\n"
                        ],
                        [
                            55,
                            "  tags = {\n"
                        ],
                        [
                            56,
                            "    Name = \"allow-public-outbound-nacl\"\n"
                        ],
                        [
                            57,
                            "    test = \"fail\"\n"
                        ],
                        [
                            58,
                            "  }\n"
                        ],
                        [
                            59,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        42,
                        59
                    ],
                    "resource": "aws_network_acl.allow_public_outbound_nacl",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow-public-outbound-nacl",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "egress.cidr_block": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets"
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_s3_bucket": {
                                "public_bucket": {
                                    "acl": [
                                        "public-read-write"
                                    ],
                                    "bucket": [
                                        "bucket-with-public-acl-3"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "block_public_acls",
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "test": {
                                    "internal": [
                                        true
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "test"
                                    ],
                                    "subnets": [
                                        [
                                            "aws_subnet.subnet1.id",
                                            "aws_subnet.subnet2.id"
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "load_balancer_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lb\" \"test\" {\n"
                        ],
                        [
                            2,
                            "  name               = \"test\"\n"
                        ],
                        [
                            3,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            4,
                            "  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]\n"
                        ],
                        [
                            5,
                            "  internal           = true\n"
                        ],
                        [
                            6,
                            "  tags               = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        1,
                        7
                    ],
                    "resource": "aws_lb.test",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_lb": {
                                "default": {
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "network"
                                    ],
                                    "name": [
                                        "nlb"
                                    ],
                                    "subnets": [
                                        "var.public_subnet_ids"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "load_balancer_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            23,
                            "resource \"aws_lb\" \"default\" {\n"
                        ],
                        [
                            24,
                            "  internal           = false\n"
                        ],
                        [
                            25,
                            "  load_balancer_type = \"network\"\n"
                        ],
                        [
                            26,
                            "  name               = \"nlb\"\n"
                        ],
                        [
                            27,
                            "  subnets            = var.public_subnet_ids\n"
                        ],
                        [
                            28,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        23,
                        29
                    ],
                    "resource": "aws_lb.default",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_29",
                    "bc_check_id": "BC_AWS_NETWORKING_59",
                    "check_name": "Ensure public API gateway are protected by WAF",
                    "check_result": {
                        "result": "PASSED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "fail": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.fail.id"
                                    ],
                                    "stage_name": [
                                        "example"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "xray_tracing_enabled": [
                                        false
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "endpoint_configuration/types"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  deployment_id        = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            15,
                            "  rest_api_id          = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            16,
                            "  stage_name           = \"example\"\n"
                        ],
                        [
                            17,
                            "  xray_tracing_enabled = false\n"
                        ],
                        [
                            18,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_line_range": [
                        13,
                        19
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf"
                }
            ],
            "failed_checks": [
                {
                    "check_id": "CKV_AWS_205",
                    "bc_check_id": null,
                    "check_name": "Ensure to Limit AMI launch Permissions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_ami_launch_permission\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  image_id   = \"ami-2345678\"\n"
                        ],
                        [
                            6,
                            "  account_id = \"987654321\"\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ami/ami_shared_with_multiple_accounts.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ami/ami_shared_with_multiple_accounts.tf",
                    "repo_file_path": "/terraform/aws/ami/ami_shared_with_multiple_accounts.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_ami_launch_permission.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AMILaunchIsShared",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_204",
                    "bc_check_id": null,
                    "check_name": "Ensure AMIs are encrypted using KMS CMKs",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ami\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name                = \"terraform-example\"\n"
                        ],
                        [
                            5,
                            "  virtualization_type = \"hvm\"\n"
                        ],
                        [
                            6,
                            "  root_device_name    = \"/dev/xvda\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_block_device {\n"
                        ],
                        [
                            9,
                            "    device_name = \"/dev/xvda\"\n"
                        ],
                        [
                            10,
                            "    volume_size = 8\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = {\n"
                        ],
                        [
                            13,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ami/notencrypted.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ami/notencrypted.tf",
                    "repo_file_path": "/terraform/aws/ami/notencrypted.tf",
                    "file_line_range": [
                        3,
                        15
                    ],
                    "resource": "aws_ami.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AMIEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            13,
                            "  rest_api_id   = aws_api_gateway_rest_api.example.id\n"
                        ],
                        [
                            14,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            15,
                            "  # access_log_settings {\n"
                        ],
                        [
                            16,
                            "  #   destination_arn = \"dest\"\n"
                        ],
                        [
                            17,
                            "  #   format = \"format\"\n"
                        ],
                        [
                            18,
                            "  # }\n"
                        ],
                        [
                            19,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_line_range": [
                        11,
                        20
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            13,
                            "  rest_api_id   = aws_api_gateway_rest_api.example.id\n"
                        ],
                        [
                            14,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            15,
                            "  # access_log_settings {\n"
                        ],
                        [
                            16,
                            "  #   destination_arn = \"dest\"\n"
                        ],
                        [
                            17,
                            "  #   format = \"format\"\n"
                        ],
                        [
                            18,
                            "  # }\n"
                        ],
                        [
                            19,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_line_range": [
                        11,
                        20
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            13,
                            "  rest_api_id   = aws_api_gateway_rest_api.example.id\n"
                        ],
                        [
                            14,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            15,
                            "  # access_log_settings {\n"
                        ],
                        [
                            16,
                            "  #   destination_arn = \"dest\"\n"
                        ],
                        [
                            17,
                            "  #   format = \"format\"\n"
                        ],
                        [
                            18,
                            "  # }\n"
                        ],
                        [
                            19,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-deployment/api_gateway_deployment_without_access_log_setting.tf",
                    "file_line_range": [
                        11,
                        20
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_206",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway Domain uses a modern security Policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "security_policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_api_gateway_domain_name\" \"fail\" {\n"
                        ],
                        [
                            7,
                            "  security_policy = \"TLS_1_0\"\n"
                        ],
                        [
                            8,
                            "  domain_name     = \"FreeBeer\"\n"
                        ],
                        [
                            9,
                            "  tags            = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-domain-name/api_gateway_domain_name.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-domain-name/api_gateway_domain_name.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-domain-name/api_gateway_domain_name.tf",
                    "file_line_range": [
                        6,
                        10
                    ],
                    "resource": "aws_api_gateway_domain_name.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayDomainNameTLS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_59",
                    "bc_check_id": "BC_AWS_PUBLIC_6",
                    "check_name": "Ensure there is no open access to back-end resources through API",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "http_method",
                            "authorization",
                            "api_key_required"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_api_gateway_method\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            6,
                            "  resource_id   = aws_api_gateway_resource.fail.id\n"
                        ],
                        [
                            7,
                            "  http_method   = \"GET\"\n"
                        ],
                        [
                            8,
                            "  authorization = \"NONE\"\n"
                        ],
                        [
                            9,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-method/api_gateway_method.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-method/api_gateway_method.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-method/api_gateway_method.tf",
                    "file_line_range": [
                        4,
                        10
                    ],
                    "resource": "aws_api_gateway_method.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAuthorization",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set"
                },
                {
                    "check_id": "CKV_AWS_59",
                    "bc_check_id": "BC_AWS_PUBLIC_6",
                    "check_name": "Ensure there is no open access to back-end resources through API",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "http_method",
                            "authorization",
                            "api_key_required"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_method\" \"positive3\" {\n"
                        ],
                        [
                            21,
                            "  rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id\n"
                        ],
                        [
                            22,
                            "  resource_id = aws_api_gateway_resource.MyDemoResource.id\n"
                        ],
                        [
                            23,
                            "  http_method = \"GET\"\n"
                        ],
                        [
                            24,
                            "  # http_method   = \"OPTIONS\"\n"
                        ],
                        [
                            25,
                            "  authorization = \"NONE\"\n"
                        ],
                        [
                            26,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-resource/open_access_to_resources_through_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-resource/open_access_to_resources_through_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-resource/open_access_to_resources_through_api.tf",
                    "file_line_range": [
                        20,
                        27
                    ],
                    "resource": "aws_api_gateway_method.positive3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAuthorization",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set"
                },
                {
                    "check_id": "CKV_AWS_59",
                    "bc_check_id": "BC_AWS_PUBLIC_6",
                    "check_name": "Ensure there is no open access to back-end resources through API",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "http_method",
                            "authorization",
                            "api_key_required"
                        ]
                    },
                    "code_block": [
                        [
                            55,
                            "resource \"aws_api_gateway_method\" \"api_gw_method\" {\n"
                        ],
                        [
                            56,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            57,
                            "  resource_id   = aws_api_gateway_resource.api_gw_resource.id\n"
                        ],
                        [
                            58,
                            "  http_method   = \"GET\"\n"
                        ],
                        [
                            59,
                            "  authorization = \"NONE\"\n"
                        ],
                        [
                            60,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        55,
                        60
                    ],
                    "resource": "aws_api_gateway_method.api_gw_method",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAuthorization",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set"
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            77,
                            "resource \"aws_api_gateway_stage\" \"api_gw_stage\" {\n"
                        ],
                        [
                            78,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            79,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            80,
                            "  deployment_id = aws_api_gateway_deployment.api_gw_deploy.id\n"
                        ],
                        [
                            81,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            82,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        77,
                        82
                    ],
                    "resource": "aws_api_gateway_stage.api_gw_stage",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            77,
                            "resource \"aws_api_gateway_stage\" \"api_gw_stage\" {\n"
                        ],
                        [
                            78,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            79,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            80,
                            "  deployment_id = aws_api_gateway_deployment.api_gw_deploy.id\n"
                        ],
                        [
                            81,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            82,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        77,
                        82
                    ],
                    "resource": "aws_api_gateway_stage.api_gw_stage",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            77,
                            "resource \"aws_api_gateway_stage\" \"api_gw_stage\" {\n"
                        ],
                        [
                            78,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            79,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            80,
                            "  deployment_id = aws_api_gateway_deployment.api_gw_deploy.id\n"
                        ],
                        [
                            81,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            82,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        77,
                        82
                    ],
                    "resource": "aws_api_gateway_stage.api_gw_stage",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_api_gateway_stage\" \"fail_waf\" {\n"
                        ],
                        [
                            10,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            11,
                            "  stage_name    = \"fail-waf\"\n"
                        ],
                        [
                            12,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            13,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        9,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail_waf",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_api_gateway_stage\" \"fail_waf\" {\n"
                        ],
                        [
                            10,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            11,
                            "  stage_name    = \"fail-waf\"\n"
                        ],
                        [
                            12,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            13,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        9,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail_waf",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_api_gateway_stage\" \"fail_waf\" {\n"
                        ],
                        [
                            10,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            11,
                            "  stage_name    = \"fail-waf\"\n"
                        ],
                        [
                            12,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            13,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        9,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail_waf",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_stage\" \"no_assoc\" {\n"
                        ],
                        [
                            21,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            22,
                            "  rest_api_id   = aws_api_gateway_rest_api.no_assoc.id\n"
                        ],
                        [
                            23,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            24,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_line_range": [
                        20,
                        25
                    ],
                    "resource": "aws_api_gateway_stage.no_assoc",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_stage\" \"no_assoc\" {\n"
                        ],
                        [
                            21,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            22,
                            "  rest_api_id   = aws_api_gateway_rest_api.no_assoc.id\n"
                        ],
                        [
                            23,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            24,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_line_range": [
                        20,
                        25
                    ],
                    "resource": "aws_api_gateway_stage.no_assoc",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_stage\" \"no_assoc\" {\n"
                        ],
                        [
                            21,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            22,
                            "  rest_api_id   = aws_api_gateway_rest_api.no_assoc.id\n"
                        ],
                        [
                            23,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            24,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_line_range": [
                        20,
                        25
                    ],
                    "resource": "aws_api_gateway_stage.no_assoc",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  deployment_id        = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            15,
                            "  rest_api_id          = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            16,
                            "  stage_name           = \"example\"\n"
                        ],
                        [
                            17,
                            "  xray_tracing_enabled = false\n"
                        ],
                        [
                            18,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_line_range": [
                        13,
                        19
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  deployment_id        = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            15,
                            "  rest_api_id          = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            16,
                            "  stage_name           = \"example\"\n"
                        ],
                        [
                            17,
                            "  xray_tracing_enabled = false\n"
                        ],
                        [
                            18,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_line_range": [
                        13,
                        19
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  deployment_id        = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            15,
                            "  rest_api_id          = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            16,
                            "  stage_name           = \"example\"\n"
                        ],
                        [
                            17,
                            "  xray_tracing_enabled = false\n"
                        ],
                        [
                            18,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_line_range": [
                        13,
                        19
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_120",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway caching is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cache_cluster_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            10,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            11,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            12,
                            "  #   client_certificate_id = \"12131323\"\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_line_range": [
                        8,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayCacheEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_73",
                    "bc_check_id": "BC_AWS_LOGGING_15",
                    "check_name": "Ensure API Gateway has X-Ray Tracing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "xray_tracing_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            10,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            11,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            12,
                            "  #   client_certificate_id = \"12131323\"\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_line_range": [
                        8,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayXray",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_15"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            10,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            11,
                            "  deployment_id = aws_api_gateway_deployment.fail.id\n"
                        ],
                        [
                            12,
                            "  #   client_certificate_id = \"12131323\"\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_without_ssl_certificate.tf",
                    "file_line_range": [
                        8,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_76",
                    "bc_check_id": "BC_AWS_LOGGING_17",
                    "check_name": "Ensure API Gateway has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_log_settings/[0]/destination_arn"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_apigatewayv2_stage\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  api_id = aws_apigatewayv2_api.example.id\n"
                        ],
                        [
                            13,
                            "  name   = \"example-stage\"\n"
                        ],
                        [
                            14,
                            "  tags = {\n"
                        ],
                        [
                            15,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/apigatewayv2_stage.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/apigatewayv2_stage.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/apigatewayv2_stage.tf",
                    "file_line_range": [
                        11,
                        17
                    ],
                    "resource": "aws_apigatewayv2_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayAccessLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_17"
                },
                {
                    "check_id": "CKV_AWS_194",
                    "bc_check_id": null,
                    "check_name": "Ensure AppSync has Field-Level logs enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "log_config/[0]/field_log_level"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_appsync_graphql_api\" \"default\" {\n"
                        ],
                        [
                            6,
                            "  authentication_type = \"API_KEY\"\n"
                        ],
                        [
                            7,
                            "  name                = \"example\"\n"
                        ],
                        [
                            8,
                            "  tags = {\n"
                        ],
                        [
                            9,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            10,
                            "  }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/appsync/appsync.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/appsync/appsync.tf",
                    "repo_file_path": "/terraform/aws/appsync/appsync.tf",
                    "file_line_range": [
                        5,
                        11
                    ],
                    "resource": "aws_appsync_graphql_api.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AppSyncFieldLevelLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_193",
                    "bc_check_id": null,
                    "check_name": "Ensure AppSync has Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "log_config/[0]/cloudwatch_logs_role_arn"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_appsync_graphql_api\" \"default\" {\n"
                        ],
                        [
                            6,
                            "  authentication_type = \"API_KEY\"\n"
                        ],
                        [
                            7,
                            "  name                = \"example\"\n"
                        ],
                        [
                            8,
                            "  tags = {\n"
                        ],
                        [
                            9,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            10,
                            "  }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/appsync/appsync.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/appsync/appsync.tf",
                    "repo_file_path": "/terraform/aws/appsync/appsync.tf",
                    "file_line_range": [
                        5,
                        11
                    ],
                    "resource": "aws_appsync_graphql_api.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AppSyncLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_77",
                    "bc_check_id": "BC_AWS_GENERAL_29",
                    "check_name": "Ensure Athena Database is encrypted at rest (default is unencrypted)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/encryption_option"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_athena_database\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  name = \"wg-non-encrypted\"\n"
                        ],
                        [
                            9,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/athena/athena-database.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/athena/athena-database.tf",
                    "repo_file_path": "/terraform/aws/athena/athena-database.tf",
                    "file_line_range": [
                        7,
                        10
                    ],
                    "resource": "aws_athena_database.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AthenaDatabaseEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_29"
                },
                {
                    "check_id": "CKV_AWS_82",
                    "bc_check_id": "BC_AWS_GENERAL_33",
                    "check_name": "Ensure Athena Workgroup should enforce configuration to prevent client disabling encryption",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "configuration/[0]/enforce_workgroup_configuration"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_athena_workgroup\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  name = \"wg-non-encrypted\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  configuration {\n"
                        ],
                        [
                            13,
                            "    enforce_workgroup_configuration    = false\n"
                        ],
                        [
                            14,
                            "    publish_cloudwatch_metrics_enabled = false\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    result_configuration {\n"
                        ],
                        [
                            17,
                            "      output_location = \"s3://mys3bucket\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/athena/athena-workgroup.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/athena/athena-workgroup.tf",
                    "repo_file_path": "/terraform/aws/athena/athena-workgroup.tf",
                    "file_line_range": [
                        9,
                        21
                    ],
                    "resource": "aws_athena_workgroup.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AthenaWorkgroupConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_33"
                },
                {
                    "check_id": "CKV_AWS_159",
                    "bc_check_id": "BC_AWS_GENERAL_86",
                    "check_name": "Ensure that Athena Workgroup is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "configuration/[0]/result_configuration/[0]/encryption_configuration/[0]/encryption_option"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_athena_workgroup\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  name = \"wg-non-encrypted\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  configuration {\n"
                        ],
                        [
                            13,
                            "    enforce_workgroup_configuration    = false\n"
                        ],
                        [
                            14,
                            "    publish_cloudwatch_metrics_enabled = false\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    result_configuration {\n"
                        ],
                        [
                            17,
                            "      output_location = \"s3://mys3bucket\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/athena/athena-workgroup.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/athena/athena-workgroup.tf",
                    "repo_file_path": "/terraform/aws/athena/athena-workgroup.tf",
                    "file_line_range": [
                        9,
                        21
                    ],
                    "resource": "aws_athena_workgroup.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AthenaWorkgroupEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-athena-workgroup-is-encrypted"
                },
                {
                    "check_id": "CKV_AWS_127",
                    "bc_check_id": "BC_AWS_GENERAL_67",
                    "check_name": "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "listener/0"
                        ]
                    },
                    "code_block": [
                        [
                            29,
                            "resource \"aws_elb\" \"test_bad\" {\n"
                        ],
                        [
                            30,
                            "  name               = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            31,
                            "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            32,
                            "\n"
                        ],
                        [
                            33,
                            "  listener {\n"
                        ],
                        [
                            34,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            35,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            36,
                            "    lb_port           = 80\n"
                        ],
                        [
                            37,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "\n"
                        ],
                        [
                            40,
                            "  listener {\n"
                        ],
                        [
                            41,
                            "    instance_port      = 8000\n"
                        ],
                        [
                            42,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            43,
                            "    lb_port            = 443\n"
                        ],
                        [
                            44,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            45,
                            "    ssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"\n"
                        ],
                        [
                            46,
                            "  }\n"
                        ],
                        [
                            47,
                            "\n"
                        ],
                        [
                            48,
                            "  instances                   = [aws_instance.foo.id]\n"
                        ],
                        [
                            49,
                            "  cross_zone_load_balancing   = false\n"
                        ],
                        [
                            50,
                            "  idle_timeout                = 400\n"
                        ],
                        [
                            51,
                            "  connection_draining         = true\n"
                        ],
                        [
                            52,
                            "  connection_draining_timeout = 400\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/ELB.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/ELB.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/ELB.tf",
                    "file_line_range": [
                        29,
                        58
                    ],
                    "resource": "aws_elb.test_bad",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBUsesSSL",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "foobar-terraform-elb",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager"
                },
                {
                    "check_id": "CKV_AWS_92",
                    "bc_check_id": "BC_AWS_LOGGING_23",
                    "check_name": "Ensure the ELB has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            29,
                            "resource \"aws_elb\" \"test_bad\" {\n"
                        ],
                        [
                            30,
                            "  name               = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            31,
                            "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            32,
                            "\n"
                        ],
                        [
                            33,
                            "  listener {\n"
                        ],
                        [
                            34,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            35,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            36,
                            "    lb_port           = 80\n"
                        ],
                        [
                            37,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "\n"
                        ],
                        [
                            40,
                            "  listener {\n"
                        ],
                        [
                            41,
                            "    instance_port      = 8000\n"
                        ],
                        [
                            42,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            43,
                            "    lb_port            = 443\n"
                        ],
                        [
                            44,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            45,
                            "    ssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"\n"
                        ],
                        [
                            46,
                            "  }\n"
                        ],
                        [
                            47,
                            "\n"
                        ],
                        [
                            48,
                            "  instances                   = [aws_instance.foo.id]\n"
                        ],
                        [
                            49,
                            "  cross_zone_load_balancing   = false\n"
                        ],
                        [
                            50,
                            "  idle_timeout                = 400\n"
                        ],
                        [
                            51,
                            "  connection_draining         = true\n"
                        ],
                        [
                            52,
                            "  connection_draining_timeout = 400\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/ELB.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/ELB.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/ELB.tf",
                    "file_line_range": [
                        29,
                        58
                    ],
                    "resource": "aws_elb.test_bad",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBAccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "foobar-terraform-elb",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_23"
                },
                {
                    "check_id": "CKV_AWS_138",
                    "bc_check_id": "BC_AWS_NETWORKING_43",
                    "check_name": "Ensure that ELB is cross-zone-load-balancing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cross_zone_load_balancing"
                        ]
                    },
                    "code_block": [
                        [
                            29,
                            "resource \"aws_elb\" \"test_bad\" {\n"
                        ],
                        [
                            30,
                            "  name               = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            31,
                            "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            32,
                            "\n"
                        ],
                        [
                            33,
                            "  listener {\n"
                        ],
                        [
                            34,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            35,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            36,
                            "    lb_port           = 80\n"
                        ],
                        [
                            37,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "\n"
                        ],
                        [
                            40,
                            "  listener {\n"
                        ],
                        [
                            41,
                            "    instance_port      = 8000\n"
                        ],
                        [
                            42,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            43,
                            "    lb_port            = 443\n"
                        ],
                        [
                            44,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            45,
                            "    ssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"\n"
                        ],
                        [
                            46,
                            "  }\n"
                        ],
                        [
                            47,
                            "\n"
                        ],
                        [
                            48,
                            "  instances                   = [aws_instance.foo.id]\n"
                        ],
                        [
                            49,
                            "  cross_zone_load_balancing   = false\n"
                        ],
                        [
                            50,
                            "  idle_timeout                = 400\n"
                        ],
                        [
                            51,
                            "  connection_draining         = true\n"
                        ],
                        [
                            52,
                            "  connection_draining_timeout = 400\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"foobar-terraform-elb\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/ELB.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/ELB.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/ELB.tf",
                    "file_line_range": [
                        29,
                        58
                    ],
                    "resource": "aws_elb.test_bad",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBCrossZoneEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "foobar-terraform-elb",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_launch_template\" \"foobar\" {\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/autoscaling_without_lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/autoscaling_without_lb.tf",
                    "file_line_range": [
                        18,
                        22
                    ],
                    "resource": "aws_launch_template.foobar",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_184",
                    "bc_check_id": "BC_AWS_GENERAL_104",
                    "check_name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            42,
                            "resource \"aws_efs_file_system\" \"ok_efs\" {\n"
                        ],
                        [
                            43,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  tags = {\n"
                        ],
                        [
                            46,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            47,
                            "    test = \"fail\"\n"
                        ],
                        [
                            48,
                            "  }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        42,
                        49
                    ],
                    "resource": "aws_efs_file_system.ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSFileSystemEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_104"
                },
                {
                    "check_id": "CKV_AWS_42",
                    "bc_check_id": "BC_AWS_GENERAL_17",
                    "check_name": "Ensure EFS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            42,
                            "resource \"aws_efs_file_system\" \"ok_efs\" {\n"
                        ],
                        [
                            43,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  tags = {\n"
                        ],
                        [
                            46,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            47,
                            "    test = \"fail\"\n"
                        ],
                        [
                            48,
                            "  }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        42,
                        49
                    ],
                    "resource": "aws_efs_file_system.ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSEncryptionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_17"
                },
                {
                    "check_id": "CKV_AWS_184",
                    "bc_check_id": "BC_AWS_GENERAL_104",
                    "check_name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            51,
                            "resource \"aws_efs_file_system\" \"not_ok_efs\" {\n"
                        ],
                        [
                            52,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        51,
                        58
                    ],
                    "resource": "aws_efs_file_system.not_ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSFileSystemEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_104"
                },
                {
                    "check_id": "CKV_AWS_42",
                    "bc_check_id": "BC_AWS_GENERAL_17",
                    "check_name": "Ensure EFS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            51,
                            "resource \"aws_efs_file_system\" \"not_ok_efs\" {\n"
                        ],
                        [
                            52,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        51,
                        58
                    ],
                    "resource": "aws_efs_file_system.not_ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSEncryptionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_17"
                },
                {
                    "check_id": "CKV_AWS_166",
                    "bc_check_id": "BC_AWS_GENERAL_89",
                    "check_name": "Ensure Backup Vault is encrypted at rest using KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_arn"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_backup_vault\" \"backup\" {\n"
                        ],
                        [
                            5,
                            "  name = \"example_backup_vault\"\n"
                        ],
                        [
                            6,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_vault.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_vault.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_vault.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_backup_vault.backup",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.BackupVaultEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-backup-vault-is-encrypted-at-rest-using-kms-cmk"
                },
                {
                    "check_id": "CKV_AWS_210",
                    "bc_check_id": null,
                    "check_name": "Batch job does not define a privileged container",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_batch_job_definition\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"tf_test_batch_job_definition\"\n"
                        ],
                        [
                            6,
                            "  type = \"container\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  container_properties = <<CONTAINER_PROPERTIES\n"
                        ],
                        [
                            9,
                            "{\n"
                        ],
                        [
                            10,
                            "    \"command\": [\"ls\", \"-la\"],\n"
                        ],
                        [
                            11,
                            "    \"image\": \"busybox\",\n"
                        ],
                        [
                            12,
                            "    \"memory\": 1024,\n"
                        ],
                        [
                            13,
                            "    \"vcpus\": 1,\n"
                        ],
                        [
                            14,
                            "    \"privileged\": true,\n"
                        ],
                        [
                            15,
                            "    \"volumes\": [\n"
                        ],
                        [
                            16,
                            "      {\n"
                        ],
                        [
                            17,
                            "        \"host\": {\n"
                        ],
                        [
                            18,
                            "          \"sourcePath\": \"/tmp\"\n"
                        ],
                        [
                            19,
                            "        },\n"
                        ],
                        [
                            20,
                            "        \"name\": \"tmp\"\n"
                        ],
                        [
                            21,
                            "      }\n"
                        ],
                        [
                            22,
                            "    ],\n"
                        ],
                        [
                            23,
                            "    \"environment\": [\n"
                        ],
                        [
                            24,
                            "        {\"name\": \"VARNAME\", \"value\": \"VARVAL\"}\n"
                        ],
                        [
                            25,
                            "    ],\n"
                        ],
                        [
                            26,
                            "    \"mountPoints\": [\n"
                        ],
                        [
                            27,
                            "        {\n"
                        ],
                        [
                            28,
                            "          \"sourceVolume\": \"tmp\",\n"
                        ],
                        [
                            29,
                            "          \"containerPath\": \"/tmp\",\n"
                        ],
                        [
                            30,
                            "          \"readOnly\": false\n"
                        ],
                        [
                            31,
                            "        }\n"
                        ],
                        [
                            32,
                            "    ],\n"
                        ],
                        [
                            33,
                            "    \"ulimits\": [\n"
                        ],
                        [
                            34,
                            "      {\n"
                        ],
                        [
                            35,
                            "        \"hardLimit\": 1024,\n"
                        ],
                        [
                            36,
                            "        \"name\": \"nofile\",\n"
                        ],
                        [
                            37,
                            "        \"softLimit\": 1024\n"
                        ],
                        [
                            38,
                            "      }\n"
                        ],
                        [
                            39,
                            "    ]\n"
                        ],
                        [
                            40,
                            "}\n"
                        ],
                        [
                            41,
                            "CONTAINER_PROPERTIES\n"
                        ],
                        [
                            42,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            43,
                            "}\n"
                        ]
                    ],
                    "file_path": "/batch/batch_job_definition_with_privileged_container_properties.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/batch/batch_job_definition_with_privileged_container_properties.tf",
                    "repo_file_path": "/terraform/aws/batch/batch_job_definition_with_privileged_container_properties.tf",
                    "file_line_range": [
                        4,
                        43
                    ],
                    "resource": "aws_batch_job_definition.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.BatchJobIsNotPrivileged",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_157",
                    "bc_check_id": "BC_AWS_GENERAL_73",
                    "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "multi_az"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_73"
                },
                {
                    "check_id": "CKV_AWS_129",
                    "bc_check_id": "BC_AWS_IAM_60",
                    "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_211",
                    "bc_check_id": null,
                    "check_name": "Ensure RDS uses a modern CaCert",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ca_cert_identifier"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            5,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            6,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            7,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            8,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            9,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            10,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            11,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            12,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            13,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            14,
                            "  ca_cert_identifier                  = \"rds-ca-2015\"\n"
                        ],
                        [
                            15,
                            "  tags                                = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "repo_file_path": "/terraform/aws/cert/ca_certificate_identifier_is_outdated.tf",
                    "file_line_range": [
                        3,
                        16
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_206",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway Domain uses a modern security Policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "security_policy"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_api_gateway_domain_name\" \"fail\" {\n"
                        ],
                        [
                            3,
                            "  certificate_body = file(\"expiredCertificate.pem\")\n"
                        ],
                        [
                            4,
                            "  domain_name      = \"api.example.com\"\n"
                        ],
                        [
                            5,
                            "  tags             = { test = \"fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/certhasexpired.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/certhasexpired.tf",
                    "repo_file_path": "/terraform/aws/cert/certhasexpired.tf",
                    "file_line_range": [
                        2,
                        6
                    ],
                    "resource": "aws_api_gateway_domain_name.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayDomainNameTLS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_206",
                    "bc_check_id": null,
                    "check_name": "Ensure API Gateway Domain uses a modern security Policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "security_policy"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_api_gateway_domain_name\" \"example\" {\n"
                        ],
                        [
                            3,
                            "  certificate_body = file(\"./rsa1024.pem\")\n"
                        ],
                        [
                            4,
                            "  domain_name      = \"api.example.com\"\n"
                        ],
                        [
                            5,
                            "  tags             = { test = \"fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cert/certificate_rsa_key_bytes_lower_than_256.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cert/certificate_rsa_key_bytes_lower_than_256.tf",
                    "repo_file_path": "/terraform/aws/cert/certificate_rsa_key_bytes_lower_than_256.tf",
                    "file_line_range": [
                        2,
                        6
                    ],
                    "resource": "aws_api_gateway_domain_name.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.APIGatewayDomainNameTLS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_34",
                    "bc_check_id": "BC_AWS_NETWORKING_32",
                    "check_name": "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "default_cache_behavior/[0]/viewer_protocol_policy"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            14,
                            "  dynamic \"origin\" {\n"
                        ],
                        [
                            15,
                            "    for_each = local.origins\n"
                        ],
                        [
                            16,
                            "    content {\n"
                        ],
                        [
                            17,
                            "      domain_name = origin.value[\"domain_name\"]\n"
                        ],
                        [
                            18,
                            "      origin_id   = origin.value[\"origin_id\"]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "      s3_origin_config {\n"
                        ],
                        [
                            21,
                            "        origin_access_identity = origin.value[\"origin_access_identity\"]\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  enabled             = true\n"
                        ],
                        [
                            27,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            28,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = var.default_behaviour.allowed_methods\n"
                        ],
                        [
                            32,
                            "    cached_methods   = var.default_behaviour.cached_methods\n"
                        ],
                        [
                            33,
                            "    target_origin_id = var.default_behaviour.origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = var.default_behaviour.query_string\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = var.default_behaviour.forward\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = var.default_behaviour.min_ttl\n"
                        ],
                        [
                            45,
                            "    default_ttl            = var.default_behaviour.default_ttl\n"
                        ],
                        [
                            46,
                            "    max_ttl                = var.default_behaviour.max_ttl\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  dynamic \"ordered_cache_behavior\" {\n"
                        ],
                        [
                            50,
                            "    for_each = var.behaviours\n"
                        ],
                        [
                            51,
                            "    content {\n"
                        ],
                        [
                            52,
                            "      path_pattern     = ordered_cache_behavior.value[\"path_pattern\"]\n"
                        ],
                        [
                            53,
                            "      allowed_methods  = ordered_cache_behavior.value[\"allowed_methods\"]\n"
                        ],
                        [
                            54,
                            "      cached_methods   = ordered_cache_behavior.value[\"cached_methods\"]\n"
                        ],
                        [
                            55,
                            "      target_origin_id = ordered_cache_behavior.value[\"origin_id\"]\n"
                        ],
                        [
                            56,
                            "      forwarded_values {\n"
                        ],
                        [
                            57,
                            "        headers      = ordered_cache_behavior.value[\"headers\"]\n"
                        ],
                        [
                            58,
                            "        query_string = ordered_cache_behavior.value[\"query_string\"]\n"
                        ],
                        [
                            59,
                            "        cookies {\n"
                        ],
                        [
                            60,
                            "          forward = ordered_cache_behavior.value[\"forward\"]\n"
                        ],
                        [
                            61,
                            "        }\n"
                        ],
                        [
                            62,
                            "      }\n"
                        ],
                        [
                            63,
                            "      min_ttl                = ordered_cache_behavior.value[\"min_ttl\"]\n"
                        ],
                        [
                            64,
                            "      default_ttl            = ordered_cache_behavior.value[\"default_ttl\"]\n"
                        ],
                        [
                            65,
                            "      max_ttl                = ordered_cache_behavior.value[\"max_ttl\"]\n"
                        ],
                        [
                            66,
                            "      compress               = ordered_cache_behavior.value[\"compress\"]\n"
                        ],
                        [
                            67,
                            "      viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            68,
                            "    }\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "\n"
                        ],
                        [
                            71,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            72,
                            "\n"
                        ],
                        [
                            73,
                            "  restrictions {\n"
                        ],
                        [
                            74,
                            "    geo_restriction {\n"
                        ],
                        [
                            75,
                            "      restriction_type = var.geo_restrictions[\"restriction_type\"]\n"
                        ],
                        [
                            76,
                            "      locations        = var.geo_restrictions[\"locations\"]\n"
                        ],
                        [
                            77,
                            "    }\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "\n"
                        ],
                        [
                            80,
                            "  viewer_certificate {\n"
                        ],
                        [
                            81,
                            "    cloudfront_default_certificate = var.viewer_certificate[\"cloudfront_default_certificate\"]\n"
                        ],
                        [
                            82,
                            "    minimum_protocol_version       = var.viewer_certificate[\"minimum_protocol_version\"]\n"
                        ],
                        [
                            83,
                            "  }\n"
                        ],
                        [
                            84,
                            "\n"
                        ],
                        [
                            85,
                            "  lifecycle {\n"
                        ],
                        [
                            86,
                            "    ignore_changes = [tags]\n"
                        ],
                        [
                            87,
                            "  }\n"
                        ],
                        [
                            88,
                            "  tags = {\n"
                        ],
                        [
                            89,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            90,
                            "  }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront.tf",
                    "file_line_range": [
                        13,
                        91
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "viewer_certificate.cloudfront_default_certificate": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.minimum_protocol_version": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_32"
                },
                {
                    "check_id": "CKV_AWS_86",
                    "bc_check_id": "BC_AWS_LOGGING_20",
                    "check_name": "Ensure Cloudfront distribution has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging_config/[0]/bucket"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            14,
                            "  dynamic \"origin\" {\n"
                        ],
                        [
                            15,
                            "    for_each = local.origins\n"
                        ],
                        [
                            16,
                            "    content {\n"
                        ],
                        [
                            17,
                            "      domain_name = origin.value[\"domain_name\"]\n"
                        ],
                        [
                            18,
                            "      origin_id   = origin.value[\"origin_id\"]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "      s3_origin_config {\n"
                        ],
                        [
                            21,
                            "        origin_access_identity = origin.value[\"origin_access_identity\"]\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  enabled             = true\n"
                        ],
                        [
                            27,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            28,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = var.default_behaviour.allowed_methods\n"
                        ],
                        [
                            32,
                            "    cached_methods   = var.default_behaviour.cached_methods\n"
                        ],
                        [
                            33,
                            "    target_origin_id = var.default_behaviour.origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = var.default_behaviour.query_string\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = var.default_behaviour.forward\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = var.default_behaviour.min_ttl\n"
                        ],
                        [
                            45,
                            "    default_ttl            = var.default_behaviour.default_ttl\n"
                        ],
                        [
                            46,
                            "    max_ttl                = var.default_behaviour.max_ttl\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  dynamic \"ordered_cache_behavior\" {\n"
                        ],
                        [
                            50,
                            "    for_each = var.behaviours\n"
                        ],
                        [
                            51,
                            "    content {\n"
                        ],
                        [
                            52,
                            "      path_pattern     = ordered_cache_behavior.value[\"path_pattern\"]\n"
                        ],
                        [
                            53,
                            "      allowed_methods  = ordered_cache_behavior.value[\"allowed_methods\"]\n"
                        ],
                        [
                            54,
                            "      cached_methods   = ordered_cache_behavior.value[\"cached_methods\"]\n"
                        ],
                        [
                            55,
                            "      target_origin_id = ordered_cache_behavior.value[\"origin_id\"]\n"
                        ],
                        [
                            56,
                            "      forwarded_values {\n"
                        ],
                        [
                            57,
                            "        headers      = ordered_cache_behavior.value[\"headers\"]\n"
                        ],
                        [
                            58,
                            "        query_string = ordered_cache_behavior.value[\"query_string\"]\n"
                        ],
                        [
                            59,
                            "        cookies {\n"
                        ],
                        [
                            60,
                            "          forward = ordered_cache_behavior.value[\"forward\"]\n"
                        ],
                        [
                            61,
                            "        }\n"
                        ],
                        [
                            62,
                            "      }\n"
                        ],
                        [
                            63,
                            "      min_ttl                = ordered_cache_behavior.value[\"min_ttl\"]\n"
                        ],
                        [
                            64,
                            "      default_ttl            = ordered_cache_behavior.value[\"default_ttl\"]\n"
                        ],
                        [
                            65,
                            "      max_ttl                = ordered_cache_behavior.value[\"max_ttl\"]\n"
                        ],
                        [
                            66,
                            "      compress               = ordered_cache_behavior.value[\"compress\"]\n"
                        ],
                        [
                            67,
                            "      viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            68,
                            "    }\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "\n"
                        ],
                        [
                            71,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            72,
                            "\n"
                        ],
                        [
                            73,
                            "  restrictions {\n"
                        ],
                        [
                            74,
                            "    geo_restriction {\n"
                        ],
                        [
                            75,
                            "      restriction_type = var.geo_restrictions[\"restriction_type\"]\n"
                        ],
                        [
                            76,
                            "      locations        = var.geo_restrictions[\"locations\"]\n"
                        ],
                        [
                            77,
                            "    }\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "\n"
                        ],
                        [
                            80,
                            "  viewer_certificate {\n"
                        ],
                        [
                            81,
                            "    cloudfront_default_certificate = var.viewer_certificate[\"cloudfront_default_certificate\"]\n"
                        ],
                        [
                            82,
                            "    minimum_protocol_version       = var.viewer_certificate[\"minimum_protocol_version\"]\n"
                        ],
                        [
                            83,
                            "  }\n"
                        ],
                        [
                            84,
                            "\n"
                        ],
                        [
                            85,
                            "  lifecycle {\n"
                        ],
                        [
                            86,
                            "    ignore_changes = [tags]\n"
                        ],
                        [
                            87,
                            "  }\n"
                        ],
                        [
                            88,
                            "  tags = {\n"
                        ],
                        [
                            89,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            90,
                            "  }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront.tf",
                    "file_line_range": [
                        13,
                        91
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "viewer_certificate.cloudfront_default_certificate": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.minimum_protocol_version": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_20"
                },
                {
                    "check_id": "CKV_AWS_174",
                    "bc_check_id": "BC_AWS_NETWORKING_63",
                    "check_name": "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "viewer_certificate/[0]/minimum_protocol_version"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            14,
                            "  dynamic \"origin\" {\n"
                        ],
                        [
                            15,
                            "    for_each = local.origins\n"
                        ],
                        [
                            16,
                            "    content {\n"
                        ],
                        [
                            17,
                            "      domain_name = origin.value[\"domain_name\"]\n"
                        ],
                        [
                            18,
                            "      origin_id   = origin.value[\"origin_id\"]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "      s3_origin_config {\n"
                        ],
                        [
                            21,
                            "        origin_access_identity = origin.value[\"origin_access_identity\"]\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  enabled             = true\n"
                        ],
                        [
                            27,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            28,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = var.default_behaviour.allowed_methods\n"
                        ],
                        [
                            32,
                            "    cached_methods   = var.default_behaviour.cached_methods\n"
                        ],
                        [
                            33,
                            "    target_origin_id = var.default_behaviour.origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = var.default_behaviour.query_string\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = var.default_behaviour.forward\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = var.default_behaviour.min_ttl\n"
                        ],
                        [
                            45,
                            "    default_ttl            = var.default_behaviour.default_ttl\n"
                        ],
                        [
                            46,
                            "    max_ttl                = var.default_behaviour.max_ttl\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  dynamic \"ordered_cache_behavior\" {\n"
                        ],
                        [
                            50,
                            "    for_each = var.behaviours\n"
                        ],
                        [
                            51,
                            "    content {\n"
                        ],
                        [
                            52,
                            "      path_pattern     = ordered_cache_behavior.value[\"path_pattern\"]\n"
                        ],
                        [
                            53,
                            "      allowed_methods  = ordered_cache_behavior.value[\"allowed_methods\"]\n"
                        ],
                        [
                            54,
                            "      cached_methods   = ordered_cache_behavior.value[\"cached_methods\"]\n"
                        ],
                        [
                            55,
                            "      target_origin_id = ordered_cache_behavior.value[\"origin_id\"]\n"
                        ],
                        [
                            56,
                            "      forwarded_values {\n"
                        ],
                        [
                            57,
                            "        headers      = ordered_cache_behavior.value[\"headers\"]\n"
                        ],
                        [
                            58,
                            "        query_string = ordered_cache_behavior.value[\"query_string\"]\n"
                        ],
                        [
                            59,
                            "        cookies {\n"
                        ],
                        [
                            60,
                            "          forward = ordered_cache_behavior.value[\"forward\"]\n"
                        ],
                        [
                            61,
                            "        }\n"
                        ],
                        [
                            62,
                            "      }\n"
                        ],
                        [
                            63,
                            "      min_ttl                = ordered_cache_behavior.value[\"min_ttl\"]\n"
                        ],
                        [
                            64,
                            "      default_ttl            = ordered_cache_behavior.value[\"default_ttl\"]\n"
                        ],
                        [
                            65,
                            "      max_ttl                = ordered_cache_behavior.value[\"max_ttl\"]\n"
                        ],
                        [
                            66,
                            "      compress               = ordered_cache_behavior.value[\"compress\"]\n"
                        ],
                        [
                            67,
                            "      viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            68,
                            "    }\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "\n"
                        ],
                        [
                            71,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            72,
                            "\n"
                        ],
                        [
                            73,
                            "  restrictions {\n"
                        ],
                        [
                            74,
                            "    geo_restriction {\n"
                        ],
                        [
                            75,
                            "      restriction_type = var.geo_restrictions[\"restriction_type\"]\n"
                        ],
                        [
                            76,
                            "      locations        = var.geo_restrictions[\"locations\"]\n"
                        ],
                        [
                            77,
                            "    }\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "\n"
                        ],
                        [
                            80,
                            "  viewer_certificate {\n"
                        ],
                        [
                            81,
                            "    cloudfront_default_certificate = var.viewer_certificate[\"cloudfront_default_certificate\"]\n"
                        ],
                        [
                            82,
                            "    minimum_protocol_version       = var.viewer_certificate[\"minimum_protocol_version\"]\n"
                        ],
                        [
                            83,
                            "  }\n"
                        ],
                        [
                            84,
                            "\n"
                        ],
                        [
                            85,
                            "  lifecycle {\n"
                        ],
                        [
                            86,
                            "    ignore_changes = [tags]\n"
                        ],
                        [
                            87,
                            "  }\n"
                        ],
                        [
                            88,
                            "  tags = {\n"
                        ],
                        [
                            89,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            90,
                            "  }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront.tf",
                    "file_line_range": [
                        13,
                        91
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "viewer_certificate.cloudfront_default_certificate": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.minimum_protocol_version": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_63"
                },
                {
                    "check_id": "CKV_AWS_68",
                    "bc_check_id": "BC_AWS_GENERAL_27",
                    "check_name": "CloudFront Distribution should have WAF enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "web_acl_id"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            14,
                            "  dynamic \"origin\" {\n"
                        ],
                        [
                            15,
                            "    for_each = local.origins\n"
                        ],
                        [
                            16,
                            "    content {\n"
                        ],
                        [
                            17,
                            "      domain_name = origin.value[\"domain_name\"]\n"
                        ],
                        [
                            18,
                            "      origin_id   = origin.value[\"origin_id\"]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "      s3_origin_config {\n"
                        ],
                        [
                            21,
                            "        origin_access_identity = origin.value[\"origin_access_identity\"]\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  enabled             = true\n"
                        ],
                        [
                            27,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            28,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = var.default_behaviour.allowed_methods\n"
                        ],
                        [
                            32,
                            "    cached_methods   = var.default_behaviour.cached_methods\n"
                        ],
                        [
                            33,
                            "    target_origin_id = var.default_behaviour.origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = var.default_behaviour.query_string\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = var.default_behaviour.forward\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = var.default_behaviour.min_ttl\n"
                        ],
                        [
                            45,
                            "    default_ttl            = var.default_behaviour.default_ttl\n"
                        ],
                        [
                            46,
                            "    max_ttl                = var.default_behaviour.max_ttl\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  dynamic \"ordered_cache_behavior\" {\n"
                        ],
                        [
                            50,
                            "    for_each = var.behaviours\n"
                        ],
                        [
                            51,
                            "    content {\n"
                        ],
                        [
                            52,
                            "      path_pattern     = ordered_cache_behavior.value[\"path_pattern\"]\n"
                        ],
                        [
                            53,
                            "      allowed_methods  = ordered_cache_behavior.value[\"allowed_methods\"]\n"
                        ],
                        [
                            54,
                            "      cached_methods   = ordered_cache_behavior.value[\"cached_methods\"]\n"
                        ],
                        [
                            55,
                            "      target_origin_id = ordered_cache_behavior.value[\"origin_id\"]\n"
                        ],
                        [
                            56,
                            "      forwarded_values {\n"
                        ],
                        [
                            57,
                            "        headers      = ordered_cache_behavior.value[\"headers\"]\n"
                        ],
                        [
                            58,
                            "        query_string = ordered_cache_behavior.value[\"query_string\"]\n"
                        ],
                        [
                            59,
                            "        cookies {\n"
                        ],
                        [
                            60,
                            "          forward = ordered_cache_behavior.value[\"forward\"]\n"
                        ],
                        [
                            61,
                            "        }\n"
                        ],
                        [
                            62,
                            "      }\n"
                        ],
                        [
                            63,
                            "      min_ttl                = ordered_cache_behavior.value[\"min_ttl\"]\n"
                        ],
                        [
                            64,
                            "      default_ttl            = ordered_cache_behavior.value[\"default_ttl\"]\n"
                        ],
                        [
                            65,
                            "      max_ttl                = ordered_cache_behavior.value[\"max_ttl\"]\n"
                        ],
                        [
                            66,
                            "      compress               = ordered_cache_behavior.value[\"compress\"]\n"
                        ],
                        [
                            67,
                            "      viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            68,
                            "    }\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "\n"
                        ],
                        [
                            71,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            72,
                            "\n"
                        ],
                        [
                            73,
                            "  restrictions {\n"
                        ],
                        [
                            74,
                            "    geo_restriction {\n"
                        ],
                        [
                            75,
                            "      restriction_type = var.geo_restrictions[\"restriction_type\"]\n"
                        ],
                        [
                            76,
                            "      locations        = var.geo_restrictions[\"locations\"]\n"
                        ],
                        [
                            77,
                            "    }\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "\n"
                        ],
                        [
                            80,
                            "  viewer_certificate {\n"
                        ],
                        [
                            81,
                            "    cloudfront_default_certificate = var.viewer_certificate[\"cloudfront_default_certificate\"]\n"
                        ],
                        [
                            82,
                            "    minimum_protocol_version       = var.viewer_certificate[\"minimum_protocol_version\"]\n"
                        ],
                        [
                            83,
                            "  }\n"
                        ],
                        [
                            84,
                            "\n"
                        ],
                        [
                            85,
                            "  lifecycle {\n"
                        ],
                        [
                            86,
                            "    ignore_changes = [tags]\n"
                        ],
                        [
                            87,
                            "  }\n"
                        ],
                        [
                            88,
                            "  tags = {\n"
                        ],
                        [
                            89,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            90,
                            "  }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront.tf",
                    "file_line_range": [
                        13,
                        91
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "viewer_certificate.cloudfront_default_certificate": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.minimum_protocol_version": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_27"
                },
                {
                    "check_id": "CKV_AWS_34",
                    "bc_check_id": "BC_AWS_NETWORKING_32",
                    "check_name": "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "default_cache_behavior/[0]/viewer_protocol_policy"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_cloudfront_distribution\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  origin {\n"
                        ],
                        [
                            9,
                            "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                        ],
                        [
                            10,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "    s3_origin_config {\n"
                        ],
                        [
                            13,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  enabled             = false\n"
                        ],
                        [
                            18,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            19,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            20,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  logging_config {\n"
                        ],
                        [
                            23,
                            "    include_cookies = false\n"
                        ],
                        [
                            24,
                            "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                        ],
                        [
                            25,
                            "    prefix          = \"myprefix\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            32,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            33,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = false\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = \"none\"\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            45,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            46,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  restrictions {\n"
                        ],
                        [
                            52,
                            "    geo_restriction {\n"
                        ],
                        [
                            53,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            54,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "  }\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  tags = {\n"
                        ],
                        [
                            59,
                            "    Environment = \"production\"\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  viewer_certificate {\n"
                        ],
                        [
                            63,
                            "    cloudfront_default_certificate = true\n"
                        ],
                        [
                            64,
                            "  }\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        7,
                        66
                    ],
                    "resource": "aws_cloudfront_distribution.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "production"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_32"
                },
                {
                    "check_id": "CKV_AWS_174",
                    "bc_check_id": "BC_AWS_NETWORKING_63",
                    "check_name": "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "viewer_certificate/[0]/minimum_protocol_version"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_cloudfront_distribution\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  origin {\n"
                        ],
                        [
                            9,
                            "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                        ],
                        [
                            10,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "    s3_origin_config {\n"
                        ],
                        [
                            13,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  enabled             = false\n"
                        ],
                        [
                            18,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            19,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            20,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  logging_config {\n"
                        ],
                        [
                            23,
                            "    include_cookies = false\n"
                        ],
                        [
                            24,
                            "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                        ],
                        [
                            25,
                            "    prefix          = \"myprefix\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            32,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            33,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = false\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = \"none\"\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            45,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            46,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  restrictions {\n"
                        ],
                        [
                            52,
                            "    geo_restriction {\n"
                        ],
                        [
                            53,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            54,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "  }\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  tags = {\n"
                        ],
                        [
                            59,
                            "    Environment = \"production\"\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  viewer_certificate {\n"
                        ],
                        [
                            63,
                            "    cloudfront_default_certificate = true\n"
                        ],
                        [
                            64,
                            "  }\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        7,
                        66
                    ],
                    "resource": "aws_cloudfront_distribution.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "production"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_63"
                },
                {
                    "check_id": "CKV_AWS_68",
                    "bc_check_id": "BC_AWS_GENERAL_27",
                    "check_name": "CloudFront Distribution should have WAF enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "web_acl_id"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_cloudfront_distribution\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  origin {\n"
                        ],
                        [
                            9,
                            "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                        ],
                        [
                            10,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "    s3_origin_config {\n"
                        ],
                        [
                            13,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  enabled             = false\n"
                        ],
                        [
                            18,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            19,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            20,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  logging_config {\n"
                        ],
                        [
                            23,
                            "    include_cookies = false\n"
                        ],
                        [
                            24,
                            "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                        ],
                        [
                            25,
                            "    prefix          = \"myprefix\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            32,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            33,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = false\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = \"none\"\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            45,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            46,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  restrictions {\n"
                        ],
                        [
                            52,
                            "    geo_restriction {\n"
                        ],
                        [
                            53,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            54,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "  }\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  tags = {\n"
                        ],
                        [
                            59,
                            "    Environment = \"production\"\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  viewer_certificate {\n"
                        ],
                        [
                            63,
                            "    cloudfront_default_certificate = true\n"
                        ],
                        [
                            64,
                            "  }\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        7,
                        66
                    ],
                    "resource": "aws_cloudfront_distribution.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "production"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_27"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            73,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            74,
                            "  bucket = \"mylovelyhorse\"\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            77,
                            "  }\n"
                        ],
                        [
                            78,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        73,
                        78
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            7,
                            "  # configs\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        6,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_34",
                    "bc_check_id": "BC_AWS_NETWORKING_32",
                    "check_name": "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "default_cache_behavior/[0]/viewer_protocol_policy"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_cloudfront_distribution\" \"positive2\" {\n"
                        ],
                        [
                            12,
                            "  origin {\n"
                        ],
                        [
                            13,
                            "    domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name\n"
                        ],
                        [
                            14,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    s3_origin_config {\n"
                        ],
                        [
                            17,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  enabled             = true\n"
                        ],
                        [
                            22,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            23,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            24,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            27,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            28,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            29,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "    forwarded_values {\n"
                        ],
                        [
                            32,
                            "      query_string = false\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "      cookies {\n"
                        ],
                        [
                            35,
                            "        forward = \"none\"\n"
                        ],
                        [
                            36,
                            "      }\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "\n"
                        ],
                        [
                            39,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            40,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            41,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            42,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            43,
                            "  }\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  restrictions {\n"
                        ],
                        [
                            46,
                            "    geo_restriction {\n"
                        ],
                        [
                            47,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            48,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            49,
                            "    }\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            52,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        11,
                        52
                    ],
                    "resource": "aws_cloudfront_distribution.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_32"
                },
                {
                    "check_id": "CKV_AWS_86",
                    "bc_check_id": "BC_AWS_LOGGING_20",
                    "check_name": "Ensure Cloudfront distribution has Access Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging_config/[0]/bucket"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_cloudfront_distribution\" \"positive2\" {\n"
                        ],
                        [
                            12,
                            "  origin {\n"
                        ],
                        [
                            13,
                            "    domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name\n"
                        ],
                        [
                            14,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    s3_origin_config {\n"
                        ],
                        [
                            17,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  enabled             = true\n"
                        ],
                        [
                            22,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            23,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            24,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            27,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            28,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            29,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "    forwarded_values {\n"
                        ],
                        [
                            32,
                            "      query_string = false\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "      cookies {\n"
                        ],
                        [
                            35,
                            "        forward = \"none\"\n"
                        ],
                        [
                            36,
                            "      }\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "\n"
                        ],
                        [
                            39,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            40,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            41,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            42,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            43,
                            "  }\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  restrictions {\n"
                        ],
                        [
                            46,
                            "    geo_restriction {\n"
                        ],
                        [
                            47,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            48,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            49,
                            "    }\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            52,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        11,
                        52
                    ],
                    "resource": "aws_cloudfront_distribution.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_20"
                },
                {
                    "check_id": "CKV_AWS_174",
                    "bc_check_id": "BC_AWS_NETWORKING_63",
                    "check_name": "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "viewer_certificate/[0]/minimum_protocol_version"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_cloudfront_distribution\" \"positive2\" {\n"
                        ],
                        [
                            12,
                            "  origin {\n"
                        ],
                        [
                            13,
                            "    domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name\n"
                        ],
                        [
                            14,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    s3_origin_config {\n"
                        ],
                        [
                            17,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  enabled             = true\n"
                        ],
                        [
                            22,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            23,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            24,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            27,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            28,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            29,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "    forwarded_values {\n"
                        ],
                        [
                            32,
                            "      query_string = false\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "      cookies {\n"
                        ],
                        [
                            35,
                            "        forward = \"none\"\n"
                        ],
                        [
                            36,
                            "      }\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "\n"
                        ],
                        [
                            39,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            40,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            41,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            42,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            43,
                            "  }\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  restrictions {\n"
                        ],
                        [
                            46,
                            "    geo_restriction {\n"
                        ],
                        [
                            47,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            48,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            49,
                            "    }\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            52,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        11,
                        52
                    ],
                    "resource": "aws_cloudfront_distribution.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudfrontTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_63"
                },
                {
                    "check_id": "CKV_AWS_68",
                    "bc_check_id": "BC_AWS_GENERAL_27",
                    "check_name": "CloudFront Distribution should have WAF enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "web_acl_id"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_cloudfront_distribution\" \"positive2\" {\n"
                        ],
                        [
                            12,
                            "  origin {\n"
                        ],
                        [
                            13,
                            "    domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name\n"
                        ],
                        [
                            14,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    s3_origin_config {\n"
                        ],
                        [
                            17,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  enabled             = true\n"
                        ],
                        [
                            22,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            23,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            24,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            27,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            28,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            29,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "    forwarded_values {\n"
                        ],
                        [
                            32,
                            "      query_string = false\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "      cookies {\n"
                        ],
                        [
                            35,
                            "        forward = \"none\"\n"
                        ],
                        [
                            36,
                            "      }\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "\n"
                        ],
                        [
                            39,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            40,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            41,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            42,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            43,
                            "  }\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  restrictions {\n"
                        ],
                        [
                            46,
                            "    geo_restriction {\n"
                        ],
                        [
                            47,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            48,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            49,
                            "    }\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            52,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        11,
                        52
                    ],
                    "resource": "aws_cloudfront_distribution.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_27"
                },
                {
                    "check_id": "CKV_AWS_36",
                    "bc_check_id": "BC_AWS_LOGGING_2",
                    "check_name": "Ensure CloudTrail log file validation is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_log_file_validation"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_cloudtrail\" \"fail\" {\n"
                        ],
                        [
                            19,
                            "  name                          = \"TRAIL\"\n"
                        ],
                        [
                            20,
                            "  s3_bucket_name                = aws_s3_bucket.test.id\n"
                        ],
                        [
                            21,
                            "  include_global_service_events = true\n"
                        ],
                        [
                            22,
                            "  enable_logging                = false\n"
                        ],
                        [
                            23,
                            "  is_multi_region_trail         = false\n"
                        ],
                        [
                            24,
                            "  tags                          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudtrail/cloudtrail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudtrail/cloudtrail.tf",
                    "repo_file_path": "/terraform/aws/cloudtrail/cloudtrail.tf",
                    "file_line_range": [
                        18,
                        25
                    ],
                    "resource": "aws_cloudtrail.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudtrailLogValidation",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_2"
                },
                {
                    "check_id": "CKV_AWS_67",
                    "bc_check_id": "BC_AWS_LOGGING_1",
                    "check_name": "Ensure CloudTrail is enabled in all Regions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "is_multi_region_trail"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_cloudtrail\" \"fail\" {\n"
                        ],
                        [
                            19,
                            "  name                          = \"TRAIL\"\n"
                        ],
                        [
                            20,
                            "  s3_bucket_name                = aws_s3_bucket.test.id\n"
                        ],
                        [
                            21,
                            "  include_global_service_events = true\n"
                        ],
                        [
                            22,
                            "  enable_logging                = false\n"
                        ],
                        [
                            23,
                            "  is_multi_region_trail         = false\n"
                        ],
                        [
                            24,
                            "  tags                          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudtrail/cloudtrail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudtrail/cloudtrail.tf",
                    "repo_file_path": "/terraform/aws/cloudtrail/cloudtrail.tf",
                    "file_line_range": [
                        18,
                        25
                    ],
                    "resource": "aws_cloudtrail.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudtrailMultiRegion",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_1"
                },
                {
                    "check_id": "CKV_AWS_35",
                    "bc_check_id": "BC_AWS_LOGGING_7",
                    "check_name": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_cloudtrail\" \"fail\" {\n"
                        ],
                        [
                            19,
                            "  name                          = \"TRAIL\"\n"
                        ],
                        [
                            20,
                            "  s3_bucket_name                = aws_s3_bucket.test.id\n"
                        ],
                        [
                            21,
                            "  include_global_service_events = true\n"
                        ],
                        [
                            22,
                            "  enable_logging                = false\n"
                        ],
                        [
                            23,
                            "  is_multi_region_trail         = false\n"
                        ],
                        [
                            24,
                            "  tags                          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudtrail/cloudtrail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudtrail/cloudtrail.tf",
                    "repo_file_path": "/terraform/aws/cloudtrail/cloudtrail.tf",
                    "file_line_range": [
                        18,
                        25
                    ],
                    "resource": "aws_cloudtrail.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudtrailEncryptionWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_7"
                },
                {
                    "check_id": "CKV_AWS_66",
                    "bc_check_id": "BC_AWS_LOGGING_13",
                    "check_name": "Ensure that CloudWatch Log Group specifies retention days",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "retention_in_days"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_cloudwatch_log_group\" \"logs\" {\n"
                        ],
                        [
                            9,
                            "  name = var.log_group_name\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_cloudwatch_log_group.logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupRetention",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "variable",
                                "name": "log_group_name",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_13"
                },
                {
                    "check_id": "CKV_AWS_158",
                    "bc_check_id": "BC_AWS_GENERAL_85",
                    "check_name": "Ensure that CloudWatch Log Group is encrypted by KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_cloudwatch_log_group\" \"logs\" {\n"
                        ],
                        [
                            9,
                            "  name = var.log_group_name\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudwatch/cloudwatch.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch.tf",
                    "repo_file_path": "/terraform/aws/cloudwatch/cloudwatch.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_cloudwatch_log_group.logs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CloudWatchLogGroupKMSKey",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "name": [
                            {
                                "type": "variable",
                                "name": "log_group_name",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudwatch/cloudwatch.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-cloudwatch-log-group-is-encrypted-by-kms"
                },
                {
                    "check_id": "CKV_AWS_78",
                    "bc_check_id": "BC_AWS_GENERAL_30",
                    "check_name": "Ensure that CodeBuild Project encryption is not disabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "artifacts/[0]/encryption_disabled"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_codebuild_project\" \"default\" {\n"
                        ],
                        [
                            9,
                            "  name         = \"example\"\n"
                        ],
                        [
                            10,
                            "  service_role = \"aws_iam_role.example.arn\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  artifacts {\n"
                        ],
                        [
                            13,
                            "    type                = \"S3\"\n"
                        ],
                        [
                            14,
                            "    encryption_disabled = true\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "  environment {\n"
                        ],
                        [
                            17,
                            "    compute_type = \"BUILD_GENERAL1_SMALL\"\n"
                        ],
                        [
                            18,
                            "    image        = \"docker:dind\"\n"
                        ],
                        [
                            19,
                            "    type         = \"LINUX_CONTAINER\"\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "  source {\n"
                        ],
                        [
                            22,
                            "    type = \"NO_SOURCE\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "\n"
                        ],
                        [
                            25,
                            "  secondary_artifacts {\n"
                        ],
                        [
                            26,
                            "    encryption_disabled = false\n"
                        ],
                        [
                            27,
                            "  }\n"
                        ],
                        [
                            28,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/codebuild/codebuild.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/codebuild/codebuild.tf",
                    "repo_file_path": "/terraform/aws/codebuild/codebuild.tf",
                    "file_line_range": [
                        8,
                        29
                    ],
                    "resource": "aws_codebuild_project.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CodeBuildProjectEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_30"
                },
                {
                    "check_id": "CKV_AWS_147",
                    "bc_check_id": "BC_AWS_GENERAL_78",
                    "check_name": "Ensure that CodeBuild projects are encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "artifacts/[0]/type",
                            "encryption_key"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_codebuild_project\" \"default\" {\n"
                        ],
                        [
                            9,
                            "  name         = \"example\"\n"
                        ],
                        [
                            10,
                            "  service_role = \"aws_iam_role.example.arn\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  artifacts {\n"
                        ],
                        [
                            13,
                            "    type                = \"S3\"\n"
                        ],
                        [
                            14,
                            "    encryption_disabled = true\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "  environment {\n"
                        ],
                        [
                            17,
                            "    compute_type = \"BUILD_GENERAL1_SMALL\"\n"
                        ],
                        [
                            18,
                            "    image        = \"docker:dind\"\n"
                        ],
                        [
                            19,
                            "    type         = \"LINUX_CONTAINER\"\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "  source {\n"
                        ],
                        [
                            22,
                            "    type = \"NO_SOURCE\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "\n"
                        ],
                        [
                            25,
                            "  secondary_artifacts {\n"
                        ],
                        [
                            26,
                            "    encryption_disabled = false\n"
                        ],
                        [
                            27,
                            "  }\n"
                        ],
                        [
                            28,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/codebuild/codebuild.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/codebuild/codebuild.tf",
                    "repo_file_path": "/terraform/aws/codebuild/codebuild.tf",
                    "file_line_range": [
                        8,
                        29
                    ],
                    "resource": "aws_codebuild_project.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.CodeBuildEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-codebuild-projects-are-encrypted-1"
                },
                {
                    "check_id": "CKV_AWS_121",
                    "bc_check_id": "BC_AWS_LOGGING_5",
                    "check_name": "Ensure AWS Config is enabled in all regions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "account_aggregation_source",
                            "organization_aggregation_source"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_config_configuration_aggregator\" \"organization\" {\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  name = \"example\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  account_aggregation_source {\n"
                        ],
                        [
                            12,
                            "    account_ids = [\"123456789012\"]\n"
                        ],
                        [
                            13,
                            "    regions     = [\"us-east-2\", \"us-east-1\", \"us-west-1\", \"us-west-2\"]\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/config/config_configuration_aggregator.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/config/config_configuration_aggregator.tf",
                    "repo_file_path": "/terraform/aws/config/config_configuration_aggregator.tf",
                    "file_line_range": [
                        7,
                        16
                    ],
                    "resource": "aws_config_configuration_aggregator.organization",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ConfigConfgurationAggregatorAllRegions",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_5-enable-aws-config-regions"
                },
                {
                    "check_id": "CKV_AWS_108",
                    "bc_check_id": "BC_AWS_IAM_55",
                    "check_name": "Ensure IAM policies does not allow data exfiltration",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMDataExfiltration",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration"
                },
                {
                    "check_id": "CKV_AWS_111",
                    "bc_check_id": "BC_AWS_IAM_57",
                    "check_name": "Ensure IAM policies does not allow write access without constraints",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMWriteAccess",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_49",
                    "bc_check_id": "BC_AWS_IAM_43",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.StarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_43"
                },
                {
                    "check_id": "CKV_AWS_107",
                    "bc_check_id": "BC_AWS_IAM_54",
                    "check_name": "Ensure IAM policies does not allow credentials exposure",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMCredentialsExposure",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure"
                },
                {
                    "check_id": "CKV_AWS_109",
                    "bc_check_id": "BC_AWS_IAM_56",
                    "check_name": "Ensure IAM policies does not allow permissions management / resource exposure without constraints",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPermissionsManagement",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint"
                },
                {
                    "check_id": "CKV_AWS_1",
                    "bc_check_id": "BC_AWS_IAM_23",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.AdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_23"
                },
                {
                    "check_id": "CKV_AWS_110",
                    "bc_check_id": "BC_AWS_IAM_64",
                    "check_name": "Ensure IAM policies does not allow privilege escalation",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "data \"aws_iam_policy_document\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  version = \"2012-10-17\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  statement {\n"
                        ],
                        [
                            15,
                            "    effect = \"Allow\"\n"
                        ],
                        [
                            16,
                            "    actions = [\n"
                        ],
                        [
                            17,
                            "      \"*\"\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "    resources = [\n"
                        ],
                        [
                            20,
                            "      \"*\",\n"
                        ],
                        [
                            21,
                            "    ]\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/data/data.iam_policy_document.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/data/data.iam_policy_document.tf",
                    "repo_file_path": "/terraform/aws/data/data.iam_policy_document.tf",
                    "file_line_range": [
                        11,
                        23
                    ],
                    "resource": "aws_iam_policy_document.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.data.aws.IAMPrivilegeEscalation",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation"
                },
                {
                    "check_id": "CKV_AWS_47",
                    "bc_check_id": "BC_AWS_GENERAL_23",
                    "check_name": "Ensure DAX is encrypted at rest (default is unencrypted)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_dax_cluster\" \"name\" {\n"
                        ],
                        [
                            8,
                            "  cluster_name         = var.cluster_name\n"
                        ],
                        [
                            9,
                            "  iam_role_arn         = var.iam_role_arn\n"
                        ],
                        [
                            10,
                            "  parameter_group_name = aws_dax_parameter_group.example.name\n"
                        ],
                        [
                            11,
                            "  subnet_group_name    = aws_dax_subnet_group.example.name\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dax/dax_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dax/dax_cluster.tf",
                    "repo_file_path": "/terraform/aws/dax/dax_cluster.tf",
                    "file_line_range": [
                        7,
                        13
                    ],
                    "resource": "aws_dax_cluster.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DAXEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_23"
                },
                {
                    "check_id": "CKV_AWS_161",
                    "bc_check_id": "BC_AWS_IAM_65",
                    "check_name": "Ensure RDS database has IAM authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_157",
                    "bc_check_id": "BC_AWS_GENERAL_73",
                    "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "multi_az"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_73"
                },
                {
                    "check_id": "CKV_AWS_129",
                    "bc_check_id": "BC_AWS_IAM_60",
                    "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_4",
                    "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"default\" {\n"
                        ],
                        [
                            16,
                            "  name                   = var.dbname\n"
                        ],
                        [
                            17,
                            "  engine                 = \"mysql\"\n"
                        ],
                        [
                            18,
                            "  option_group_name      = aws_db_option_group.default.name\n"
                        ],
                        [
                            19,
                            "  parameter_group_name   = aws_db_parameter_group.default.name\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name   = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  vpc_security_group_ids = [aws_security_group.default.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  identifier              = \"rds-${local.resource_prefix.value}\"\n"
                        ],
                        [
                            24,
                            "  engine_version          = \"8.0\" # Latest major version\n"
                        ],
                        [
                            25,
                            "  instance_class          = \"db.t3.micro\"\n"
                        ],
                        [
                            26,
                            "  allocated_storage       = \"20\"\n"
                        ],
                        [
                            27,
                            "  username                = \"admin\"\n"
                        ],
                        [
                            28,
                            "  password                = var.password\n"
                        ],
                        [
                            29,
                            "  apply_immediately       = true\n"
                        ],
                        [
                            30,
                            "  multi_az                = false\n"
                        ],
                        [
                            31,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            32,
                            "  storage_encrypted       = false\n"
                        ],
                        [
                            33,
                            "  skip_final_snapshot     = true\n"
                        ],
                        [
                            34,
                            "  monitoring_interval     = 0\n"
                        ],
                        [
                            35,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            36,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_instance.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_instance.tf",
                    "file_line_range": [
                        15,
                        37
                    ],
                    "resource": "aws_db_instance.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_4"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_db_security_group\" \"positive1\" {\n"
                        ],
                        [
                            8,
                            "  name = \"rds_sg\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  ingress {\n"
                        ],
                        [
                            11,
                            "    cidr = \"0.0.0.0/0\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    cidr = \"10.0.0.0/24\"\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_security_group.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_security_group.tf",
                    "file_line_range": [
                        7,
                        18
                    ],
                    "resource": "aws_db_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_198",
                    "bc_check_id": null,
                    "check_name": "Ensure no aws_db_security_group resources exist",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_db_security_group\" \"positive1\" {\n"
                        ],
                        [
                            8,
                            "  name = \"rds_sg\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  ingress {\n"
                        ],
                        [
                            11,
                            "    cidr = \"0.0.0.0/0\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    cidr = \"10.0.0.0/24\"\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/db_instance/db_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/db_instance/db_security_group.tf",
                    "repo_file_path": "/terraform/aws/db_instance/db_security_group.tf",
                    "file_line_range": [
                        7,
                        18
                    ],
                    "resource": "aws_db_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSHasSecurityGroup",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_212",
                    "bc_check_id": null,
                    "check_name": "Ensure EBS Volume is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_arn"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_dms_replication_instance\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  engine_version             = \"3.1.4\"\n"
                        ],
                        [
                            11,
                            "  multi_az                   = false\n"
                        ],
                        [
                            12,
                            "  publicly_accessible        = true\n"
                        ],
                        [
                            13,
                            "  replication_instance_class = \"dms.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  replication_instance_id    = \"test-dms-replication-instance-tf\"\n"
                        ],
                        [
                            15,
                            "  # kms_key_arn = \"\"\n"
                        ],
                        [
                            16,
                            "  # auto_minor_version_upgrade=false\n"
                        ],
                        [
                            17,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dms/dms.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dms/dms.tf",
                    "repo_file_path": "/terraform/aws/dms/dms.tf",
                    "file_line_range": [
                        9,
                        18
                    ],
                    "resource": "aws_dms_replication_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DMSReplicationInstanceEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_89",
                    "bc_check_id": "BC_AWS_PUBLIC_13",
                    "check_name": "DMS replication instance should not be publicly accessible",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_dms_replication_instance\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  engine_version             = \"3.1.4\"\n"
                        ],
                        [
                            11,
                            "  multi_az                   = false\n"
                        ],
                        [
                            12,
                            "  publicly_accessible        = true\n"
                        ],
                        [
                            13,
                            "  replication_instance_class = \"dms.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  replication_instance_id    = \"test-dms-replication-instance-tf\"\n"
                        ],
                        [
                            15,
                            "  # kms_key_arn = \"\"\n"
                        ],
                        [
                            16,
                            "  # auto_minor_version_upgrade=false\n"
                        ],
                        [
                            17,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dms/dms.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dms/dms.tf",
                    "repo_file_path": "/terraform/aws/dms/dms.tf",
                    "file_line_range": [
                        9,
                        18
                    ],
                    "resource": "aws_dms_replication_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DMSReplicationInstancePubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_13"
                },
                {
                    "check_id": "CKV_AWS_74",
                    "bc_check_id": "BC_AWS_GENERAL_28",
                    "check_name": "Ensure DocDB is encrypted at rest (default is unencrypted)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_docdb_cluster\" \"examplea\" {\n"
                        ],
                        [
                            15,
                            "  cluster_identifier = var.cluster_identifier\n"
                        ],
                        [
                            16,
                            "  engine             = \"docdb\"\n"
                        ],
                        [
                            17,
                            "  engine_version     = \"\"\n"
                        ],
                        [
                            18,
                            "  apply_immediately  = var.apply_immediately\n"
                        ],
                        [
                            19,
                            "  availability_zones = data.aws_availability_zones.available.names\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  db_subnet_group_name            = aws_docdb_subnet_group.examplea.name\n"
                        ],
                        [
                            22,
                            "  db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name\n"
                        ],
                        [
                            23,
                            "  deletion_protection             = var.deletion_protection\n"
                        ],
                        [
                            24,
                            "  master_username                 = var.master_username\n"
                        ],
                        [
                            25,
                            "  master_password                 = var.master_password\n"
                        ],
                        [
                            26,
                            "  backup_retention_period         = var.backup_retention_period\n"
                        ],
                        [
                            27,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            28,
                            "  preferred_maintenance_window    = \"sat:05:00-sat:07:00\"\n"
                        ],
                        [
                            29,
                            "  skip_final_snapshot             = true\n"
                        ],
                        [
                            30,
                            "  vpc_security_group_ids          = []\n"
                        ],
                        [
                            31,
                            "  enabled_cloudwatch_logs_exports = \"something\"\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/documentdb/docdb_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                    "repo_file_path": "/terraform/aws/documentdb/docdb_cluster.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_docdb_cluster.examplea",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_docdb_cluster_parameter_group.examplea",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_28"
                },
                {
                    "check_id": "CKV_AWS_85",
                    "bc_check_id": "BC_AWS_LOGGING_19",
                    "check_name": "Ensure DocDB Logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_docdb_cluster\" \"examplea\" {\n"
                        ],
                        [
                            15,
                            "  cluster_identifier = var.cluster_identifier\n"
                        ],
                        [
                            16,
                            "  engine             = \"docdb\"\n"
                        ],
                        [
                            17,
                            "  engine_version     = \"\"\n"
                        ],
                        [
                            18,
                            "  apply_immediately  = var.apply_immediately\n"
                        ],
                        [
                            19,
                            "  availability_zones = data.aws_availability_zones.available.names\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  db_subnet_group_name            = aws_docdb_subnet_group.examplea.name\n"
                        ],
                        [
                            22,
                            "  db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name\n"
                        ],
                        [
                            23,
                            "  deletion_protection             = var.deletion_protection\n"
                        ],
                        [
                            24,
                            "  master_username                 = var.master_username\n"
                        ],
                        [
                            25,
                            "  master_password                 = var.master_password\n"
                        ],
                        [
                            26,
                            "  backup_retention_period         = var.backup_retention_period\n"
                        ],
                        [
                            27,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            28,
                            "  preferred_maintenance_window    = \"sat:05:00-sat:07:00\"\n"
                        ],
                        [
                            29,
                            "  skip_final_snapshot             = true\n"
                        ],
                        [
                            30,
                            "  vpc_security_group_ids          = []\n"
                        ],
                        [
                            31,
                            "  enabled_cloudwatch_logs_exports = \"something\"\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/documentdb/docdb_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                    "repo_file_path": "/terraform/aws/documentdb/docdb_cluster.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_docdb_cluster.examplea",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_docdb_cluster_parameter_group.examplea",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_19"
                },
                {
                    "check_id": "CKV_AWS_182",
                    "bc_check_id": "BC_AWS_GENERAL_102",
                    "check_name": "Ensure Doc DB is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_docdb_cluster\" \"examplea\" {\n"
                        ],
                        [
                            15,
                            "  cluster_identifier = var.cluster_identifier\n"
                        ],
                        [
                            16,
                            "  engine             = \"docdb\"\n"
                        ],
                        [
                            17,
                            "  engine_version     = \"\"\n"
                        ],
                        [
                            18,
                            "  apply_immediately  = var.apply_immediately\n"
                        ],
                        [
                            19,
                            "  availability_zones = data.aws_availability_zones.available.names\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  db_subnet_group_name            = aws_docdb_subnet_group.examplea.name\n"
                        ],
                        [
                            22,
                            "  db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name\n"
                        ],
                        [
                            23,
                            "  deletion_protection             = var.deletion_protection\n"
                        ],
                        [
                            24,
                            "  master_username                 = var.master_username\n"
                        ],
                        [
                            25,
                            "  master_password                 = var.master_password\n"
                        ],
                        [
                            26,
                            "  backup_retention_period         = var.backup_retention_period\n"
                        ],
                        [
                            27,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            28,
                            "  preferred_maintenance_window    = \"sat:05:00-sat:07:00\"\n"
                        ],
                        [
                            29,
                            "  skip_final_snapshot             = true\n"
                        ],
                        [
                            30,
                            "  vpc_security_group_ids          = []\n"
                        ],
                        [
                            31,
                            "  enabled_cloudwatch_logs_exports = \"something\"\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/documentdb/docdb_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                    "repo_file_path": "/terraform/aws/documentdb/docdb_cluster.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_docdb_cluster.examplea",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_docdb_cluster_parameter_group.examplea",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_102"
                },
                {
                    "check_id": "CKV_AWS_90",
                    "bc_check_id": "BC_AWS_NETWORKING_37",
                    "check_name": "Ensure DocDB TLS is not disabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "parameter/[0]/name",
                            "parameter/[0]/value"
                        ]
                    },
                    "code_block": [
                        [
                            37,
                            "resource \"aws_docdb_cluster_parameter_group\" \"examplea\" {\n"
                        ],
                        [
                            38,
                            "  family      = var.family\n"
                        ],
                        [
                            39,
                            "  name        = var.param_group_name\n"
                        ],
                        [
                            40,
                            "  description = \"docdb cluster parameter group\"\n"
                        ],
                        [
                            41,
                            "\n"
                        ],
                        [
                            42,
                            "  parameter {\n"
                        ],
                        [
                            43,
                            "    name  = \"tls\"\n"
                        ],
                        [
                            44,
                            "    value = \"disabled\"\n"
                        ],
                        [
                            45,
                            "  }\n"
                        ],
                        [
                            46,
                            "\n"
                        ],
                        [
                            47,
                            "  parameter {\n"
                        ],
                        [
                            48,
                            "    name  = \"audit_logs\"\n"
                        ],
                        [
                            49,
                            "    value = \"disabled\"\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "\n"
                        ],
                        [
                            52,
                            "  parameter {\n"
                        ],
                        [
                            53,
                            "    name  = \"change_stream_log_retention_duration\"\n"
                        ],
                        [
                            54,
                            "    value = var.change_stream_log_retention_duration\n"
                        ],
                        [
                            55,
                            "  }\n"
                        ],
                        [
                            56,
                            "\n"
                        ],
                        [
                            57,
                            "  parameter {\n"
                        ],
                        [
                            58,
                            "    name  = \"profiler\"\n"
                        ],
                        [
                            59,
                            "    value = var.profiler\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  parameter {\n"
                        ],
                        [
                            63,
                            "    name  = \"profiler_sampling_rate\"\n"
                        ],
                        [
                            64,
                            "    value = var.profiler_sampling_rate\n"
                        ],
                        [
                            65,
                            "  }\n"
                        ],
                        [
                            66,
                            "\n"
                        ],
                        [
                            67,
                            "  parameter {\n"
                        ],
                        [
                            68,
                            "    name  = \"profiler_threshold_ms\"\n"
                        ],
                        [
                            69,
                            "    value = var.profiler_threshold_ms\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  parameter {\n"
                        ],
                        [
                            73,
                            "    name  = \"ttl_monitor\"\n"
                        ],
                        [
                            74,
                            "    value = var.ttl_monitor\n"
                        ],
                        [
                            75,
                            "  }\n"
                        ],
                        [
                            76,
                            "  tags = {\n"
                        ],
                        [
                            77,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "}\n"
                        ]
                    ],
                    "file_path": "/documentdb/docdb_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                    "repo_file_path": "/terraform/aws/documentdb/docdb_cluster.tf",
                    "file_line_range": [
                        37,
                        79
                    ],
                    "resource": "aws_docdb_cluster_parameter_group.examplea",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBTLS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "parameter.4.value": [
                            {
                                "type": "variable",
                                "name": "profiler_sampling_rate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.4": [
                            {
                                "type": "variable",
                                "name": "profiler_sampling_rate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.5.value": [
                            {
                                "type": "variable",
                                "name": "profiler_threshold_ms",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.5": [
                            {
                                "type": "variable",
                                "name": "profiler_threshold_ms",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.6.value": [
                            {
                                "type": "variable",
                                "name": "ttl_monitor",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.6": [
                            {
                                "type": "variable",
                                "name": "ttl_monitor",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.3.value": [
                            {
                                "type": "variable",
                                "name": "profiler",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.3": [
                            {
                                "type": "variable",
                                "name": "profiler",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.2.value": [
                            {
                                "type": "variable",
                                "name": "change_stream_log_retention_duration",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.2": [
                            {
                                "type": "variable",
                                "name": "change_stream_log_retention_duration",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_37"
                },
                {
                    "check_id": "CKV_AWS_104",
                    "bc_check_id": "BC_AWS_GENERAL_74",
                    "check_name": "Ensure DocDB has audit logs enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "parameter"
                        ]
                    },
                    "code_block": [
                        [
                            37,
                            "resource \"aws_docdb_cluster_parameter_group\" \"examplea\" {\n"
                        ],
                        [
                            38,
                            "  family      = var.family\n"
                        ],
                        [
                            39,
                            "  name        = var.param_group_name\n"
                        ],
                        [
                            40,
                            "  description = \"docdb cluster parameter group\"\n"
                        ],
                        [
                            41,
                            "\n"
                        ],
                        [
                            42,
                            "  parameter {\n"
                        ],
                        [
                            43,
                            "    name  = \"tls\"\n"
                        ],
                        [
                            44,
                            "    value = \"disabled\"\n"
                        ],
                        [
                            45,
                            "  }\n"
                        ],
                        [
                            46,
                            "\n"
                        ],
                        [
                            47,
                            "  parameter {\n"
                        ],
                        [
                            48,
                            "    name  = \"audit_logs\"\n"
                        ],
                        [
                            49,
                            "    value = \"disabled\"\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "\n"
                        ],
                        [
                            52,
                            "  parameter {\n"
                        ],
                        [
                            53,
                            "    name  = \"change_stream_log_retention_duration\"\n"
                        ],
                        [
                            54,
                            "    value = var.change_stream_log_retention_duration\n"
                        ],
                        [
                            55,
                            "  }\n"
                        ],
                        [
                            56,
                            "\n"
                        ],
                        [
                            57,
                            "  parameter {\n"
                        ],
                        [
                            58,
                            "    name  = \"profiler\"\n"
                        ],
                        [
                            59,
                            "    value = var.profiler\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  parameter {\n"
                        ],
                        [
                            63,
                            "    name  = \"profiler_sampling_rate\"\n"
                        ],
                        [
                            64,
                            "    value = var.profiler_sampling_rate\n"
                        ],
                        [
                            65,
                            "  }\n"
                        ],
                        [
                            66,
                            "\n"
                        ],
                        [
                            67,
                            "  parameter {\n"
                        ],
                        [
                            68,
                            "    name  = \"profiler_threshold_ms\"\n"
                        ],
                        [
                            69,
                            "    value = var.profiler_threshold_ms\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "\n"
                        ],
                        [
                            72,
                            "  parameter {\n"
                        ],
                        [
                            73,
                            "    name  = \"ttl_monitor\"\n"
                        ],
                        [
                            74,
                            "    value = var.ttl_monitor\n"
                        ],
                        [
                            75,
                            "  }\n"
                        ],
                        [
                            76,
                            "  tags = {\n"
                        ],
                        [
                            77,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "}\n"
                        ]
                    ],
                    "file_path": "/documentdb/docdb_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                    "repo_file_path": "/terraform/aws/documentdb/docdb_cluster.tf",
                    "file_line_range": [
                        37,
                        79
                    ],
                    "resource": "aws_docdb_cluster_parameter_group.examplea",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DocDBAuditLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "parameter.4.value": [
                            {
                                "type": "variable",
                                "name": "profiler_sampling_rate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.4": [
                            {
                                "type": "variable",
                                "name": "profiler_sampling_rate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.5.value": [
                            {
                                "type": "variable",
                                "name": "profiler_threshold_ms",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.5": [
                            {
                                "type": "variable",
                                "name": "profiler_threshold_ms",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.6.value": [
                            {
                                "type": "variable",
                                "name": "ttl_monitor",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.6": [
                            {
                                "type": "variable",
                                "name": "ttl_monitor",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.3.value": [
                            {
                                "type": "variable",
                                "name": "profiler",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.3": [
                            {
                                "type": "variable",
                                "name": "profiler",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.2.value": [
                            {
                                "type": "variable",
                                "name": "change_stream_log_retention_duration",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ],
                        "parameter.2": [
                            {
                                "type": "variable",
                                "name": "change_stream_log_retention_duration",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/documentdb/docdb_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-docdb-has-audit-logs-enabled"
                },
                {
                    "check_id": "CKV_AWS_28",
                    "bc_check_id": "BC_AWS_GENERAL_6",
                    "check_name": "Ensure Dynamodb point in time recovery (backup) is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "point_in_time_recovery/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_dynamodb_table\" \"default\" {\n"
                        ],
                        [
                            11,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            12,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            13,
                            "  read_capacity  = 20\n"
                        ],
                        [
                            14,
                            "  write_capacity = 20\n"
                        ],
                        [
                            15,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            16,
                            "  range_key      = \"UserId\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  attribute {\n"
                        ],
                        [
                            19,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            20,
                            "    type = \"S\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  replica {\n"
                        ],
                        [
                            24,
                            "    region_name = \"us-east-2\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "  replica {\n"
                        ],
                        [
                            28,
                            "    region_name = \"us-west-2\"\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  # server_side_encryption {\n"
                        ],
                        [
                            32,
                            "  # \tenabled     = true\n"
                        ],
                        [
                            33,
                            "  # \tkms_key_arn = aws_kms_key.dynamo_db_kms.key_id\n"
                        ],
                        [
                            34,
                            "  # }\n"
                        ],
                        [
                            35,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_table.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_table.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_table.tf",
                    "file_line_range": [
                        10,
                        36
                    ],
                    "resource": "aws_dynamodb_table.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DynamodbRecovery",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_6"
                },
                {
                    "check_id": "CKV_AWS_119",
                    "bc_check_id": "BC_AWS_GENERAL_52",
                    "check_name": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption/[0]/enabled",
                            "server_side_encryption/[0]/kms_key_arn"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_dynamodb_table\" \"default\" {\n"
                        ],
                        [
                            11,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            12,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            13,
                            "  read_capacity  = 20\n"
                        ],
                        [
                            14,
                            "  write_capacity = 20\n"
                        ],
                        [
                            15,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            16,
                            "  range_key      = \"UserId\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  attribute {\n"
                        ],
                        [
                            19,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            20,
                            "    type = \"S\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  replica {\n"
                        ],
                        [
                            24,
                            "    region_name = \"us-east-2\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "  replica {\n"
                        ],
                        [
                            28,
                            "    region_name = \"us-west-2\"\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  # server_side_encryption {\n"
                        ],
                        [
                            32,
                            "  # \tenabled     = true\n"
                        ],
                        [
                            33,
                            "  # \tkms_key_arn = aws_kms_key.dynamo_db_kms.key_id\n"
                        ],
                        [
                            34,
                            "  # }\n"
                        ],
                        [
                            35,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_table.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_table.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_table.tf",
                    "file_line_range": [
                        10,
                        36
                    ],
                    "resource": "aws_dynamodb_table.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DynamoDBTablesEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            61,
                            "resource \"aws_security_group\" \"allow_public_outbound_sg\" {\n"
                        ],
                        [
                            62,
                            "  name        = \"allow-public-outbound-sg\"\n"
                        ],
                        [
                            63,
                            "  description = \"Allow HTTPS outbound traffic\"\n"
                        ],
                        [
                            64,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "  egress {\n"
                        ],
                        [
                            67,
                            "    from_port   = 443\n"
                        ],
                        [
                            68,
                            "    to_port     = 443\n"
                        ],
                        [
                            69,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            70,
                            "    cidr_blocks = [local.s3_prefix_list_cidr_block]\n"
                        ],
                        [
                            71,
                            "  }\n"
                        ],
                        [
                            72,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            73,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        61,
                        73
                    ],
                    "resource": "aws_security_group.allow_public_outbound_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "s3_prefix_list_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            91,
                            "resource \"aws_instance\" \"test\" {\n"
                        ],
                        [
                            92,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            93,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]\n"
                        ],
                        [
                            95,
                            "  subnet_id              = aws_subnet.private_subnet.id\n"
                        ],
                        [
                            96,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            97,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        91,
                        97
                    ],
                    "resource": "aws_instance.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_28",
                    "bc_check_id": "BC_AWS_GENERAL_6",
                    "check_name": "Ensure Dynamodb point in time recovery (backup) is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "point_in_time_recovery/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            99,
                            "resource \"aws_dynamodb_table\" \"basic_dynamodb_table\" {\n"
                        ],
                        [
                            100,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            101,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            102,
                            "  read_capacity  = 5\n"
                        ],
                        [
                            103,
                            "  write_capacity = 5\n"
                        ],
                        [
                            104,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            105,
                            "  range_key      = \"GameTitle\"\n"
                        ],
                        [
                            106,
                            "\n"
                        ],
                        [
                            107,
                            "  attribute {\n"
                        ],
                        [
                            108,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            109,
                            "    type = \"S\"\n"
                        ],
                        [
                            110,
                            "  }\n"
                        ],
                        [
                            111,
                            "\n"
                        ],
                        [
                            112,
                            "  attribute {\n"
                        ],
                        [
                            113,
                            "    name = \"GameTitle\"\n"
                        ],
                        [
                            114,
                            "    type = \"S\"\n"
                        ],
                        [
                            115,
                            "  }\n"
                        ],
                        [
                            116,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            117,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        99,
                        117
                    ],
                    "resource": "aws_dynamodb_table.basic_dynamodb_table",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DynamodbRecovery",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_6"
                },
                {
                    "check_id": "CKV_AWS_119",
                    "bc_check_id": "BC_AWS_GENERAL_52",
                    "check_name": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption/[0]/enabled",
                            "server_side_encryption/[0]/kms_key_arn"
                        ]
                    },
                    "code_block": [
                        [
                            99,
                            "resource \"aws_dynamodb_table\" \"basic_dynamodb_table\" {\n"
                        ],
                        [
                            100,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            101,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            102,
                            "  read_capacity  = 5\n"
                        ],
                        [
                            103,
                            "  write_capacity = 5\n"
                        ],
                        [
                            104,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            105,
                            "  range_key      = \"GameTitle\"\n"
                        ],
                        [
                            106,
                            "\n"
                        ],
                        [
                            107,
                            "  attribute {\n"
                        ],
                        [
                            108,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            109,
                            "    type = \"S\"\n"
                        ],
                        [
                            110,
                            "  }\n"
                        ],
                        [
                            111,
                            "\n"
                        ],
                        [
                            112,
                            "  attribute {\n"
                        ],
                        [
                            113,
                            "    name = \"GameTitle\"\n"
                        ],
                        [
                            114,
                            "    type = \"S\"\n"
                        ],
                        [
                            115,
                            "  }\n"
                        ],
                        [
                            116,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            117,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        99,
                        117
                    ],
                    "resource": "aws_dynamodb_table.basic_dynamodb_table",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DynamoDBTablesEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_106",
                    "bc_check_id": "BC_AWS_GENERAL_81",
                    "check_name": "Ensure EBS default encryption is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ebs_encryption_by_default\" \"disabled\" {\n"
                        ],
                        [
                            4,
                            "  enabled = false\n"
                        ],
                        [
                            5,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_encryption_defaults.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_encryption_defaults.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_encryption_defaults.tf",
                    "file_line_range": [
                        3,
                        5
                    ],
                    "resource": "aws_ebs_encryption_by_default.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EBSDefaultEncryption",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-ebs-default-encryption-is-enabled"
                },
                {
                    "check_id": "CKV_AWS_183",
                    "bc_check_id": "BC_AWS_GENERAL_103",
                    "check_name": "Ensure EBS Snapshot Copy is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_ebs_snapshot_copy\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  source_snapshot_id = aws_ebs_snapshot.test.id\n"
                        ],
                        [
                            7,
                            "  source_region      = data.aws_region.current.name\n"
                        ],
                        [
                            8,
                            "  encrypted          = true\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  tags = {\n"
                        ],
                        [
                            11,
                            "    Name = \"testAccEBSSnapshotCopyWithKMSConfig\"\n"
                        ],
                        [
                            12,
                            "    test = \"fail\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_snapshot_copy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_snapshot_copy.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_snapshot_copy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_ebs_snapshot_copy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EBSSnapshotCopyEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "testAccEBSSnapshotCopyWithKMSConfig",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_103"
                },
                {
                    "check_id": "CKV_AWS_189",
                    "bc_check_id": "BC_AWS_GENERAL_109",
                    "check_name": "Ensure EBS Volume is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_ebs_volume\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  availability_zone = \"eu-west-1a\"\n"
                        ],
                        [
                            14,
                            "  size              = 1\n"
                        ],
                        [
                            15,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_volume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_volume.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_volume.tf",
                    "file_line_range": [
                        12,
                        16
                    ],
                    "resource": "aws_ebs_volume.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EBSVolumeEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_109"
                },
                {
                    "check_id": "CKV_AWS_3",
                    "bc_check_id": "BC_AWS_GENERAL_3",
                    "check_name": "Ensure all data stored in the EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_ebs_volume\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  availability_zone = \"eu-west-1a\"\n"
                        ],
                        [
                            14,
                            "  size              = 1\n"
                        ],
                        [
                            15,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_volume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_volume.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_volume.tf",
                    "file_line_range": [
                        12,
                        16
                    ],
                    "resource": "aws_ebs_volume.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_3-encrypt-eps-volume"
                },
                {
                    "check_id": "CKV_AWS_163",
                    "bc_check_id": "BC_AWS_GENERAL_8",
                    "check_name": "Ensure ECR image scanning on push is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_scanning_configuration/[0]/scan_on_push"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_ecr_repository\" \"name\" {\n"
                        ],
                        [
                            11,
                            "  name                 = \"bar\"\n"
                        ],
                        [
                            12,
                            "  image_tag_mutability = \"MUTABLE\"\n"
                        ],
                        [
                            13,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository.tf",
                    "file_line_range": [
                        10,
                        14
                    ],
                    "resource": "aws_ecr_repository.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_8"
                },
                {
                    "check_id": "CKV_AWS_136",
                    "bc_check_id": "BC_AWS_GENERAL_53",
                    "check_name": "Ensure that ECR repositories are encrypted using KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/encryption_type"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_ecr_repository\" \"name\" {\n"
                        ],
                        [
                            11,
                            "  name                 = \"bar\"\n"
                        ],
                        [
                            12,
                            "  image_tag_mutability = \"MUTABLE\"\n"
                        ],
                        [
                            13,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository.tf",
                    "file_line_range": [
                        10,
                        14
                    ],
                    "resource": "aws_ecr_repository.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_51",
                    "bc_check_id": "BC_AWS_GENERAL_24",
                    "check_name": "Ensure ECR Image Tags are immutable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_tag_mutability"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_ecr_repository\" \"name\" {\n"
                        ],
                        [
                            11,
                            "  name                 = \"bar\"\n"
                        ],
                        [
                            12,
                            "  image_tag_mutability = \"MUTABLE\"\n"
                        ],
                        [
                            13,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository.tf",
                    "file_line_range": [
                        10,
                        14
                    ],
                    "resource": "aws_ecr_repository.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
                },
                {
                    "check_id": "CKV_AWS_163",
                    "bc_check_id": "BC_AWS_GENERAL_8",
                    "check_name": "Ensure ECR image scanning on push is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_scanning_configuration/[0]/scan_on_push"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_ecr_repository\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"bar\"\n"
                        ],
                        [
                            6,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_ecr_repository.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_8"
                },
                {
                    "check_id": "CKV_AWS_136",
                    "bc_check_id": "BC_AWS_GENERAL_53",
                    "check_name": "Ensure that ECR repositories are encrypted using KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/encryption_type"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_ecr_repository\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"bar\"\n"
                        ],
                        [
                            6,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_ecr_repository.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_51",
                    "bc_check_id": "BC_AWS_GENERAL_24",
                    "check_name": "Ensure ECR Image Tags are immutable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_tag_mutability"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_ecr_repository\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"bar\"\n"
                        ],
                        [
                            6,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_ecr_repository.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
                },
                {
                    "check_id": "CKV_AWS_32",
                    "bc_check_id": "BC_AWS_PUBLIC_1",
                    "check_name": "Ensure ECR policy is not set to public",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_ecr_repository_policy\" \"positive2\" {\n"
                        ],
                        [
                            10,
                            "  repository = aws_ecr_repository.foo.name\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  policy = <<EOF\n"
                        ],
                        [
                            13,
                            "{\n"
                        ],
                        [
                            14,
                            "    \"Version\": \"2008-10-17\",\n"
                        ],
                        [
                            15,
                            "    \"Statement\": [\n"
                        ],
                        [
                            16,
                            "        {\n"
                        ],
                        [
                            17,
                            "            \"Sid\": \"new policy\",\n"
                        ],
                        [
                            18,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            19,
                            "            \"Principal\": \"*\",\n"
                        ],
                        [
                            20,
                            "            \"Action\": [\n"
                        ],
                        [
                            21,
                            "                \"ecr:GetDownloadUrlForLayer\",\n"
                        ],
                        [
                            22,
                            "                \"ecr:BatchGetImage\",\n"
                        ],
                        [
                            23,
                            "                \"ecr:BatchCheckLayerAvailability\",\n"
                        ],
                        [
                            24,
                            "                \"ecr:PutImage\",\n"
                        ],
                        [
                            25,
                            "                \"ecr:InitiateLayerUpload\",\n"
                        ],
                        [
                            26,
                            "                \"ecr:UploadLayerPart\",\n"
                        ],
                        [
                            27,
                            "                \"ecr:CompleteLayerUpload\",\n"
                        ],
                        [
                            28,
                            "                \"ecr:DescribeRepositories\",\n"
                        ],
                        [
                            29,
                            "                \"ecr:GetRepositoryPolicy\",\n"
                        ],
                        [
                            30,
                            "                \"ecr:ListImages\",\n"
                        ],
                        [
                            31,
                            "                \"ecr:DeleteRepository\",\n"
                        ],
                        [
                            32,
                            "                \"ecr:BatchDeleteImage\",\n"
                        ],
                        [
                            33,
                            "                \"ecr:SetRepositoryPolicy\",\n"
                        ],
                        [
                            34,
                            "                \"ecr:DeleteRepositoryPolicy\"\n"
                        ],
                        [
                            35,
                            "            ]\n"
                        ],
                        [
                            36,
                            "        }\n"
                        ],
                        [
                            37,
                            "    ]\n"
                        ],
                        [
                            38,
                            "}\n"
                        ],
                        [
                            39,
                            "EOF\n"
                        ],
                        [
                            40,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_is_publicly_accessible.tf",
                    "file_line_range": [
                        9,
                        40
                    ],
                    "resource": "aws_ecr_repository_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "repository": [
                            {
                                "type": "resource",
                                "name": "aws_ecr_repository.foo",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_without_policy.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/public_1-ecr-repositories-not-public"
                },
                {
                    "check_id": "CKV_AWS_32",
                    "bc_check_id": "BC_AWS_PUBLIC_1",
                    "check_name": "Ensure ECR policy is not set to public",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_ecr_repository_policy\" \"fail\" {\n"
                        ],
                        [
                            2,
                            "  repository = \"public_repo\"\n"
                        ],
                        [
                            3,
                            "  policy     = <<POLICY\n"
                        ],
                        [
                            4,
                            "{   \"Version\": \"2008-10-17\",\n"
                        ],
                        [
                            5,
                            "    \"Statement\": [\n"
                        ],
                        [
                            6,
                            "        {\n"
                        ],
                        [
                            7,
                            "            \"Sid\": \"new policy\",\n"
                        ],
                        [
                            8,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            9,
                            "            \"Principal\": \"*\",\n"
                        ],
                        [
                            10,
                            "            \"Action\": [\n"
                        ],
                        [
                            11,
                            "                \"ecr:GetDownloadUrlForLayer\",\n"
                        ],
                        [
                            12,
                            "                \"ecr:BatchGetImage\",\n"
                        ],
                        [
                            13,
                            "                \"ecr:BatchCheckLayerAvailability\",\n"
                        ],
                        [
                            14,
                            "                \"ecr:PutImage\",\n"
                        ],
                        [
                            15,
                            "                \"ecr:InitiateLayerUpload\",\n"
                        ],
                        [
                            16,
                            "                \"ecr:UploadLayerPart\",\n"
                        ],
                        [
                            17,
                            "                \"ecr:CompleteLayerUpload\",\n"
                        ],
                        [
                            18,
                            "                \"ecr:DescribeRepositories\",\n"
                        ],
                        [
                            19,
                            "                \"ecr:GetRepositoryPolicy\",\n"
                        ],
                        [
                            20,
                            "                \"ecr:ListImages\",\n"
                        ],
                        [
                            21,
                            "                \"ecr:DeleteRepository\",\n"
                        ],
                        [
                            22,
                            "                \"ecr:BatchDeleteImage\",\n"
                        ],
                        [
                            23,
                            "                \"ecr:SetRepositoryPolicy\",\n"
                        ],
                        [
                            24,
                            "                \"ecr:DeleteRepositoryPolicy\"\n"
                        ],
                        [
                            25,
                            "            ]\n"
                        ],
                        [
                            26,
                            "        }\n"
                        ],
                        [
                            27,
                            "    ]\n"
                        ],
                        [
                            28,
                            "    }\n"
                        ],
                        [
                            29,
                            "POLICY\n"
                        ],
                        [
                            30,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_policy.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_policy.tf",
                    "file_line_range": [
                        1,
                        30
                    ],
                    "resource": "aws_ecr_repository_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRPolicy",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_1-ecr-repositories-not-public"
                },
                {
                    "check_id": "CKV_AWS_163",
                    "bc_check_id": "BC_AWS_GENERAL_8",
                    "check_name": "Ensure ECR image scanning on push is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_scanning_configuration/[0]/scan_on_push"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ecr_repository\" \"foo\" {\n"
                        ],
                        [
                            4,
                            "  name = \"bar\"\n"
                        ],
                        [
                            5,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_without_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_ecr_repository.foo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_8"
                },
                {
                    "check_id": "CKV_AWS_136",
                    "bc_check_id": "BC_AWS_GENERAL_53",
                    "check_name": "Ensure that ECR repositories are encrypted using KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/encryption_type"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ecr_repository\" \"foo\" {\n"
                        ],
                        [
                            4,
                            "  name = \"bar\"\n"
                        ],
                        [
                            5,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_without_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_ecr_repository.foo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_51",
                    "bc_check_id": "BC_AWS_GENERAL_24",
                    "check_name": "Ensure ECR Image Tags are immutable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "image_tag_mutability"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_ecr_repository\" \"foo\" {\n"
                        ],
                        [
                            4,
                            "  name = \"bar\"\n"
                        ],
                        [
                            5,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecr/ecr_repository_without_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "repo_file_path": "/terraform/aws/ecr/ecr_repository_without_policy.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_ecr_repository.foo",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
                },
                {
                    "check_id": "CKV_AWS_65",
                    "bc_check_id": "BC_AWS_LOGGING_11",
                    "check_name": "Ensure container insights are enabled on ECS cluster",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_ecs_cluster\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  name = \"white-hart\"\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_cluster.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_cluster.tf",
                    "file_line_range": [
                        11,
                        14
                    ],
                    "resource": "aws_ecs_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSClusterContainerInsights",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_11"
                },
                {
                    "check_id": "CKV_AWS_97",
                    "bc_check_id": "BC_AWS_GENERAL_39",
                    "check_name": "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "volume/[0]/efs_volume_configuration/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_ecs_task_definition\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  family                = \"service\"\n"
                        ],
                        [
                            9,
                            "  container_definitions = <<EOF\n"
                        ],
                        [
                            10,
                            "[\n"
                        ],
                        [
                            11,
                            "  {\n"
                        ],
                        [
                            12,
                            "    \"name\": \"my_service\",\n"
                        ],
                        [
                            13,
                            "    \"essential\": true,\n"
                        ],
                        [
                            14,
                            "    \"memory\": 256,\n"
                        ],
                        [
                            15,
                            "    \"environment\": [\n"
                        ],
                        [
                            16,
                            "      { \"name\": \"ENVIRONMENT\", \"value\": \"development\" },\n"
                        ],
                        [
                            17,
                            "      { \"name\": \"DATABASE_PASSWORD\", \"value\": \"oh no D:\"}\n"
                        ],
                        [
                            18,
                            "    ]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "]\n"
                        ],
                        [
                            21,
                            "EOF\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  volume {\n"
                        ],
                        [
                            24,
                            "    name = \"service-storage\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "    efs_volume_configuration {\n"
                        ],
                        [
                            27,
                            "      file_system_id = aws_efs_file_system.fs.id\n"
                        ],
                        [
                            28,
                            "      root_directory = \"/opt/data\"\n"
                        ],
                        [
                            29,
                            "      authorization_config {\n"
                        ],
                        [
                            30,
                            "        access_point_id = aws_efs_access_point.fail.id\n"
                        ],
                        [
                            31,
                            "        iam             = \"ENABLED\"\n"
                        ],
                        [
                            32,
                            "      }\n"
                        ],
                        [
                            33,
                            "    }\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition.tf",
                    "file_line_range": [
                        7,
                        36
                    ],
                    "resource": "aws_ecs_task_definition.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ECSTaskDefinitionEFSVolumeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_39"
                },
                {
                    "check_id": "CKV_AWS_184",
                    "bc_check_id": "BC_AWS_GENERAL_104",
                    "check_name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            39,
                            "resource \"aws_efs_file_system\" \"fs\" {\n"
                        ],
                        [
                            40,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            41,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition.tf",
                    "file_line_range": [
                        39,
                        41
                    ],
                    "resource": "aws_efs_file_system.fs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSFileSystemEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_104"
                },
                {
                    "check_id": "CKV_AWS_42",
                    "bc_check_id": "BC_AWS_GENERAL_17",
                    "check_name": "Ensure EFS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            39,
                            "resource \"aws_efs_file_system\" \"fs\" {\n"
                        ],
                        [
                            40,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            41,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition.tf",
                    "file_line_range": [
                        39,
                        41
                    ],
                    "resource": "aws_efs_file_system.fs",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSEncryptionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_17"
                },
                {
                    "check_id": "CKV_AWS_184",
                    "bc_check_id": "BC_AWS_GENERAL_104",
                    "check_name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"sharedstore\" {\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  creation_token = var.efs[\"creation_token\"]\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  lifecycle_policy {\n"
                        ],
                        [
                            13,
                            "    transition_to_ia = var.efs[\"transition_to_ia\"]\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  kms_key_id                      = \"\"\n"
                        ],
                        [
                            17,
                            "  encrypted                       = false\n"
                        ],
                        [
                            18,
                            "  performance_mode                = var.efs[\"performance_mode\"]\n"
                        ],
                        [
                            19,
                            "  provisioned_throughput_in_mibps = var.efs[\"provisioned_throughput_in_mibps\"]\n"
                        ],
                        [
                            20,
                            "  throughput_mode                 = var.efs[\"throughput_mode\"]\n"
                        ],
                        [
                            21,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs.tf",
                    "repo_file_path": "/terraform/aws/efs/efs.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_efs_file_system.sharedstore",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSFileSystemEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_104"
                },
                {
                    "check_id": "CKV_AWS_42",
                    "bc_check_id": "BC_AWS_GENERAL_17",
                    "check_name": "Ensure EFS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"sharedstore\" {\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  creation_token = var.efs[\"creation_token\"]\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  lifecycle_policy {\n"
                        ],
                        [
                            13,
                            "    transition_to_ia = var.efs[\"transition_to_ia\"]\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  kms_key_id                      = \"\"\n"
                        ],
                        [
                            17,
                            "  encrypted                       = false\n"
                        ],
                        [
                            18,
                            "  performance_mode                = var.efs[\"performance_mode\"]\n"
                        ],
                        [
                            19,
                            "  provisioned_throughput_in_mibps = var.efs[\"provisioned_throughput_in_mibps\"]\n"
                        ],
                        [
                            20,
                            "  throughput_mode                 = var.efs[\"throughput_mode\"]\n"
                        ],
                        [
                            21,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs.tf",
                    "repo_file_path": "/terraform/aws/efs/efs.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_efs_file_system.sharedstore",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSEncryptionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_17"
                },
                {
                    "check_id": "CKV_AWS_184",
                    "bc_check_id": "BC_AWS_GENERAL_104",
                    "check_name": "Ensure resource is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"not_secure\" {\n"
                        ],
                        [
                            9,
                            "  creation_token = \"efs-not-secure\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    Name = \"NotSecure\"\n"
                        ],
                        [
                            13,
                            "    test = \"fails\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "file_line_range": [
                        8,
                        15
                    ],
                    "resource": "aws_efs_file_system.not_secure",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSFileSystemEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "NotSecure",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_104"
                },
                {
                    "check_id": "CKV_AWS_42",
                    "bc_check_id": "BC_AWS_GENERAL_17",
                    "check_name": "Ensure EFS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"not_secure\" {\n"
                        ],
                        [
                            9,
                            "  creation_token = \"efs-not-secure\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    Name = \"NotSecure\"\n"
                        ],
                        [
                            13,
                            "    test = \"fails\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "file_line_range": [
                        8,
                        15
                    ],
                    "resource": "aws_efs_file_system.not_secure",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EFSEncryptionEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "NotSecure",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_17"
                },
                {
                    "check_id": "CKV_AWS_39",
                    "bc_check_id": "BC_AWS_KUBERNETES_2",
                    "check_name": "Ensure Amazon EKS public endpoint disabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config/[0]/endpoint_public_access"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_eks_cluster\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  name     = \"fail_cluster\"\n"
                        ],
                        [
                            15,
                            "  role_arn = var.cluster_arn\n"
                        ],
                        [
                            16,
                            "  vpc_config {\n"
                        ],
                        [
                            17,
                            "    endpoint_public_access = true\n"
                        ],
                        [
                            18,
                            "    public_access_cidrs    = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eks/eks_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eks/eks_cluster.tf",
                    "repo_file_path": "/terraform/aws/eks/eks_cluster.tf",
                    "file_line_range": [
                        13,
                        21
                    ],
                    "resource": "aws_eks_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccess",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_2"
                },
                {
                    "check_id": "CKV_AWS_58",
                    "bc_check_id": "BC_AWS_KUBERNETES_3",
                    "check_name": "Ensure EKS Cluster has Secrets Encryption Enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_config/[0]/resources"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_eks_cluster\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  name     = \"fail_cluster\"\n"
                        ],
                        [
                            15,
                            "  role_arn = var.cluster_arn\n"
                        ],
                        [
                            16,
                            "  vpc_config {\n"
                        ],
                        [
                            17,
                            "    endpoint_public_access = true\n"
                        ],
                        [
                            18,
                            "    public_access_cidrs    = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eks/eks_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eks/eks_cluster.tf",
                    "repo_file_path": "/terraform/aws/eks/eks_cluster.tf",
                    "file_line_range": [
                        13,
                        21
                    ],
                    "resource": "aws_eks_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EKSSecretsEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_3"
                },
                {
                    "check_id": "CKV_AWS_38",
                    "bc_check_id": "BC_AWS_KUBERNETES_1",
                    "check_name": "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config/[0]/public_access_cidrs"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_eks_cluster\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  name     = \"fail_cluster\"\n"
                        ],
                        [
                            15,
                            "  role_arn = var.cluster_arn\n"
                        ],
                        [
                            16,
                            "  vpc_config {\n"
                        ],
                        [
                            17,
                            "    endpoint_public_access = true\n"
                        ],
                        [
                            18,
                            "    public_access_cidrs    = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eks/eks_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eks/eks_cluster.tf",
                    "repo_file_path": "/terraform/aws/eks/eks_cluster.tf",
                    "file_line_range": [
                        13,
                        21
                    ],
                    "resource": "aws_eks_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EKSPublicAccessCIDR",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_1"
                },
                {
                    "check_id": "CKV_AWS_37",
                    "bc_check_id": "BC_AWS_KUBERNETES_4",
                    "check_name": "Ensure Amazon EKS control plane logging enabled for all log types",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cluster_log_types"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_eks_cluster\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  name     = \"fail_cluster\"\n"
                        ],
                        [
                            15,
                            "  role_arn = var.cluster_arn\n"
                        ],
                        [
                            16,
                            "  vpc_config {\n"
                        ],
                        [
                            17,
                            "    endpoint_public_access = true\n"
                        ],
                        [
                            18,
                            "    public_access_cidrs    = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eks/eks_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eks/eks_cluster.tf",
                    "repo_file_path": "/terraform/aws/eks/eks_cluster.tf",
                    "file_line_range": [
                        13,
                        21
                    ],
                    "resource": "aws_eks_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EKSControlPlaneLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_4"
                },
                {
                    "check_id": "CKV_AWS_100",
                    "bc_check_id": "BC_AWS_KUBERNETES_5",
                    "check_name": "Ensure Amazon EKS Node group has implicit SSH access from 0.0.0.0/0",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "remote_access/[0]/ec2_ssh_key",
                            "remote_access/[0]/source_security_group_ids"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_eks_node_group\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  cluster_name    = aws_eks_cluster.example.name\n"
                        ],
                        [
                            6,
                            "  node_group_name = \"example\"\n"
                        ],
                        [
                            7,
                            "  node_role_arn   = aws_iam_role.example.arn\n"
                        ],
                        [
                            8,
                            "  subnet_ids      = aws_subnet.example[*].id\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  remote_access {\n"
                        ],
                        [
                            11,
                            "    ec2_ssh_key = \"some-key\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  scaling_config {\n"
                        ],
                        [
                            15,
                            "    desired_size = 1\n"
                        ],
                        [
                            16,
                            "    max_size     = 1\n"
                        ],
                        [
                            17,
                            "    min_size     = 1\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eks/eks_node.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eks/eks_node.tf",
                    "repo_file_path": "/terraform/aws/eks/eks_node.tf",
                    "file_line_range": [
                        4,
                        20
                    ],
                    "resource": "aws_eks_node_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EKSNodeGroupRemoteAccess",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_kubernetes_5"
                },
                {
                    "check_id": "CKV_AWS_134",
                    "bc_check_id": "BC_AWS_GENERAL_45",
                    "check_name": "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "snapshot_retention_limit"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_elasticache_cluster\" \"fail_redis\" {\n"
                        ],
                        [
                            8,
                            "  cluster_id           = \"cluster\"\n"
                        ],
                        [
                            9,
                            "  engine               = \"redis\"\n"
                        ],
                        [
                            10,
                            "  node_type            = \"cache.t2.micro\"\n"
                        ],
                        [
                            11,
                            "  num_cache_nodes      = 1\n"
                        ],
                        [
                            12,
                            "  parameter_group_name = \"default.redis6.x\"\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_cluster.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_cluster.tf",
                    "file_line_range": [
                        7,
                        16
                    ],
                    "resource": "aws_elasticache_cluster.fail_redis",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticCacheAutomaticBackup",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on"
                },
                {
                    "check_id": "CKV_AWS_31",
                    "bc_check_id": "BC_AWS_GENERAL_11",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit and has auth token",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "transit_encryption_enabled",
                            "auth_token"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"tf-%s\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"test description\"\n"
                        ],
                        [
                            13,
                            "  node_type                     = \"cache.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  number_cache_clusters         = \"1\"\n"
                        ],
                        [
                            15,
                            "  port                          = 6379\n"
                        ],
                        [
                            16,
                            "  subnet_group_name             = aws_elasticache_subnet_group.bar.name\n"
                        ],
                        [
                            17,
                            "  security_group_ids            = [aws_security_group.bar.id]\n"
                        ],
                        [
                            18,
                            "  parameter_group_name          = \"default.redis3.2\"\n"
                        ],
                        [
                            19,
                            "  availability_zones            = [data.aws_availability_zones.available.names[0]]\n"
                        ],
                        [
                            20,
                            "  engine_version                = \"3.2.6\"\n"
                        ],
                        [
                            21,
                            "  transit_encryption_enabled    = false\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        25
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtTransitAuthToken",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_11"
                },
                {
                    "check_id": "CKV_AWS_29",
                    "bc_check_id": "BC_AWS_GENERAL_9",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "at_rest_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"tf-%s\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"test description\"\n"
                        ],
                        [
                            13,
                            "  node_type                     = \"cache.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  number_cache_clusters         = \"1\"\n"
                        ],
                        [
                            15,
                            "  port                          = 6379\n"
                        ],
                        [
                            16,
                            "  subnet_group_name             = aws_elasticache_subnet_group.bar.name\n"
                        ],
                        [
                            17,
                            "  security_group_ids            = [aws_security_group.bar.id]\n"
                        ],
                        [
                            18,
                            "  parameter_group_name          = \"default.redis3.2\"\n"
                        ],
                        [
                            19,
                            "  availability_zones            = [data.aws_availability_zones.available.names[0]]\n"
                        ],
                        [
                            20,
                            "  engine_version                = \"3.2.6\"\n"
                        ],
                        [
                            21,
                            "  transit_encryption_enabled    = false\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        25
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtRest",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_9"
                },
                {
                    "check_id": "CKV_AWS_191",
                    "bc_check_id": "BC_AWS_GENERAL_111",
                    "check_name": "Ensure Elasticache replication group is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"tf-%s\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"test description\"\n"
                        ],
                        [
                            13,
                            "  node_type                     = \"cache.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  number_cache_clusters         = \"1\"\n"
                        ],
                        [
                            15,
                            "  port                          = 6379\n"
                        ],
                        [
                            16,
                            "  subnet_group_name             = aws_elasticache_subnet_group.bar.name\n"
                        ],
                        [
                            17,
                            "  security_group_ids            = [aws_security_group.bar.id]\n"
                        ],
                        [
                            18,
                            "  parameter_group_name          = \"default.redis3.2\"\n"
                        ],
                        [
                            19,
                            "  availability_zones            = [data.aws_availability_zones.available.names[0]]\n"
                        ],
                        [
                            20,
                            "  engine_version                = \"3.2.6\"\n"
                        ],
                        [
                            21,
                            "  transit_encryption_enabled    = false\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        25
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_111"
                },
                {
                    "check_id": "CKV_AWS_30",
                    "bc_check_id": "BC_AWS_GENERAL_10",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "transit_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"tf-%s\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"test description\"\n"
                        ],
                        [
                            13,
                            "  node_type                     = \"cache.t2.micro\"\n"
                        ],
                        [
                            14,
                            "  number_cache_clusters         = \"1\"\n"
                        ],
                        [
                            15,
                            "  port                          = 6379\n"
                        ],
                        [
                            16,
                            "  subnet_group_name             = aws_elasticache_subnet_group.bar.name\n"
                        ],
                        [
                            17,
                            "  security_group_ids            = [aws_security_group.bar.id]\n"
                        ],
                        [
                            18,
                            "  parameter_group_name          = \"default.redis3.2\"\n"
                        ],
                        [
                            19,
                            "  availability_zones            = [data.aws_availability_zones.available.names[0]]\n"
                        ],
                        [
                            20,
                            "  engine_version                = \"3.2.6\"\n"
                        ],
                        [
                            21,
                            "  transit_encryption_enabled    = false\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        25
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtTransit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_10"
                },
                {
                    "check_id": "CKV_AWS_196",
                    "bc_check_id": null,
                    "check_name": "Ensure no aws_elasticache_security_group resources exist",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_elasticache_security_group\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  name                 = \"elasticache-security-group\"\n"
                        ],
                        [
                            9,
                            "  security_group_names = [aws_security_group.bar.name]\n"
                        ],
                        [
                            10,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_security_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_security_group.tf",
                    "file_line_range": [
                        7,
                        11
                    ],
                    "resource": "aws_elasticache_security_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheHasSecurityGroup",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_elasticache_security_group\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  name                 = \"elasticache-security-group\"\n"
                        ],
                        [
                            9,
                            "  security_group_names = [aws_security_group.bar.name]\n"
                        ],
                        [
                            10,
                            "  tags                 = { test = \"fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/elasticache_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/elasticache_security_group.tf",
                    "repo_file_path": "/terraform/aws/elasticache/elasticache_security_group.tf",
                    "file_line_range": [
                        7,
                        11
                    ],
                    "resource": "aws_elasticache_security_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_134",
                    "bc_check_id": "BC_AWS_GENERAL_45",
                    "check_name": "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "snapshot_retention_limit"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticache_cluster\" \"fails\" {\n"
                        ],
                        [
                            4,
                            "  cluster_id      = \"cluster-example\"\n"
                        ],
                        [
                            5,
                            "  engine          = \"redis\"\n"
                        ],
                        [
                            6,
                            "  node_type       = \"cache.m4.large\"\n"
                        ],
                        [
                            7,
                            "  num_cache_nodes = 1\n"
                        ],
                        [
                            8,
                            "  engine_version  = \"2.6.13\"\n"
                        ],
                        [
                            9,
                            "  port            = 6379\n"
                        ],
                        [
                            10,
                            "  tags = {\n"
                        ],
                        [
                            11,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticache/redis_not_compliant.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticache/redis_not_compliant.tf",
                    "repo_file_path": "/terraform/aws/elasticache/redis_not_compliant.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticache_cluster.fails",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticCacheAutomaticBackup",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on"
                },
                {
                    "check_id": "CKV_AWS_31",
                    "bc_check_id": "BC_AWS_GENERAL_11",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit and has auth token",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "transit_encryption_enabled",
                            "auth_token"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"foo\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"my foo cluster\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  at_rest_encryption_enabled = false\n"
                        ],
                        [
                            15,
                            "  tags                       = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        16
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtTransitAuthToken",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_11"
                },
                {
                    "check_id": "CKV_AWS_29",
                    "bc_check_id": "BC_AWS_GENERAL_9",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "at_rest_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"foo\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"my foo cluster\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  at_rest_encryption_enabled = false\n"
                        ],
                        [
                            15,
                            "  tags                       = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        16
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtRest",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_9"
                },
                {
                    "check_id": "CKV_AWS_191",
                    "bc_check_id": "BC_AWS_GENERAL_111",
                    "check_name": "Ensure Elasticache replication group is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"foo\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"my foo cluster\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  at_rest_encryption_enabled = false\n"
                        ],
                        [
                            15,
                            "  tags                       = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        16
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_111"
                },
                {
                    "check_id": "CKV_AWS_30",
                    "bc_check_id": "BC_AWS_GENERAL_10",
                    "check_name": "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "transit_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_elasticache_replication_group\" \"fail\" {\n"
                        ],
                        [
                            11,
                            "  replication_group_id          = \"foo\"\n"
                        ],
                        [
                            12,
                            "  replication_group_description = \"my foo cluster\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  at_rest_encryption_enabled = false\n"
                        ],
                        [
                            15,
                            "  tags                       = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticache_replication_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticache_replication_group.tf",
                    "file_line_range": [
                        10,
                        16
                    ],
                    "resource": "aws_elasticache_replication_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticacheReplicationGroupEncryptionAtTransit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_10"
                },
                {
                    "check_id": "CKV_AWS_137",
                    "bc_check_id": "BC_AWS_NETWORKING_42",
                    "check_name": "Ensure that Elasticsearch is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_options"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elasticsearch_domain\" \"es_not_secure_policy\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"es-not-secure-policy\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_options {\n"
                        ],
                        [
                            9,
                            "    ebs_enabled = true\n"
                        ],
                        [
                            10,
                            "    volume_size = 10\n"
                        ],
                        [
                            11,
                            "    volume_type = \"gp2\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_elasticsearch_domain.es_not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_5",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_3",
                    "check_name": "Ensure all data stored in the Elasticsearch is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypt_at_rest/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elasticsearch_domain\" \"es_not_secure_policy\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"es-not-secure-policy\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_options {\n"
                        ],
                        [
                            9,
                            "    ebs_enabled = true\n"
                        ],
                        [
                            10,
                            "    volume_size = 10\n"
                        ],
                        [
                            11,
                            "    volume_type = \"gp2\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_elasticsearch_domain.es_not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest"
                },
                {
                    "check_id": "CKV_AWS_84",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_7",
                    "check_name": "Ensure Elasticsearch Domain Logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "log_publishing_options/[0]/cloudwatch_log_group_arn"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elasticsearch_domain\" \"es_not_secure_policy\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"es-not-secure-policy\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_options {\n"
                        ],
                        [
                            9,
                            "    ebs_enabled = true\n"
                        ],
                        [
                            10,
                            "    volume_size = 10\n"
                        ],
                        [
                            11,
                            "    volume_type = \"gp2\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_elasticsearch_domain.es_not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_7"
                },
                {
                    "check_id": "CKV_AWS_83",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_6",
                    "check_name": "Ensure Elasticsearch Domain enforces HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "domain_endpoint_options/[0]/enforce_https"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elasticsearch_domain\" \"es_not_secure_policy\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"es-not-secure-policy\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  ebs_options {\n"
                        ],
                        [
                            9,
                            "    ebs_enabled = true\n"
                        ],
                        [
                            10,
                            "    volume_size = 10\n"
                        ],
                        [
                            11,
                            "    volume_type = \"gp2\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_domain_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_elasticsearch_domain.es_not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainEnforceHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_6"
                },
                {
                    "check_id": "CKV_AWS_137",
                    "bc_check_id": "BC_AWS_NETWORKING_42",
                    "check_name": "Ensure that Elasticsearch is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_options"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"no_iam\" {\n"
                        ],
                        [
                            4,
                            "  domain_name           = \"tf-test\"\n"
                        ],
                        [
                            5,
                            "  elasticsearch_version = \"2.3\"\n"
                        ],
                        [
                            6,
                            "  tags                  = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_elasticsearch_domain.no_iam",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_5",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_3",
                    "check_name": "Ensure all data stored in the Elasticsearch is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypt_at_rest/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"no_iam\" {\n"
                        ],
                        [
                            4,
                            "  domain_name           = \"tf-test\"\n"
                        ],
                        [
                            5,
                            "  elasticsearch_version = \"2.3\"\n"
                        ],
                        [
                            6,
                            "  tags                  = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_elasticsearch_domain.no_iam",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest"
                },
                {
                    "check_id": "CKV_AWS_84",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_7",
                    "check_name": "Ensure Elasticsearch Domain Logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "log_publishing_options/[0]/cloudwatch_log_group_arn"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"no_iam\" {\n"
                        ],
                        [
                            4,
                            "  domain_name           = \"tf-test\"\n"
                        ],
                        [
                            5,
                            "  elasticsearch_version = \"2.3\"\n"
                        ],
                        [
                            6,
                            "  tags                  = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_elasticsearch_domain.no_iam",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_7"
                },
                {
                    "check_id": "CKV_AWS_83",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_6",
                    "check_name": "Ensure Elasticsearch Domain enforces HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "domain_endpoint_options/[0]/enforce_https"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"no_iam\" {\n"
                        ],
                        [
                            4,
                            "  domain_name           = \"tf-test\"\n"
                        ],
                        [
                            5,
                            "  elasticsearch_version = \"2.3\"\n"
                        ],
                        [
                            6,
                            "  tags                  = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_iam_authentication.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_elasticsearch_domain.no_iam",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainEnforceHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_6"
                },
                {
                    "check_id": "CKV_AWS_137",
                    "bc_check_id": "BC_AWS_NETWORKING_42",
                    "check_name": "Ensure that Elasticsearch is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_options"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  log_publishing_options {\n"
                        ],
                        [
                            5,
                            "    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            6,
                            "    log_type                 = \"ES_APPLICATION_LOGS\"\n"
                        ],
                        [
                            7,
                            "    enabled                  = true\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "  # log_publishing_options {\n"
                        ],
                        [
                            10,
                            "  #   log_type=\n"
                        ],
                        [
                            11,
                            "  # }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticsearch_domain.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_5",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_3",
                    "check_name": "Ensure all data stored in the Elasticsearch is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypt_at_rest/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  log_publishing_options {\n"
                        ],
                        [
                            5,
                            "    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            6,
                            "    log_type                 = \"ES_APPLICATION_LOGS\"\n"
                        ],
                        [
                            7,
                            "    enabled                  = true\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "  # log_publishing_options {\n"
                        ],
                        [
                            10,
                            "  #   log_type=\n"
                        ],
                        [
                            11,
                            "  # }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticsearch_domain.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest"
                },
                {
                    "check_id": "CKV_AWS_83",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_6",
                    "check_name": "Ensure Elasticsearch Domain enforces HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "domain_endpoint_options/[0]/enforce_https"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elasticsearch_domain\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  log_publishing_options {\n"
                        ],
                        [
                            5,
                            "    cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            6,
                            "    log_type                 = \"ES_APPLICATION_LOGS\"\n"
                        ],
                        [
                            7,
                            "    enabled                  = true\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "  # log_publishing_options {\n"
                        ],
                        [
                            10,
                            "  #   log_type=\n"
                        ],
                        [
                            11,
                            "  # }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elasticsearch_without_slow_logs.tf",
                    "file_line_range": [
                        3,
                        13
                    ],
                    "resource": "aws_elasticsearch_domain.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainEnforceHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_6"
                },
                {
                    "check_id": "CKV_AWS_137",
                    "bc_check_id": "BC_AWS_NETWORKING_42",
                    "check_name": "Ensure that Elasticsearch is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_options"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_elasticsearch_domain\" \"node_to_node_encryption_disabled\" {\n"
                        ],
                        [
                            18,
                            "  domain_name = \"node_to_node_encryption_disabled\"\n"
                        ],
                        [
                            19,
                            "  domain_endpoint_options {\n"
                        ],
                        [
                            20,
                            "    enforce_https       = false\n"
                        ],
                        [
                            21,
                            "    tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  cluster_config {\n"
                        ],
                        [
                            25,
                            "    instance_count = 2 // a value > 1\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  encrypt_at_rest {\n"
                        ],
                        [
                            29,
                            "    enabled = false\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  node_to_node_encryption {\n"
                        ],
                        [
                            33,
                            "    enabled = false\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "\n"
                        ],
                        [
                            36,
                            "  #   log_publishing_options {\n"
                        ],
                        [
                            37,
                            "  #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            38,
                            "  #   log_type                 = \"INDEX_SLOW_LOGS\"\n"
                        ],
                        [
                            39,
                            "  #   enabled                  = false\n"
                        ],
                        [
                            40,
                            "  # }\n"
                        ],
                        [
                            41,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elastisearch_domain.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "file_line_range": [
                        17,
                        42
                    ],
                    "resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_5",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_3",
                    "check_name": "Ensure all data stored in the Elasticsearch is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypt_at_rest/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_elasticsearch_domain\" \"node_to_node_encryption_disabled\" {\n"
                        ],
                        [
                            18,
                            "  domain_name = \"node_to_node_encryption_disabled\"\n"
                        ],
                        [
                            19,
                            "  domain_endpoint_options {\n"
                        ],
                        [
                            20,
                            "    enforce_https       = false\n"
                        ],
                        [
                            21,
                            "    tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  cluster_config {\n"
                        ],
                        [
                            25,
                            "    instance_count = 2 // a value > 1\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  encrypt_at_rest {\n"
                        ],
                        [
                            29,
                            "    enabled = false\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  node_to_node_encryption {\n"
                        ],
                        [
                            33,
                            "    enabled = false\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "\n"
                        ],
                        [
                            36,
                            "  #   log_publishing_options {\n"
                        ],
                        [
                            37,
                            "  #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            38,
                            "  #   log_type                 = \"INDEX_SLOW_LOGS\"\n"
                        ],
                        [
                            39,
                            "  #   enabled                  = false\n"
                        ],
                        [
                            40,
                            "  # }\n"
                        ],
                        [
                            41,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elastisearch_domain.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "file_line_range": [
                        17,
                        42
                    ],
                    "resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest"
                },
                {
                    "check_id": "CKV_AWS_84",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_7",
                    "check_name": "Ensure Elasticsearch Domain Logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "log_publishing_options/[0]/cloudwatch_log_group_arn"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_elasticsearch_domain\" \"node_to_node_encryption_disabled\" {\n"
                        ],
                        [
                            18,
                            "  domain_name = \"node_to_node_encryption_disabled\"\n"
                        ],
                        [
                            19,
                            "  domain_endpoint_options {\n"
                        ],
                        [
                            20,
                            "    enforce_https       = false\n"
                        ],
                        [
                            21,
                            "    tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  cluster_config {\n"
                        ],
                        [
                            25,
                            "    instance_count = 2 // a value > 1\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  encrypt_at_rest {\n"
                        ],
                        [
                            29,
                            "    enabled = false\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  node_to_node_encryption {\n"
                        ],
                        [
                            33,
                            "    enabled = false\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "\n"
                        ],
                        [
                            36,
                            "  #   log_publishing_options {\n"
                        ],
                        [
                            37,
                            "  #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            38,
                            "  #   log_type                 = \"INDEX_SLOW_LOGS\"\n"
                        ],
                        [
                            39,
                            "  #   enabled                  = false\n"
                        ],
                        [
                            40,
                            "  # }\n"
                        ],
                        [
                            41,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elastisearch_domain.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "file_line_range": [
                        17,
                        42
                    ],
                    "resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_7"
                },
                {
                    "check_id": "CKV_AWS_6",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_5",
                    "check_name": "Ensure all Elasticsearch has node-to-node encryption enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cluster_config/[0]/instance_count",
                            "node_to_node_encryption/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_elasticsearch_domain\" \"node_to_node_encryption_disabled\" {\n"
                        ],
                        [
                            18,
                            "  domain_name = \"node_to_node_encryption_disabled\"\n"
                        ],
                        [
                            19,
                            "  domain_endpoint_options {\n"
                        ],
                        [
                            20,
                            "    enforce_https       = false\n"
                        ],
                        [
                            21,
                            "    tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  cluster_config {\n"
                        ],
                        [
                            25,
                            "    instance_count = 2 // a value > 1\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  encrypt_at_rest {\n"
                        ],
                        [
                            29,
                            "    enabled = false\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  node_to_node_encryption {\n"
                        ],
                        [
                            33,
                            "    enabled = false\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "\n"
                        ],
                        [
                            36,
                            "  #   log_publishing_options {\n"
                        ],
                        [
                            37,
                            "  #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            38,
                            "  #   log_type                 = \"INDEX_SLOW_LOGS\"\n"
                        ],
                        [
                            39,
                            "  #   enabled                  = false\n"
                        ],
                        [
                            40,
                            "  # }\n"
                        ],
                        [
                            41,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elastisearch_domain.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "file_line_range": [
                        17,
                        42
                    ],
                    "resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchNodeToNodeEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_5"
                },
                {
                    "check_id": "CKV_AWS_83",
                    "bc_check_id": "BC_AWS_ELASTICSEARCH_6",
                    "check_name": "Ensure Elasticsearch Domain enforces HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "domain_endpoint_options/[0]/enforce_https"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_elasticsearch_domain\" \"node_to_node_encryption_disabled\" {\n"
                        ],
                        [
                            18,
                            "  domain_name = \"node_to_node_encryption_disabled\"\n"
                        ],
                        [
                            19,
                            "  domain_endpoint_options {\n"
                        ],
                        [
                            20,
                            "    enforce_https       = false\n"
                        ],
                        [
                            21,
                            "    tls_security_policy = \"Policy-Min-TLS-1-0-2019-07\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  cluster_config {\n"
                        ],
                        [
                            25,
                            "    instance_count = 2 // a value > 1\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  encrypt_at_rest {\n"
                        ],
                        [
                            29,
                            "    enabled = false\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  node_to_node_encryption {\n"
                        ],
                        [
                            33,
                            "    enabled = false\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "\n"
                        ],
                        [
                            36,
                            "  #   log_publishing_options {\n"
                        ],
                        [
                            37,
                            "  #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn\n"
                        ],
                        [
                            38,
                            "  #   log_type                 = \"INDEX_SLOW_LOGS\"\n"
                        ],
                        [
                            39,
                            "  #   enabled                  = false\n"
                        ],
                        [
                            40,
                            "  # }\n"
                        ],
                        [
                            41,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            42,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elasticsearch/elastisearch_domain.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "repo_file_path": "/terraform/aws/elasticsearch/elastisearch_domain.tf",
                    "file_line_range": [
                        17,
                        42
                    ],
                    "resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ElasticsearchDomainEnforceHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/elasticsearch_6"
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_alb\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  name               = \"bad_alb\"\n"
                        ],
                        [
                            14,
                            "  internal           = false\n"
                        ],
                        [
                            15,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  # access_logs {\n"
                        ],
                        [
                            18,
                            "  #   bucket  = aws_s3_bucket.lb_logs.bucket\n"
                        ],
                        [
                            19,
                            "  #   prefix  = \"test-lb\"\n"
                        ],
                        [
                            20,
                            "  #   enabled = true\n"
                        ],
                        [
                            21,
                            "  # }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  drop_invalid_header_fields = false\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb.tf",
                    "repo_file_path": "/terraform/aws/elb/alb.tf",
                    "file_line_range": [
                        12,
                        27
                    ],
                    "resource": "aws_alb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_62"
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_alb\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  name               = \"bad_alb\"\n"
                        ],
                        [
                            14,
                            "  internal           = false\n"
                        ],
                        [
                            15,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  # access_logs {\n"
                        ],
                        [
                            18,
                            "  #   bucket  = aws_s3_bucket.lb_logs.bucket\n"
                        ],
                        [
                            19,
                            "  #   prefix  = \"test-lb\"\n"
                        ],
                        [
                            20,
                            "  #   enabled = true\n"
                        ],
                        [
                            21,
                            "  # }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  drop_invalid_header_fields = false\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb.tf",
                    "repo_file_path": "/terraform/aws/elb/alb.tf",
                    "file_line_range": [
                        12,
                        27
                    ],
                    "resource": "aws_alb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
                },
                {
                    "check_id": "CKV_AWS_131",
                    "bc_check_id": "BC_AWS_NETWORKING_41",
                    "check_name": "Ensure that ALB drops HTTP headers",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "drop_invalid_header_fields"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_alb\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  name               = \"bad_alb\"\n"
                        ],
                        [
                            14,
                            "  internal           = false\n"
                        ],
                        [
                            15,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  # access_logs {\n"
                        ],
                        [
                            18,
                            "  #   bucket  = aws_s3_bucket.lb_logs.bucket\n"
                        ],
                        [
                            19,
                            "  #   prefix  = \"test-lb\"\n"
                        ],
                        [
                            20,
                            "  #   enabled = true\n"
                        ],
                        [
                            21,
                            "  # }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  drop_invalid_header_fields = false\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb.tf",
                    "repo_file_path": "/terraform/aws/elb/alb.tf",
                    "file_line_range": [
                        12,
                        27
                    ],
                    "resource": "aws_alb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
                },
                {
                    "check_id": "CKV_AWS_2",
                    "bc_check_id": "BC_AWS_NETWORKING_29",
                    "check_name": "Ensure ALB protocol is HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "protocol"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_alb_listener\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  protocol = \"HTTP\"\n"
                        ],
                        [
                            10,
                            "  tags = {\n"
                        ],
                        [
                            11,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb_listener.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb_listener.tf",
                    "repo_file_path": "/terraform/aws/elb/alb_listener.tf",
                    "file_line_range": [
                        8,
                        13
                    ],
                    "resource": "aws_alb_listener.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_29"
                },
                {
                    "check_id": "CKV_AWS_103",
                    "bc_check_id": "BC_AWS_GENERAL_43",
                    "check_name": "Ensure that load balancer is using TLS 1.2",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "protocol"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_alb_listener\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  protocol = \"HTTP\"\n"
                        ],
                        [
                            10,
                            "  tags = {\n"
                        ],
                        [
                            11,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb_listener.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb_listener.tf",
                    "repo_file_path": "/terraform/aws/elb/alb_listener.tf",
                    "file_line_range": [
                        8,
                        13
                    ],
                    "resource": "aws_alb_listener.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AppLoadBalancerTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_43"
                },
                {
                    "check_id": "CKV_AWS_127",
                    "bc_check_id": "BC_AWS_GENERAL_67",
                    "check_name": "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "listener/0"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elb\" \"test\" {\n"
                        ],
                        [
                            6,
                            "  name                      = \"test-lb-tf\"\n"
                        ],
                        [
                            7,
                            "  availability_zones        = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            8,
                            "  cross_zone_load_balancing = false\n"
                        ],
                        [
                            9,
                            "  listener {\n"
                        ],
                        [
                            10,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            11,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            12,
                            "    lb_port           = 80\n"
                        ],
                        [
                            13,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb.tf",
                    "repo_file_path": "/terraform/aws/elb/elb.tf",
                    "file_line_range": [
                        5,
                        18
                    ],
                    "resource": "aws_elb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBUsesSSL",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager"
                },
                {
                    "check_id": "CKV_AWS_92",
                    "bc_check_id": "BC_AWS_LOGGING_23",
                    "check_name": "Ensure the ELB has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elb\" \"test\" {\n"
                        ],
                        [
                            6,
                            "  name                      = \"test-lb-tf\"\n"
                        ],
                        [
                            7,
                            "  availability_zones        = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            8,
                            "  cross_zone_load_balancing = false\n"
                        ],
                        [
                            9,
                            "  listener {\n"
                        ],
                        [
                            10,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            11,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            12,
                            "    lb_port           = 80\n"
                        ],
                        [
                            13,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb.tf",
                    "repo_file_path": "/terraform/aws/elb/elb.tf",
                    "file_line_range": [
                        5,
                        18
                    ],
                    "resource": "aws_elb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBAccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_23"
                },
                {
                    "check_id": "CKV_AWS_138",
                    "bc_check_id": "BC_AWS_NETWORKING_43",
                    "check_name": "Ensure that ELB is cross-zone-load-balancing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cross_zone_load_balancing"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_elb\" \"test\" {\n"
                        ],
                        [
                            6,
                            "  name                      = \"test-lb-tf\"\n"
                        ],
                        [
                            7,
                            "  availability_zones        = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            8,
                            "  cross_zone_load_balancing = false\n"
                        ],
                        [
                            9,
                            "  listener {\n"
                        ],
                        [
                            10,
                            "    instance_port     = 8000\n"
                        ],
                        [
                            11,
                            "    instance_protocol = \"http\"\n"
                        ],
                        [
                            12,
                            "    lb_port           = 80\n"
                        ],
                        [
                            13,
                            "    lb_protocol       = \"http\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb.tf",
                    "repo_file_path": "/terraform/aws/elb/elb.tf",
                    "file_line_range": [
                        5,
                        18
                    ],
                    "resource": "aws_elb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBCrossZoneEnable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled"
                },
                {
                    "check_id": "CKV_AWS_92",
                    "bc_check_id": "BC_AWS_LOGGING_23",
                    "check_name": "Ensure the ELB has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_elb\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name               = \"wu-tang\"\n"
                        ],
                        [
                            5,
                            "  availability_zones = [\"us-east-1a\"]\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  listener {\n"
                        ],
                        [
                            8,
                            "    instance_port      = 443\n"
                        ],
                        [
                            9,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            10,
                            "    lb_port            = 443\n"
                        ],
                        [
                            11,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            12,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  tags = {\n"
                        ],
                        [
                            16,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            17,
                            "    test = \"fail\"\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/elb_using_weak_ciphers.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "repo_file_path": "/terraform/aws/elb/elb_using_weak_ciphers.tf",
                    "file_line_range": [
                        3,
                        19
                    ],
                    "resource": "aws_elb.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBAccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_23"
                },
                {
                    "check_id": "CKV_AWS_92",
                    "bc_check_id": "BC_AWS_LOGGING_23",
                    "check_name": "Ensure the ELB has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_elb\" \"wu_tang\" {\n"
                        ],
                        [
                            5,
                            "  name = \"wu-tang\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  subnets = [\"subnet-08d97e381dbc80d40\", \"subnet-03fdfb13a135366a7\"]\n"
                        ],
                        [
                            8,
                            "  listener {\n"
                        ],
                        [
                            9,
                            "    instance_port      = 443\n"
                        ],
                        [
                            10,
                            "    instance_protocol  = \"http\"\n"
                        ],
                        [
                            11,
                            "    lb_port            = 443\n"
                        ],
                        [
                            12,
                            "    lb_protocol        = \"https\"\n"
                        ],
                        [
                            13,
                            "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  tags = {\n"
                        ],
                        [
                            17,
                            "    Name = \"wu-tang\"\n"
                        ],
                        [
                            18,
                            "    test = \"fails\"\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "repo_file_path": "/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_line_range": [
                        4,
                        20
                    ],
                    "resource": "aws_elb.wu_tang",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBAccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "wu-tang",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_23"
                },
                {
                    "check_id": "CKV_AWS_213",
                    "bc_check_id": null,
                    "check_name": "Ensure ELB Policy uses only secure protocols",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy_attribute"
                        ]
                    },
                    "code_block": [
                        [
                            22,
                            "resource \"aws_load_balancer_policy\" \"fail\" {\n"
                        ],
                        [
                            23,
                            "  load_balancer_name = aws_elb.wu-tang.name\n"
                        ],
                        [
                            24,
                            "  policy_name        = \"wu-tang-ssl\"\n"
                        ],
                        [
                            25,
                            "  policy_type_name   = \"SSLNegotiationPolicyType\"\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "  policy_attribute {\n"
                        ],
                        [
                            28,
                            "    name  = \"Protocol-TLSv1.2\"\n"
                        ],
                        [
                            29,
                            "    value = \"true\"\n"
                        ],
                        [
                            30,
                            "  }\n"
                        ],
                        [
                            31,
                            "\n"
                        ],
                        [
                            32,
                            "  policy_attribute {\n"
                        ],
                        [
                            33,
                            "    name  = \"Protocol-TLSv1\"\n"
                        ],
                        [
                            34,
                            "    value = \"true\"\n"
                        ],
                        [
                            35,
                            "  }\n"
                        ],
                        [
                            36,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "repo_file_path": "/terraform/aws/elb/load_balancer_policy_using_insecure_protocols.tf",
                    "file_line_range": [
                        22,
                        37
                    ],
                    "resource": "aws_load_balancer_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBPolicyUsesSecureProtocols",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_114",
                    "bc_check_id": "BC_AWS_GENERAL_62",
                    "check_name": "Ensure that EMR clusters with Kerberos have Kerberos Realm set",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kerberos_attributes/[0]/realm"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_emr_cluster\" \"test\" {\n"
                        ],
                        [
                            10,
                            "  name          = \"emr-test-arn\"\n"
                        ],
                        [
                            11,
                            "  release_label = \"emr-4.6.0\"\n"
                        ],
                        [
                            12,
                            "  applications  = [\"Spark\"]\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  termination_protection            = false\n"
                        ],
                        [
                            15,
                            "  keep_job_flow_alive_when_no_steps = true\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  kerberos_attributes {\n"
                        ],
                        [
                            18,
                            "    kdc_admin_password = \"somePassword\"\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = {\n"
                        ],
                        [
                            21,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/emr/emr_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/emr/emr_cluster.tf",
                    "repo_file_path": "/terraform/aws/emr/emr_cluster.tf",
                    "file_line_range": [
                        9,
                        23
                    ],
                    "resource": "aws_emr_cluster.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EMRClusterKerberosAttributes",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-emr-clusters-have-kerberos-enabled"
                },
                {
                    "check_id": "CKV_AWS_171",
                    "bc_check_id": "BC_AWS_GENERAL_94",
                    "check_name": "Ensure Cluster security configuration encryption is using SSE-KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "configuration/[0]/SSE-KMS"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_emr_security_configuration\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  name = \"fail\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  configuration = <<EOF\n"
                        ],
                        [
                            9,
                            "{\n"
                        ],
                        [
                            10,
                            "  \"EncryptionConfiguration\": {\n"
                        ],
                        [
                            11,
                            "    \"EnableAtRestEncryption\": true,\n"
                        ],
                        [
                            12,
                            "    \"AtRestEncryptionConfiguration\": {\n"
                        ],
                        [
                            13,
                            "      \"S3EncryptionConfiguration\": {\n"
                        ],
                        [
                            14,
                            "        \"EncryptionMode\": \"SSE-S3\"\n"
                        ],
                        [
                            15,
                            "      },\n"
                        ],
                        [
                            16,
                            "      \"LocalDiskEncryptionConfiguration\": {\n"
                        ],
                        [
                            17,
                            "        \"EncryptionKeyProviderType\": \"AwsS3\"\n"
                        ],
                        [
                            18,
                            "      }\n"
                        ],
                        [
                            19,
                            "    }\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ],
                        [
                            22,
                            "EOF\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/emr/emr_security_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/emr/emr_security_configuration.tf",
                    "repo_file_path": "/terraform/aws/emr/emr_security_configuration.tf",
                    "file_line_range": [
                        5,
                        23
                    ],
                    "resource": "aws_emr_security_configuration.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EMRClusterIsEncryptedKMS",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-emr-cluster-security-configuration-encryption-uses-sse-kms"
                },
                {
                    "check_id": "CKV_AWS_178",
                    "bc_check_id": "BC_AWS_GENERAL_98",
                    "check_name": "Ensure fx ontap file system is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_fsx_ontap_file_system\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  storage_capacity    = 1024\n"
                        ],
                        [
                            7,
                            "  subnet_ids          = [aws_subnet.test1.id, aws_subnet.test2.id]\n"
                        ],
                        [
                            8,
                            "  deployment_type     = \"MULTI_AZ_1\"\n"
                        ],
                        [
                            9,
                            "  throughput_capacity = 512\n"
                        ],
                        [
                            10,
                            "  preferred_subnet_id = aws_subnet.test1.id\n"
                        ],
                        [
                            11,
                            "  tags                = { test = \"fail\" }\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/fsx/fsx.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/fsx/fsx.tf",
                    "repo_file_path": "/terraform/aws/fsx/fsx.tf",
                    "file_line_range": [
                        5,
                        12
                    ],
                    "resource": "aws_fsx_ontap_file_system.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.FSXOntapFSEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_98"
                },
                {
                    "check_id": "CKV_AWS_190",
                    "bc_check_id": "BC_AWS_GENERAL_110",
                    "check_name": "Ensure lustre file systems is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_fsx_lustre_file_system\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  storage_capacity            = 1200\n"
                        ],
                        [
                            6,
                            "  subnet_ids                  = [aws_subnet.test1.id]\n"
                        ],
                        [
                            7,
                            "  deployment_type             = \"PERSISTENT_1\"\n"
                        ],
                        [
                            8,
                            "  per_unit_storage_throughput = 50\n"
                        ],
                        [
                            9,
                            "  tags                        = { test = \"fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/fsx/fsx_lustre.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/fsx/fsx_lustre.tf",
                    "repo_file_path": "/terraform/aws/fsx/fsx_lustre.tf",
                    "file_line_range": [
                        4,
                        10
                    ],
                    "resource": "aws_fsx_lustre_file_system.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LustreFSEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_110"
                },
                {
                    "check_id": "CKV_AWS_179",
                    "bc_check_id": "BC_AWS_GENERAL_99",
                    "check_name": "Ensure FSX Windows filesystem is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_fsx_windows_file_system\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  active_directory_id = aws_directory_service_directory.test.id\n"
                        ],
                        [
                            6,
                            "  skip_final_backup   = true\n"
                        ],
                        [
                            7,
                            "  storage_capacity    = 32\n"
                        ],
                        [
                            8,
                            "  subnet_ids          = [aws_subnet.test1.id]\n"
                        ],
                        [
                            9,
                            "  throughput_capacity = 8\n"
                        ],
                        [
                            10,
                            "  tags                = { test = \"fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/fsx/fsx_windows.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/fsx/fsx_windows.tf",
                    "repo_file_path": "/terraform/aws/fsx/fsx_windows.tf",
                    "file_line_range": [
                        4,
                        11
                    ],
                    "resource": "aws_fsx_windows_file_system.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.FSXWindowsFSEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_99"
                },
                {
                    "check_id": "CKV_AWS_167",
                    "bc_check_id": "BC_AWS_GENERAL_90",
                    "check_name": "Ensure Glacier Vault access policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_policy"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_glacier_vault\" \"my_archive2\" {\n"
                        ],
                        [
                            7,
                            "  name = \"MyArchive\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  access_policy = <<EOF\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "    \"Version\":\"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "    \"Statement\":[\n"
                        ],
                        [
                            13,
                            "       {\n"
                        ],
                        [
                            14,
                            "          \"Sid\": \"add-read-only-perm\",\n"
                        ],
                        [
                            15,
                            "           \"Principal\": {\n"
                        ],
                        [
                            16,
                            "            \"AWS\": [\n"
                        ],
                        [
                            17,
                            "                \"arn:aws:iam::123456789101:role/vault-reader\",\n"
                        ],
                        [
                            18,
                            "                \"*\"\n"
                        ],
                        [
                            19,
                            "            ]\n"
                        ],
                        [
                            20,
                            "          },\n"
                        ],
                        [
                            21,
                            "          \"Effect\": \"Allow\",\n"
                        ],
                        [
                            22,
                            "          \"Action\": [\n"
                        ],
                        [
                            23,
                            "             \"glacier:InitiateJob\",\n"
                        ],
                        [
                            24,
                            "             \"glacier:GetJobOutput\"\n"
                        ],
                        [
                            25,
                            "          ],\n"
                        ],
                        [
                            26,
                            "          \"Resource\": \"arn:aws:glacier:eu-west-1:432981146916:vaults/MyArchive\"\n"
                        ],
                        [
                            27,
                            "       }\n"
                        ],
                        [
                            28,
                            "    ]\n"
                        ],
                        [
                            29,
                            "}\n"
                        ],
                        [
                            30,
                            "EOF\n"
                        ],
                        [
                            31,
                            "  tags          = { test = \"fail\" }\n"
                        ],
                        [
                            32,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glacier_vault/glacier_vault.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glacier_vault/glacier_vault.tf",
                    "repo_file_path": "/terraform/aws/glacier_vault/glacier_vault.tf",
                    "file_line_range": [
                        6,
                        32
                    ],
                    "resource": "aws_glacier_vault.my_archive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.GlacierVaultAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-glacier-vault-access-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_75",
                    "bc_check_id": "BC_AWS_LOGGING_16",
                    "check_name": "Ensure Global Accelerator accelerator has flow logs enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "attributes/[0]/flow_logs_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_globalaccelerator_accelerator\" \"example\" {\n"
                        ],
                        [
                            5,
                            "  name            = \"Example\"\n"
                        ],
                        [
                            6,
                            "  ip_address_type = \"IPV4\"\n"
                        ],
                        [
                            7,
                            "  enabled         = true\n"
                        ],
                        [
                            8,
                            "  attributes {\n"
                        ],
                        [
                            9,
                            "    flow_logs_enabled = false\n"
                        ],
                        [
                            10,
                            "  }\n"
                        ],
                        [
                            11,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/globacc/globacc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/globacc/globacc.tf",
                    "repo_file_path": "/terraform/aws/globacc/globacc.tf",
                    "file_line_range": [
                        4,
                        12
                    ],
                    "resource": "aws_globalaccelerator_accelerator.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.GlobalAcceleratorAcceleratorFlowLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_16"
                },
                {
                    "check_id": "CKV_AWS_94",
                    "bc_check_id": "BC_AWS_GENERAL_37",
                    "check_name": "Ensure Glue Data Catalog Encryption is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "data_catalog_encryption_settings/[0]/encryption_at_rest",
                            "data_catalog_encryption_settings/[0]/connection_password_encryption"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_glue_data_catalog_encryption_settings\" \"test\" {\n"
                        ],
                        [
                            6,
                            "  data_catalog_encryption_settings {\n"
                        ],
                        [
                            7,
                            "    connection_password_encryption {\n"
                        ],
                        [
                            8,
                            "      return_connection_password_encrypted = false\n"
                        ],
                        [
                            9,
                            "    }\n"
                        ],
                        [
                            10,
                            "    encryption_at_rest {\n"
                        ],
                        [
                            11,
                            "      catalog_encryption_mode = \"DISABLED\"\n"
                        ],
                        [
                            12,
                            "    }\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_data_catalog_encryption_settings.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_data_catalog_encryption_settings.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_data_catalog_encryption_settings.tf",
                    "file_line_range": [
                        5,
                        15
                    ],
                    "resource": "aws_glue_data_catalog_encryption_settings.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.GlueDataCatalogEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_37"
                },
                {
                    "check_id": "CKV_AWS_99",
                    "bc_check_id": "BC_AWS_GENERAL_41",
                    "check_name": "Ensure Glue Security Configuration Encryption is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_configuration/[0]/cloudwatch_encryption",
                            "encryption_configuration/[0]/job_bookmarks_encryption",
                            "encryption_configuration/[0]/s3_encryption/[0]/s3_encryption_mode"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_glue_security_configuration\" \"test\" {\n"
                        ],
                        [
                            6,
                            "  name = \"example\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  encryption_configuration {\n"
                        ],
                        [
                            9,
                            "    cloudwatch_encryption {\n"
                        ],
                        [
                            10,
                            "      cloudwatch_encryption_mode = \"DISABLED\"\n"
                        ],
                        [
                            11,
                            "    }\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "    job_bookmarks_encryption {\n"
                        ],
                        [
                            14,
                            "      job_bookmarks_encryption_mode = \"DISABLED\"\n"
                        ],
                        [
                            15,
                            "    }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "    s3_encryption {\n"
                        ],
                        [
                            18,
                            "      kms_key_arn        = data.aws_kms_key.example.arn\n"
                        ],
                        [
                            19,
                            "      s3_encryption_mode = \"SSE-KMS\"\n"
                        ],
                        [
                            20,
                            "    }\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/glue/glue_security_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/glue/glue_security_configuration.tf",
                    "repo_file_path": "/terraform/aws/glue/glue_security_configuration.tf",
                    "file_line_range": [
                        5,
                        23
                    ],
                    "resource": "aws_glue_security_configuration.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.GlueSecurityConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_41"
                },
                {
                    "check_id": "CKV_AWS_11",
                    "bc_check_id": "BC_AWS_IAM_6",
                    "check_name": "Ensure IAM password policy requires at least one lowercase letter",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "require_lowercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLowercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_6"
                },
                {
                    "check_id": "CKV_AWS_15",
                    "bc_check_id": "BC_AWS_IAM_5",
                    "check_name": "Ensure IAM password policy requires at least one uppercase letter",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "require_uppercase_characters"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyUppercaseLetter",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_5"
                },
                {
                    "check_id": "CKV_AWS_9",
                    "bc_check_id": "BC_AWS_IAM_11",
                    "check_name": "Ensure IAM password policy expires passwords within 90 days or less",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "max_password_age"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyExpiration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_11"
                },
                {
                    "check_id": "CKV_AWS_13",
                    "bc_check_id": "BC_AWS_IAM_10",
                    "check_name": "Ensure IAM password policy prevents password reuse",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "password_reuse_prevention"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyReuse",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_10"
                },
                {
                    "check_id": "CKV_AWS_12",
                    "bc_check_id": "BC_AWS_IAM_8",
                    "check_name": "Ensure IAM password policy requires at least one number",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "require_numbers"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyNumber",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_8"
                },
                {
                    "check_id": "CKV_AWS_10",
                    "bc_check_id": "BC_AWS_IAM_9",
                    "check_name": "Ensure IAM password policy requires minimum length of 14 or greater",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "minimum_password_length"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLength",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_9-1"
                },
                {
                    "check_id": "CKV_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_7",
                    "check_name": "Ensure IAM password policy requires at least one symbol",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "require_symbols"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_iam_account_password_policy\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/aws_iam_account_password_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "repo_file_path": "/terraform/aws/iam/aws_iam_account_password_policy.tf",
                    "file_line_range": [
                        11,
                        13
                    ],
                    "resource": "aws_iam_account_password_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicySymbol",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_7"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_iam_policy_attachment\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  name       = \"example\"\n"
                        ],
                        [
                            7,
                            "  policy_arn = aws_iam_policy.policy.arn\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  users = [\"example\"]\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam.tf",
                    "repo_file_path": "/terraform/aws/iam/iam.tf",
                    "file_line_range": [
                        5,
                        10
                    ],
                    "resource": "aws_iam_policy_attachment.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_iam_user_policy\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  user = \"example\"\n"
                        ],
                        [
                            14,
                            "  policy = jsonencode({\n"
                        ],
                        [
                            15,
                            "    Version = \"2012-10-17\"\n"
                        ],
                        [
                            16,
                            "    Statement = [\n"
                        ],
                        [
                            17,
                            "      {\n"
                        ],
                        [
                            18,
                            "        Action = [\n"
                        ],
                        [
                            19,
                            "          \"ec2:Describe*\",\n"
                        ],
                        [
                            20,
                            "        ]\n"
                        ],
                        [
                            21,
                            "        Effect   = \"Allow\"\n"
                        ],
                        [
                            22,
                            "        Resource = \"*\"\n"
                        ],
                        [
                            23,
                            "      },\n"
                        ],
                        [
                            24,
                            "    ]\n"
                        ],
                        [
                            25,
                            "  })\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam.tf",
                    "repo_file_path": "/terraform/aws/iam/iam.tf",
                    "file_line_range": [
                        12,
                        26
                    ],
                    "resource": "aws_iam_user_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            28,
                            "resource \"aws_iam_user_policy_attachment\" \"fail\" {\n"
                        ],
                        [
                            29,
                            "  user       = \"example\"\n"
                        ],
                        [
                            30,
                            "  policy_arn = aws_iam_policy.policy.arn\n"
                        ],
                        [
                            31,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam.tf",
                    "repo_file_path": "/terraform/aws/iam/iam.tf",
                    "file_line_range": [
                        28,
                        31
                    ],
                    "resource": "aws_iam_user_policy_attachment.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_iam_policy\" \"fail1\" {\n"
                        ],
                        [
                            6,
                            "  name = \"fail1\"\n"
                        ],
                        [
                            7,
                            "  path = \"/\"\n"
                        ],
                        [
                            8,
                            "  # the policy doesn't actually make sense, but it tests checking arrays for *\n"
                        ],
                        [
                            9,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "  \"Statement\": [\n"
                        ],
                        [
                            12,
                            "    {\n"
                        ],
                        [
                            13,
                            "      \"Action\": [\n"
                        ],
                        [
                            14,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            15,
                            "        \"*\"\n"
                        ],
                        [
                            16,
                            "      ],\n"
                        ],
                        [
                            17,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            18,
                            "      \"Resource\": [\n"
                        ],
                        [
                            19,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            20,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            21,
                            "        \"*\"\n"
                        ],
                        [
                            22,
                            "      ],\n"
                        ],
                        [
                            23,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            24,
                            "    }\n"
                        ],
                        [
                            25,
                            "  ],\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            27,
                            "}\n"
                        ],
                        [
                            28,
                            "POLICY\n"
                        ],
                        [
                            29,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            30,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        5,
                        30
                    ],
                    "resource": "aws_iam_policy.fail1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_iam_policy\" \"fail1\" {\n"
                        ],
                        [
                            6,
                            "  name = \"fail1\"\n"
                        ],
                        [
                            7,
                            "  path = \"/\"\n"
                        ],
                        [
                            8,
                            "  # the policy doesn't actually make sense, but it tests checking arrays for *\n"
                        ],
                        [
                            9,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "  \"Statement\": [\n"
                        ],
                        [
                            12,
                            "    {\n"
                        ],
                        [
                            13,
                            "      \"Action\": [\n"
                        ],
                        [
                            14,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            15,
                            "        \"*\"\n"
                        ],
                        [
                            16,
                            "      ],\n"
                        ],
                        [
                            17,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            18,
                            "      \"Resource\": [\n"
                        ],
                        [
                            19,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            20,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            21,
                            "        \"*\"\n"
                        ],
                        [
                            22,
                            "      ],\n"
                        ],
                        [
                            23,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            24,
                            "    }\n"
                        ],
                        [
                            25,
                            "  ],\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            27,
                            "}\n"
                        ],
                        [
                            28,
                            "POLICY\n"
                        ],
                        [
                            29,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            30,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        5,
                        30
                    ],
                    "resource": "aws_iam_policy.fail1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            32,
                            "resource \"aws_iam_policy\" \"fail2\" {\n"
                        ],
                        [
                            33,
                            "  name   = \"fail2\"\n"
                        ],
                        [
                            34,
                            "  path   = \"/\"\n"
                        ],
                        [
                            35,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            36,
                            "{\n"
                        ],
                        [
                            37,
                            "  \"Statement\": [\n"
                        ],
                        [
                            38,
                            "    {\n"
                        ],
                        [
                            39,
                            "      \"Action\": [\n"
                        ],
                        [
                            40,
                            "        \"*\"\n"
                        ],
                        [
                            41,
                            "      ],\n"
                        ],
                        [
                            42,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            43,
                            "      \"Resource\": [\n"
                        ],
                        [
                            44,
                            "        \"*\"\n"
                        ],
                        [
                            45,
                            "      ],\n"
                        ],
                        [
                            46,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            47,
                            "    }\n"
                        ],
                        [
                            48,
                            "  ],\n"
                        ],
                        [
                            49,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            50,
                            "}\n"
                        ],
                        [
                            51,
                            "POLICY\n"
                        ],
                        [
                            52,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            53,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        32,
                        53
                    ],
                    "resource": "aws_iam_policy.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            32,
                            "resource \"aws_iam_policy\" \"fail2\" {\n"
                        ],
                        [
                            33,
                            "  name   = \"fail2\"\n"
                        ],
                        [
                            34,
                            "  path   = \"/\"\n"
                        ],
                        [
                            35,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            36,
                            "{\n"
                        ],
                        [
                            37,
                            "  \"Statement\": [\n"
                        ],
                        [
                            38,
                            "    {\n"
                        ],
                        [
                            39,
                            "      \"Action\": [\n"
                        ],
                        [
                            40,
                            "        \"*\"\n"
                        ],
                        [
                            41,
                            "      ],\n"
                        ],
                        [
                            42,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            43,
                            "      \"Resource\": [\n"
                        ],
                        [
                            44,
                            "        \"*\"\n"
                        ],
                        [
                            45,
                            "      ],\n"
                        ],
                        [
                            46,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            47,
                            "    }\n"
                        ],
                        [
                            48,
                            "  ],\n"
                        ],
                        [
                            49,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            50,
                            "}\n"
                        ],
                        [
                            51,
                            "POLICY\n"
                        ],
                        [
                            52,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            53,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        32,
                        53
                    ],
                    "resource": "aws_iam_policy.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            55,
                            "resource \"aws_iam_policy\" \"fail3\" {\n"
                        ],
                        [
                            56,
                            "  name   = \"fail3\"\n"
                        ],
                        [
                            57,
                            "  path   = \"/\"\n"
                        ],
                        [
                            58,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            59,
                            "{\n"
                        ],
                        [
                            60,
                            "  \"Statement\": [\n"
                        ],
                        [
                            61,
                            "    {\n"
                        ],
                        [
                            62,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            63,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            64,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            65,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            66,
                            "    }\n"
                        ],
                        [
                            67,
                            "  ],\n"
                        ],
                        [
                            68,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            69,
                            "}\n"
                        ],
                        [
                            70,
                            "POLICY\n"
                        ],
                        [
                            71,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        55,
                        72
                    ],
                    "resource": "aws_iam_policy.fail3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            55,
                            "resource \"aws_iam_policy\" \"fail3\" {\n"
                        ],
                        [
                            56,
                            "  name   = \"fail3\"\n"
                        ],
                        [
                            57,
                            "  path   = \"/\"\n"
                        ],
                        [
                            58,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            59,
                            "{\n"
                        ],
                        [
                            60,
                            "  \"Statement\": [\n"
                        ],
                        [
                            61,
                            "    {\n"
                        ],
                        [
                            62,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            63,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            64,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            65,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            66,
                            "    }\n"
                        ],
                        [
                            67,
                            "  ],\n"
                        ],
                        [
                            68,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            69,
                            "}\n"
                        ],
                        [
                            70,
                            "POLICY\n"
                        ],
                        [
                            71,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        55,
                        72
                    ],
                    "resource": "aws_iam_policy.fail3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            74,
                            "resource \"aws_iam_policy\" \"fail4\" {\n"
                        ],
                        [
                            75,
                            "  name = \"fail4\"\n"
                        ],
                        [
                            76,
                            "  path = \"/\"\n"
                        ],
                        [
                            77,
                            "  # implicit allow, not actually valid, but it's a default that we check\n"
                        ],
                        [
                            78,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            79,
                            "{\n"
                        ],
                        [
                            80,
                            "  \"Statement\": [\n"
                        ],
                        [
                            81,
                            "    {\n"
                        ],
                        [
                            82,
                            "      \"Action\": \"*\",\n"
                        ],
                        [
                            83,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            84,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            85,
                            "    }\n"
                        ],
                        [
                            86,
                            "  ],\n"
                        ],
                        [
                            87,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            88,
                            "}\n"
                        ],
                        [
                            89,
                            "POLICY\n"
                        ],
                        [
                            90,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        74,
                        91
                    ],
                    "resource": "aws_iam_policy.fail4",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            148,
                            "resource \"aws_ssoadmin_permission_set_inline_policy\" \"fail1\" {\n"
                        ],
                        [
                            149,
                            "  instance_arn       = aws_ssoadmin_permission_set.example.instance_arn\n"
                        ],
                        [
                            150,
                            "  permission_set_arn = aws_ssoadmin_permission_set.example.arn\n"
                        ],
                        [
                            151,
                            "  inline_policy      = <<POLICY\n"
                        ],
                        [
                            152,
                            "{\n"
                        ],
                        [
                            153,
                            "  \"Statement\": [\n"
                        ],
                        [
                            154,
                            "    {\n"
                        ],
                        [
                            155,
                            "      \"Action\": [\n"
                        ],
                        [
                            156,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            157,
                            "        \"*\"\n"
                        ],
                        [
                            158,
                            "      ],\n"
                        ],
                        [
                            159,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            160,
                            "      \"Resource\": [\n"
                        ],
                        [
                            161,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            162,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            163,
                            "        \"*\"\n"
                        ],
                        [
                            164,
                            "      ],\n"
                        ],
                        [
                            165,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            166,
                            "    }\n"
                        ],
                        [
                            167,
                            "  ],\n"
                        ],
                        [
                            168,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            169,
                            "}\n"
                        ],
                        [
                            170,
                            "POLICY\n"
                        ],
                        [
                            171,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            172,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        148,
                        172
                    ],
                    "resource": "aws_ssoadmin_permission_set_inline_policy.fail1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            148,
                            "resource \"aws_ssoadmin_permission_set_inline_policy\" \"fail1\" {\n"
                        ],
                        [
                            149,
                            "  instance_arn       = aws_ssoadmin_permission_set.example.instance_arn\n"
                        ],
                        [
                            150,
                            "  permission_set_arn = aws_ssoadmin_permission_set.example.arn\n"
                        ],
                        [
                            151,
                            "  inline_policy      = <<POLICY\n"
                        ],
                        [
                            152,
                            "{\n"
                        ],
                        [
                            153,
                            "  \"Statement\": [\n"
                        ],
                        [
                            154,
                            "    {\n"
                        ],
                        [
                            155,
                            "      \"Action\": [\n"
                        ],
                        [
                            156,
                            "        \"s3:HeadBucket\",\n"
                        ],
                        [
                            157,
                            "        \"*\"\n"
                        ],
                        [
                            158,
                            "      ],\n"
                        ],
                        [
                            159,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            160,
                            "      \"Resource\": [\n"
                        ],
                        [
                            161,
                            "        \"arn:aws:s3:::b1\",\n"
                        ],
                        [
                            162,
                            "        \"arn:aws:s3:::b1/*\",\n"
                        ],
                        [
                            163,
                            "        \"*\"\n"
                        ],
                        [
                            164,
                            "      ],\n"
                        ],
                        [
                            165,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            166,
                            "    }\n"
                        ],
                        [
                            167,
                            "  ],\n"
                        ],
                        [
                            168,
                            "  \"Version\": \"2012-10-17\"\n"
                        ],
                        [
                            169,
                            "}\n"
                        ],
                        [
                            170,
                            "POLICY\n"
                        ],
                        [
                            171,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            172,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_admin.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_admin.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_admin.tf",
                    "file_line_range": [
                        148,
                        172
                    ],
                    "resource": "aws_ssoadmin_permission_set_inline_policy.fail1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_iam_user_policy\" \"mfa\" {\n"
                        ],
                        [
                            22,
                            "  name_prefix = \"aws-foundations-benchmark-1-4-0\"\n"
                        ],
                        [
                            23,
                            "  user        = aws_iam_user.mfa.name\n"
                        ],
                        [
                            24,
                            "\n"
                        ],
                        [
                            25,
                            "  policy = <<EOF\n"
                        ],
                        [
                            26,
                            "{\n"
                        ],
                        [
                            27,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            28,
                            "   \"Statement\": [\n"
                        ],
                        [
                            29,
                            "     {\n"
                        ],
                        [
                            30,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            31,
                            "       \"Resource\": \"${aws_iam_user.mfa.arn}\",\n"
                        ],
                        [
                            32,
                            "       \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            33,
                            "       \"Condition\": {\n"
                        ],
                        [
                            34,
                            "         \"BoolIfExists\": {\n"
                        ],
                        [
                            35,
                            "           \"aws:MultiFactorAuthPresent\" : \"false\"\n"
                        ],
                        [
                            36,
                            "         }\n"
                        ],
                        [
                            37,
                            "       }\n"
                        ],
                        [
                            38,
                            "     }\n"
                        ],
                        [
                            39,
                            "   ]\n"
                        ],
                        [
                            40,
                            "}\n"
                        ],
                        [
                            41,
                            "EOF\n"
                        ],
                        [
                            42,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            43,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_authentication_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "file_line_range": [
                        21,
                        43
                    ],
                    "resource": "aws_iam_user_policy.mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_16",
                    "check_name": "Ensure all data stored in the SQS queue is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_sqs_queue\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"examplequeue\"\n"
                        ],
                        [
                            3,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_sqs_queue.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueueEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue"
                },
                {
                    "check_id": "CKV_AWS_9",
                    "bc_check_id": "BC_AWS_IAM_11",
                    "check_name": "Ensure IAM password policy expires passwords within 90 days or less",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "max_password_age"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyExpiration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_11"
                },
                {
                    "check_id": "CKV_AWS_13",
                    "bc_check_id": "BC_AWS_IAM_10",
                    "check_name": "Ensure IAM password policy prevents password reuse",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "password_reuse_prevention"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyReuse",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_10"
                },
                {
                    "check_id": "CKV_AWS_10",
                    "bc_check_id": "BC_AWS_IAM_9",
                    "check_name": "Ensure IAM password policy requires minimum length of 14 or greater",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "minimum_password_length"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_iam_account_password_policy\" \"positive2\" {\n"
                        ],
                        [
                            8,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            9,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            10,
                            "  require_numbers                = true\n"
                        ],
                        [
                            11,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            12,
                            "  require_symbols                = true\n"
                        ],
                        [
                            13,
                            "  allow_users_to_change_password = false\n"
                        ],
                        [
                            14,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_aws_passord_policy_with_unchangeable_passwords.tf",
                    "file_line_range": [
                        7,
                        15
                    ],
                    "resource": "aws_iam_account_password_policy.positive2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLength",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_9-1"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"test_role\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            5,
                            "{\n"
                        ],
                        [
                            6,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            7,
                            "  \"Statement\": [\n"
                        ],
                        [
                            8,
                            "    {\n"
                        ],
                        [
                            9,
                            "      \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            10,
                            "      \"Principal\": {\n"
                        ],
                        [
                            11,
                            "        \"AWS\": \"arn:aws:iam::987654321145:root\"\n"
                        ],
                        [
                            12,
                            "      },\n"
                        ],
                        [
                            13,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "      \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "      \"Sid\": \"\"\n"
                        ],
                        [
                            16,
                            "    }\n"
                        ],
                        [
                            17,
                            "  ]\n"
                        ],
                        [
                            18,
                            "}\n"
                        ],
                        [
                            19,
                            "EOF\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    tag-key = \"tag-value\"\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf",
                    "file_line_range": [
                        1,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "tag-key": "tag-value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_9",
                    "bc_check_id": "BC_AWS_IAM_11",
                    "check_name": "Ensure IAM password policy expires passwords within 90 days or less",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "max_password_age"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyExpiration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_11"
                },
                {
                    "check_id": "CKV_AWS_13",
                    "bc_check_id": "BC_AWS_IAM_10",
                    "check_name": "Ensure IAM password policy prevents password reuse",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "password_reuse_prevention"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyReuse",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_10"
                },
                {
                    "check_id": "CKV_AWS_10",
                    "bc_check_id": "BC_AWS_IAM_9",
                    "check_name": "Ensure IAM password policy requires minimum length of 14 or greater",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "minimum_password_length"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_account_password_policy\" \"expire\" {\n"
                        ],
                        [
                            2,
                            "  minimum_password_length        = 8\n"
                        ],
                        [
                            3,
                            "  require_lowercase_characters   = true\n"
                        ],
                        [
                            4,
                            "  require_numbers                = true\n"
                        ],
                        [
                            5,
                            "  require_uppercase_characters   = true\n"
                        ],
                        [
                            6,
                            "  require_symbols                = true\n"
                        ],
                        [
                            7,
                            "  allow_users_to_change_password = true\n"
                        ],
                        [
                            8,
                            "  max_password_age               = 180\n"
                        ],
                        [
                            9,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_misconfigured_password_policy_expiration.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_account_password_policy.expire",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.PasswordPolicyLength",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_9-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_iam_user_policy\" \"fail_key\" {\n"
                        ],
                        [
                            15,
                            "  name = \"test\"\n"
                        ],
                        [
                            16,
                            "  user = aws_iam_user.fail_key.name\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  policy = <<EOF\n"
                        ],
                        [
                            19,
                            "{\n"
                        ],
                        [
                            20,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            21,
                            "  \"Statement\": [\n"
                        ],
                        [
                            22,
                            "    {\n"
                        ],
                        [
                            23,
                            "      \"Action\": [\n"
                        ],
                        [
                            24,
                            "        \"ec2:Describe*\"\n"
                        ],
                        [
                            25,
                            "      ],\n"
                        ],
                        [
                            26,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            27,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            28,
                            "    }\n"
                        ],
                        [
                            29,
                            "  ]\n"
                        ],
                        [
                            30,
                            "}\n"
                        ],
                        [
                            31,
                            "EOF\n"
                        ],
                        [
                            32,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_root_account_has_active_access_keys.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                    "file_line_range": [
                        14,
                        33
                    ],
                    "resource": "aws_iam_user_policy.fail_key",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_key",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_root_account_has_active_access_keys.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_iam_user_policy\" \"fail_mfa\" {\n"
                        ],
                        [
                            16,
                            "  name = \"test\"\n"
                        ],
                        [
                            17,
                            "  user = aws_iam_user.fail_mfa.name\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  policy = <<EOF\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "   \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            22,
                            "   \"Statement\": [\n"
                        ],
                        [
                            23,
                            "     {\n"
                        ],
                        [
                            24,
                            "       \"Effect\": \"Allow\",\n"
                        ],
                        [
                            25,
                            "       \"Principal\": {\n"
                        ],
                        [
                            26,
                            "         \"AWS\": \"arn:aws:iam::111122223333:root\"\n"
                        ],
                        [
                            27,
                            "       },\n"
                        ],
                        [
                            28,
                            "       \"Action\": \"sts:AssumeRole\"\n"
                        ],
                        [
                            29,
                            "     }\n"
                        ],
                        [
                            30,
                            "   ]\n"
                        ],
                        [
                            31,
                            "}\n"
                        ],
                        [
                            32,
                            "EOF\n"
                        ],
                        [
                            33,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_user_policy_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                    "file_line_range": [
                        15,
                        34
                    ],
                    "resource": "aws_iam_user_policy.fail_mfa",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "user": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.fail_mfa",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_policy_without_mfa.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_policy_attachment\" \"positive1_3\" {\n"
                        ],
                        [
                            17,
                            "  name  = \"excess_policy\"\n"
                        ],
                        [
                            18,
                            "  users = [aws_iam_user.user.name]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  policy = <<EOF\n"
                        ],
                        [
                            21,
                            "{\n"
                        ],
                        [
                            22,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            23,
                            "  \"Statement\": [\n"
                        ],
                        [
                            24,
                            "    {\n"
                        ],
                        [
                            25,
                            "      \"Action\": [\n"
                        ],
                        [
                            26,
                            "        \"ec2:*\",\n"
                        ],
                        [
                            27,
                            "        \"s3:*\",\n"
                        ],
                        [
                            28,
                            "        \"lambda:*\",\n"
                        ],
                        [
                            29,
                            "        \"cloudwatch:*\"\n"
                        ],
                        [
                            30,
                            "      ],\n"
                        ],
                        [
                            31,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            32,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            33,
                            "    }\n"
                        ],
                        [
                            34,
                            "  ]\n"
                        ],
                        [
                            35,
                            "}\n"
                        ],
                        [
                            36,
                            "EOF\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policies_attached_to_user.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policies_attached_to_user.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policies_attached_to_user.tf",
                    "file_line_range": [
                        16,
                        37
                    ],
                    "resource": "aws_iam_policy_attachment.positive1_3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_63",
                    "bc_check_id": "BC_AWS_IAM_48",
                    "check_name": "Ensure no IAM policies documents allow \"*\" as a statement's actions",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"apigateway-cloudwatch-logging\"\n"
                        ],
                        [
                            3,
                            "  role = aws_iam_role.apigateway_cloudwatch_logging.id\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "{\n"
                        ],
                        [
                            7,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            11,
                            "      \"Action\": [\"*\"],\n"
                        ],
                        [
                            12,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  ]\n"
                        ],
                        [
                            15,
                            "}\n"
                        ],
                        [
                            16,
                            "EOF\n"
                        ],
                        [
                            17,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policies_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policies_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policies_with_full_privileges.tf",
                    "file_line_range": [
                        1,
                        17
                    ],
                    "resource": "aws_iam_role_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMStarActionPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_48"
                },
                {
                    "check_id": "CKV_AWS_62",
                    "bc_check_id": "BC_AWS_IAM_47",
                    "check_name": "Ensure IAM policies that allow full \"*-*\" administrative privileges are not created",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy",
                            "inline_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_role_policy\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"apigateway-cloudwatch-logging\"\n"
                        ],
                        [
                            3,
                            "  role = aws_iam_role.apigateway_cloudwatch_logging.id\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "{\n"
                        ],
                        [
                            7,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "  \"Statement\": [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            11,
                            "      \"Action\": [\"*\"],\n"
                        ],
                        [
                            12,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            13,
                            "    }\n"
                        ],
                        [
                            14,
                            "  ]\n"
                        ],
                        [
                            15,
                            "}\n"
                        ],
                        [
                            16,
                            "EOF\n"
                        ],
                        [
                            17,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policies_with_full_privileges.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policies_with_full_privileges.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policies_with_full_privileges.tf",
                    "file_line_range": [
                        1,
                        17
                    ],
                    "resource": "aws_iam_role_policy.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMAdminPolicyDocument",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_47"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name_prefix = \"openshift-instance-role\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            13,
                            "            \"Principal\": {\n"
                        ],
                        [
                            14,
                            "                \"Service\": \"ec2.amazonaws.com\",\n"
                        ],
                        [
                            15,
                            "                \"AWS\": \"*\"\n"
                        ],
                        [
                            16,
                            "            },\n"
                        ],
                        [
                            17,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            18,
                            "            \"Sid\": \"\"\n"
                        ],
                        [
                            19,
                            "        }\n"
                        ],
                        [
                            20,
                            "    ]\n"
                        ],
                        [
                            21,
                            "}\n"
                        ],
                        [
                            22,
                            "EOF\n"
                        ],
                        [
                            23,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_assumerole_permission_across_all_services.tf",
                    "file_line_range": [
                        4,
                        24
                    ],
                    "resource": "aws_iam_role.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_40",
                    "bc_check_id": "BC_AWS_IAM_16",
                    "check_name": "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_iam_user_policy\" \"positive3\" {\n"
                        ],
                        [
                            17,
                            "  name = \"excess_policy\"\n"
                        ],
                        [
                            18,
                            "  user = aws_iam_user.user.name\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  policy = <<EOF\n"
                        ],
                        [
                            21,
                            "{\n"
                        ],
                        [
                            22,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            23,
                            "  \"Statement\": [\n"
                        ],
                        [
                            24,
                            "    {\n"
                        ],
                        [
                            25,
                            "      \"Action\": [\n"
                        ],
                        [
                            26,
                            "        \"ec2:*\",\n"
                        ],
                        [
                            27,
                            "        \"s3:*\",\n"
                        ],
                        [
                            28,
                            "        \"lambda:*\",\n"
                        ],
                        [
                            29,
                            "        \"cloudwatch:*\"\n"
                        ],
                        [
                            30,
                            "      ],\n"
                        ],
                        [
                            31,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            32,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            33,
                            "    }\n"
                        ],
                        [
                            34,
                            "  ]\n"
                        ],
                        [
                            35,
                            "}\n"
                        ],
                        [
                            36,
                            "EOF\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "repo_file_path": "/terraform/aws/iam/policy/iam_policy_grants_full_permissions.tf",
                    "file_line_range": [
                        16,
                        37
                    ],
                    "resource": "aws_iam_user_policy.positive3",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMPolicyAttachedToGroupOrRoles",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_iam_role\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name               = \"fail-default\"\n"
                        ],
                        [
                            5,
                            "  assume_role_policy = <<POLICY\n"
                        ],
                        [
                            6,
                            "{\n"
                        ],
                        [
                            7,
                            "    \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            8,
                            "    \"Statement\": [\n"
                        ],
                        [
                            9,
                            "       {\n"
                        ],
                        [
                            10,
                            "           \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            11,
                            "           \"Principal\": {\"AWS\": \"123123123123\"},\n"
                        ],
                        [
                            12,
                            "           \"Effect\": \"Allow\",\n"
                        ],
                        [
                            13,
                            "           \"Sid\": \"\"\n"
                        ],
                        [
                            14,
                            "        }]\n"
                        ],
                        [
                            15,
                            "}\n"
                        ],
                        [
                            16,
                            "POLICY\n"
                        ],
                        [
                            17,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_line_range": [
                        3,
                        18
                    ],
                    "resource": "aws_iam_role.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_61",
                    "bc_check_id": "BC_AWS_IAM_45",
                    "check_name": "Ensure IAM role allows only specific principals in account to assume it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_iam_role\" \"fail2\" {\n"
                        ],
                        [
                            22,
                            "  name               = \"fail-default\"\n"
                        ],
                        [
                            23,
                            "  assume_role_policy = <<POLICY\n"
                        ],
                        [
                            24,
                            "{\n"
                        ],
                        [
                            25,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            26,
                            "  \"Statement\": [\n"
                        ],
                        [
                            27,
                            "      {\n"
                        ],
                        [
                            28,
                            "    \"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            29,
                            "    \"Principal\": {\"AWS\": \"arn:aws:iam::123123123123:root\"},\n"
                        ],
                        [
                            30,
                            "    \"Effect\": \"Allow\",\n"
                        ],
                        [
                            31,
                            "    \"Sid\": \"\"\n"
                        ],
                        [
                            32,
                            "  }]\n"
                        ],
                        [
                            33,
                            "}\n"
                        ],
                        [
                            34,
                            "POLICY\n"
                        ],
                        [
                            35,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowAssumeFromAccount.tf",
                    "file_line_range": [
                        21,
                        36
                    ],
                    "resource": "aws_iam_role.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowAssumeFromAccount",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_45"
                },
                {
                    "check_id": "CKV_AWS_60",
                    "bc_check_id": "BC_AWS_IAM_44",
                    "check_name": "Ensure IAM role allows only specific services or principals to assume it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "assume_role_policy"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_role\" \"lambda\" {\n"
                        ],
                        [
                            5,
                            "  namename_prefix    = \"test\"\n"
                        ],
                        [
                            6,
                            "  assume_role_policy = <<EOF\n"
                        ],
                        [
                            7,
                            "{\n"
                        ],
                        [
                            8,
                            "\"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\"Statement\": [\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            12,
                            "\"Principal\" : {\"Service\": \"lambda.amazonaws.com\"},\n"
                        ],
                        [
                            13,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            14,
                            "},\n"
                        ],
                        [
                            15,
                            "{\n"
                        ],
                        [
                            16,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            17,
                            "\"Principal\" : {\"AWS\": \"*\"},\n"
                        ],
                        [
                            18,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            19,
                            "},\n"
                        ],
                        [
                            20,
                            "{\n"
                        ],
                        [
                            21,
                            "\"Action\": \"sts:AssumeRole\",\n"
                        ],
                        [
                            22,
                            "\"Principal\" : {\"Service\": \"events.amazonaws.com\"},\n"
                        ],
                        [
                            23,
                            "\"Effect\": \"Allow\"\n"
                        ],
                        [
                            24,
                            "}\n"
                        ],
                        [
                            25,
                            "]\n"
                        ],
                        [
                            26,
                            "}\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "EOF\n"
                        ],
                        [
                            29,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            30,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "repo_file_path": "/terraform/aws/iam/role/IAMRoleAllowsPublicAssume.tf",
                    "file_line_range": [
                        4,
                        30
                    ],
                    "resource": "aws_iam_role.lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IAMRoleAllowsPublicAssume",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_44"
                },
                {
                    "check_id": "CKV_AWS_180",
                    "bc_check_id": "BC_AWS_GENERAL_100",
                    "check_name": "Ensure Image Builder component is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_imagebuilder_component\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  data = yamlencode({\n"
                        ],
                        [
                            6,
                            "    phases = [{\n"
                        ],
                        [
                            7,
                            "      name = \"build\"\n"
                        ],
                        [
                            8,
                            "      steps = [{\n"
                        ],
                        [
                            9,
                            "        action = \"ExecuteBash\"\n"
                        ],
                        [
                            10,
                            "        inputs = {\n"
                        ],
                        [
                            11,
                            "          commands = [\"echo 'hello world'\"]\n"
                        ],
                        [
                            12,
                            "        }\n"
                        ],
                        [
                            13,
                            "        name      = \"example\"\n"
                        ],
                        [
                            14,
                            "        onFailure = \"Continue\"\n"
                        ],
                        [
                            15,
                            "      }]\n"
                        ],
                        [
                            16,
                            "    }]\n"
                        ],
                        [
                            17,
                            "    schemaVersion = 1.0\n"
                        ],
                        [
                            18,
                            "  })\n"
                        ],
                        [
                            19,
                            "  name     = \"examplea\"\n"
                        ],
                        [
                            20,
                            "  platform = \"Linux\"\n"
                        ],
                        [
                            21,
                            "  version  = \"1.0.0\"\n"
                        ],
                        [
                            22,
                            "  tags     = { test = \"fail\" }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/imagebuilder/aws_imagebuilder_component.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/imagebuilder/aws_imagebuilder_component.tf",
                    "repo_file_path": "/terraform/aws/imagebuilder/aws_imagebuilder_component.tf",
                    "file_line_range": [
                        4,
                        23
                    ],
                    "resource": "aws_imagebuilder_component.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ImagebuilderComponentEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_100"
                },
                {
                    "check_id": "CKV_AWS_199",
                    "bc_check_id": null,
                    "check_name": "Ensure Image Builder Distribution Configuration encrypts AMI's using KMS - a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "distribution/[0]/ami_distribution_configuration/[0]/kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_imagebuilder_distribution_configuration\" \"example\" {\n"
                        ],
                        [
                            4,
                            "  name        = \"example\"\n"
                        ],
                        [
                            5,
                            "  description = \"non empty value\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  distribution {\n"
                        ],
                        [
                            8,
                            "    ami_distribution_configuration {\n"
                        ],
                        [
                            9,
                            "      //kms_key_id = \"\"\n"
                        ],
                        [
                            10,
                            "      ami_tags = {\n"
                        ],
                        [
                            11,
                            "        CostCenter = \"IT\"\n"
                        ],
                        [
                            12,
                            "      }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "      name = \"example-{{ imagebuilder:buildDate }}\"\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "      launch_permission {\n"
                        ],
                        [
                            17,
                            "        user_ids = [\"123456789012\"]\n"
                        ],
                        [
                            18,
                            "      }\n"
                        ],
                        [
                            19,
                            "    }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "    region = \"us-east-1\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/imagebuilder/aws_imagebuilder_distribution_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/imagebuilder/aws_imagebuilder_distribution_configuration.tf",
                    "repo_file_path": "/terraform/aws/imagebuilder/aws_imagebuilder_distribution_configuration.tf",
                    "file_line_range": [
                        3,
                        24
                    ],
                    "resource": "aws_imagebuilder_distribution_configuration.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ImagebuilderDistributionConfigurationEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_instance\" \"monitoring_positive1\" {\n"
                        ],
                        [
                            18,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            19,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_monitoring_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_monitoring_disabled.tf",
                    "file_line_range": [
                        17,
                        25
                    ],
                    "resource": "aws_instance.monitoring_positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            7,
                            "    test = \"fails\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  security_groups = [aws_security_group.default.id]\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_instance_using_default_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_instance_using_default_security_group.tf",
                    "file_line_range": [
                        1,
                        11
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_instance\" \"web\" {\n"
                        ],
                        [
                            19,
                            "  ami           = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            20,
                            "  instance_type = \"t3.micro\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  tags = {\n"
                        ],
                        [
                            23,
                            "    Name = \"HelloWorld\"\n"
                        ],
                        [
                            24,
                            "    size = \"big\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/ec2_not_ebs_optimized.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "repo_file_path": "/terraform/aws/instance/ec2_not_ebs_optimized.tf",
                    "file_line_range": [
                        18,
                        26
                    ],
                    "resource": "aws_instance.web",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "HelloWorld",
                        "size": "big"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_88",
                    "bc_check_id": "BC_AWS_PUBLIC_12",
                    "check_name": "EC2 instance should not have public IP.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "associate_public_ip_address"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_12"
                },
                {
                    "check_id": "CKV_AWS_46",
                    "bc_check_id": "BC_AWS_SECRETS_1",
                    "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user_data"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_instance\" \"fail\" {\n"
                        ],
                        [
                            15,
                            "  ami                         = var.ami\n"
                        ],
                        [
                            16,
                            "  instance_type               = \"t2.nano\"\n"
                        ],
                        [
                            17,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            18,
                            "  vpc_security_group_ids = [\n"
                        ],
                        [
                            19,
                            "  aws_security_group.web-node.id]\n"
                        ],
                        [
                            20,
                            "  subnet_id = aws_subnet.web_subnet.id\n"
                        ],
                        [
                            21,
                            "  user_data = <<EOF\n"
                        ],
                        [
                            22,
                            "\t\t #! /bin/bash\n"
                        ],
                        [
                            23,
                            "\t\t sudo apt-get update\n"
                        ],
                        [
                            24,
                            "\t\t sudo apt-get install -y apache2\n"
                        ],
                        [
                            25,
                            "\t\t sudo systemctl start apache2\n"
                        ],
                        [
                            26,
                            "\t\t sudo systemctl enable apache2\n"
                        ],
                        [
                            27,
                            "\t\t export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA\n"
                        ],
                        [
                            28,
                            "\t\t export AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMAAAKEY\n"
                        ],
                        [
                            29,
                            "\t\t export AWS_DEFAULT_REGION=us-west-2\n"
                        ],
                        [
                            30,
                            "\t\t echo \"<h1>Deployed via Terraform</h1>\" | sudo tee /var/www/html/index.html\n"
                        ],
                        [
                            31,
                            "\t\t EOF\n"
                        ],
                        [
                            32,
                            "  tags = {\n"
                        ],
                        [
                            33,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance.tf",
                    "repo_file_path": "/terraform/aws/instance/instance.tf",
                    "file_line_range": [
                        14,
                        35
                    ],
                    "resource": "aws_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  ami = \"ami-003634241a8fcdec0\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/instance/instance_with_no_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/instance/instance_with_no_vpc.tf",
                    "repo_file_path": "/terraform/aws/instance/instance_with_no_vpc.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_43",
                    "bc_check_id": "BC_AWS_GENERAL_22",
                    "check_name": "Ensure Kinesis Stream is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_type"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_kinesis_stream\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  name        = \"test_stream-%[1]d\"\n"
                        ],
                        [
                            10,
                            "  shard_count = 1\n"
                        ],
                        [
                            11,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kinesis/kinesis_stream.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kinesis/kinesis_stream.tf",
                    "repo_file_path": "/terraform/aws/kinesis/kinesis_stream.tf",
                    "file_line_range": [
                        8,
                        12
                    ],
                    "resource": "aws_kinesis_stream.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KinesisStreamEncryptionType",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_22"
                },
                {
                    "check_id": "CKV_AWS_185",
                    "bc_check_id": "BC_AWS_GENERAL_105",
                    "check_name": "Ensure Kinesis Stream is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_kinesis_stream\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  name        = \"test_stream-%[1]d\"\n"
                        ],
                        [
                            10,
                            "  shard_count = 1\n"
                        ],
                        [
                            11,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kinesis/kinesis_stream.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kinesis/kinesis_stream.tf",
                    "repo_file_path": "/terraform/aws/kinesis/kinesis_stream.tf",
                    "file_line_range": [
                        8,
                        12
                    ],
                    "resource": "aws_kinesis_stream.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KinesisStreamEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_105"
                },
                {
                    "check_id": "CKV_AWS_177",
                    "bc_check_id": "BC_AWS_GENERAL_97",
                    "check_name": "Ensure Kinesis Video Stream is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_kinesis_video_stream\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  name = \"terraform-kinesis-video-stream-test\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  data_retention_in_hours = 1\n"
                        ],
                        [
                            8,
                            "  device_name             = \"kinesis-video-device-name\"\n"
                        ],
                        [
                            9,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kinesis/kinesis_video_stream.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kinesis/kinesis_video_stream.tf",
                    "repo_file_path": "/terraform/aws/kinesis/kinesis_video_stream.tf",
                    "file_line_range": [
                        4,
                        10
                    ],
                    "resource": "aws_kinesis_video_stream.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KinesisVideoEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_97"
                },
                {
                    "check_id": "CKV_AWS_33",
                    "bc_check_id": "BC_AWS_IAM_63",
                    "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy/[0]/Statement/[1]/Principal/AWS"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_kms_key\" \"fail_0\" {\n"
                        ],
                        [
                            8,
                            "  description = \"description\"\n"
                        ],
                        [
                            9,
                            "  policy      = <<POLICY\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "  \"Statement\": [\n"
                        ],
                        [
                            13,
                            "    {\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": {\n"
                        ],
                        [
                            16,
                            "        \"AWS\": \"arn:aws:iam::111122223333:root\"\n"
                        ],
                        [
                            17,
                            "      },\n"
                        ],
                        [
                            18,
                            "      \"Action\": \"kms:*\",\n"
                        ],
                        [
                            19,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            20,
                            "    },\n"
                        ],
                        [
                            21,
                            "    {\n"
                        ],
                        [
                            22,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            23,
                            "      \"Principal\": {\n"
                        ],
                        [
                            24,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            25,
                            "      },\n"
                        ],
                        [
                            26,
                            "      \"Action\": \"kms:*\",\n"
                        ],
                        [
                            27,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            28,
                            "    },\n"
                        ],
                        [
                            29,
                            "  ]\n"
                        ],
                        [
                            30,
                            "}\n"
                        ],
                        [
                            31,
                            "POLICY\n"
                        ],
                        [
                            32,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms.tf",
                    "repo_file_path": "/terraform/aws/kms/kms.tf",
                    "file_line_range": [
                        7,
                        33
                    ],
                    "resource": "aws_kms_key.fail_0",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal"
                },
                {
                    "check_id": "CKV_AWS_7",
                    "bc_check_id": "BC_AWS_LOGGING_8",
                    "check_name": "Ensure rotation for customer created CMKs is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_key_rotation"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_kms_key\" \"fail_0\" {\n"
                        ],
                        [
                            8,
                            "  description = \"description\"\n"
                        ],
                        [
                            9,
                            "  policy      = <<POLICY\n"
                        ],
                        [
                            10,
                            "{\n"
                        ],
                        [
                            11,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            12,
                            "  \"Statement\": [\n"
                        ],
                        [
                            13,
                            "    {\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": {\n"
                        ],
                        [
                            16,
                            "        \"AWS\": \"arn:aws:iam::111122223333:root\"\n"
                        ],
                        [
                            17,
                            "      },\n"
                        ],
                        [
                            18,
                            "      \"Action\": \"kms:*\",\n"
                        ],
                        [
                            19,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            20,
                            "    },\n"
                        ],
                        [
                            21,
                            "    {\n"
                        ],
                        [
                            22,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            23,
                            "      \"Principal\": {\n"
                        ],
                        [
                            24,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            25,
                            "      },\n"
                        ],
                        [
                            26,
                            "      \"Action\": \"kms:*\",\n"
                        ],
                        [
                            27,
                            "      \"Resource\": \"*\"\n"
                        ],
                        [
                            28,
                            "    },\n"
                        ],
                        [
                            29,
                            "  ]\n"
                        ],
                        [
                            30,
                            "}\n"
                        ],
                        [
                            31,
                            "POLICY\n"
                        ],
                        [
                            32,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms.tf",
                    "repo_file_path": "/terraform/aws/kms/kms.tf",
                    "file_line_range": [
                        7,
                        33
                    ],
                    "resource": "aws_kms_key.fail_0",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_8"
                },
                {
                    "check_id": "CKV_AWS_7",
                    "bc_check_id": "BC_AWS_LOGGING_8",
                    "check_name": "Ensure rotation for customer created CMKs is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_key_rotation"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_kms_key\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  description = \"KMS key 1\"\n"
                        ],
                        [
                            5,
                            "  is_enabled  = false\n"
                        ],
                        [
                            6,
                            "  tags        = { test = \"Fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms_key_is_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms_key_is_disabled.tf",
                    "repo_file_path": "/terraform/aws/kms/kms_key_is_disabled.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_kms_key.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_8"
                },
                {
                    "check_id": "CKV_AWS_7",
                    "bc_check_id": "BC_AWS_LOGGING_8",
                    "check_name": "Ensure rotation for customer created CMKs is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_key_rotation"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_kms_key\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  description             = \"KMS key + secure_policy\"\n"
                        ],
                        [
                            5,
                            "  deletion_window_in_days = 7\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  policy = <<EOF\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "    \"Version\": \"2008-10-17\",\n"
                        ],
                        [
                            10,
                            "    \"Statement\": [\n"
                        ],
                        [
                            11,
                            "        {\n"
                        ],
                        [
                            12,
                            "            \"Sid\": \"Secure Policy\",\n"
                        ],
                        [
                            13,
                            "            \"Effect\": \"Allow\",\n"
                        ],
                        [
                            14,
                            "            \"Resource\": \"*\",\n"
                        ],
                        [
                            15,
                            "            \"Action\": [\n"
                        ],
                        [
                            16,
                            "            \"kms:Create*\",\n"
                        ],
                        [
                            17,
                            "            \"kms:Describe*\",\n"
                        ],
                        [
                            18,
                            "            \"kms:Enable*\",\n"
                        ],
                        [
                            19,
                            "            \"kms:List*\",\n"
                        ],
                        [
                            20,
                            "            \"kms:Put*\",\n"
                        ],
                        [
                            21,
                            "            \"kms:Update*\",\n"
                        ],
                        [
                            22,
                            "            \"kms:Revoke*\",\n"
                        ],
                        [
                            23,
                            "            \"kms:Disable*\",\n"
                        ],
                        [
                            24,
                            "            \"kms:Get*\",\n"
                        ],
                        [
                            25,
                            "            \"kms:Delete*\",\n"
                        ],
                        [
                            26,
                            "            \"kms:TagResource\",\n"
                        ],
                        [
                            27,
                            "            \"kms:UntagResource\",\n"
                        ],
                        [
                            28,
                            "            \"kms:ScheduleKeyDeletion\",\n"
                        ],
                        [
                            29,
                            "            \"kms:CancelKeyDeletion\"\n"
                        ],
                        [
                            30,
                            "            ]\n"
                        ],
                        [
                            31,
                            "        }\n"
                        ],
                        [
                            32,
                            "    ]\n"
                        ],
                        [
                            33,
                            "}\n"
                        ],
                        [
                            34,
                            "EOF\n"
                        ],
                        [
                            35,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/kms/kms_key_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/kms/kms_key_with_vulnerable_policy.tf",
                    "file_line_range": [
                        3,
                        36
                    ],
                    "resource": "aws_kms_key.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_8"
                },
                {
                    "check_id": "CKV_AWS_50",
                    "bc_check_id": "BC_AWS_SERVERLESS_4",
                    "check_name": "X-ray tracing is enabled for Lambda",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "tracing_config/[0]/mode"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
                },
                {
                    "check_id": "CKV_AWS_117",
                    "bc_check_id": "BC_AWS_GENERAL_65",
                    "check_name": "Ensure that AWS Lambda function is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"
                },
                {
                    "check_id": "CKV_AWS_116",
                    "bc_check_id": "BC_AWS_GENERAL_64",
                    "check_name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "dead_letter_config/[0]/target_arn"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaDLQConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"
                },
                {
                    "check_id": "CKV_AWS_173",
                    "bc_check_id": "BC_AWS_SERVERLESS_5",
                    "check_name": "Check encryption settings for Lambda environmental variable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "environment/[0]/variables"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentEncryptionSettings",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_5"
                },
                {
                    "check_id": "CKV_AWS_45",
                    "bc_check_id": "BC_AWS_SECRETS_3",
                    "check_name": "Ensure no hard-coded secrets exist in lambda environment",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "environment/[0]/variables/[0]/AWS_ACCESS_KEY_ID"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentCredentials",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_3"
                },
                {
                    "check_id": "CKV_AWS_115",
                    "bc_check_id": "BC_AWS_GENERAL_63",
                    "check_name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "reserved_concurrent_executions/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lambda_function\" \"morefail\" {\n"
                        ],
                        [
                            14,
                            "  function_name = \"morefail\"\n"
                        ],
                        [
                            15,
                            "  role          = \"\"\n"
                        ],
                        [
                            16,
                            "  handler       = \"index.handler\"\n"
                        ],
                        [
                            17,
                            "  runtime       = \"python3.9\"\n"
                        ],
                        [
                            18,
                            "  environment {\n"
                        ],
                        [
                            19,
                            "    variables = {\n"
                        ],
                        [
                            20,
                            "      AWS_ACCESS_KEY_ID     = \"AKIAIOSFODNN7EXAMPLE\",\n"
                        ],
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ],
                        [
                            22,
                            "    }\n"
                        ],
                        [
                            23,
                            "  }\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        13,
                        27
                    ],
                    "resource": "aws_lambda_function.morefail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaFunctionLevelConcurrentExecutionLimit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"
                },
                {
                    "check_id": "CKV_AWS_50",
                    "bc_check_id": "BC_AWS_SERVERLESS_4",
                    "check_name": "X-ray tracing is enabled for Lambda",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "tracing_config/[0]/mode"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
                },
                {
                    "check_id": "CKV_AWS_117",
                    "bc_check_id": "BC_AWS_GENERAL_65",
                    "check_name": "Ensure that AWS Lambda function is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"
                },
                {
                    "check_id": "CKV_AWS_116",
                    "bc_check_id": "BC_AWS_GENERAL_64",
                    "check_name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "dead_letter_config/[0]/target_arn"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaDLQConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"
                },
                {
                    "check_id": "CKV_AWS_173",
                    "bc_check_id": "BC_AWS_SERVERLESS_5",
                    "check_name": "Check encryption settings for Lambda environmental variable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "environment/[0]/variables"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentEncryptionSettings",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_5"
                },
                {
                    "check_id": "CKV_AWS_115",
                    "bc_check_id": "BC_AWS_GENERAL_63",
                    "check_name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "reserved_concurrent_executions/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lambda_function\" \"positivefunction1\" {\n"
                        ],
                        [
                            2,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            3,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            4,
                            "  role             = aws_iam_role.positiverole1.arn\n"
                        ],
                        [
                            5,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            6,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            7,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            11,
                            "    test = \"fail\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  environment = {\n"
                        ],
                        [
                            15,
                            "    variables = {\n"
                        ],
                        [
                            16,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        1,
                        19
                    ],
                    "resource": "aws_lambda_function.positivefunction1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaFunctionLevelConcurrentExecutionLimit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"
                },
                {
                    "check_id": "CKV_AWS_50",
                    "bc_check_id": "BC_AWS_SERVERLESS_4",
                    "check_name": "X-ray tracing is enabled for Lambda",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "tracing_config/[0]/mode"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
                },
                {
                    "check_id": "CKV_AWS_117",
                    "bc_check_id": "BC_AWS_GENERAL_65",
                    "check_name": "Ensure that AWS Lambda function is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"
                },
                {
                    "check_id": "CKV_AWS_116",
                    "bc_check_id": "BC_AWS_GENERAL_64",
                    "check_name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "dead_letter_config/[0]/target_arn"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaDLQConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"
                },
                {
                    "check_id": "CKV_AWS_173",
                    "bc_check_id": "BC_AWS_SERVERLESS_5",
                    "check_name": "Check encryption settings for Lambda environmental variable",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "environment/[0]/variables"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaEnvironmentEncryptionSettings",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_5"
                },
                {
                    "check_id": "CKV_AWS_115",
                    "bc_check_id": "BC_AWS_GENERAL_63",
                    "check_name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "reserved_concurrent_executions/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            21,
                            "resource \"aws_lambda_function\" \"positivefunction2\" {\n"
                        ],
                        [
                            22,
                            "  filename         = \"lambda_function_payload.zip\"\n"
                        ],
                        [
                            23,
                            "  function_name    = \"lambda_function_name\"\n"
                        ],
                        [
                            24,
                            "  role             = aws_iam_role.positiverole2.arn\n"
                        ],
                        [
                            25,
                            "  handler          = \"exports.test\"\n"
                        ],
                        [
                            26,
                            "  source_code_hash = filebase64sha256(\"lambda_function_payload.zip\")\n"
                        ],
                        [
                            27,
                            "  runtime          = \"nodejs12.x\"\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"lambda\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "  environment = {\n"
                        ],
                        [
                            35,
                            "    variables = {\n"
                        ],
                        [
                            36,
                            "      foo = \"bar\"\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "  }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_function_with_privileged_role.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_function_with_privileged_role.tf",
                    "file_line_range": [
                        21,
                        39
                    ],
                    "resource": "aws_lambda_function.positivefunction2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaFunctionLevelConcurrentExecutionLimit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "lambda",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"
                },
                {
                    "check_id": "CKV_AWS_50",
                    "bc_check_id": "BC_AWS_SERVERLESS_4",
                    "check_name": "X-ray tracing is enabled for Lambda",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "tracing_config/[0]/mode"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_lambda_function\" \"my_lambda\" {\n"
                        ],
                        [
                            6,
                            "  filename      = \"~/Downloads/lambda.json.zip\"\n"
                        ],
                        [
                            7,
                            "  function_name = \"my-lambda\"\n"
                        ],
                        [
                            8,
                            "  role          = aws_iam_role.lambda_role.arn\n"
                        ],
                        [
                            9,
                            "  handler       = \"lambda_function.lambda_handler\"\n"
                        ],
                        [
                            10,
                            "  runtime       = \"python3.8\"\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_lambda_function.my_lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
                },
                {
                    "check_id": "CKV_AWS_117",
                    "bc_check_id": "BC_AWS_GENERAL_65",
                    "check_name": "Ensure that AWS Lambda function is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_lambda_function\" \"my_lambda\" {\n"
                        ],
                        [
                            6,
                            "  filename      = \"~/Downloads/lambda.json.zip\"\n"
                        ],
                        [
                            7,
                            "  function_name = \"my-lambda\"\n"
                        ],
                        [
                            8,
                            "  role          = aws_iam_role.lambda_role.arn\n"
                        ],
                        [
                            9,
                            "  handler       = \"lambda_function.lambda_handler\"\n"
                        ],
                        [
                            10,
                            "  runtime       = \"python3.8\"\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_lambda_function.my_lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"
                },
                {
                    "check_id": "CKV_AWS_116",
                    "bc_check_id": "BC_AWS_GENERAL_64",
                    "check_name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "dead_letter_config/[0]/target_arn"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_lambda_function\" \"my_lambda\" {\n"
                        ],
                        [
                            6,
                            "  filename      = \"~/Downloads/lambda.json.zip\"\n"
                        ],
                        [
                            7,
                            "  function_name = \"my-lambda\"\n"
                        ],
                        [
                            8,
                            "  role          = aws_iam_role.lambda_role.arn\n"
                        ],
                        [
                            9,
                            "  handler       = \"lambda_function.lambda_handler\"\n"
                        ],
                        [
                            10,
                            "  runtime       = \"python3.8\"\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_lambda_function.my_lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaDLQConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"
                },
                {
                    "check_id": "CKV_AWS_115",
                    "bc_check_id": "BC_AWS_GENERAL_63",
                    "check_name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "reserved_concurrent_executions/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_lambda_function\" \"my_lambda\" {\n"
                        ],
                        [
                            6,
                            "  filename      = \"~/Downloads/lambda.json.zip\"\n"
                        ],
                        [
                            7,
                            "  function_name = \"my-lambda\"\n"
                        ],
                        [
                            8,
                            "  role          = aws_iam_role.lambda_role.arn\n"
                        ],
                        [
                            9,
                            "  handler       = \"lambda_function.lambda_handler\"\n"
                        ],
                        [
                            10,
                            "  runtime       = \"python3.8\"\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda_with_vulnerable_policy.tf",
                    "file_line_range": [
                        5,
                        14
                    ],
                    "resource": "aws_lambda_function.my_lambda",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaFunctionLevelConcurrentExecutionLimit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"
                },
                {
                    "check_id": "CKV_AWS_50",
                    "bc_check_id": "BC_AWS_SERVERLESS_4",
                    "check_name": "X-ray tracing is enabled for Lambda",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "tracing_config/[0]/mode"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_lambda_function\" \"example\" {\n"
                        ],
                        [
                            13,
                            "  function_name = \"ServerlessPerson\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  handler = \"MyHandler::handleRequest\"\n"
                        ],
                        [
                            16,
                            "  runtime = \"java11\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  role = aws_iam_role.lambda_exec.arn\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/public_lambda_via_api_gateway.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "repo_file_path": "/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "file_line_range": [
                        12,
                        22
                    ],
                    "resource": "aws_lambda_function.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaXrayEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_serverless_4"
                },
                {
                    "check_id": "CKV_AWS_117",
                    "bc_check_id": "BC_AWS_GENERAL_65",
                    "check_name": "Ensure that AWS Lambda function is configured inside a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "vpc_config"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_lambda_function\" \"example\" {\n"
                        ],
                        [
                            13,
                            "  function_name = \"ServerlessPerson\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  handler = \"MyHandler::handleRequest\"\n"
                        ],
                        [
                            16,
                            "  runtime = \"java11\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  role = aws_iam_role.lambda_exec.arn\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/public_lambda_via_api_gateway.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "repo_file_path": "/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "file_line_range": [
                        12,
                        22
                    ],
                    "resource": "aws_lambda_function.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaInVPC",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1"
                },
                {
                    "check_id": "CKV_AWS_116",
                    "bc_check_id": "BC_AWS_GENERAL_64",
                    "check_name": "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "dead_letter_config/[0]/target_arn"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_lambda_function\" \"example\" {\n"
                        ],
                        [
                            13,
                            "  function_name = \"ServerlessPerson\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  handler = \"MyHandler::handleRequest\"\n"
                        ],
                        [
                            16,
                            "  runtime = \"java11\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  role = aws_iam_role.lambda_exec.arn\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/public_lambda_via_api_gateway.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "repo_file_path": "/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "file_line_range": [
                        12,
                        22
                    ],
                    "resource": "aws_lambda_function.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaDLQConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq"
                },
                {
                    "check_id": "CKV_AWS_115",
                    "bc_check_id": "BC_AWS_GENERAL_63",
                    "check_name": "Ensure that AWS Lambda function is configured for function-level concurrent execution limit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "reserved_concurrent_executions/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_lambda_function\" \"example\" {\n"
                        ],
                        [
                            13,
                            "  function_name = \"ServerlessPerson\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  handler = \"MyHandler::handleRequest\"\n"
                        ],
                        [
                            16,
                            "  runtime = \"java11\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  role = aws_iam_role.lambda_exec.arn\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lambda/public_lambda_via_api_gateway.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "repo_file_path": "/terraform/aws/lambda/public_lambda_via_api_gateway.tf",
                    "file_line_range": [
                        12,
                        22
                    ],
                    "resource": "aws_lambda_function.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LambdaFunctionLevelConcurrentExecutionLimit",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_launch_configuration\" \"as_conf\" {\n"
                        ],
                        [
                            10,
                            "  name          = \"web_config\"\n"
                        ],
                        [
                            11,
                            "  image_id      = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            12,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            13,
                            "  user_data     = <<EOF\n"
                        ],
                        [
                            14,
                            "export DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n"
                        ],
                        [
                            15,
                            "EOF\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/launch_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/launch_configuration.tf",
                    "repo_file_path": "/terraform/aws/launch/launch_configuration.tf",
                    "file_line_range": [
                        9,
                        16
                    ],
                    "resource": "aws_launch_configuration.as_conf",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_launch_configuration\" \"as_conf\" {\n"
                        ],
                        [
                            10,
                            "  name          = \"web_config\"\n"
                        ],
                        [
                            11,
                            "  image_id      = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            12,
                            "  instance_type = \"t2.micro\"\n"
                        ],
                        [
                            13,
                            "  user_data     = <<EOF\n"
                        ],
                        [
                            14,
                            "export DATABASE_PASSWORD=\\\"SomeSortOfPassword\\\"\n"
                        ],
                        [
                            15,
                            "EOF\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/launch_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/launch_configuration.tf",
                    "repo_file_path": "/terraform/aws/launch/launch_configuration.tf",
                    "file_line_range": [
                        9,
                        16
                    ],
                    "resource": "aws_launch_configuration.as_conf",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_launch_configuration\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  root_block_device {\n"
                        ],
                        [
                            10,
                            "    encrypted = false\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/launch_configuration2.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/launch_configuration2.tf",
                    "repo_file_path": "/terraform/aws/launch/launch_configuration2.tf",
                    "file_line_range": [
                        8,
                        13
                    ],
                    "resource": "aws_launch_configuration.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_launch_configuration\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  root_block_device {\n"
                        ],
                        [
                            10,
                            "    encrypted = false\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  associate_public_ip_address = true\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/launch_configuration2.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/launch_configuration2.tf",
                    "repo_file_path": "/terraform/aws/launch/launch_configuration2.tf",
                    "file_line_range": [
                        8,
                        13
                    ],
                    "resource": "aws_launch_configuration.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_launch_configuration\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  image_id         = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type    = \"m4.large\"\n"
                        ],
                        [
                            4,
                            "  spot_price       = \"0.001\"\n"
                        ],
                        [
                            5,
                            "  user_data_base64 = \"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpzb21lS2V5\" # someKey\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  lifecycle {\n"
                        ],
                        [
                            8,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/user_data_contains_encoded_private_key.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/user_data_contains_encoded_private_key.tf",
                    "repo_file_path": "/terraform/aws/launch/user_data_contains_encoded_private_key.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_launch_configuration.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_launch_configuration\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  image_id         = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type    = \"m4.large\"\n"
                        ],
                        [
                            4,
                            "  spot_price       = \"0.001\"\n"
                        ],
                        [
                            5,
                            "  user_data_base64 = \"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpzb21lS2V5\" # someKey\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  lifecycle {\n"
                        ],
                        [
                            8,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/user_data_contains_encoded_private_key.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/user_data_contains_encoded_private_key.tf",
                    "repo_file_path": "/terraform/aws/launch/user_data_contains_encoded_private_key.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_launch_configuration.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_launch_configuration\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  image_id         = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type    = \"m4.large\"\n"
                        ],
                        [
                            4,
                            "  spot_price       = \"0.001\"\n"
                        ],
                        [
                            5,
                            "  user_data_base64 = \"IyEvYmluL3NoCmVjaG8gIkhlbGxvIHdvcmxkIg==\" # #!/bin/sh echo \"Hello world\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  lifecycle {\n"
                        ],
                        [
                            8,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/user_data_shell_script_is_encoded.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/user_data_shell_script_is_encoded.tf",
                    "repo_file_path": "/terraform/aws/launch/user_data_shell_script_is_encoded.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_launch_configuration.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_launch_configuration\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  image_id         = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            3,
                            "  instance_type    = \"m4.large\"\n"
                        ],
                        [
                            4,
                            "  spot_price       = \"0.001\"\n"
                        ],
                        [
                            5,
                            "  user_data_base64 = \"IyEvYmluL3NoCmVjaG8gIkhlbGxvIHdvcmxkIg==\" # #!/bin/sh echo \"Hello world\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  lifecycle {\n"
                        ],
                        [
                            8,
                            "    create_before_destroy = true\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/launch/user_data_shell_script_is_encoded.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/launch/user_data_shell_script_is_encoded.tf",
                    "repo_file_path": "/terraform/aws/launch/user_data_shell_script_is_encoded.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_launch_configuration.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_alb\" \"disabled\" {\n"
                        ],
                        [
                            15,
                            "  internal                         = false\n"
                        ],
                        [
                            16,
                            "  load_balancer_type               = \"application\"\n"
                        ],
                        [
                            17,
                            "  name                             = \"alb\"\n"
                        ],
                        [
                            18,
                            "  subnets                          = var.public_subnet_ids\n"
                        ],
                        [
                            19,
                            "  enable_cross_zone_load_balancing = false\n"
                        ],
                        [
                            20,
                            "  tags                             = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        14,
                        21
                    ],
                    "resource": "aws_alb.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_62"
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_alb\" \"disabled\" {\n"
                        ],
                        [
                            15,
                            "  internal                         = false\n"
                        ],
                        [
                            16,
                            "  load_balancer_type               = \"application\"\n"
                        ],
                        [
                            17,
                            "  name                             = \"alb\"\n"
                        ],
                        [
                            18,
                            "  subnets                          = var.public_subnet_ids\n"
                        ],
                        [
                            19,
                            "  enable_cross_zone_load_balancing = false\n"
                        ],
                        [
                            20,
                            "  tags                             = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        14,
                        21
                    ],
                    "resource": "aws_alb.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
                },
                {
                    "check_id": "CKV_AWS_131",
                    "bc_check_id": "BC_AWS_NETWORKING_41",
                    "check_name": "Ensure that ALB drops HTTP headers",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "drop_invalid_header_fields"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_alb\" \"disabled\" {\n"
                        ],
                        [
                            15,
                            "  internal                         = false\n"
                        ],
                        [
                            16,
                            "  load_balancer_type               = \"application\"\n"
                        ],
                        [
                            17,
                            "  name                             = \"alb\"\n"
                        ],
                        [
                            18,
                            "  subnets                          = var.public_subnet_ids\n"
                        ],
                        [
                            19,
                            "  enable_cross_zone_load_balancing = false\n"
                        ],
                        [
                            20,
                            "  tags                             = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        14,
                        21
                    ],
                    "resource": "aws_alb.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
                },
                {
                    "check_id": "CKV_AWS_152",
                    "bc_check_id": "BC_AWS_NETWORKING_55",
                    "check_name": "Ensure that Load Balancer (Network/Gateway) has cross-zone load balancing enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_cross_zone_load_balancing"
                        ]
                    },
                    "code_block": [
                        [
                            23,
                            "resource \"aws_lb\" \"default\" {\n"
                        ],
                        [
                            24,
                            "  internal           = false\n"
                        ],
                        [
                            25,
                            "  load_balancer_type = \"network\"\n"
                        ],
                        [
                            26,
                            "  name               = \"nlb\"\n"
                        ],
                        [
                            27,
                            "  subnets            = var.public_subnet_ids\n"
                        ],
                        [
                            28,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        23,
                        29
                    ],
                    "resource": "aws_lb.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBCrossZone",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-load-balancer-networkgateway-has-cross-zone-load-balancing-enabled"
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            23,
                            "resource \"aws_lb\" \"default\" {\n"
                        ],
                        [
                            24,
                            "  internal           = false\n"
                        ],
                        [
                            25,
                            "  load_balancer_type = \"network\"\n"
                        ],
                        [
                            26,
                            "  name               = \"nlb\"\n"
                        ],
                        [
                            27,
                            "  subnets            = var.public_subnet_ids\n"
                        ],
                        [
                            28,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        23,
                        29
                    ],
                    "resource": "aws_lb.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_62"
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            23,
                            "resource \"aws_lb\" \"default\" {\n"
                        ],
                        [
                            24,
                            "  internal           = false\n"
                        ],
                        [
                            25,
                            "  load_balancer_type = \"network\"\n"
                        ],
                        [
                            26,
                            "  name               = \"nlb\"\n"
                        ],
                        [
                            27,
                            "  subnets            = var.public_subnet_ids\n"
                        ],
                        [
                            28,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        23,
                        29
                    ],
                    "resource": "aws_lb.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_lb\" \"lb_bad_1\" {\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        9,
                        11
                    ],
                    "resource": "aws_lb.lb_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_62"
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_lb\" \"lb_bad_1\" {\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        9,
                        11
                    ],
                    "resource": "aws_lb.lb_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
                },
                {
                    "check_id": "CKV_AWS_131",
                    "bc_check_id": "BC_AWS_NETWORKING_41",
                    "check_name": "Ensure that ALB drops HTTP headers",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "drop_invalid_header_fields"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_lb\" \"lb_bad_1\" {\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        9,
                        11
                    ],
                    "resource": "aws_lb.lb_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
                },
                {
                    "check_id": "CKV_AWS_2",
                    "bc_check_id": "BC_AWS_NETWORKING_29",
                    "check_name": "Ensure ALB protocol is HTTPS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "protocol"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lb_listener\" \"listener_bad_1\" {\n"
                        ],
                        [
                            14,
                            "  load_balancer_arn = aws_lb.lb_bad_1.arn\n"
                        ],
                        [
                            15,
                            "  port              = \"80\"\n"
                        ],
                        [
                            16,
                            "  protocol          = \"HTTP\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  default_action {\n"
                        ],
                        [
                            19,
                            "    type = \"some-action\"\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        13,
                        22
                    ],
                    "resource": "aws_lb_listener.listener_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_29"
                },
                {
                    "check_id": "CKV_AWS_103",
                    "bc_check_id": "BC_AWS_GENERAL_43",
                    "check_name": "Ensure that load balancer is using TLS 1.2",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "protocol"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_lb_listener\" \"listener_bad_1\" {\n"
                        ],
                        [
                            14,
                            "  load_balancer_arn = aws_lb.lb_bad_1.arn\n"
                        ],
                        [
                            15,
                            "  port              = \"80\"\n"
                        ],
                        [
                            16,
                            "  protocol          = \"HTTP\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  default_action {\n"
                        ],
                        [
                            19,
                            "    type = \"some-action\"\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        13,
                        22
                    ],
                    "resource": "aws_lb_listener.listener_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AppLoadBalancerTLS12",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_43"
                },
                {
                    "check_id": "CKV_AWS_208",
                    "bc_check_id": null,
                    "check_name": "Ensure MQBroker version is current",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_mq_configuration\" \"fail\" {\n"
                        ],
                        [
                            3,
                            "  description    = \"Example Configuration\"\n"
                        ],
                        [
                            4,
                            "  name           = \"example\"\n"
                        ],
                        [
                            5,
                            "  engine_type    = \"ActiveMQ\"\n"
                        ],
                        [
                            6,
                            "  engine_version = \"5.15.0\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  data = <<DATA\n"
                        ],
                        [
                            9,
                            "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n"
                        ],
                        [
                            10,
                            "<broker xmlns=\"http://activemq.apache.org/schema/core\">\n"
                        ],
                        [
                            11,
                            "  <plugins>\n"
                        ],
                        [
                            12,
                            "    <forcePersistencyModeBrokerPlugin persistenceFlag=\"true\"/>\n"
                        ],
                        [
                            13,
                            "    <statisticsBrokerPlugin/>\n"
                        ],
                        [
                            14,
                            "    <timeStampingBrokerPlugin ttlCeiling=\"86400000\" zeroExpirationOverride=\"86400000\"/>\n"
                        ],
                        [
                            15,
                            "  </plugins>\n"
                        ],
                        [
                            16,
                            "</broker>\n"
                        ],
                        [
                            17,
                            "DATA\n"
                        ],
                        [
                            18,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/aws_mq_configuration.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/aws_mq_configuration.fail.tf",
                    "repo_file_path": "/terraform/aws/mq/aws_mq_configuration.fail.tf",
                    "file_line_range": [
                        2,
                        19
                    ],
                    "resource": "aws_mq_configuration.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerVersion",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_208",
                    "bc_check_id": null,
                    "check_name": "Ensure MQBroker version is current",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerVersion",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_197",
                    "bc_check_id": null,
                    "check_name": "Ensure MQ Broker Audit logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logs/[0]/audit"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerAuditLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_48",
                    "bc_check_id": "BC_AWS_LOGGING_10",
                    "check_name": "Ensure MQ Broker logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logs/[0]/general"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_10"
                },
                {
                    "check_id": "CKV_AWS_209",
                    "bc_check_id": null,
                    "check_name": "Ensure MQ broker encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_options/[0]/kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_207",
                    "bc_check_id": null,
                    "check_name": "Ensure MQ Broker minor version updates are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "auto_minor_version_upgrade"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_mq_broker\" \"pass\" {\n"
                        ],
                        [
                            11,
                            "  broker_name = \"example\"\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  configuration {\n"
                        ],
                        [
                            14,
                            "    id       = aws_mq_configuration.fail.id\n"
                        ],
                        [
                            15,
                            "    revision = aws_mq_configuration.fail.latest_revision\n"
                        ],
                        [
                            16,
                            "  }\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  engine_type        = \"ActiveMQ\"\n"
                        ],
                        [
                            19,
                            "  engine_version     = \"5.15.13\"\n"
                        ],
                        [
                            20,
                            "  host_instance_type = \"mq.t2.micro\"\n"
                        ],
                        [
                            21,
                            "  security_groups    = [aws_security_group.test.id]\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  user {\n"
                        ],
                        [
                            24,
                            "    username = \"ExampleUser\"\n"
                        ],
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  # encryption_options {\n"
                        ],
                        [
                            29,
                            "  #   use_aws_owned_key = false\n"
                        ],
                        [
                            30,
                            "  #   kms_key_id        = aws_kms_key.example.arn\n"
                        ],
                        [
                            31,
                            "  # }\n"
                        ],
                        [
                            32,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        10,
                        33
                    ],
                    "resource": "aws_mq_broker.pass",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MQBrokerMinorAutoUpgrade",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_7",
                    "bc_check_id": "BC_AWS_LOGGING_8",
                    "check_name": "Ensure rotation for customer created CMKs is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_key_rotation"
                        ]
                    },
                    "code_block": [
                        [
                            35,
                            "resource \"aws_kms_key\" \"example\" {\n"
                        ],
                        [
                            36,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            37,
                            "}\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        35,
                        37
                    ],
                    "resource": "aws_kms_key.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_8"
                },
                {
                    "check_id": "CKV_AWS_81",
                    "bc_check_id": "BC_AWS_GENERAL_32",
                    "check_name": "Ensure MSK Cluster encryption in rest and transit is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encryption_info/[0]/encryption_in_transit/[0]/client_broker",
                            "encryption_info/[0]/encryption_in_transit/[0]/in_cluster"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_msk_cluster\" \"name\" {\n"
                        ],
                        [
                            12,
                            "  name = \"example\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  encryption_info {\n"
                        ],
                        [
                            15,
                            "    encryption_in_transit {\n"
                        ],
                        [
                            16,
                            "      client_broker = \"TLS_PLAINTEXT\"\n"
                        ],
                        [
                            17,
                            "      in_cluster    = true\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/msk/msk_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/msk/msk_cluster.tf",
                    "repo_file_path": "/terraform/aws/msk/msk_cluster.tf",
                    "file_line_range": [
                        11,
                        21
                    ],
                    "resource": "aws_msk_cluster.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MSKClusterEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_32"
                },
                {
                    "check_id": "CKV_AWS_80",
                    "bc_check_id": "BC_AWS_LOGGING_18",
                    "check_name": "Ensure MSK Cluster logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_msk_cluster\" \"name\" {\n"
                        ],
                        [
                            12,
                            "  name = \"example\"\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  encryption_info {\n"
                        ],
                        [
                            15,
                            "    encryption_in_transit {\n"
                        ],
                        [
                            16,
                            "      client_broker = \"TLS_PLAINTEXT\"\n"
                        ],
                        [
                            17,
                            "      in_cluster    = true\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/msk/msk_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/msk/msk_cluster.tf",
                    "repo_file_path": "/terraform/aws/msk/msk_cluster.tf",
                    "file_line_range": [
                        11,
                        21
                    ],
                    "resource": "aws_msk_cluster.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.MSKClusterLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_18"
                },
                {
                    "check_id": "CKV_AWS_101",
                    "bc_check_id": "BC_AWS_LOGGING_24",
                    "check_name": "Ensure Neptune logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_cloudwatch_logs_exports"
                        ]
                    },
                    "code_block": [
                        [
                            38,
                            "resource \"aws_neptune_cluster\" \"default\" {\n"
                        ],
                        [
                            39,
                            "  cluster_identifier                  = var.neptune-dbname\n"
                        ],
                        [
                            40,
                            "  engine                              = \"neptune\"\n"
                        ],
                        [
                            41,
                            "  backup_retention_period             = 5\n"
                        ],
                        [
                            42,
                            "  preferred_backup_window             = \"07:00-09:00\"\n"
                        ],
                        [
                            43,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            44,
                            "  iam_database_authentication_enabled = false\n"
                        ],
                        [
                            45,
                            "  apply_immediately                   = true\n"
                        ],
                        [
                            46,
                            "  storage_encrypted                   = false\n"
                        ],
                        [
                            47,
                            "  # enable_cloudwatch_logs_exports = false\n"
                        ],
                        [
                            48,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/neptune/neptune.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/neptune/neptune.tf",
                    "repo_file_path": "/terraform/aws/neptune/neptune.tf",
                    "file_line_range": [
                        38,
                        49
                    ],
                    "resource": "aws_neptune_cluster.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_24"
                },
                {
                    "check_id": "CKV_AWS_44",
                    "bc_check_id": "BC_AWS_GENERAL_18",
                    "check_name": "Ensure Neptune storage is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            38,
                            "resource \"aws_neptune_cluster\" \"default\" {\n"
                        ],
                        [
                            39,
                            "  cluster_identifier                  = var.neptune-dbname\n"
                        ],
                        [
                            40,
                            "  engine                              = \"neptune\"\n"
                        ],
                        [
                            41,
                            "  backup_retention_period             = 5\n"
                        ],
                        [
                            42,
                            "  preferred_backup_window             = \"07:00-09:00\"\n"
                        ],
                        [
                            43,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            44,
                            "  iam_database_authentication_enabled = false\n"
                        ],
                        [
                            45,
                            "  apply_immediately                   = true\n"
                        ],
                        [
                            46,
                            "  storage_encrypted                   = false\n"
                        ],
                        [
                            47,
                            "  # enable_cloudwatch_logs_exports = false\n"
                        ],
                        [
                            48,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/neptune/neptune.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/neptune/neptune.tf",
                    "repo_file_path": "/terraform/aws/neptune/neptune.tf",
                    "file_line_range": [
                        38,
                        49
                    ],
                    "resource": "aws_neptune_cluster.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterStorageEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_18"
                },
                {
                    "check_id": "CKV_AWS_102",
                    "bc_check_id": "BC_AWS_GENERAL_42",
                    "check_name": "Ensure Neptune Cluster instance is not publicly available",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_neptune_cluster_instance\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  publicly_accessible = true\n"
                        ],
                        [
                            6,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/neptune/neptune_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/neptune/neptune_instance.tf",
                    "repo_file_path": "/terraform/aws/neptune/neptune_instance.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_neptune_cluster_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.NeptuneClusterInstancePublic",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_42"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "provider \"aws\" {\n"
                        ],
                        [
                            2,
                            "  region     = \"us-west-2\"\n"
                        ],
                        [
                            3,
                            "  access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                        ],
                        [
                            4,
                            "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                        ],
                        [
                            5,
                            "}"
                        ]
                    ],
                    "file_path": "/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider.tf",
                    "repo_file_path": "/terraform/aws/provider.tf",
                    "file_line_range": [
                        1,
                        5
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_41",
                    "bc_check_id": "BC_AWS_SECRETS_5",
                    "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "provider \"aws\" {\n"
                        ],
                        [
                            9,
                            "  region     = \"eu-west-2\"\n"
                        ],
                        [
                            10,
                            "  access_key = \"AKIAXYZDQCEN346Y6EVN\"\n"
                        ],
                        [
                            11,
                            "  secret_key = \"50W3qN7CuaMUl68u0CoAVY6fQykksBumX3Mq3VlI\"\n"
                        ],
                        [
                            12,
                            "}\n"
                        ]
                    ],
                    "file_path": "/provider/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider/provider.tf",
                    "repo_file_path": "/terraform/aws/provider/provider.tf",
                    "file_line_range": [
                        8,
                        12
                    ],
                    "resource": "aws.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.provider.aws.credentials",
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
                },
                {
                    "check_id": "CKV_AWS_170",
                    "bc_check_id": "BC_AWS_GENERAL_93",
                    "check_name": "Ensure QLDB ledger permissions mode is set to STANDARD",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "permissions_mode"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_qldb_ledger\" \"disabled\" {\n"
                        ],
                        [
                            6,
                            "  name             = \"ledger\"\n"
                        ],
                        [
                            7,
                            "  permissions_mode = \"ALLOW_ALL\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  deletion_protection = false\n"
                        ],
                        [
                            10,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/qldb/qldb_ledger.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/qldb/qldb_ledger.tf",
                    "repo_file_path": "/terraform/aws/qldb/qldb_ledger.tf",
                    "file_line_range": [
                        5,
                        11
                    ],
                    "resource": "aws_qldb_ledger.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.QLDBLedgerPermissionsMode",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-qldb-ledger-permissions-mode-is-set-to-standard-1"
                },
                {
                    "check_id": "CKV_AWS_172",
                    "bc_check_id": "BC_AWS_STORAGE_1",
                    "check_name": "Ensure QLDB ledger has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_qldb_ledger\" \"disabled\" {\n"
                        ],
                        [
                            6,
                            "  name             = \"ledger\"\n"
                        ],
                        [
                            7,
                            "  permissions_mode = \"ALLOW_ALL\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  deletion_protection = false\n"
                        ],
                        [
                            10,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/qldb/qldb_ledger.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/qldb/qldb_ledger.tf",
                    "repo_file_path": "/terraform/aws/qldb/qldb_ledger.tf",
                    "file_line_range": [
                        5,
                        11
                    ],
                    "resource": "aws_qldb_ledger.disabled",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.QLDBLedgerDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_storage_1"
                },
                {
                    "check_id": "CKV_AWS_146",
                    "bc_check_id": "BC_AWS_GENERAL_77",
                    "check_name": "Ensure that RDS database cluster snapshot is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_db_cluster_snapshot\" \"example\" {\n"
                        ],
                        [
                            4,
                            "  db_cluster_identifier          = aws_rds_cluster.example.id\n"
                        ],
                        [
                            5,
                            "  db_cluster_snapshot_identifier = \"resourcetestsnapshot1234\"\n"
                        ],
                        [
                            6,
                            "  tags                           = { test = \"Fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_cluster_snapshot.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_cluster_snapshot.tf",
                    "repo_file_path": "/terraform/aws/rds/db_cluster_snapshot.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_db_cluster_snapshot.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSClusterSnapshotEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-database-cluster-snapshot-is-encrypted-1"
                },
                {
                    "check_id": "CKV_AWS_161",
                    "bc_check_id": "BC_AWS_IAM_65",
                    "check_name": "Ensure RDS database has IAM authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_157",
                    "bc_check_id": "BC_AWS_GENERAL_73",
                    "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "multi_az"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_73"
                },
                {
                    "check_id": "CKV_AWS_129",
                    "bc_check_id": "BC_AWS_IAM_60",
                    "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_4",
                    "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_4"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_db_security_group\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_security_group.tf",
                    "repo_file_path": "/terraform/aws/rds/db_security_group.tf",
                    "file_line_range": [
                        8,
                        10
                    ],
                    "resource": "aws_db_security_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_198",
                    "bc_check_id": null,
                    "check_name": "Ensure no aws_db_security_group resources exist",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_db_security_group\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_security_group.tf",
                    "repo_file_path": "/terraform/aws/rds/db_security_group.tf",
                    "file_line_range": [
                        8,
                        10
                    ],
                    "resource": "aws_db_security_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSHasSecurityGroup",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV_AWS_140",
                    "bc_check_id": "BC_AWS_GENERAL_54",
                    "check_name": "Ensure that RDS global clusters are encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "aws_rds_global_cluster"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_rds_global_cluster\" \"example\" {\n"
                        ],
                        [
                            4,
                            "  global_cluster_identifier = \"example\"\n"
                        ],
                        [
                            5,
                            "  tags                      = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/global_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/global_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/global_cluster.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_rds_global_cluster.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSClusterEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-global-clusters-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_128",
                    "bc_check_id": "BC_AWS_IAM_59",
                    "check_name": "Ensure that an Amazon RDS Clusters have AWS Identity and Access Management (IAM) authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnableIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-an-amazon-rds-clusters-have-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_96",
                    "bc_check_id": "BC_AWS_GENERAL_38",
                    "check_name": "Ensure all data stored in Aurora is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AuroraEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_38"
                },
                {
                    "check_id": "CKV_AWS_162",
                    "bc_check_id": "BC_AWS_IAM_66",
                    "check_name": "Ensure RDS cluster has IAM authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSClusterIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-cluster-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_139",
                    "bc_check_id": "BC_AWS_GENERAL_69",
                    "check_name": "Ensure that RDS clusters have deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-and-instances-have-deletion-protection-enabled"
                },
                {
                    "check_id": "CKV_AWS_157",
                    "bc_check_id": "BC_AWS_GENERAL_73",
                    "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "multi_az"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_73"
                },
                {
                    "check_id": "CKV_AWS_129",
                    "bc_check_id": "BC_AWS_IAM_60",
                    "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage                   = 20\n"
                        ],
                        [
                            3,
                            "  storage_type                        = \"gp2\"\n"
                        ],
                        [
                            4,
                            "  engine                              = \"mysql\"\n"
                        ],
                        [
                            5,
                            "  engine_version                      = \"5.7\"\n"
                        ],
                        [
                            6,
                            "  instance_class                      = \"db.t2.micro\"\n"
                        ],
                        [
                            7,
                            "  name                                = \"mydb\"\n"
                        ],
                        [
                            8,
                            "  username                            = \"foo\"\n"
                        ],
                        [
                            9,
                            "  password                            = \"foobarbaz\"\n"
                        ],
                        [
                            10,
                            "  iam_database_authentication_enabled = true\n"
                        ],
                        [
                            11,
                            "  storage_encrypted                   = true\n"
                        ],
                        [
                            12,
                            "  ca_cert_identifier                  = \"rds-ca-2019\"\n"
                        ],
                        [
                            13,
                            "  auto_minor_version_upgrade          = false\n"
                        ],
                        [
                            14,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_automatic_minor_upgrades_disabled.tf",
                    "file_line_range": [
                        1,
                        15
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_128",
                    "bc_check_id": "BC_AWS_IAM_59",
                    "check_name": "Ensure that an Amazon RDS Clusters have AWS Identity and Access Management (IAM) authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnableIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-an-amazon-rds-clusters-have-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_96",
                    "bc_check_id": "BC_AWS_GENERAL_38",
                    "check_name": "Ensure all data stored in Aurora is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.AuroraEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_38"
                },
                {
                    "check_id": "CKV_AWS_162",
                    "bc_check_id": "BC_AWS_IAM_66",
                    "check_name": "Ensure RDS cluster has IAM authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSClusterIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-cluster-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_133",
                    "bc_check_id": "BC_AWS_GENERAL_46",
                    "check_name": "Ensure that RDS instances has backup policy",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "backup_retention_period"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
                },
                {
                    "check_id": "CKV_AWS_139",
                    "bc_check_id": "BC_AWS_GENERAL_69",
                    "check_name": "Ensure that RDS clusters have deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-and-instances-have-deletion-protection-enabled"
                },
                {
                    "check_id": "CKV_AWS_17",
                    "bc_check_id": "BC_AWS_PUBLIC_2",
                    "check_name": "Ensure all data stored in RDS is not publicly accessible",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_rds_cluster_instance\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  name                            = \"bar\"\n"
                        ],
                        [
                            10,
                            "  performance_insights_enabled    = false\n"
                        ],
                        [
                            11,
                            "  performance_insights_kms_key_id = \"\"\n"
                        ],
                        [
                            12,
                            "  kms_key_id                      = \"\"\n"
                        ],
                        [
                            13,
                            "  publicly_accessible             = true\n"
                        ],
                        [
                            14,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster_instance.tf",
                    "file_line_range": [
                        8,
                        15
                    ],
                    "resource": "aws_rds_cluster_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_2"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_rds_cluster_instance\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  name                            = \"bar\"\n"
                        ],
                        [
                            10,
                            "  performance_insights_enabled    = false\n"
                        ],
                        [
                            11,
                            "  performance_insights_kms_key_id = \"\"\n"
                        ],
                        [
                            12,
                            "  kms_key_id                      = \"\"\n"
                        ],
                        [
                            13,
                            "  publicly_accessible             = true\n"
                        ],
                        [
                            14,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster_instance.tf",
                    "file_line_range": [
                        8,
                        15
                    ],
                    "resource": "aws_rds_cluster_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_161",
                    "bc_check_id": "BC_AWS_IAM_65",
                    "check_name": "Ensure RDS database has IAM authentication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "iam_database_authentication_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled"
                },
                {
                    "check_id": "CKV_AWS_157",
                    "bc_check_id": "BC_AWS_GENERAL_73",
                    "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "multi_az"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_73"
                },
                {
                    "check_id": "CKV_AWS_129",
                    "bc_check_id": "BC_AWS_IAM_60",
                    "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enabled_cloudwatch_logs_exports/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled"
                },
                {
                    "check_id": "CKV_AWS_118",
                    "bc_check_id": "BC_AWS_LOGGING_28",
                    "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring_interval"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances"
                },
                {
                    "check_id": "CKV_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_4",
                    "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "storage_encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_db_instance\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  allocated_storage    = 10\n"
                        ],
                        [
                            3,
                            "  engine               = \"mysql\"\n"
                        ],
                        [
                            4,
                            "  engine_version       = \"5.7\"\n"
                        ],
                        [
                            5,
                            "  instance_class       = \"db.t3.micro\"\n"
                        ],
                        [
                            6,
                            "  name                 = \"mydb\"\n"
                        ],
                        [
                            7,
                            "  username             = \"foo\"\n"
                        ],
                        [
                            8,
                            "  password             = \"foobarbaz\"\n"
                        ],
                        [
                            9,
                            "  parameter_group_name = aws_elasticache_parameter_group.default.id\n"
                        ],
                        [
                            10,
                            "  skip_final_snapshot  = true\n"
                        ],
                        [
                            11,
                            "  port                 = 3306\n"
                        ],
                        [
                            12,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_using_default_port.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_db_instance.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_4"
                },
                {
                    "check_id": "CKV_AWS_64",
                    "bc_check_id": "BC_AWS_GENERAL_25",
                    "check_name": "Ensure all data stored in the Redshift cluster is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_25"
                },
                {
                    "check_id": "CKV_AWS_154",
                    "bc_check_id": "BC_AWS_NETWORKING_56",
                    "check_name": "Ensure Redshift is not deployed outside of a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cluster_subnet_group_name"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftInEc2ClassicMode",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-redshift-is-not-deployed-outside-of-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_71",
                    "bc_check_id": "BC_AWS_LOGGING_12",
                    "check_name": "Ensure Redshift Cluster logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging/[0]/enable"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_12"
                },
                {
                    "check_id": "CKV_AWS_87",
                    "bc_check_id": "BC_AWS_PUBLIC_9",
                    "check_name": "Redshift cluster should not be publicly accessible",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "publicly_accessible"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshitClusterPubliclyAvailable",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/public_9"
                },
                {
                    "check_id": "CKV_AWS_142",
                    "bc_check_id": "BC_AWS_GENERAL_55",
                    "check_name": "Ensure that Redshift cluster is encrypted by KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterKMSKey",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-cluster-is-encrypted-by-kms"
                },
                {
                    "check_id": "CKV_AWS_188",
                    "bc_check_id": "BC_AWS_GENERAL_108",
                    "check_name": "Ensure RedShift Cluster is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_108"
                },
                {
                    "check_id": "CKV_AWS_141",
                    "bc_check_id": "BC_AWS_GENERAL_70",
                    "check_name": "Ensured that redshift cluster allowing version upgrade by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "allow_version_upgrade"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_redshift_cluster\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  cluster_identifier                  = \"examplea\"\n"
                        ],
                        [
                            18,
                            "  availability_zone                   = data.aws_availability_zones.available.names[0]\n"
                        ],
                        [
                            19,
                            "  database_name                       = \"mydb\"\n"
                        ],
                        [
                            20,
                            "  master_username                     = \"foo_test\"\n"
                        ],
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ],
                        [
                            22,
                            "  node_type                           = \"dc2.large\"\n"
                        ],
                        [
                            23,
                            "  automated_snapshot_retention_period = 0\n"
                        ],
                        [
                            24,
                            "  allow_version_upgrade               = false\n"
                        ],
                        [
                            25,
                            "  skip_final_snapshot                 = true\n"
                        ],
                        [
                            26,
                            "  kms_key_id                          = \"\"\n"
                        ],
                        [
                            27,
                            "  cluster_subnet_group_name           = \"\"\n"
                        ],
                        [
                            28,
                            "  tags                                = { test = \"Fail\" }\n"
                        ],
                        [
                            29,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        16,
                        29
                    ],
                    "resource": "aws_redshift_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterAllowVersionUpgrade",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-allow-version-upgrade-by-default"
                },
                {
                    "check_id": "CKV_AWS_105",
                    "bc_check_id": "BC_AWS_GENERAL_75",
                    "check_name": "Ensure Redshift uses SSL",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_redshift_parameter_group\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  name   = var.param_group_name\n"
                        ],
                        [
                            6,
                            "  family = \"redshift-1.0\"\n"
                        ],
                        [
                            7,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_parameter.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_parameter.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_parameter.tf",
                    "file_line_range": [
                        4,
                        8
                    ],
                    "resource": "aws_redshift_parameter_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedShiftSSL",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-redshift-uses-ssl"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_redshift_security_group\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  name = \"http\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  ingress {\n"
                        ],
                        [
                            12,
                            "    description = \"HTTP from VPC\"\n"
                        ],
                        [
                            13,
                            "    from_port   = 80\n"
                        ],
                        [
                            14,
                            "    to_port     = 80\n"
                        ],
                        [
                            15,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            16,
                            "    cidr_blocks = [aws_vpc.main.cidr_block]\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_security_group.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_security_group.tf",
                    "file_line_range": [
                        8,
                        19
                    ],
                    "resource": "aws_redshift_security_group.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_64",
                    "bc_check_id": "BC_AWS_GENERAL_25",
                    "check_name": "Ensure all data stored in the Redshift cluster is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_25"
                },
                {
                    "check_id": "CKV_AWS_154",
                    "bc_check_id": "BC_AWS_NETWORKING_56",
                    "check_name": "Ensure Redshift is not deployed outside of a VPC",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "cluster_subnet_group_name"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftInEc2ClassicMode",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-redshift-is-not-deployed-outside-of-a-vpc"
                },
                {
                    "check_id": "CKV_AWS_71",
                    "bc_check_id": "BC_AWS_LOGGING_12",
                    "check_name": "Ensure Redshift Cluster logging is enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging/[0]/enable"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_12"
                },
                {
                    "check_id": "CKV_AWS_142",
                    "bc_check_id": "BC_AWS_GENERAL_55",
                    "check_name": "Ensure that Redshift cluster is encrypted by KMS",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterKMSKey",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-cluster-is-encrypted-by-kms"
                },
                {
                    "check_id": "CKV_AWS_188",
                    "bc_check_id": "BC_AWS_GENERAL_108",
                    "check_name": "Ensure RedShift Cluster is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_redshift_cluster\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  cluster_identifier  = \"tf-redshift-cluster\"\n"
                        ],
                        [
                            3,
                            "  database_name       = \"mydb\"\n"
                        ],
                        [
                            4,
                            "  master_username     = \"foo\"\n"
                        ],
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ],
                        [
                            6,
                            "  node_type           = \"dc1.large\"\n"
                        ],
                        [
                            7,
                            "  cluster_type        = \"single-node\"\n"
                        ],
                        [
                            8,
                            "  publicly_accessible = false\n"
                        ],
                        [
                            9,
                            "  tags                = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_redshift_cluster.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_108"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_143",
                    "bc_check_id": "BC_AWS_GENERAL_71",
                    "check_name": "Ensure that S3 bucket has lock configuration enabled by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "object_lock_configuration/[0]/object_lock_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketObjectLock",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-lock-configuration-enabled-by-default"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_53",
                    "bc_check_id": "BC_AWS_S3_19",
                    "check_name": "Ensure S3 bucket has block public ACLS enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "block_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_s3_bucket_public_access_block\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  bucket = aws_s3_bucket.fail.id\n"
                        ],
                        [
                            10,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_s3_bucket_public_access_block.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicACLs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_19"
                },
                {
                    "check_id": "CKV_AWS_54",
                    "bc_check_id": "BC_AWS_S3_20",
                    "check_name": "Ensure S3 bucket has block public policy enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_s3_bucket_public_access_block\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  bucket = aws_s3_bucket.fail.id\n"
                        ],
                        [
                            10,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_s3_bucket_public_access_block.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BlockPublicPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_20"
                },
                {
                    "check_id": "CKV_AWS_55",
                    "bc_check_id": "BC_AWS_S3_21",
                    "check_name": "Ensure S3 bucket has ignore public ACLs enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ignore_public_acls"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_s3_bucket_public_access_block\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  bucket = aws_s3_bucket.fail.id\n"
                        ],
                        [
                            10,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_s3_bucket_public_access_block.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3IgnorePublicACLs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_21"
                },
                {
                    "check_id": "CKV_AWS_56",
                    "bc_check_id": "BC_AWS_S3_22",
                    "check_name": "Ensure S3 bucket has 'restrict_public_bucket' enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "restrict_public_buckets"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_s3_bucket_public_access_block\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  bucket = aws_s3_bucket.fail.id\n"
                        ],
                        [
                            10,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_access_block.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_s3_bucket_public_access_block.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3RestrictPublicBuckets",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_22"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_57",
                    "bc_check_id": "BC_AWS_S3_2",
                    "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_s3_bucket\" \"public_bucket\" {\n"
                        ],
                        [
                            6,
                            "  bucket = \"bucket-with-public-acl-3\"\n"
                        ],
                        [
                            7,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            8,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_public_acl_overridden_by_public_access_block.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_s3_bucket.public_bucket",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  versioning {\n"
                        ],
                        [
                            11,
                            "    enabled = false\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  cors_rule {\n"
                        ],
                        [
                            15,
                            "    allowed_headers = [\"*\"]\n"
                        ],
                        [
                            16,
                            "    allowed_methods = [\"PUT\", \"POST\"]\n"
                        ],
                        [
                            17,
                            "    allowed_origins = [\"https://s3-website-test.hashicorp.com\"]\n"
                        ],
                        [
                            18,
                            "    expose_headers  = [\"ETag\"]\n"
                        ],
                        [
                            19,
                            "    max_age_seconds = 3000\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_unsecured_cors_rule.tf",
                    "file_line_range": [
                        1,
                        21
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  tags = {\n"
                        ],
                        [
                            6,
                            "    Name        = \"My bucket\"\n"
                        ],
                        [
                            7,
                            "    Environment = \"Dev\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_without_enabled_mfa_delete.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "Dev",
                        "Name": "My bucket"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_186",
                    "bc_check_id": "BC_AWS_GENERAL_106",
                    "check_name": "Ensure S3 bucket Object is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_s3_bucket_object\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  bucket = aws_s3_bucket.data.id\n"
                        ],
                        [
                            5,
                            "  key    = \"customer-master.xlsx\"\n"
                        ],
                        [
                            6,
                            "  source = \"resources/customer-master.xlsx\"\n"
                        ],
                        [
                            7,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_object.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_object.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_object.tf",
                    "file_line_range": [
                        3,
                        8
                    ],
                    "resource": "aws_s3_bucket_object.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketObjectEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_106"
                },
                {
                    "check_id": "CKV_AWS_181",
                    "bc_check_id": "BC_AWS_GENERAL_101",
                    "check_name": "Ensure S3 Object Copy is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_s3_object_copy\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  bucket = \"destination_bucket\"\n"
                        ],
                        [
                            6,
                            "  key    = \"destination_key\"\n"
                        ],
                        [
                            7,
                            "  source = \"source_bucket/source_key\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  grant {\n"
                        ],
                        [
                            10,
                            "    uri         = \"http://acs.amazonaws.com/groups/global/AllUsers\"\n"
                        ],
                        [
                            11,
                            "    type        = \"Group\"\n"
                        ],
                        [
                            12,
                            "    permissions = [\"READ\"]\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_object_copy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_object_copy.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_object_copy.tf",
                    "file_line_range": [
                        4,
                        15
                    ],
                    "resource": "aws_s3_object_copy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3ObjectCopyEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_101"
                },
                {
                    "check_id": "CKV_AWS_19",
                    "bc_check_id": "BC_AWS_S3_14",
                    "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
                },
                {
                    "check_id": "CKV_AWS_20",
                    "bc_check_id": "BC_AWS_S3_1",
                    "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acl"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
                },
                {
                    "check_id": "CKV_AWS_18",
                    "bc_check_id": "BC_AWS_S3_13",
                    "check_name": "Ensure the S3 bucket has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
                },
                {
                    "check_id": "CKV_AWS_144",
                    "bc_check_id": "BC_AWS_GENERAL_72",
                    "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "replication_configuration/[0]/role"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
                },
                {
                    "check_id": "CKV_AWS_145",
                    "bc_check_id": "BC_AWS_GENERAL_56",
                    "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
                },
                {
                    "check_id": "CKV_AWS_21",
                    "bc_check_id": "BC_AWS_S3_16",
                    "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "versioning/[0]/enabled"
                        ]
                    },
                    "code_block": [
                        [
                            2,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            3,
                            "  bucket = \"s3-website-test.hashicorp.com\"\n"
                        ],
                        [
                            4,
                            "  acl    = \"public-read\"\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  website {\n"
                        ],
                        [
                            7,
                            "    index_document = \"index.html\"\n"
                        ],
                        [
                            8,
                            "    error_document = \"error.html\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_static_website_host_enabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_static_website_host_enabled.tf",
                    "file_line_range": [
                        2,
                        11
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
                },
                {
                    "check_id": "CKV_AWS_187",
                    "bc_check_id": "BC_AWS_GENERAL_107",
                    "check_name": "Ensure Sagemaker domain is encrypted by KMS using a customer managed Key (CMK)",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sagemaker_domain\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  domain_name = \"examplea\"\n"
                        ],
                        [
                            7,
                            "  auth_mode   = \"IAM\"\n"
                        ],
                        [
                            8,
                            "  vpc_id      = aws_vpc.test.id\n"
                        ],
                        [
                            9,
                            "  subnet_ids  = [aws_subnet.test.id]\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  default_user_settings {\n"
                        ],
                        [
                            12,
                            "    execution_role = aws_iam_role.test.arn\n"
                        ],
                        [
                            13,
                            "  }\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  retention_policy {\n"
                        ],
                        [
                            16,
                            "    home_efs_file_system = \"Delete\"\n"
                        ],
                        [
                            17,
                            "  }\n"
                        ],
                        [
                            18,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sagemaker/sagemaker.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sagemaker/sagemaker.tf",
                    "repo_file_path": "/terraform/aws/sagemaker/sagemaker.tf",
                    "file_line_range": [
                        5,
                        19
                    ],
                    "resource": "aws_sagemaker_domain.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SagemakerDomainEncryptedWithCMK",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_107"
                },
                {
                    "check_id": "CKV_AWS_98",
                    "bc_check_id": "BC_AWS_GENERAL_40",
                    "check_name": "Ensure all data stored in the Sagemaker Endpoint is securely encrypted at rest",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_arn"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_sagemaker_endpoint_configuration\" \"fail\" {\n"
                        ],
                        [
                            5,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sagemaker/sagemaker_endpoint_configuration.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sagemaker/sagemaker_endpoint_configuration.tf",
                    "repo_file_path": "/terraform/aws/sagemaker/sagemaker_endpoint_configuration.tf",
                    "file_line_range": [
                        4,
                        6
                    ],
                    "resource": "aws_sagemaker_endpoint_configuration.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SagemakerEndpointConfigurationEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_40"
                },
                {
                    "check_id": "CKV_AWS_122",
                    "bc_check_id": "BC_AWS_NETWORKING_38",
                    "check_name": "Ensure that direct internet access is disabled for an Amazon SageMaker Notebook Instance",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "direct_internet_access"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sagemaker_notebook_instance\" \"name\" {\n"
                        ],
                        [
                            6,
                            "  direct_internet_access = \"enabled\"\n"
                        ],
                        [
                            7,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sagemaker/sagemaker_notebook_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sagemaker/sagemaker_notebook_instance.tf",
                    "repo_file_path": "/terraform/aws/sagemaker/sagemaker_notebook_instance.tf",
                    "file_line_range": [
                        5,
                        8
                    ],
                    "resource": "aws_sagemaker_notebook_instance.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SageMakerInternetAccessDisabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-direct-internet-access-is-disabled-for-an-amazon-sagemaker-notebook-instance"
                },
                {
                    "check_id": "CKV_AWS_22",
                    "bc_check_id": "BC_AWS_GENERAL_14",
                    "check_name": "Ensure SageMaker Notebook is encrypted at rest using KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sagemaker_notebook_instance\" \"name\" {\n"
                        ],
                        [
                            6,
                            "  direct_internet_access = \"enabled\"\n"
                        ],
                        [
                            7,
                            "  tags                   = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sagemaker/sagemaker_notebook_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sagemaker/sagemaker_notebook_instance.tf",
                    "repo_file_path": "/terraform/aws/sagemaker/sagemaker_notebook_instance.tf",
                    "file_line_range": [
                        5,
                        8
                    ],
                    "resource": "aws_sagemaker_notebook_instance.name",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SagemakerNotebookEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_14"
                },
                {
                    "check_id": "CKV_AWS_149",
                    "bc_check_id": "BC_AWS_GENERAL_79",
                    "check_name": "Ensure that Secrets Manager secret is encrypted using KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_secretsmanager_secret\" \"not_secure_policy\" {\n"
                        ],
                        [
                            9,
                            "  name = \"not_secure_secret\"\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/secret_manager/secrets_manager_with_vulnerable_policy.tf",
                    "file_line_range": [
                        8,
                        11
                    ],
                    "resource": "aws_secretsmanager_secret.not_secure_policy",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecretManagerSecretEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-secrets-manager-secret-is-encrypted-using-kms"
                },
                {
                    "check_id": "CKV_AWS_149",
                    "bc_check_id": "BC_AWS_GENERAL_79",
                    "check_name": "Ensure that Secrets Manager secret is encrypted using KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_secretsmanager_secret\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  name = \"lambda_password\"\n"
                        ],
                        [
                            9,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/secret_manager/secretsmanager_secret.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/secret_manager/secretsmanager_secret.tf",
                    "repo_file_path": "/terraform/aws/secret_manager/secretsmanager_secret.tf",
                    "file_line_range": [
                        7,
                        10
                    ],
                    "resource": "aws_secretsmanager_secret.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecretManagerSecretEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-secrets-manager-secret-is-encrypted-using-kms"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            3,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            4,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  ingress {\n"
                        ],
                        [
                            7,
                            "    description = \"TLS from VPC\"\n"
                        ],
                        [
                            8,
                            "    from_port   = 44\n"
                        ],
                        [
                            9,
                            "    to_port     = 443\n"
                        ],
                        [
                            10,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            11,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  egress {\n"
                        ],
                        [
                            15,
                            "    from_port   = 0\n"
                        ],
                        [
                            16,
                            "    to_port     = 0\n"
                        ],
                        [
                            17,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            18,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = {\n"
                        ],
                        [
                            22,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            23,
                            "    test = \"fail\"\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "repo_file_path": "/terraform/aws/security_groups/securiity_group_unknown_port_exposed_to_internet.tf",
                    "file_line_range": [
                        1,
                        25
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_24",
                    "bc_check_id": "BC_AWS_NETWORKING_1",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ingress/[0]/from_port",
                            "ingress/[0]/to_port",
                            "ingress/[0]/cidr_blocks",
                            "ingress/[0]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_security_group\" \"bad_example\" {\n"
                        ],
                        [
                            16,
                            "  ingress {\n"
                        ],
                        [
                            17,
                            "    from_port   = 22\n"
                        ],
                        [
                            18,
                            "    to_port     = 22\n"
                        ],
                        [
                            19,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  ingress {\n"
                        ],
                        [
                            23,
                            "    from_port   = 3389\n"
                        ],
                        [
                            24,
                            "    to_port     = 3389\n"
                        ],
                        [
                            25,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  egress {\n"
                        ],
                        [
                            29,
                            "    from_port   = 22\n"
                        ],
                        [
                            30,
                            "    to_port     = 22\n"
                        ],
                        [
                            31,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "  egress {\n"
                        ],
                        [
                            34,
                            "    from_port   = 3389\n"
                        ],
                        [
                            35,
                            "    to_port     = 3389\n"
                        ],
                        [
                            36,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            37,
                            "  }\n"
                        ],
                        [
                            38,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        15,
                        39
                    ],
                    "resource": "aws_security_group.bad_example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "egress/[0]",
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_security_group\" \"bad_example\" {\n"
                        ],
                        [
                            16,
                            "  ingress {\n"
                        ],
                        [
                            17,
                            "    from_port   = 22\n"
                        ],
                        [
                            18,
                            "    to_port     = 22\n"
                        ],
                        [
                            19,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  ingress {\n"
                        ],
                        [
                            23,
                            "    from_port   = 3389\n"
                        ],
                        [
                            24,
                            "    to_port     = 3389\n"
                        ],
                        [
                            25,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  egress {\n"
                        ],
                        [
                            29,
                            "    from_port   = 22\n"
                        ],
                        [
                            30,
                            "    to_port     = 22\n"
                        ],
                        [
                            31,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "  egress {\n"
                        ],
                        [
                            34,
                            "    from_port   = 3389\n"
                        ],
                        [
                            35,
                            "    to_port     = 3389\n"
                        ],
                        [
                            36,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            37,
                            "  }\n"
                        ],
                        [
                            38,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        15,
                        39
                    ],
                    "resource": "aws_security_group.bad_example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_25",
                    "bc_check_id": "BC_AWS_NETWORKING_2",
                    "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ingress/[1]/from_port",
                            "ingress/[1]/to_port",
                            "ingress/[1]/cidr_blocks",
                            "ingress/[1]/ipv6_cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_security_group\" \"bad_example\" {\n"
                        ],
                        [
                            16,
                            "  ingress {\n"
                        ],
                        [
                            17,
                            "    from_port   = 22\n"
                        ],
                        [
                            18,
                            "    to_port     = 22\n"
                        ],
                        [
                            19,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  ingress {\n"
                        ],
                        [
                            23,
                            "    from_port   = 3389\n"
                        ],
                        [
                            24,
                            "    to_port     = 3389\n"
                        ],
                        [
                            25,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  egress {\n"
                        ],
                        [
                            29,
                            "    from_port   = 22\n"
                        ],
                        [
                            30,
                            "    to_port     = 22\n"
                        ],
                        [
                            31,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "  egress {\n"
                        ],
                        [
                            34,
                            "    from_port   = 3389\n"
                        ],
                        [
                            35,
                            "    to_port     = 3389\n"
                        ],
                        [
                            36,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            37,
                            "  }\n"
                        ],
                        [
                            38,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        15,
                        39
                    ],
                    "resource": "aws_security_group.bad_example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_2"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            42,
                            "  security_group_id = aws_security_group.bad_example.id\n"
                        ],
                        [
                            43,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            44,
                            "  cidr_blocks       = [\"172.31.0.0/16\"]\n"
                        ],
                        [
                            45,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            46,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        41,
                        46
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group_rule\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            11,
                            "  from_port         = 0\n"
                        ],
                        [
                            12,
                            "  to_port           = 65535\n"
                        ],
                        [
                            13,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            14,
                            "  cidr_blocks       = [aws_vpc.example.cidr_block]\n"
                        ],
                        [
                            15,
                            "  ipv6_cidr_blocks  = [aws_vpc.example.ipv6_cidr_block]\n"
                        ],
                        [
                            16,
                            "  security_group_id = \"sg-123456\"\n"
                        ],
                        [
                            17,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            18,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group_rule.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group_rule.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group_rule.tf",
                    "file_line_range": [
                        9,
                        18
                    ],
                    "resource": "aws_security_group_rule.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_150",
                    "bc_check_id": "BC_AWS_NETWORKING_62",
                    "check_name": "Ensure that Load Balancer has deletion protection enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "enable_deletion_protection"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lb\" \"test\" {\n"
                        ],
                        [
                            2,
                            "  name               = \"test\"\n"
                        ],
                        [
                            3,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            4,
                            "  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]\n"
                        ],
                        [
                            5,
                            "  internal           = true\n"
                        ],
                        [
                            6,
                            "  tags               = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        1,
                        7
                    ],
                    "resource": "aws_lb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_62"
                },
                {
                    "check_id": "CKV_AWS_91",
                    "bc_check_id": "BC_AWS_LOGGING_22",
                    "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "access_logs/0/enabled/0"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lb\" \"test\" {\n"
                        ],
                        [
                            2,
                            "  name               = \"test\"\n"
                        ],
                        [
                            3,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            4,
                            "  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]\n"
                        ],
                        [
                            5,
                            "  internal           = true\n"
                        ],
                        [
                            6,
                            "  tags               = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        1,
                        7
                    ],
                    "resource": "aws_lb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
                },
                {
                    "check_id": "CKV_AWS_131",
                    "bc_check_id": "BC_AWS_NETWORKING_41",
                    "check_name": "Ensure that ALB drops HTTP headers",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "drop_invalid_header_fields"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_lb\" \"test\" {\n"
                        ],
                        [
                            2,
                            "  name               = \"test\"\n"
                        ],
                        [
                            3,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            4,
                            "  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]\n"
                        ],
                        [
                            5,
                            "  internal           = true\n"
                        ],
                        [
                            6,
                            "  tags               = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        1,
                        7
                    ],
                    "resource": "aws_lb.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group\" \"allow_tls\" {\n"
                        ],
                        [
                            10,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            11,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            12,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    description      = \"TLS from VPC\"\n"
                        ],
                        [
                            16,
                            "    from_port        = 443\n"
                        ],
                        [
                            17,
                            "    to_port          = 443\n"
                        ],
                        [
                            18,
                            "    protocol         = \"tcp\"\n"
                        ],
                        [
                            19,
                            "    cidr_blocks      = [aws_vpc.main.cidr_block]\n"
                        ],
                        [
                            20,
                            "    ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  egress {\n"
                        ],
                        [
                            24,
                            "    from_port        = 0\n"
                        ],
                        [
                            25,
                            "    to_port          = 0\n"
                        ],
                        [
                            26,
                            "    protocol         = \"-1\"\n"
                        ],
                        [
                            27,
                            "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            28,
                            "    ipv6_cidr_blocks = [\"::/0\"]\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  tags = {\n"
                        ],
                        [
                            32,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            33,
                            "    test = \"fails\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        9,
                        35
                    ],
                    "resource": "aws_security_group.allow_tls",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group_rule\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  type              = \"ingress\"\n"
                        ],
                        [
                            3,
                            "  from_port         = 3306\n"
                        ],
                        [
                            4,
                            "  to_port           = 3306\n"
                        ],
                        [
                            5,
                            "  protocol          = \"tcp\"\n"
                        ],
                        [
                            6,
                            "  cidr_blocks       = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            7,
                            "  security_group_id = aws_security_group.default.id\n"
                        ],
                        [
                            8,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/unrestricted_security_group_ingress.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "repo_file_path": "/terraform/aws/security_groups/unrestricted_security_group_ingress.tf",
                    "file_line_range": [
                        1,
                        9
                    ],
                    "resource": "aws_security_group_rule.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_26",
                    "bc_check_id": "BC_AWS_GENERAL_15",
                    "check_name": "Ensure all data stored in the SNS topic is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_sns_topic\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sns/sns_topic.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sns/sns_topic.tf",
                    "repo_file_path": "/terraform/aws/sns/sns_topic.tf",
                    "file_line_range": [
                        7,
                        9
                    ],
                    "resource": "aws_sns_topic.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SNSTopicEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_15"
                },
                {
                    "check_id": "CKV_AWS_169",
                    "bc_check_id": "BC_AWS_GENERAL_92",
                    "check_name": "Ensure SNS topic policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_sns_topic_policy\" \"sns_tp2\" {\n"
                        ],
                        [
                            4,
                            "  arn = aws_sns_topic.test.arn\n"
                        ],
                        [
                            5,
                            "\n"
                        ],
                        [
                            6,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            7,
                            "{\n"
                        ],
                        [
                            8,
                            "    \"Version\":\"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "    \"Statement\":[\n"
                        ],
                        [
                            10,
                            "       {\n"
                        ],
                        [
                            11,
                            "           \"Principal\": {\n"
                        ],
                        [
                            12,
                            "            \"AWS\": [\n"
                        ],
                        [
                            13,
                            "                \"arn:aws:iam::123456789101:role/sns\",\n"
                        ],
                        [
                            14,
                            "                \"*\"\n"
                        ],
                        [
                            15,
                            "            ]\n"
                        ],
                        [
                            16,
                            "          },\n"
                        ],
                        [
                            17,
                            "          \"Effect\": \"Allow\",\n"
                        ],
                        [
                            18,
                            "          \"Action\": [\n"
                        ],
                        [
                            19,
                            "            \"SNS:Subscribe\",\n"
                        ],
                        [
                            20,
                            "            \"SNS:SetTopicAttributes\",\n"
                        ],
                        [
                            21,
                            "            \"SNS:RemovePermission\",\n"
                        ],
                        [
                            22,
                            "            \"SNS:Receive\",\n"
                        ],
                        [
                            23,
                            "            \"SNS:Publish\",\n"
                        ],
                        [
                            24,
                            "            \"SNS:ListSubscriptionsByTopic\",\n"
                        ],
                        [
                            25,
                            "            \"SNS:GetTopicAttributes\",\n"
                        ],
                        [
                            26,
                            "            \"SNS:DeleteTopic\",\n"
                        ],
                        [
                            27,
                            "            \"SNS:AddPermission\",\n"
                        ],
                        [
                            28,
                            "          ],\n"
                        ],
                        [
                            29,
                            "          \"Resource\": \"${aws_sns_topic.test.arn}\"\n"
                        ],
                        [
                            30,
                            "       }\n"
                        ],
                        [
                            31,
                            "    ]\n"
                        ],
                        [
                            32,
                            "}\n"
                        ],
                        [
                            33,
                            "POLICY\n"
                        ],
                        [
                            34,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sns/sns_topic_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sns/sns_topic_policy.tf",
                    "repo_file_path": "/terraform/aws/sns/sns_topic_policy.tf",
                    "file_line_range": [
                        3,
                        35
                    ],
                    "resource": "aws_sns_topic_policy.sns_tp2",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SNSTopicPolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sns-topic-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_26",
                    "bc_check_id": "BC_AWS_GENERAL_15",
                    "check_name": "Ensure all data stored in the SNS topic is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_sns_topic\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name = \"my-topic-with-policy\"\n"
                        ],
                        [
                            3,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "repo_file_path": "/terraform/aws/sns/sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_sns_topic.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SNSTopicEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_15"
                },
                {
                    "check_id": "CKV_AWS_168",
                    "bc_check_id": "BC_AWS_GENERAL_91",
                    "check_name": "Ensure SQS queue policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_sqs_queue\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  #   kms_master_key_id  =aws_kms_key.pass.arn\n"
                        ],
                        [
                            10,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            11,
                            "{\n"
                        ],
                        [
                            12,
                            "  \"Statement\": [\n"
                        ],
                        [
                            13,
                            "    {\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            16,
                            "      \"Action\": \"*\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  ]\n"
                        ],
                        [
                            19,
                            "}\n"
                        ],
                        [
                            20,
                            "POLICY\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_sqs_queue.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueuePolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_16",
                    "check_name": "Ensure all data stored in the SQS queue is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_sqs_queue\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  #   kms_master_key_id  =aws_kms_key.pass.arn\n"
                        ],
                        [
                            10,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            11,
                            "{\n"
                        ],
                        [
                            12,
                            "  \"Statement\": [\n"
                        ],
                        [
                            13,
                            "    {\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            16,
                            "      \"Action\": \"*\"\n"
                        ],
                        [
                            17,
                            "    }\n"
                        ],
                        [
                            18,
                            "  ]\n"
                        ],
                        [
                            19,
                            "}\n"
                        ],
                        [
                            20,
                            "POLICY\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_sqs_queue.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueueEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue"
                },
                {
                    "check_id": "CKV_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_16",
                    "check_name": "Ensure all data stored in the SQS queue is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_sqs_queue\" \"positive1\" {\n"
                        ],
                        [
                            5,
                            "  name = \"examplequeue\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            8,
                            "{\n"
                        ],
                        [
                            9,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            10,
                            "  \"Id\": \"sqspolicy\",\n"
                        ],
                        [
                            11,
                            "  \"Statement\": [\n"
                        ],
                        [
                            12,
                            "    {\n"
                        ],
                        [
                            13,
                            "      \"Sid\": \"First\",\n"
                        ],
                        [
                            14,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            16,
                            "      \"Action\": \"sqs:SendMessage\",\n"
                        ],
                        [
                            17,
                            "      \"Resource\": \"${aws_sqs_queue.q.arn}\",\n"
                        ],
                        [
                            18,
                            "      \"Condition\": {\n"
                        ],
                        [
                            19,
                            "        \"ArnEquals\": {\n"
                        ],
                        [
                            20,
                            "          \"aws:SourceArn\": \"${aws_sns_topic.example.arn}\"\n"
                        ],
                        [
                            21,
                            "        }\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  ]\n"
                        ],
                        [
                            25,
                            "}\n"
                        ],
                        [
                            26,
                            "POLICY\n"
                        ],
                        [
                            27,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            28,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue_exposed.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue_exposed.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue_exposed.tf",
                    "file_line_range": [
                        4,
                        28
                    ],
                    "resource": "aws_sqs_queue.positive1",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueueEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue"
                },
                {
                    "check_id": "CKV_AWS_168",
                    "bc_check_id": "BC_AWS_GENERAL_91",
                    "check_name": "Ensure SQS queue policy is not public by only allowing specific services or principals to access it",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sqs_queue_policy\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  queue_url = aws_sqs_queue.fail.id\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            9,
                            "{\n"
                        ],
                        [
                            10,
                            "  \"Statement\": [\n"
                        ],
                        [
                            11,
                            "    {\n"
                        ],
                        [
                            12,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            13,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            14,
                            "      \"Action\": \"*\"\n"
                        ],
                        [
                            15,
                            "    }\n"
                        ],
                        [
                            16,
                            "  ]\n"
                        ],
                        [
                            17,
                            "}\n"
                        ],
                        [
                            18,
                            "POLICY\n"
                        ],
                        [
                            19,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue_policy.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue_policy.fail.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue_policy.fail.tf",
                    "file_line_range": [
                        5,
                        20
                    ],
                    "resource": "aws_sqs_queue_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueuePolicyAnyPrincipal",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it"
                },
                {
                    "check_id": "CKV_AWS_72",
                    "bc_check_id": "BC_AWS_IAM_46",
                    "check_name": "Ensure SQS policy does not allow ALL (*) actions.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "policy"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_sqs_queue_policy\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  queue_url = aws_sqs_queue.fail.id\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            9,
                            "{\n"
                        ],
                        [
                            10,
                            "  \"Statement\": [\n"
                        ],
                        [
                            11,
                            "    {\n"
                        ],
                        [
                            12,
                            "      \"Effect\": \"Allow\",\n"
                        ],
                        [
                            13,
                            "      \"Principal\": \"*\",\n"
                        ],
                        [
                            14,
                            "      \"Action\": \"*\"\n"
                        ],
                        [
                            15,
                            "    }\n"
                        ],
                        [
                            16,
                            "  ]\n"
                        ],
                        [
                            17,
                            "}\n"
                        ],
                        [
                            18,
                            "POLICY\n"
                        ],
                        [
                            19,
                            "  tags   = { test = \"fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_queue_policy.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_queue_policy.fail.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_queue_policy.fail.tf",
                    "file_line_range": [
                        5,
                        20
                    ],
                    "resource": "aws_sqs_queue_policy.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSPolicy",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_46"
                },
                {
                    "check_id": "CKV_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_31",
                    "check_name": "Ensure every security groups rule has a description",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "description",
                            "egress/[0]",
                            "ingress/[0]"
                        ]
                    },
                    "code_block": [
                        [
                            53,
                            "resource \"aws_security_group\" \"public_internet_sg\" {\n"
                        ],
                        [
                            54,
                            "  name        = \"public-internet-sg\"\n"
                        ],
                        [
                            55,
                            "  description = \"Allow all local traffic with internet access\"\n"
                        ],
                        [
                            56,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  egress {\n"
                        ],
                        [
                            59,
                            "    from_port   = 0\n"
                        ],
                        [
                            60,
                            "    to_port     = 0\n"
                        ],
                        [
                            61,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            62,
                            "    cidr_blocks = [local.quad_zero_cidr_block]\n"
                        ],
                        [
                            63,
                            "  }\n"
                        ],
                        [
                            64,
                            "\n"
                        ],
                        [
                            65,
                            "  ingress {\n"
                        ],
                        [
                            66,
                            "    from_port   = 0\n"
                        ],
                        [
                            67,
                            "    to_port     = 0\n"
                        ],
                        [
                            68,
                            "    protocol    = \"-1\"\n"
                        ],
                        [
                            69,
                            "    cidr_blocks = [local.cidr_block]\n"
                        ],
                        [
                            70,
                            "  }\n"
                        ],
                        [
                            71,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            72,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        53,
                        72
                    ],
                    "resource": "aws_security_group.public_internet_sg",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "ingress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "ingress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks.0": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ],
                        "egress.cidr_blocks": [
                            {
                                "type": "locals",
                                "name": "quad_zero_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_31"
                },
                {
                    "check_id": "CKV_AWS_79",
                    "bc_check_id": "BC_AWS_GENERAL_31",
                    "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "metadata_options/[0]/http_tokens",
                            "metadata_options/[0]/http_endpoint"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
                },
                {
                    "check_id": "CKV_AWS_126",
                    "bc_check_id": "BC_AWS_LOGGING_26",
                    "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "monitoring"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
                },
                {
                    "check_id": "CKV_AWS_135",
                    "bc_check_id": "BC_AWS_GENERAL_68",
                    "check_name": "Ensure that EC2 is EBS optimized",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "ebs_optimized"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
                },
                {
                    "check_id": "CKV_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_13",
                    "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "*_block_device/[0]/encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_instance\" \"test_ec2_instance\" {\n"
                        ],
                        [
                            91,
                            "  ami                    = data.aws_ami.ubuntu.id\n"
                        ],
                        [
                            92,
                            "  instance_type          = \"t2.micro\"\n"
                        ],
                        [
                            93,
                            "  subnet_id              = aws_subnet.public_subnet.id\n"
                        ],
                        [
                            94,
                            "  vpc_security_group_ids = [aws_security_group.public_internet_sg.id]\n"
                        ],
                        [
                            95,
                            "  tags                   = { test = \"fail\" }\n"
                        ],
                        [
                            96,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        90,
                        96
                    ],
                    "resource": "aws_instance.test_ec2_instance",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_13"
                },
                {
                    "check_id": "CKV_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_16",
                    "check_name": "Ensure all data stored in the SQS queue is encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_master_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            108,
                            "resource \"aws_sqs_queue\" \"test_queue\" {\n"
                        ],
                        [
                            109,
                            "  name = \"test-queue\"\n"
                        ],
                        [
                            110,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            111,
                            "}\n"
                        ]
                    ],
                    "file_path": "/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "repo_file_path": "/terraform/aws/sqs/sqs_vpc_endpoint_without_dns_resolution.tf",
                    "file_line_range": [
                        108,
                        111
                    ],
                    "resource": "aws_sqs_queue.test_queue",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SQSQueueEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue"
                },
                {
                    "check_id": "CKV_AWS_113",
                    "bc_check_id": "BC_AWS_GENERAL_61",
                    "check_name": "Ensure Session Manager logs are enabled and encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "document_type",
                            "document_format",
                            "content"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_ssm_document\" \"s3_enabled_not_encrypted_yaml\" {\n"
                        ],
                        [
                            7,
                            "  name          = \"SSM-SessionManagerRunShell\"\n"
                        ],
                        [
                            8,
                            "  document_type = \"Session\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  document_format = \"YAML\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  content = <<DOC\n"
                        ],
                        [
                            13,
                            "  schemaVersion: '1.0'\n"
                        ],
                        [
                            14,
                            "  description: Document to hold regional settings for Session Manager\n"
                        ],
                        [
                            15,
                            "  sessionType: Standard_Stream\n"
                        ],
                        [
                            16,
                            "  inputs:\n"
                        ],
                        [
                            17,
                            "    s3BucketName: 'example'\n"
                        ],
                        [
                            18,
                            "    s3KeyPrefix: ''\n"
                        ],
                        [
                            19,
                            "    s3EncryptionEnabled: false\n"
                        ],
                        [
                            20,
                            "    cloudWatchLogGroupName: ''\n"
                        ],
                        [
                            21,
                            "    cloudWatchEncryptionEnabled: false\n"
                        ],
                        [
                            22,
                            "    cloudWatchStreamingEnabled: true\n"
                        ],
                        [
                            23,
                            "    kmsKeyId: ''\n"
                        ],
                        [
                            24,
                            "    runAsEnabled: true\n"
                        ],
                        [
                            25,
                            "    runAsDefaultUser: ''\n"
                        ],
                        [
                            26,
                            "    idleSessionTimeout: '20'\n"
                        ],
                        [
                            27,
                            "    shellProfile:\n"
                        ],
                        [
                            28,
                            "      windows: ''\n"
                        ],
                        [
                            29,
                            "      linux: ''\n"
                        ],
                        [
                            30,
                            "DOC\n"
                        ],
                        [
                            31,
                            "  tags    = { test = \"fail\" }\n"
                        ],
                        [
                            32,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ssm/ssm.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ssm/ssm.tf",
                    "repo_file_path": "/terraform/aws/ssm/ssm.tf",
                    "file_line_range": [
                        6,
                        32
                    ],
                    "resource": "aws_ssm_document.s3_enabled_not_encrypted_yaml",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SSMSessionManagerDocumentLogging",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-load-balancer-has-deletion-protection-enabled"
                },
                {
                    "check_id": "CKV_AWS_112",
                    "bc_check_id": "BC_AWS_GENERAL_76",
                    "check_name": "Ensure Session Manager data is encrypted in transit",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "document_type",
                            "document_format",
                            "content"
                        ]
                    },
                    "code_block": [
                        [
                            6,
                            "resource \"aws_ssm_document\" \"s3_enabled_not_encrypted_yaml\" {\n"
                        ],
                        [
                            7,
                            "  name          = \"SSM-SessionManagerRunShell\"\n"
                        ],
                        [
                            8,
                            "  document_type = \"Session\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  document_format = \"YAML\"\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  content = <<DOC\n"
                        ],
                        [
                            13,
                            "  schemaVersion: '1.0'\n"
                        ],
                        [
                            14,
                            "  description: Document to hold regional settings for Session Manager\n"
                        ],
                        [
                            15,
                            "  sessionType: Standard_Stream\n"
                        ],
                        [
                            16,
                            "  inputs:\n"
                        ],
                        [
                            17,
                            "    s3BucketName: 'example'\n"
                        ],
                        [
                            18,
                            "    s3KeyPrefix: ''\n"
                        ],
                        [
                            19,
                            "    s3EncryptionEnabled: false\n"
                        ],
                        [
                            20,
                            "    cloudWatchLogGroupName: ''\n"
                        ],
                        [
                            21,
                            "    cloudWatchEncryptionEnabled: false\n"
                        ],
                        [
                            22,
                            "    cloudWatchStreamingEnabled: true\n"
                        ],
                        [
                            23,
                            "    kmsKeyId: ''\n"
                        ],
                        [
                            24,
                            "    runAsEnabled: true\n"
                        ],
                        [
                            25,
                            "    runAsDefaultUser: ''\n"
                        ],
                        [
                            26,
                            "    idleSessionTimeout: '20'\n"
                        ],
                        [
                            27,
                            "    shellProfile:\n"
                        ],
                        [
                            28,
                            "      windows: ''\n"
                        ],
                        [
                            29,
                            "      linux: ''\n"
                        ],
                        [
                            30,
                            "DOC\n"
                        ],
                        [
                            31,
                            "  tags    = { test = \"fail\" }\n"
                        ],
                        [
                            32,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ssm/ssm.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ssm/ssm.tf",
                    "repo_file_path": "/terraform/aws/ssm/ssm.tf",
                    "file_line_range": [
                        6,
                        32
                    ],
                    "resource": "aws_ssm_document.s3_enabled_not_encrypted_yaml",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SSMSessionManagerDocumentEncryption",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-session-manager-data-is-encrypted-in-transit"
                },
                {
                    "check_id": "CKV_AWS_130",
                    "bc_check_id": "BC_AWS_NETWORKING_53",
                    "check_name": "Ensure VPC subnets do not assign public IP by default",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "map_public_ip_on_launch"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_subnet\" \"test\" {\n"
                        ],
                        [
                            5,
                            "  vpc_id     = aws_vpc.main.id\n"
                        ],
                        [
                            6,
                            "  cidr_block = \"10.0.1.0/24\"\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  map_public_ip_on_launch = true\n"
                        ],
                        [
                            9,
                            "  tags                    = { test = \"fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/subnet/subnet.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/subnet/subnet.tf",
                    "repo_file_path": "/terraform/aws/subnet/subnet.tf",
                    "file_line_range": [
                        4,
                        10
                    ],
                    "resource": "aws_subnet.test",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
                },
                {
                    "check_id": "CKV_AWS_160",
                    "bc_check_id": "BC_AWS_GENERAL_87",
                    "check_name": "Ensure that Timestream database is encrypted with KMS CMK",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "kms_key_id"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_timestreamwrite_database\" \"default\" {\n"
                        ],
                        [
                            4,
                            "  database_name = \"timestream\"\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/timestream/timestream.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/timestream/timestream.tf",
                    "repo_file_path": "/terraform/aws/timestream/timestream.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_timestreamwrite_database.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.TimestreamDatabaseKMSKey",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-timestream-database-is-encrypted-with-kms-cmk"
                },
                {
                    "check_id": "CKV_AWS_164",
                    "bc_check_id": "BC_AWS_NETWORKING_57",
                    "check_name": "Ensure Transfer Server is not exposed publicly.",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "endpoint_type"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_transfer_server\" \"example\" {\n"
                        ],
                        [
                            5,
                            "  protocols = [\"SFTP\"]\n"
                        ],
                        [
                            6,
                            "  tags      = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/transfer_server/transferserver.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/transfer_server/transferserver.tf",
                    "repo_file_path": "/terraform/aws/transfer_server/transferserver.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_transfer_server.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.TransferServerIsPublic",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-transfer-server-is-not-exposed-publicly"
                },
                {
                    "check_id": "CKV_AWS_148",
                    "bc_check_id": "BC_AWS_NETWORKING_54",
                    "check_name": "Ensure no default VPC is planned to be provisioned",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_default_vpc\" \"default\" {\n"
                        ],
                        [
                            9,
                            "  tags = {\n"
                        ],
                        [
                            10,
                            "    Name = \"Default VPC\"\n"
                        ],
                        [
                            11,
                            "    fail = \"test\"\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/default_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/default_vpc.tf",
                    "repo_file_path": "/terraform/aws/vpc/default_vpc.tf",
                    "file_line_range": [
                        8,
                        13
                    ],
                    "resource": "aws_default_vpc.default",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.VPCDefaultNetwork",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "Default VPC",
                        "fail": "test"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-no-default-vpc-is-planned-to-be-provisioned"
                },
                {
                    "check_id": "CKV_AWS_123",
                    "bc_check_id": "BC_AWS_NETWORKING_39",
                    "check_name": "Ensure that VPC Endpoint Service is configured for Manual Acceptance",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "acceptance_required"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_vpc_endpoint_service\" \"example\" {\n"
                        ],
                        [
                            5,
                            "  acceptance_required        = false\n"
                        ],
                        [
                            6,
                            "  network_load_balancer_arns = [aws_lb.example.arn]\n"
                        ],
                        [
                            7,
                            "  tags = {\n"
                        ],
                        [
                            8,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            9,
                            "  }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc_endpoint/vpc_endpoint.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc_endpoint/vpc_endpoint.tf",
                    "repo_file_path": "/terraform/aws/vpc_endpoint/vpc_endpoint.tf",
                    "file_line_range": [
                        4,
                        10
                    ],
                    "resource": "aws_vpc_endpoint_service.example",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.VPCEndpointAcceptanceConfigured",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-vpc-endpoint-service-is-configured-for-manual-acceptance"
                },
                {
                    "check_id": "CKV_AWS_176",
                    "bc_check_id": "BC_AWS_LOGGING_31",
                    "check_name": "Ensure Logging is enabled for WAF  Web Access Control Lists",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging_configuration/[0]/log_destination"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_wafregional_web_acl\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  name        = \"tfWebACLregionalfail\"\n"
                        ],
                        [
                            7,
                            "  metric_name = \"tfWebACLregionalfail\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  default_action {\n"
                        ],
                        [
                            10,
                            "    type = \"ALLOW\"\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf.tf",
                    "repo_file_path": "/terraform/aws/waf/waf.tf",
                    "file_line_range": [
                        5,
                        13
                    ],
                    "resource": "aws_wafregional_web_acl.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.clou/docs/bc_aws_logging_31"
                },
                {
                    "check_id": "CKV_AWS_175",
                    "bc_check_id": "BC_AWS_NETWORKING_64",
                    "check_name": "Ensure WAF has associated rules",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_wafregional_web_acl\" \"fail\" {\n"
                        ],
                        [
                            6,
                            "  name        = \"tfWebACLregionalfail\"\n"
                        ],
                        [
                            7,
                            "  metric_name = \"tfWebACLregionalfail\"\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  default_action {\n"
                        ],
                        [
                            10,
                            "    type = \"ALLOW\"\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf.tf",
                    "repo_file_path": "/terraform/aws/waf/waf.tf",
                    "file_line_range": [
                        5,
                        13
                    ],
                    "resource": "aws_wafregional_web_acl.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasAnyRules",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.clou/docs/bc_aws_networking_64"
                },
                {
                    "check_id": "CKV_AWS_176",
                    "bc_check_id": "BC_AWS_LOGGING_31",
                    "check_name": "Ensure Logging is enabled for WAF  Web Access Control Lists",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "logging_configuration/[0]/log_destination"
                        ]
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_waf_web_acl\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  name        = \"tfWebACL\"\n"
                        ],
                        [
                            18,
                            "  metric_name = \"tfWebACL\"\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  default_action {\n"
                        ],
                        [
                            21,
                            "    type = \"ALLOW\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf.tf",
                    "repo_file_path": "/terraform/aws/waf/waf.tf",
                    "file_line_range": [
                        16,
                        24
                    ],
                    "resource": "aws_waf_web_acl.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasLogs",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.clou/docs/bc_aws_logging_31"
                },
                {
                    "check_id": "CKV_AWS_175",
                    "bc_check_id": "BC_AWS_NETWORKING_64",
                    "check_name": "Ensure WAF has associated rules",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            16,
                            "resource \"aws_waf_web_acl\" \"fail\" {\n"
                        ],
                        [
                            17,
                            "  name        = \"tfWebACL\"\n"
                        ],
                        [
                            18,
                            "  metric_name = \"tfWebACL\"\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  default_action {\n"
                        ],
                        [
                            21,
                            "    type = \"ALLOW\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf.tf",
                    "repo_file_path": "/terraform/aws/waf/waf.tf",
                    "file_line_range": [
                        16,
                        24
                    ],
                    "resource": "aws_waf_web_acl.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasAnyRules",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.clou/docs/bc_aws_networking_64"
                },
                {
                    "check_id": "CKV_AWS_192",
                    "bc_check_id": "BC_AWS_NETWORKING_61",
                    "check_name": "Ensure WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "rule"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_wafv2_web_acl\" \"no_rule\" {\n"
                        ],
                        [
                            6,
                            "  name        = \"managed-rule-example-fail\"\n"
                        ],
                        [
                            7,
                            "  description = \"Example of a managed rule.\"\n"
                        ],
                        [
                            8,
                            "  scope       = \"REGIONAL\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  default_action {\n"
                        ],
                        [
                            11,
                            "    allow {}\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  visibility_config {\n"
                        ],
                        [
                            15,
                            "    cloudwatch_metrics_enabled = false\n"
                        ],
                        [
                            16,
                            "    metric_name                = \"friendly-metric-name\"\n"
                        ],
                        [
                            17,
                            "    sampled_requests_enabled   = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf2.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf2.tf",
                    "repo_file_path": "/terraform/aws/waf/waf2.tf",
                    "file_line_range": [
                        5,
                        22
                    ],
                    "resource": "aws_wafv2_web_acl.no_rule",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFACLCVE202144228",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-waf-prevents-message-lookup-in-log4j2"
                },
                {
                    "check_id": "CKV_AWS_175",
                    "bc_check_id": "BC_AWS_NETWORKING_64",
                    "check_name": "Ensure WAF has associated rules",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": []
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_wafv2_web_acl\" \"no_rule\" {\n"
                        ],
                        [
                            6,
                            "  name        = \"managed-rule-example-fail\"\n"
                        ],
                        [
                            7,
                            "  description = \"Example of a managed rule.\"\n"
                        ],
                        [
                            8,
                            "  scope       = \"REGIONAL\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  default_action {\n"
                        ],
                        [
                            11,
                            "    allow {}\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  visibility_config {\n"
                        ],
                        [
                            15,
                            "    cloudwatch_metrics_enabled = false\n"
                        ],
                        [
                            16,
                            "    metric_name                = \"friendly-metric-name\"\n"
                        ],
                        [
                            17,
                            "    sampled_requests_enabled   = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf2.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf2.tf",
                    "repo_file_path": "/terraform/aws/waf/waf2.tf",
                    "file_line_range": [
                        5,
                        22
                    ],
                    "resource": "aws_wafv2_web_acl.no_rule",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WAFHasAnyRules",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.clou/docs/bc_aws_networking_64"
                },
                {
                    "check_id": "CKV_AWS_156",
                    "bc_check_id": "BC_AWS_GENERAL_84",
                    "check_name": "Ensure that Workspace root volumes are encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "root_volume_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_workspaces_workspace\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  directory_id = aws_workspaces_directory.main.id\n"
                        ],
                        [
                            10,
                            "  bundle_id    = data.aws_workspaces_bundle.bundle.id\n"
                        ],
                        [
                            11,
                            "  user_name    = var.user_name\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  workspace_properties {\n"
                        ],
                        [
                            14,
                            "    compute_type_name                         = \"VALUE\"\n"
                        ],
                        [
                            15,
                            "    user_volume_size_gib                      = 10\n"
                        ],
                        [
                            16,
                            "    root_volume_size_gib                      = 80\n"
                        ],
                        [
                            17,
                            "    running_mode                              = \"AUTO_STOP\"\n"
                        ],
                        [
                            18,
                            "    running_mode_auto_stop_timeout_in_minutes = 60\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/workspace/workspace_workspace.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/workspace/workspace_workspace.tf",
                    "repo_file_path": "/terraform/aws/workspace/workspace_workspace.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_workspaces_workspace.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WorkspaceRootVolumeEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-workspace-root-volumes-are-encrypted"
                },
                {
                    "check_id": "CKV_AWS_155",
                    "bc_check_id": "BC_AWS_GENERAL_83",
                    "check_name": "Ensure that Workspace user volumes are encrypted",
                    "check_result": {
                        "result": "FAILED",
                        "evaluated_keys": [
                            "user_volume_encryption_enabled"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_workspaces_workspace\" \"fail\" {\n"
                        ],
                        [
                            9,
                            "  directory_id = aws_workspaces_directory.main.id\n"
                        ],
                        [
                            10,
                            "  bundle_id    = data.aws_workspaces_bundle.bundle.id\n"
                        ],
                        [
                            11,
                            "  user_name    = var.user_name\n"
                        ],
                        [
                            12,
                            "\n"
                        ],
                        [
                            13,
                            "  workspace_properties {\n"
                        ],
                        [
                            14,
                            "    compute_type_name                         = \"VALUE\"\n"
                        ],
                        [
                            15,
                            "    user_volume_size_gib                      = 10\n"
                        ],
                        [
                            16,
                            "    root_volume_size_gib                      = 80\n"
                        ],
                        [
                            17,
                            "    running_mode                              = \"AUTO_STOP\"\n"
                        ],
                        [
                            18,
                            "    running_mode_auto_stop_timeout_in_minutes = 60\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/workspace/workspace_workspace.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/workspace/workspace_workspace.tf",
                    "repo_file_path": "/terraform/aws/workspace/workspace_workspace.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_workspaces_workspace.fail",
                    "evaluations": null,
                    "check_class": "checkov.terraform.checks.resource.aws.WorkspaceUserVolumeEncrypted",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-workspace-user-volumes-are-encrypted"
                },
                {
                    "check_id": "CKV2_AWS_33",
                    "bc_check_id": null,
                    "check_name": "Ensure AppSync is protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_appsync_graphql_api": {
                                "default": {
                                    "authentication_type": [
                                        "API_KEY"
                                    ],
                                    "name": [
                                        "example"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_appsync_graphql_api\" \"default\" {\n"
                        ],
                        [
                            6,
                            "  authentication_type = \"API_KEY\"\n"
                        ],
                        [
                            7,
                            "  name                = \"example\"\n"
                        ],
                        [
                            8,
                            "  tags = {\n"
                        ],
                        [
                            9,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            10,
                            "  }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/appsync/appsync.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/appsync/appsync.tf",
                    "repo_file_path": "/terraform/aws/appsync/appsync.tf",
                    "file_line_range": [
                        5,
                        11
                    ],
                    "resource": "aws_appsync_graphql_api.default",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": null
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_security_group": {
                                "bad_example": {
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                22
                                            ],
                                            "to_port": [
                                                22
                                            ]
                                        },
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                3389
                                            ],
                                            "to_port": [
                                                3389
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                22
                                            ],
                                            "to_port": [
                                                22
                                            ]
                                        },
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                3389
                                            ],
                                            "to_port": [
                                                3389
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_security_group\" \"bad_example\" {\n"
                        ],
                        [
                            16,
                            "  ingress {\n"
                        ],
                        [
                            17,
                            "    from_port   = 22\n"
                        ],
                        [
                            18,
                            "    to_port     = 22\n"
                        ],
                        [
                            19,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            20,
                            "  }\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  ingress {\n"
                        ],
                        [
                            23,
                            "    from_port   = 3389\n"
                        ],
                        [
                            24,
                            "    to_port     = 3389\n"
                        ],
                        [
                            25,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  egress {\n"
                        ],
                        [
                            29,
                            "    from_port   = 22\n"
                        ],
                        [
                            30,
                            "    to_port     = 22\n"
                        ],
                        [
                            31,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "  egress {\n"
                        ],
                        [
                            34,
                            "    from_port   = 3389\n"
                        ],
                        [
                            35,
                            "    to_port     = 3389\n"
                        ],
                        [
                            36,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            37,
                            "  }\n"
                        ],
                        [
                            38,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            39,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_group.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_group.tf",
                    "file_line_range": [
                        15,
                        39
                    ],
                    "resource": "aws_security_group.bad_example",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_security_group": {
                                "positive1": {
                                    "description": [
                                        "Gets the HTTP port open with the tcp protocol"
                                    ],
                                    "ingress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "description": [
                                                "HTTP port open"
                                            ],
                                            "from_port": [
                                                78
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "to_port": [
                                                91
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "http_positive_tcp_1"
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_security_group\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  name        = \"http_positive_tcp_1\"\n"
                        ],
                        [
                            3,
                            "  description = \"Gets the HTTP port open with the tcp protocol\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  ingress {\n"
                        ],
                        [
                            6,
                            "    description = \"HTTP port open\"\n"
                        ],
                        [
                            7,
                            "    from_port   = 78\n"
                        ],
                        [
                            8,
                            "    to_port     = 91\n"
                        ],
                        [
                            9,
                            "    protocol    = \"tcp\"\n"
                        ],
                        [
                            10,
                            "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            11,
                            "  }\n"
                        ],
                        [
                            12,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            13,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_http_port_open.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_http_port_open.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_http_port_open.tf",
                    "file_line_range": [
                        1,
                        13
                    ],
                    "resource": "aws_security_group.positive1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
                },
                {
                    "check_id": "CKV2_AWS_5",
                    "bc_check_id": "BC_AWS_NETWORKING_51",
                    "check_name": "Ensure that Security Groups are attached to another resource",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_security_group": {
                                "allow_tls": {
                                    "description": [
                                        "Allow TLS inbound traffic"
                                    ],
                                    "egress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "0.0.0.0/0"
                                                ]
                                            ],
                                            "from_port": [
                                                0
                                            ],
                                            "ipv6_cidr_blocks": [
                                                [
                                                    "::/0"
                                                ]
                                            ],
                                            "protocol": [
                                                "-1"
                                            ],
                                            "to_port": [
                                                0
                                            ]
                                        }
                                    ],
                                    "ingress": [
                                        {
                                            "cidr_blocks": [
                                                [
                                                    "${aws_vpc.main.cidr_block}"
                                                ]
                                            ],
                                            "description": [
                                                "TLS from VPC"
                                            ],
                                            "from_port": [
                                                443
                                            ],
                                            "ipv6_cidr_blocks": [
                                                [
                                                    "${aws_vpc.main.ipv6_cidr_block}"
                                                ]
                                            ],
                                            "protocol": [
                                                "tcp"
                                            ],
                                            "to_port": [
                                                443
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "allow_tls"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "allow_tls",
                                            "test": "fails"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_security_group\" \"allow_tls\" {\n"
                        ],
                        [
                            10,
                            "  name        = \"allow_tls\"\n"
                        ],
                        [
                            11,
                            "  description = \"Allow TLS inbound traffic\"\n"
                        ],
                        [
                            12,
                            "  vpc_id      = aws_vpc.main.id\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  ingress {\n"
                        ],
                        [
                            15,
                            "    description      = \"TLS from VPC\"\n"
                        ],
                        [
                            16,
                            "    from_port        = 443\n"
                        ],
                        [
                            17,
                            "    to_port          = 443\n"
                        ],
                        [
                            18,
                            "    protocol         = \"tcp\"\n"
                        ],
                        [
                            19,
                            "    cidr_blocks      = [aws_vpc.main.cidr_block]\n"
                        ],
                        [
                            20,
                            "    ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  egress {\n"
                        ],
                        [
                            24,
                            "    from_port        = 0\n"
                        ],
                        [
                            25,
                            "    to_port          = 0\n"
                        ],
                        [
                            26,
                            "    protocol         = \"-1\"\n"
                        ],
                        [
                            27,
                            "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                        ],
                        [
                            28,
                            "    ipv6_cidr_blocks = [\"::/0\"]\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  tags = {\n"
                        ],
                        [
                            32,
                            "    Name = \"allow_tls\"\n"
                        ],
                        [
                            33,
                            "    test = \"fails\"\n"
                        ],
                        [
                            34,
                            "  }\n"
                        ],
                        [
                            35,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/security_groups_not_used.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/security_groups_not_used.tf",
                    "repo_file_path": "/terraform/aws/security_groups/security_groups_not_used.tf",
                    "file_line_range": [
                        9,
                        35
                    ],
                    "resource": "aws_security_group.allow_tls",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "allow_tls",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
                },
                {
                    "check_id": "CKV2_AWS_31",
                    "bc_check_id": "BC_AWS_LOGGING_33",
                    "check_name": "Ensure WAF2 has a Logging Configuration",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_wafv2_web_acl": {
                                "no_rule": {
                                    "default_action": [
                                        {
                                            "allow": [
                                                {}
                                            ]
                                        }
                                    ],
                                    "description": [
                                        "Example of a managed rule."
                                    ],
                                    "name": [
                                        "managed-rule-example-fail"
                                    ],
                                    "scope": [
                                        "REGIONAL"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ],
                                    "visibility_config": [
                                        {
                                            "cloudwatch_metrics_enabled": [
                                                false
                                            ],
                                            "metric_name": [
                                                "friendly-metric-name"
                                            ],
                                            "sampled_requests_enabled": [
                                                false
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_wafv2_web_acl\" \"no_rule\" {\n"
                        ],
                        [
                            6,
                            "  name        = \"managed-rule-example-fail\"\n"
                        ],
                        [
                            7,
                            "  description = \"Example of a managed rule.\"\n"
                        ],
                        [
                            8,
                            "  scope       = \"REGIONAL\"\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  default_action {\n"
                        ],
                        [
                            11,
                            "    allow {}\n"
                        ],
                        [
                            12,
                            "  }\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  visibility_config {\n"
                        ],
                        [
                            15,
                            "    cloudwatch_metrics_enabled = false\n"
                        ],
                        [
                            16,
                            "    metric_name                = \"friendly-metric-name\"\n"
                        ],
                        [
                            17,
                            "    sampled_requests_enabled   = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "  tags = {\n"
                        ],
                        [
                            20,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/waf/waf2.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/waf/waf2.tf",
                    "repo_file_path": "/terraform/aws/waf/waf2.tf",
                    "file_line_range": [
                        5,
                        22
                    ],
                    "resource": "aws_wafv2_web_acl.no_rule",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_33"
                },
                {
                    "check_id": "CKV2_AWS_32",
                    "bc_check_id": "BC_AWS_NETWORKING_65",
                    "check_name": "Ensure CloudFront distribution has a strict security headers policy attached",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "s3_distribution": {
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                "var.default_behaviour.allowed_methods"
                                            ],
                                            "cached_methods": [
                                                "var.default_behaviour.cached_methods"
                                            ],
                                            "default_ttl": [
                                                "var.default_behaviour.default_ttl"
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "var.default_behaviour.forward"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        "var.default_behaviour.query_string"
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                "var.default_behaviour.max_ttl"
                                            ],
                                            "min_ttl": [
                                                "var.default_behaviour.min_ttl"
                                            ],
                                            "target_origin_id": [
                                                "var.default_behaviour.origin_id"
                                            ],
                                            "viewer_protocol_policy": [
                                                "allow-all"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "dynamic": [
                                        {
                                            "origin": {
                                                "content": [
                                                    {
                                                        "domain_name": [
                                                            "origin.value[\"domain_name\"]"
                                                        ],
                                                        "origin_id": [
                                                            "origin.value[\"origin_id\"]"
                                                        ],
                                                        "s3_origin_config": [
                                                            {
                                                                "origin_access_identity": [
                                                                    "origin.value[\"origin_access_identity\"]"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "for_each": [
                                                    "${local.origins}"
                                                ]
                                            }
                                        },
                                        {
                                            "ordered_cache_behavior": {
                                                "content": [
                                                    {
                                                        "allowed_methods": [
                                                            "ordered_cache_behavior.value[\"allowed_methods\"]"
                                                        ],
                                                        "cached_methods": [
                                                            "ordered_cache_behavior.value[\"cached_methods\"]"
                                                        ],
                                                        "compress": [
                                                            "ordered_cache_behavior.value[\"compress\"]"
                                                        ],
                                                        "default_ttl": [
                                                            "ordered_cache_behavior.value[\"default_ttl\"]"
                                                        ],
                                                        "forwarded_values": [
                                                            {
                                                                "cookies": [
                                                                    {
                                                                        "forward": [
                                                                            "ordered_cache_behavior.value[\"forward\"]"
                                                                        ]
                                                                    }
                                                                ],
                                                                "headers": [
                                                                    "ordered_cache_behavior.value[\"headers\"]"
                                                                ],
                                                                "query_string": [
                                                                    "ordered_cache_behavior.value[\"query_string\"]"
                                                                ]
                                                            }
                                                        ],
                                                        "max_ttl": [
                                                            "ordered_cache_behavior.value[\"max_ttl\"]"
                                                        ],
                                                        "min_ttl": [
                                                            "ordered_cache_behavior.value[\"min_ttl\"]"
                                                        ],
                                                        "path_pattern": [
                                                            "ordered_cache_behavior.value[\"path_pattern\"]"
                                                        ],
                                                        "target_origin_id": [
                                                            "ordered_cache_behavior.value[\"origin_id\"]"
                                                        ],
                                                        "viewer_protocol_policy": [
                                                            "allow-all"
                                                        ]
                                                    }
                                                ],
                                                "for_each": [
                                                    "${var.behaviours}"
                                                ]
                                            }
                                        }
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "lifecycle": [
                                        {
                                            "ignore_changes": [
                                                [
                                                    "${tags}"
                                                ]
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_200"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "locations": [
                                                        "var.geo_restrictions[\"locations\"]"
                                                    ],
                                                    "restriction_type": [
                                                        "var.geo_restrictions[\"restriction_type\"]"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "cloudfront_default_certificate": [
                                                false
                                            ],
                                            "minimum_protocol_version": [
                                                "TLSv1.1_2015"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "origin.value[\"domain_name\"]"
                                            ],
                                            "origin_id": [
                                                "origin.value[\"origin_id\"]"
                                            ],
                                            "s3_origin_config": [
                                                {
                                                    "origin_access_identity": [
                                                        "origin.value[\"origin_access_identity\"]"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "ordered_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                "ordered_cache_behavior.value[\"allowed_methods\"]"
                                            ],
                                            "cached_methods": [
                                                "ordered_cache_behavior.value[\"cached_methods\"]"
                                            ],
                                            "compress": [
                                                "ordered_cache_behavior.value[\"compress\"]"
                                            ],
                                            "default_ttl": [
                                                "ordered_cache_behavior.value[\"default_ttl\"]"
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "ordered_cache_behavior.value[\"forward\"]"
                                                            ]
                                                        }
                                                    ],
                                                    "headers": [
                                                        "ordered_cache_behavior.value[\"headers\"]"
                                                    ],
                                                    "query_string": [
                                                        "ordered_cache_behavior.value[\"query_string\"]"
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                "ordered_cache_behavior.value[\"max_ttl\"]"
                                            ],
                                            "min_ttl": [
                                                "ordered_cache_behavior.value[\"min_ttl\"]"
                                            ],
                                            "path_pattern": [
                                                "ordered_cache_behavior.value[\"path_pattern\"]"
                                            ],
                                            "target_origin_id": [
                                                "ordered_cache_behavior.value[\"origin_id\"]"
                                            ],
                                            "viewer_protocol_policy": [
                                                "allow-all"
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "security_headers_config/strict_transport_security/access_control_max_age_sec",
                            "security_headers_config/frame_options/override",
                            "resource_type",
                            "security_headers_config/xss_protection/mode_block",
                            "security_headers_config/content_security_policy/override",
                            "security_headers_config/xss_protection/override",
                            "security_headers_config/referrer_policy/override",
                            "security_headers_config/xss_protection/protection",
                            "security_headers_config/content_type_options/override",
                            "security_headers_config/content_security_policy/content_security_policy",
                            "security_headers_config/frame_options/frame_option",
                            "security_headers_config/strict_transport_security/override",
                            "security_headers_config/strict_transport_security/preload",
                            "security_headers_config/referrer_policy/referrer_policy",
                            "security_headers_config/strict_transport_security/include_subdomains"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                        ],
                        [
                            14,
                            "  dynamic \"origin\" {\n"
                        ],
                        [
                            15,
                            "    for_each = local.origins\n"
                        ],
                        [
                            16,
                            "    content {\n"
                        ],
                        [
                            17,
                            "      domain_name = origin.value[\"domain_name\"]\n"
                        ],
                        [
                            18,
                            "      origin_id   = origin.value[\"origin_id\"]\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "      s3_origin_config {\n"
                        ],
                        [
                            21,
                            "        origin_access_identity = origin.value[\"origin_access_identity\"]\n"
                        ],
                        [
                            22,
                            "      }\n"
                        ],
                        [
                            23,
                            "    }\n"
                        ],
                        [
                            24,
                            "  }\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  enabled             = true\n"
                        ],
                        [
                            27,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            28,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = var.default_behaviour.allowed_methods\n"
                        ],
                        [
                            32,
                            "    cached_methods   = var.default_behaviour.cached_methods\n"
                        ],
                        [
                            33,
                            "    target_origin_id = var.default_behaviour.origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = var.default_behaviour.query_string\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = var.default_behaviour.forward\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = var.default_behaviour.min_ttl\n"
                        ],
                        [
                            45,
                            "    default_ttl            = var.default_behaviour.default_ttl\n"
                        ],
                        [
                            46,
                            "    max_ttl                = var.default_behaviour.max_ttl\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  dynamic \"ordered_cache_behavior\" {\n"
                        ],
                        [
                            50,
                            "    for_each = var.behaviours\n"
                        ],
                        [
                            51,
                            "    content {\n"
                        ],
                        [
                            52,
                            "      path_pattern     = ordered_cache_behavior.value[\"path_pattern\"]\n"
                        ],
                        [
                            53,
                            "      allowed_methods  = ordered_cache_behavior.value[\"allowed_methods\"]\n"
                        ],
                        [
                            54,
                            "      cached_methods   = ordered_cache_behavior.value[\"cached_methods\"]\n"
                        ],
                        [
                            55,
                            "      target_origin_id = ordered_cache_behavior.value[\"origin_id\"]\n"
                        ],
                        [
                            56,
                            "      forwarded_values {\n"
                        ],
                        [
                            57,
                            "        headers      = ordered_cache_behavior.value[\"headers\"]\n"
                        ],
                        [
                            58,
                            "        query_string = ordered_cache_behavior.value[\"query_string\"]\n"
                        ],
                        [
                            59,
                            "        cookies {\n"
                        ],
                        [
                            60,
                            "          forward = ordered_cache_behavior.value[\"forward\"]\n"
                        ],
                        [
                            61,
                            "        }\n"
                        ],
                        [
                            62,
                            "      }\n"
                        ],
                        [
                            63,
                            "      min_ttl                = ordered_cache_behavior.value[\"min_ttl\"]\n"
                        ],
                        [
                            64,
                            "      default_ttl            = ordered_cache_behavior.value[\"default_ttl\"]\n"
                        ],
                        [
                            65,
                            "      max_ttl                = ordered_cache_behavior.value[\"max_ttl\"]\n"
                        ],
                        [
                            66,
                            "      compress               = ordered_cache_behavior.value[\"compress\"]\n"
                        ],
                        [
                            67,
                            "      viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            68,
                            "    }\n"
                        ],
                        [
                            69,
                            "  }\n"
                        ],
                        [
                            70,
                            "\n"
                        ],
                        [
                            71,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            72,
                            "\n"
                        ],
                        [
                            73,
                            "  restrictions {\n"
                        ],
                        [
                            74,
                            "    geo_restriction {\n"
                        ],
                        [
                            75,
                            "      restriction_type = var.geo_restrictions[\"restriction_type\"]\n"
                        ],
                        [
                            76,
                            "      locations        = var.geo_restrictions[\"locations\"]\n"
                        ],
                        [
                            77,
                            "    }\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "\n"
                        ],
                        [
                            80,
                            "  viewer_certificate {\n"
                        ],
                        [
                            81,
                            "    cloudfront_default_certificate = var.viewer_certificate[\"cloudfront_default_certificate\"]\n"
                        ],
                        [
                            82,
                            "    minimum_protocol_version       = var.viewer_certificate[\"minimum_protocol_version\"]\n"
                        ],
                        [
                            83,
                            "  }\n"
                        ],
                        [
                            84,
                            "\n"
                        ],
                        [
                            85,
                            "  lifecycle {\n"
                        ],
                        [
                            86,
                            "    ignore_changes = [tags]\n"
                        ],
                        [
                            87,
                            "  }\n"
                        ],
                        [
                            88,
                            "  tags = {\n"
                        ],
                        [
                            89,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            90,
                            "  }\n"
                        ],
                        [
                            91,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront.tf",
                    "file_line_range": [
                        13,
                        91
                    ],
                    "resource": "aws_cloudfront_distribution.s3_distribution",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "viewer_certificate.cloudfront_default_certificate": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ],
                        "viewer_certificate.minimum_protocol_version": [
                            {
                                "type": "variable",
                                "name": "viewer_certificate",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_65"
                },
                {
                    "check_id": "CKV2_AWS_32",
                    "bc_check_id": "BC_AWS_NETWORKING_65",
                    "check_name": "Ensure CloudFront distribution has a strict security headers policy attached",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "fail": {
                                    "aliases": [
                                        [
                                            "mysite.example.com",
                                            "yoursite.example.com"
                                        ]
                                    ],
                                    "comment": [
                                        "Some comment"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "DELETE",
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS",
                                                    "PATCH",
                                                    "POST",
                                                    "PUT"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "jimbo"
                                            ],
                                            "viewer_protocol_policy": [
                                                "allow-all"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        false
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "logging_config": [
                                        {
                                            "bucket": [
                                                "mylogs.s3.amazonaws.com"
                                            ],
                                            "include_cookies": [
                                                false
                                            ],
                                            "prefix": [
                                                "myprefix"
                                            ]
                                        }
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.b.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "jimbo"
                                            ],
                                            "s3_origin_config": [
                                                {
                                                    "origin_access_identity": [
                                                        "origin-access-identity/cloudfront/ABCDEFG1234567"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "price_class": [
                                        "PriceClass_200"
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "locations": [
                                                        [
                                                            "CA",
                                                            "DE",
                                                            "GB",
                                                            "US"
                                                        ]
                                                    ],
                                                    "restriction_type": [
                                                        "whitelist"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "Environment": "production"
                                        }
                                    ],
                                    "viewer_certificate": [
                                        {
                                            "cloudfront_default_certificate": [
                                                true
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "security_headers_config/strict_transport_security/access_control_max_age_sec",
                            "security_headers_config/frame_options/override",
                            "resource_type",
                            "security_headers_config/xss_protection/mode_block",
                            "security_headers_config/content_security_policy/override",
                            "security_headers_config/xss_protection/override",
                            "security_headers_config/referrer_policy/override",
                            "security_headers_config/xss_protection/protection",
                            "security_headers_config/content_type_options/override",
                            "security_headers_config/content_security_policy/content_security_policy",
                            "security_headers_config/frame_options/frame_option",
                            "security_headers_config/strict_transport_security/override",
                            "security_headers_config/strict_transport_security/preload",
                            "security_headers_config/referrer_policy/referrer_policy",
                            "security_headers_config/strict_transport_security/include_subdomains"
                        ]
                    },
                    "code_block": [
                        [
                            7,
                            "resource \"aws_cloudfront_distribution\" \"fail\" {\n"
                        ],
                        [
                            8,
                            "  origin {\n"
                        ],
                        [
                            9,
                            "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                        ],
                        [
                            10,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "    s3_origin_config {\n"
                        ],
                        [
                            13,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            14,
                            "    }\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  enabled             = false\n"
                        ],
                        [
                            18,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            19,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            20,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            21,
                            "\n"
                        ],
                        [
                            22,
                            "  logging_config {\n"
                        ],
                        [
                            23,
                            "    include_cookies = false\n"
                        ],
                        [
                            24,
                            "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                        ],
                        [
                            25,
                            "    prefix          = \"myprefix\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "\n"
                        ],
                        [
                            28,
                            "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            31,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            32,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            33,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            34,
                            "\n"
                        ],
                        [
                            35,
                            "    forwarded_values {\n"
                        ],
                        [
                            36,
                            "      query_string = false\n"
                        ],
                        [
                            37,
                            "\n"
                        ],
                        [
                            38,
                            "      cookies {\n"
                        ],
                        [
                            39,
                            "        forward = \"none\"\n"
                        ],
                        [
                            40,
                            "      }\n"
                        ],
                        [
                            41,
                            "    }\n"
                        ],
                        [
                            42,
                            "\n"
                        ],
                        [
                            43,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            44,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            45,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            46,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "\n"
                        ],
                        [
                            49,
                            "  price_class = \"PriceClass_200\"\n"
                        ],
                        [
                            50,
                            "\n"
                        ],
                        [
                            51,
                            "  restrictions {\n"
                        ],
                        [
                            52,
                            "    geo_restriction {\n"
                        ],
                        [
                            53,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            54,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            55,
                            "    }\n"
                        ],
                        [
                            56,
                            "  }\n"
                        ],
                        [
                            57,
                            "\n"
                        ],
                        [
                            58,
                            "  tags = {\n"
                        ],
                        [
                            59,
                            "    Environment = \"production\"\n"
                        ],
                        [
                            60,
                            "  }\n"
                        ],
                        [
                            61,
                            "\n"
                        ],
                        [
                            62,
                            "  viewer_certificate {\n"
                        ],
                        [
                            63,
                            "    cloudfront_default_certificate = true\n"
                        ],
                        [
                            64,
                            "  }\n"
                        ],
                        [
                            65,
                            "\n"
                        ],
                        [
                            66,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                    "file_line_range": [
                        7,
                        66
                    ],
                    "resource": "aws_cloudfront_distribution.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Environment": "production"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_65"
                },
                {
                    "check_id": "CKV2_AWS_32",
                    "bc_check_id": "BC_AWS_NETWORKING_65",
                    "check_name": "Ensure CloudFront distribution has a strict security headers policy attached",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudfront_distribution": {
                                "positive2": {
                                    "comment": [
                                        "Some comment"
                                    ],
                                    "default_cache_behavior": [
                                        {
                                            "allowed_methods": [
                                                [
                                                    "DELETE",
                                                    "GET",
                                                    "HEAD",
                                                    "OPTIONS",
                                                    "PATCH",
                                                    "POST",
                                                    "PUT"
                                                ]
                                            ],
                                            "cached_methods": [
                                                [
                                                    "GET",
                                                    "HEAD"
                                                ]
                                            ],
                                            "default_ttl": [
                                                3600
                                            ],
                                            "forwarded_values": [
                                                {
                                                    "cookies": [
                                                        {
                                                            "forward": [
                                                                "none"
                                                            ]
                                                        }
                                                    ],
                                                    "query_string": [
                                                        false
                                                    ]
                                                }
                                            ],
                                            "max_ttl": [
                                                86400
                                            ],
                                            "min_ttl": [
                                                0
                                            ],
                                            "target_origin_id": [
                                                "jimbo"
                                            ],
                                            "viewer_protocol_policy": [
                                                "allow-all"
                                            ]
                                        }
                                    ],
                                    "default_root_object": [
                                        "index.html"
                                    ],
                                    "enabled": [
                                        true
                                    ],
                                    "is_ipv6_enabled": [
                                        true
                                    ],
                                    "origin": [
                                        {
                                            "domain_name": [
                                                "aws_s3_bucket.positive1.bucket_regional_domain_name"
                                            ],
                                            "origin_id": [
                                                "jimbo"
                                            ],
                                            "s3_origin_config": [
                                                {
                                                    "origin_access_identity": [
                                                        "origin-access-identity/cloudfront/ABCDEFG1234567"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "restrictions": [
                                        {
                                            "geo_restriction": [
                                                {
                                                    "locations": [
                                                        [
                                                            "CA",
                                                            "DE",
                                                            "GB",
                                                            "US"
                                                        ]
                                                    ],
                                                    "restriction_type": [
                                                        "whitelist"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "security_headers_config/strict_transport_security/access_control_max_age_sec",
                            "security_headers_config/frame_options/override",
                            "resource_type",
                            "security_headers_config/xss_protection/mode_block",
                            "security_headers_config/content_security_policy/override",
                            "security_headers_config/xss_protection/override",
                            "security_headers_config/referrer_policy/override",
                            "security_headers_config/xss_protection/protection",
                            "security_headers_config/content_type_options/override",
                            "security_headers_config/content_security_policy/content_security_policy",
                            "security_headers_config/frame_options/frame_option",
                            "security_headers_config/strict_transport_security/override",
                            "security_headers_config/strict_transport_security/preload",
                            "security_headers_config/referrer_policy/referrer_policy",
                            "security_headers_config/strict_transport_security/include_subdomains"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_cloudfront_distribution\" \"positive2\" {\n"
                        ],
                        [
                            12,
                            "  origin {\n"
                        ],
                        [
                            13,
                            "    domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name\n"
                        ],
                        [
                            14,
                            "    origin_id   = local.s3_origin_id\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "    s3_origin_config {\n"
                        ],
                        [
                            17,
                            "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                        ],
                        [
                            18,
                            "    }\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "\n"
                        ],
                        [
                            21,
                            "  enabled             = true\n"
                        ],
                        [
                            22,
                            "  is_ipv6_enabled     = true\n"
                        ],
                        [
                            23,
                            "  comment             = \"Some comment\"\n"
                        ],
                        [
                            24,
                            "  default_root_object = \"index.html\"\n"
                        ],
                        [
                            25,
                            "\n"
                        ],
                        [
                            26,
                            "  default_cache_behavior {\n"
                        ],
                        [
                            27,
                            "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                        ],
                        [
                            28,
                            "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                        ],
                        [
                            29,
                            "    target_origin_id = local.s3_origin_id\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "    forwarded_values {\n"
                        ],
                        [
                            32,
                            "      query_string = false\n"
                        ],
                        [
                            33,
                            "\n"
                        ],
                        [
                            34,
                            "      cookies {\n"
                        ],
                        [
                            35,
                            "        forward = \"none\"\n"
                        ],
                        [
                            36,
                            "      }\n"
                        ],
                        [
                            37,
                            "    }\n"
                        ],
                        [
                            38,
                            "\n"
                        ],
                        [
                            39,
                            "    viewer_protocol_policy = \"allow-all\"\n"
                        ],
                        [
                            40,
                            "    min_ttl                = 0\n"
                        ],
                        [
                            41,
                            "    default_ttl            = 3600\n"
                        ],
                        [
                            42,
                            "    max_ttl                = 86400\n"
                        ],
                        [
                            43,
                            "  }\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  restrictions {\n"
                        ],
                        [
                            46,
                            "    geo_restriction {\n"
                        ],
                        [
                            47,
                            "      restriction_type = \"whitelist\"\n"
                        ],
                        [
                            48,
                            "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                        ],
                        [
                            49,
                            "    }\n"
                        ],
                        [
                            50,
                            "  }\n"
                        ],
                        [
                            51,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            52,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "repo_file_path": "/terraform/aws/cloudfront/cloudfront_vulnerable_default_ssl_certificate.tf",
                    "file_line_range": [
                        11,
                        52
                    ],
                    "resource": "aws_cloudfront_distribution.positive2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "default_cache_behavior.target_origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ],
                        "origin.origin_id": [
                            {
                                "type": "locals",
                                "name": "s3_origin_id",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudfront/cloudfront_configuration_is_missing.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_65"
                },
                {
                    "check_id": "CKV2_AWS_2",
                    "bc_check_id": "BC_AWS_GENERAL_60",
                    "check_name": "Ensure that only encrypted EBS volumes are attached to EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_ebs_volume": {
                                "fail": {
                                    "availability_zone": [
                                        "eu-west-1a"
                                    ],
                                    "size": [
                                        1
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "encrypted"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_ebs_volume\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  availability_zone = \"eu-west-1a\"\n"
                        ],
                        [
                            14,
                            "  size              = 1\n"
                        ],
                        [
                            15,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_volume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_volume.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_volume.tf",
                    "file_line_range": [
                        12,
                        16
                    ],
                    "resource": "aws_ebs_volume.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-only-encrypted-ebs-volumes-are-attached-to-ec2-instances"
                },
                {
                    "check_id": "CKV2_AWS_10",
                    "bc_check_id": "BC_AWS_LOGGING_27",
                    "check_name": "Ensure CloudTrail trails are integrated with CloudWatch Logs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_cloudtrail": {
                                "fail": {
                                    "enable_logging": [
                                        false
                                    ],
                                    "include_global_service_events": [
                                        true
                                    ],
                                    "is_multi_region_trail": [
                                        false
                                    ],
                                    "name": [
                                        "TRAIL"
                                    ],
                                    "s3_bucket_name": [
                                        "aws_s3_bucket.test.id"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "cloud_watch_logs_group_arn"
                        ]
                    },
                    "code_block": [
                        [
                            18,
                            "resource \"aws_cloudtrail\" \"fail\" {\n"
                        ],
                        [
                            19,
                            "  name                          = \"TRAIL\"\n"
                        ],
                        [
                            20,
                            "  s3_bucket_name                = aws_s3_bucket.test.id\n"
                        ],
                        [
                            21,
                            "  include_global_service_events = true\n"
                        ],
                        [
                            22,
                            "  enable_logging                = false\n"
                        ],
                        [
                            23,
                            "  is_multi_region_trail         = false\n"
                        ],
                        [
                            24,
                            "  tags                          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/cloudtrail/cloudtrail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/cloudtrail/cloudtrail.tf",
                    "repo_file_path": "/terraform/aws/cloudtrail/cloudtrail.tf",
                    "file_line_range": [
                        18,
                        25
                    ],
                    "resource": "aws_cloudtrail.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-cloudtrail-trails-are-integrated-with-cloudwatch-logs"
                },
                {
                    "check_id": "CKV2_AWS_20",
                    "bc_check_id": "BC_AWS_NETWORKING_49",
                    "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_lb": {
                                "lb_bad_1": {
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "default_action/redirect/*/protocol",
                            "port",
                            "default_action/type",
                            "protocol",
                            "default_action/redirect/*/port"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_lb\" \"lb_bad_1\" {\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        9,
                        11
                    ],
                    "resource": "aws_lb.lb_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "positive": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_vpc\" \"positive\" {\n"
                        ],
                        [
                            5,
                            "  cidr_block = \"10.0.0.0/16\"\n"
                        ],
                        [
                            6,
                            "  tags = {\n"
                        ],
                        [
                            7,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_without_network_firewall.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_without_network_firewall.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_without_network_firewall.tf",
                    "file_line_range": [
                        4,
                        9
                    ],
                    "resource": "aws_vpc.positive",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "main": {
                                    "cidr_block": [
                                        "192.168.100.0/24"
                                    ],
                                    "enable_dns_support": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_vpc\" \"main\" {\n"
                        ],
                        [
                            12,
                            "  cidr_block         = \"192.168.100.0/24\"\n"
                        ],
                        [
                            13,
                            "  enable_dns_support = true\n"
                        ],
                        [
                            14,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        11,
                        15
                    ],
                    "resource": "aws_vpc.main",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "bad_vpc": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_vpc\" \"bad_vpc\" {\n"
                        ],
                        [
                            6,
                            "  cidr_block = \"10.0.0.0/16\"\n"
                        ],
                        [
                            7,
                            "  tags       = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/nacl.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/nacl.tf",
                    "repo_file_path": "/terraform/aws/vpc/nacl.tf",
                    "file_line_range": [
                        5,
                        8
                    ],
                    "resource": "aws_vpc.bad_vpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "vpc2": {
                                    "cidr_block": [
                                        "10.2.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "tf-test-vpc-2",
                                            "Project": "CIS Certification"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            72,
                            "resource \"aws_vpc\" \"vpc2\" {\n"
                        ],
                        [
                            73,
                            "  cidr_block = var.vpc_2_cidr_block\n"
                        ],
                        [
                            74,
                            "\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    Name    = \"tf-test-vpc-2\"\n"
                        ],
                        [
                            77,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        72,
                        79
                    ],
                    "resource": "aws_vpc.vpc2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "tf-test-vpc-2",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_2_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_vpc.vpc2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "eks_vpc": {
                                    "cidr_block": [
                                        "10.10.0.0/16"
                                    ],
                                    "enable_dns_hostnames": [
                                        true
                                    ],
                                    "enable_dns_support": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_vpc\" \"eks_vpc\" {\n"
                        ],
                        [
                            6,
                            "  cidr_block           = \"10.10.0.0/16\"\n"
                        ],
                        [
                            7,
                            "  enable_dns_hostnames = true\n"
                        ],
                        [
                            8,
                            "  enable_dns_support   = true\n"
                        ],
                        [
                            9,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc.tf",
                    "file_line_range": [
                        5,
                        10
                    ],
                    "resource": "aws_vpc.eks_vpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "vpc1": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "tf-test-vpc-1",
                                            "Project": "CIS Certification"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_vpc\" \"vpc1\" {\n"
                        ],
                        [
                            42,
                            "  cidr_block = var.vpc_1_cidr_block\n"
                        ],
                        [
                            43,
                            "\n"
                        ],
                        [
                            44,
                            "  tags = {\n"
                        ],
                        [
                            45,
                            "    Name    = \"tf-test-vpc-1\"\n"
                        ],
                        [
                            46,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        41,
                        48
                    ],
                    "resource": "aws_vpc.vpc1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "tf-test-vpc-1",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_1_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_11",
                    "bc_check_id": "BC_AWS_LOGGING_9",
                    "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "mainvpc": {
                                    "cidr_block": [
                                        "10.1.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "networking",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_vpc\" \"mainvpc\" {\n"
                        ],
                        [
                            2,
                            "  cidr_block = \"10.1.0.0/16\"\n"
                        ],
                        [
                            3,
                            "  tags       = { test = \"fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "repo_file_path": "/terraform/aws/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_vpc.mainvpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
                },
                {
                    "check_id": "CKV2_AWS_30",
                    "bc_check_id": "BC_AWS_LOGGING_32",
                    "check_name": "Ensure Postgres RDS as aws_db_instance has Query Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_db_instance": {
                                "fail": {
                                    "backup_retention_period": [
                                        0
                                    ],
                                    "engine": [
                                        "postgres"
                                    ],
                                    "publicly_accessible": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "engine",
                            "parameter/*/name"
                        ]
                    },
                    "code_block": [
                        [
                            15,
                            "resource \"aws_db_instance\" \"fail\" {\n"
                        ],
                        [
                            16,
                            "  //storage_encrypted  = true\n"
                        ],
                        [
                            17,
                            "  publicly_accessible     = true\n"
                        ],
                        [
                            18,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            19,
                            "  engine                  = \"postgres\"\n"
                        ],
                        [
                            20,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/db_instance.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/db_instance.tf",
                    "repo_file_path": "/terraform/aws/rds/db_instance.tf",
                    "file_line_range": [
                        15,
                        21
                    ],
                    "resource": "aws_db_instance.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_32"
                },
                {
                    "check_id": "CKV2_AWS_3",
                    "bc_check_id": "BC_AWS_GENERAL_66",
                    "check_name": "Ensure GuardDuty is enabled to specific org/region",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_guardduty_detector": {
                                "positive1": {
                                    "enable": [
                                        false
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "auto_enable",
                            "enable"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_guardduty_detector\" \"positive1\" {\n"
                        ],
                        [
                            4,
                            "  enable = false\n"
                        ],
                        [
                            5,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/guardduty/guarddutydetectordisabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/guardduty/guarddutydetectordisabled.tf",
                    "repo_file_path": "/terraform/aws/guardduty/guarddutydetectordisabled.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_guardduty_detector.positive1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-guardduty-is-enabled-to-specific-orgregion"
                },
                {
                    "check_id": "CKV2_AWS_3",
                    "bc_check_id": "BC_AWS_GENERAL_66",
                    "check_name": "Ensure GuardDuty is enabled to specific org/region",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_guardduty_detector": {
                                "not_ok_false": {
                                    "enable": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "auto_enable",
                            "enable"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_guardduty_detector\" \"not_ok_false\" {\n"
                        ],
                        [
                            4,
                            "  enable = true\n"
                        ],
                        [
                            5,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/guardduty/guardduty.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/guardduty/guardduty.tf",
                    "repo_file_path": "/terraform/aws/guardduty/guardduty.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_guardduty_detector.not_ok_false",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-guardduty-is-enabled-to-specific-orgregion"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_user": {
                                "example": {
                                    "force_destroy": [
                                        true
                                    ],
                                    "name": [
                                        "example"
                                    ],
                                    "path": [
                                        "/"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_user\" \"example\" {\n"
                        ],
                        [
                            2,
                            "  name          = \"example\"\n"
                        ],
                        [
                            3,
                            "  path          = \"/\"\n"
                        ],
                        [
                            4,
                            "  force_destroy = true\n"
                        ],
                        [
                            5,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_user_with_access_to_console.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_user_with_access_to_console.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_user_with_access_to_console.tf",
                    "file_line_range": [
                        1,
                        6
                    ],
                    "resource": "aws_iam_user.example",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_user": {
                                "fail_console": {
                                    "name": [
                                        "human-user"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_iam_user\" \"fail_console\" {\n"
                        ],
                        [
                            4,
                            "  name = \"human-user\"\n"
                        ],
                        [
                            5,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            6,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/userconsole.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/userconsole.tf",
                    "repo_file_path": "/terraform/aws/iam/userconsole.tf",
                    "file_line_range": [
                        3,
                        6
                    ],
                    "resource": "aws_iam_user.fail_console",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_22",
                    "bc_check_id": "BC_AWS_IAM_67",
                    "check_name": "Ensure an IAM User does not have access to the console",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_user": {
                                "mfa": {
                                    "name": [
                                        "aws-foundations-benchmark-1-4-0-terraform-user"
                                    ],
                                    "path": [
                                        "/"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_iam_user\" \"mfa\" {\n"
                        ],
                        [
                            6,
                            "  name = \"aws-foundations-benchmark-1-4-0-terraform-user\"\n"
                        ],
                        [
                            7,
                            "  path = \"/\"\n"
                        ],
                        [
                            8,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/iam_authentication_without_mfa.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "repo_file_path": "/terraform/aws/iam/iam_authentication_without_mfa.tf",
                    "file_line_range": [
                        5,
                        9
                    ],
                    "resource": "aws_iam_user.mfa",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group"
                },
                {
                    "check_id": "CKV2_AWS_21",
                    "bc_check_id": "BC_AWS_IAM_62",
                    "check_name": "Ensure that all IAM users are members of at least one IAM group.",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "bad_group": {
                                    "group": [
                                        "test-group"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_group_membership\" \"bad_group\" {\n"
                        ],
                        [
                            5,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  group = aws_iam_group.bad_group.name\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group.tf",
                    "file_line_range": [
                        4,
                        9
                    ],
                    "resource": "aws_iam_group_membership.bad_group",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "group": [
                            {
                                "type": "resource",
                                "name": "aws_iam_group.bad_group",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group"
                },
                {
                    "check_id": "CKV2_AWS_21",
                    "bc_check_id": "BC_AWS_IAM_62",
                    "check_name": "Ensure that all IAM users are members of at least one IAM group.",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "team3": {
                                    "group": [
                                        "test-group"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ],
                                    "users": [
                                        []
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            27,
                            "resource \"aws_iam_group_membership\" \"team3\" {\n"
                        ],
                        [
                            28,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  users = [\n"
                        ],
                        [
                            31,
                            "  ]\n"
                        ],
                        [
                            32,
                            "\n"
                        ],
                        [
                            33,
                            "  group = aws_iam_group.group3.name\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        27,
                        34
                    ],
                    "resource": "aws_iam_group_membership.team3",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "group": [
                            {
                                "type": "resource",
                                "name": "aws_iam_group.group3",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group"
                },
                {
                    "check_id": "CKV2_AWS_21",
                    "bc_check_id": "BC_AWS_IAM_62",
                    "check_name": "Ensure that all IAM users are members of at least one IAM group.",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "team2": {
                                    "group": [
                                        "aws_iam_group.group222.name"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ],
                                    "users": [
                                        [
                                            "test-user",
                                            "aws_iam_user.user_two2.name"
                                        ]
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_group_membership\" \"team2\" {\n"
                        ],
                        [
                            2,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  users = [\n"
                        ],
                        [
                            5,
                            "    aws_iam_user.user_one2.name,\n"
                        ],
                        [
                            6,
                            "    aws_iam_user.user_two2.name,\n"
                        ],
                        [
                            7,
                            "  ]\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  group = aws_iam_group.group222.name\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_group_membership.team2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "users": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.user_two2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group"
                },
                {
                    "check_id": "CKV2_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_96",
                    "check_name": "Ensure Postgres RDS as aws_rds_cluster has Query Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_rds_cluster": {
                                "fail": {
                                    "availability_zones": [
                                        [
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c"
                                        ]
                                    ],
                                    "backup_retention_period": [
                                        0
                                    ],
                                    "cluster_identifier": [
                                        "aurora-cluster-demo"
                                    ],
                                    "database_name": [
                                        "mydb"
                                    ],
                                    "db_cluster_parameter_group_name": [
                                        "mysql-cluster-fail"
                                    ],
                                    "engine": [
                                        "aurora-postgresql"
                                    ],
                                    "master_password": [
                                        "bar"
                                    ],
                                    "master_username": [
                                        "foo"
                                    ],
                                    "preferred_backup_window": [
                                        "07:00-09:00"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "engine",
                            "parameter/*/name"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-postgres-rds-has-query-logging-enabled"
                },
                {
                    "check_id": "CKV2_AWS_27",
                    "bc_check_id": "BC_AWS_GENERAL_96",
                    "check_name": "Ensure Postgres RDS as aws_rds_cluster has Query Logging enabled",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_rds_cluster": {
                                "fail2": {
                                    "backup_retention_period": [
                                        0
                                    ],
                                    "db_subnet_group_name": [
                                        "main"
                                    ],
                                    "engine": [
                                        "aurora-postgresql"
                                    ],
                                    "master_password": [
                                        "password12345"
                                    ],
                                    "master_username": [
                                        "james"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "engine",
                            "parameter/*/name"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-postgres-rds-has-query-logging-enabled"
                },
                {
                    "check_id": "CKV2_AWS_1",
                    "bc_check_id": "BC_AWS_NETWORKING_50",
                    "check_name": "Ensure that all NACL are attached to subnets",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_network_acl": {
                                "acl_bad_a": {
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.bad_vpc.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking",
                            "subnet_ids"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_network_acl\" \"acl_bad_a\" {\n"
                        ],
                        [
                            12,
                            "  vpc_id = aws_vpc.bad_vpc.id\n"
                        ],
                        [
                            13,
                            "  tags = {\n"
                        ],
                        [
                            14,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            15,
                            "  }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/nacl.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/nacl.tf",
                    "repo_file_path": "/terraform/aws/vpc/nacl.tf",
                    "file_line_range": [
                        11,
                        16
                    ],
                    "resource": "aws_network_acl.acl_bad_a",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets"
                },
                {
                    "check_id": "CKV2_AWS_1",
                    "bc_check_id": "BC_AWS_NETWORKING_50",
                    "check_name": "Ensure that all NACL are attached to subnets",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_network_acl": {
                                "fail_ssh": {
                                    "egress": [
                                        [
                                            {
                                                "action": "allow",
                                                "cidr_block": "10.3.0.0/18",
                                                "from_port": 443,
                                                "protocol": "tcp",
                                                "rule_no": 200,
                                                "to_port": 443
                                            }
                                        ]
                                    ],
                                    "ingress": [
                                        [
                                            {
                                                "action": "allow",
                                                "cidr_block": "0.0.0.0/0",
                                                "from_port": 22,
                                                "protocol": "tcp",
                                                "rule_no": 100,
                                                "to_port": 22
                                            }
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "Name": "main",
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking",
                            "subnet_ids"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_network_acl\" \"fail_ssh\" {\n"
                        ],
                        [
                            5,
                            "  vpc_id = aws_vpc.main.id\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "  egress = [\n"
                        ],
                        [
                            8,
                            "    {\n"
                        ],
                        [
                            9,
                            "      protocol   = \"tcp\"\n"
                        ],
                        [
                            10,
                            "      rule_no    = 200\n"
                        ],
                        [
                            11,
                            "      action     = \"allow\"\n"
                        ],
                        [
                            12,
                            "      cidr_block = \"10.3.0.0/18\"\n"
                        ],
                        [
                            13,
                            "      from_port  = 443\n"
                        ],
                        [
                            14,
                            "      to_port    = 443\n"
                        ],
                        [
                            15,
                            "    }\n"
                        ],
                        [
                            16,
                            "  ]\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  ingress = [\n"
                        ],
                        [
                            19,
                            "    {\n"
                        ],
                        [
                            20,
                            "      protocol   = \"tcp\"\n"
                        ],
                        [
                            21,
                            "      rule_no    = 100\n"
                        ],
                        [
                            22,
                            "      action     = \"allow\"\n"
                        ],
                        [
                            23,
                            "      cidr_block = \"0.0.0.0/0\"\n"
                        ],
                        [
                            24,
                            "      from_port  = 22\n"
                        ],
                        [
                            25,
                            "      to_port    = 22\n"
                        ],
                        [
                            26,
                            "    }\n"
                        ],
                        [
                            27,
                            "  ]\n"
                        ],
                        [
                            28,
                            "\n"
                        ],
                        [
                            29,
                            "  tags = {\n"
                        ],
                        [
                            30,
                            "    Name = \"main\"\n"
                        ],
                        [
                            31,
                            "    test = \"fail\"\n"
                        ],
                        [
                            32,
                            "  }\n"
                        ],
                        [
                            33,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/network_acl_with_unrestricted_access_to_ssh.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/network_acl_with_unrestricted_access_to_ssh.tf",
                    "repo_file_path": "/terraform/aws/vpc/network_acl_with_unrestricted_access_to_ssh.tf",
                    "file_line_range": [
                        4,
                        33
                    ],
                    "resource": "aws_network_acl.fail_ssh",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "main",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets"
                },
                {
                    "check_id": "CKV2_AWS_1",
                    "bc_check_id": "BC_AWS_NETWORKING_50",
                    "check_name": "Ensure that all NACL are attached to subnets",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_network_acl": {
                                "fail_rdp": {
                                    "egress": [
                                        [
                                            {
                                                "action": "allow",
                                                "cidr_block": "10.3.0.0/18",
                                                "from_port": 443,
                                                "protocol": "tcp",
                                                "rule_no": 200,
                                                "to_port": 443
                                            }
                                        ]
                                    ],
                                    "ingress": [
                                        [
                                            {
                                                "action": "allow",
                                                "cidr_block": "0.0.0.0/0",
                                                "from_port": 3389,
                                                "protocol": "tcp",
                                                "rule_no": 100,
                                                "to_port": 3389
                                            }
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "Name": "main",
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc_id": [
                                        "aws_vpc.main.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "networking",
                            "subnet_ids"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_network_acl\" \"fail_rdp\" {\n"
                        ],
                        [
                            6,
                            "  vpc_id = aws_vpc.main.id\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  egress = [\n"
                        ],
                        [
                            9,
                            "    {\n"
                        ],
                        [
                            10,
                            "      protocol   = \"tcp\"\n"
                        ],
                        [
                            11,
                            "      rule_no    = 200\n"
                        ],
                        [
                            12,
                            "      action     = \"allow\"\n"
                        ],
                        [
                            13,
                            "      cidr_block = \"10.3.0.0/18\"\n"
                        ],
                        [
                            14,
                            "      from_port  = 443\n"
                        ],
                        [
                            15,
                            "      to_port    = 443\n"
                        ],
                        [
                            16,
                            "    }\n"
                        ],
                        [
                            17,
                            "  ]\n"
                        ],
                        [
                            18,
                            "\n"
                        ],
                        [
                            19,
                            "  ingress = [\n"
                        ],
                        [
                            20,
                            "    {\n"
                        ],
                        [
                            21,
                            "      protocol   = \"tcp\"\n"
                        ],
                        [
                            22,
                            "      rule_no    = 100\n"
                        ],
                        [
                            23,
                            "      action     = \"allow\"\n"
                        ],
                        [
                            24,
                            "      cidr_block = \"0.0.0.0/0\"\n"
                        ],
                        [
                            25,
                            "      from_port  = 3389\n"
                        ],
                        [
                            26,
                            "      to_port    = 3389\n"
                        ],
                        [
                            27,
                            "    }\n"
                        ],
                        [
                            28,
                            "  ]\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  tags = {\n"
                        ],
                        [
                            31,
                            "    Name = \"main\"\n"
                        ],
                        [
                            32,
                            "    test = \"fail\"\n"
                        ],
                        [
                            33,
                            "  }\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/network_acl_with_unrestricted_access_to_rdp.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/network_acl_with_unrestricted_access_to_rdp.tf",
                    "repo_file_path": "/terraform/aws/vpc/network_acl_with_unrestricted_access_to_rdp.tf",
                    "file_line_range": [
                        5,
                        34
                    ],
                    "resource": "aws_network_acl.fail_rdp",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "main",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets"
                },
                {
                    "check_id": "CKV2_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_49",
                    "check_name": "Ensure that RDS clusters has backup plan of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_rds_cluster": {
                                "fail2": {
                                    "backup_retention_period": [
                                        0
                                    ],
                                    "db_subnet_group_name": [
                                        "main"
                                    ],
                                    "engine": [
                                        "aurora-postgresql"
                                    ],
                                    "master_password": [
                                        "password12345"
                                    ],
                                    "master_username": [
                                        "james"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            17,
                            "resource \"aws_rds_cluster\" \"fail2\" {\n"
                        ],
                        [
                            18,
                            "  engine                  = \"aurora-postgresql\"\n"
                        ],
                        [
                            19,
                            "  backup_retention_period = 0\n"
                        ],
                        [
                            20,
                            "  db_subnet_group_name    = aws_db_subnet_group.default.name\n"
                        ],
                        [
                            21,
                            "  master_username         = \"james\"\n"
                        ],
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ],
                        [
                            23,
                            "  tags                    = { test = \"Fail\" }\n"
                        ],
                        [
                            24,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        17,
                        24
                    ],
                    "resource": "aws_rds_cluster.fail2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_subnet_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_db_subnet_group.default",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-has-backup-plan-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_8",
                    "bc_check_id": "BC_AWS_GENERAL_49",
                    "check_name": "Ensure that RDS clusters has backup plan of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_rds_cluster": {
                                "fail": {
                                    "availability_zones": [
                                        [
                                            "us-west-2a",
                                            "us-west-2b",
                                            "us-west-2c"
                                        ]
                                    ],
                                    "backup_retention_period": [
                                        0
                                    ],
                                    "cluster_identifier": [
                                        "aurora-cluster-demo"
                                    ],
                                    "database_name": [
                                        "mydb"
                                    ],
                                    "db_cluster_parameter_group_name": [
                                        "mysql-cluster-fail"
                                    ],
                                    "engine": [
                                        "aurora-postgresql"
                                    ],
                                    "master_password": [
                                        "bar"
                                    ],
                                    "master_username": [
                                        "foo"
                                    ],
                                    "preferred_backup_window": [
                                        "07:00-09:00"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_rds_cluster\" \"fail\" {\n"
                        ],
                        [
                            10,
                            "  cluster_identifier              = \"aurora-cluster-demo\"\n"
                        ],
                        [
                            11,
                            "  engine                          = \"aurora-postgresql\"\n"
                        ],
                        [
                            12,
                            "  availability_zones              = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                        ],
                        [
                            13,
                            "  database_name                   = \"mydb\"\n"
                        ],
                        [
                            14,
                            "  master_username                 = \"foo\"\n"
                        ],
                        [
                            15,
                            "  master_password                 = \"bar\"\n"
                        ],
                        [
                            16,
                            "  backup_retention_period         = 0\n"
                        ],
                        [
                            17,
                            "  preferred_backup_window         = \"07:00-09:00\"\n"
                        ],
                        [
                            18,
                            "  db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name\n"
                        ],
                        [
                            19,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            20,
                            "}\n"
                        ]
                    ],
                    "file_path": "/rds/querylogging.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                    "repo_file_path": "/terraform/aws/rds/querylogging.tf",
                    "file_line_range": [
                        9,
                        20
                    ],
                    "resource": "aws_rds_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "db_cluster_parameter_group_name": [
                            {
                                "type": "resource",
                                "name": "aws_rds_cluster_parameter_group.fail",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/querylogging.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-has-backup-plan-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_18",
                    "bc_check_id": "BC_AWS_GENERAL_48",
                    "check_name": "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_efs_file_system": {
                                "not_secure": {
                                    "creation_token": [
                                        "efs-not-secure"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "NotSecure",
                                            "test": "fails"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"not_secure\" {\n"
                        ],
                        [
                            9,
                            "  creation_token = \"efs-not-secure\"\n"
                        ],
                        [
                            10,
                            "\n"
                        ],
                        [
                            11,
                            "  tags = {\n"
                        ],
                        [
                            12,
                            "    Name = \"NotSecure\"\n"
                        ],
                        [
                            13,
                            "    test = \"fails\"\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/efs/efs_with_vulnerable_policy.tf",
                    "file_line_range": [
                        8,
                        15
                    ],
                    "resource": "aws_efs_file_system.not_secure",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "NotSecure",
                        "test": "fails"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_18",
                    "bc_check_id": "BC_AWS_GENERAL_48",
                    "check_name": "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_efs_file_system": {
                                "sharedstore": {
                                    "creation_token": [
                                        "var.efs[\"creation_token\"]"
                                    ],
                                    "encrypted": [
                                        false
                                    ],
                                    "kms_key_id": [
                                        ""
                                    ],
                                    "lifecycle_policy": [
                                        {
                                            "transition_to_ia": [
                                                "var.efs[\"transition_to_ia\"]"
                                            ]
                                        }
                                    ],
                                    "performance_mode": [
                                        "var.efs[\"performance_mode\"]"
                                    ],
                                    "provisioned_throughput_in_mibps": [
                                        "var.efs[\"provisioned_throughput_in_mibps\"]"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "throughput_mode": [
                                        "var.efs[\"throughput_mode\"]"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            8,
                            "resource \"aws_efs_file_system\" \"sharedstore\" {\n"
                        ],
                        [
                            9,
                            "\n"
                        ],
                        [
                            10,
                            "  creation_token = var.efs[\"creation_token\"]\n"
                        ],
                        [
                            11,
                            "\n"
                        ],
                        [
                            12,
                            "  lifecycle_policy {\n"
                        ],
                        [
                            13,
                            "    transition_to_ia = var.efs[\"transition_to_ia\"]\n"
                        ],
                        [
                            14,
                            "  }\n"
                        ],
                        [
                            15,
                            "\n"
                        ],
                        [
                            16,
                            "  kms_key_id                      = \"\"\n"
                        ],
                        [
                            17,
                            "  encrypted                       = false\n"
                        ],
                        [
                            18,
                            "  performance_mode                = var.efs[\"performance_mode\"]\n"
                        ],
                        [
                            19,
                            "  provisioned_throughput_in_mibps = var.efs[\"provisioned_throughput_in_mibps\"]\n"
                        ],
                        [
                            20,
                            "  throughput_mode                 = var.efs[\"throughput_mode\"]\n"
                        ],
                        [
                            21,
                            "  tags                            = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/efs/efs.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/efs/efs.tf",
                    "repo_file_path": "/terraform/aws/efs/efs.tf",
                    "file_line_range": [
                        8,
                        22
                    ],
                    "resource": "aws_efs_file_system.sharedstore",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_18",
                    "bc_check_id": "BC_AWS_GENERAL_48",
                    "check_name": "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_efs_file_system": {
                                "not_ok_efs": {
                                    "creation_token": [
                                        "my-product"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "MyProduct",
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            51,
                            "resource \"aws_efs_file_system\" \"not_ok_efs\" {\n"
                        ],
                        [
                            52,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            53,
                            "\n"
                        ],
                        [
                            54,
                            "  tags = {\n"
                        ],
                        [
                            55,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            56,
                            "    test = \"fail\"\n"
                        ],
                        [
                            57,
                            "  }\n"
                        ],
                        [
                            58,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        51,
                        58
                    ],
                    "resource": "aws_efs_file_system.not_ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_18",
                    "bc_check_id": "BC_AWS_GENERAL_48",
                    "check_name": "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_efs_file_system": {
                                "ok_efs": {
                                    "creation_token": [
                                        "my-product"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "MyProduct",
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            42,
                            "resource \"aws_efs_file_system\" \"ok_efs\" {\n"
                        ],
                        [
                            43,
                            "  creation_token = \"my-product\"\n"
                        ],
                        [
                            44,
                            "\n"
                        ],
                        [
                            45,
                            "  tags = {\n"
                        ],
                        [
                            46,
                            "    Name = \"MyProduct\"\n"
                        ],
                        [
                            47,
                            "    test = \"fail\"\n"
                        ],
                        [
                            48,
                            "  }\n"
                        ],
                        [
                            49,
                            "}\n"
                        ]
                    ],
                    "file_path": "/backup_vault/backup_selection.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/backup_vault/backup_selection.tf",
                    "repo_file_path": "/terraform/aws/backup_vault/backup_selection.tf",
                    "file_line_range": [
                        42,
                        49
                    ],
                    "resource": "aws_efs_file_system.ok_efs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "MyProduct",
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_18",
                    "bc_check_id": "BC_AWS_GENERAL_48",
                    "check_name": "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_efs_file_system": {
                                "fs": {
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            39,
                            "resource \"aws_efs_file_system\" \"fs\" {\n"
                        ],
                        [
                            40,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            41,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ecs/ecs_task_definition.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ecs/ecs_task_definition.tf",
                    "repo_file_path": "/terraform/aws/ecs/ecs_task_definition.tf",
                    "file_line_range": [
                        39,
                        41
                    ],
                    "resource": "aws_efs_file_system.fs",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_4",
                    "bc_check_id": "BC_AWS_LOGGING_29",
                    "check_name": "Ensure API Gateway stage have logging level defined as appropriate",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "api_gw_stage": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.api_gw_deploy.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.api_gw.id"
                                    ],
                                    "stage_name": [
                                        "prod"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "settings/metrics_enabled",
                            "settings/logging_level",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            77,
                            "resource \"aws_api_gateway_stage\" \"api_gw_stage\" {\n"
                        ],
                        [
                            78,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            79,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            80,
                            "  deployment_id = aws_api_gateway_deployment.api_gw_deploy.id\n"
                        ],
                        [
                            81,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            82,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        77,
                        82
                    ],
                    "resource": "aws_api_gateway_stage.api_gw_stage",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate"
                },
                {
                    "check_id": "CKV2_AWS_4",
                    "bc_check_id": "BC_AWS_LOGGING_29",
                    "check_name": "Ensure API Gateway stage have logging level defined as appropriate",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "no_assoc": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.no_assoc.id"
                                    ],
                                    "stage_name": [
                                        "example"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "settings/metrics_enabled",
                            "settings/logging_level",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_stage\" \"no_assoc\" {\n"
                        ],
                        [
                            21,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            22,
                            "  rest_api_id   = aws_api_gateway_rest_api.no_assoc.id\n"
                        ],
                        [
                            23,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            24,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_line_range": [
                        20,
                        25
                    ],
                    "resource": "aws_api_gateway_stage.no_assoc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate"
                },
                {
                    "check_id": "CKV2_AWS_4",
                    "bc_check_id": "BC_AWS_LOGGING_29",
                    "check_name": "Ensure API Gateway stage have logging level defined as appropriate",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "fail": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.fail.id"
                                    ],
                                    "stage_name": [
                                        "example"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "xray_tracing_enabled": [
                                        false
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "settings/metrics_enabled",
                            "settings/logging_level",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            13,
                            "resource \"aws_api_gateway_stage\" \"fail\" {\n"
                        ],
                        [
                            14,
                            "  deployment_id        = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            15,
                            "  rest_api_id          = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            16,
                            "  stage_name           = \"example\"\n"
                        ],
                        [
                            17,
                            "  xray_tracing_enabled = false\n"
                        ],
                        [
                            18,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            19,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-stage/api_gateway_stage.fail.tf",
                    "file_line_range": [
                        13,
                        19
                    ],
                    "resource": "aws_api_gateway_stage.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate"
                },
                {
                    "check_id": "CKV2_AWS_4",
                    "bc_check_id": "BC_AWS_LOGGING_29",
                    "check_name": "Ensure API Gateway stage have logging level defined as appropriate",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "fail_waf": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.fail.id"
                                    ],
                                    "stage_name": [
                                        "fail-waf"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "settings/metrics_enabled",
                            "settings/logging_level",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_api_gateway_stage\" \"fail_waf\" {\n"
                        ],
                        [
                            10,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            11,
                            "  stage_name    = \"fail-waf\"\n"
                        ],
                        [
                            12,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            13,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        9,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail_waf",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate"
                },
                {
                    "check_id": "CKV2_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_44",
                    "check_name": "Ensure that Auto Scaling is enabled on your DynamoDB tables",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_dynamodb_table": {
                                "basic_dynamodb_table": {
                                    "attribute": [
                                        {
                                            "name": [
                                                "UserId"
                                            ],
                                            "type": [
                                                "S"
                                            ]
                                        },
                                        {
                                            "name": [
                                                "GameTitle"
                                            ],
                                            "type": [
                                                "S"
                                            ]
                                        }
                                    ],
                                    "billing_mode": [
                                        "PROVISIONED"
                                    ],
                                    "hash_key": [
                                        "UserId"
                                    ],
                                    "name": [
                                        "GameScores"
                                    ],
                                    "range_key": [
                                        "GameTitle"
                                    ],
                                    "read_capacity": [
                                        5
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "write_capacity": [
                                        5
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "billing_mode",
                            "service_namespace"
                        ]
                    },
                    "code_block": [
                        [
                            99,
                            "resource \"aws_dynamodb_table\" \"basic_dynamodb_table\" {\n"
                        ],
                        [
                            100,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            101,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            102,
                            "  read_capacity  = 5\n"
                        ],
                        [
                            103,
                            "  write_capacity = 5\n"
                        ],
                        [
                            104,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            105,
                            "  range_key      = \"GameTitle\"\n"
                        ],
                        [
                            106,
                            "\n"
                        ],
                        [
                            107,
                            "  attribute {\n"
                        ],
                        [
                            108,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            109,
                            "    type = \"S\"\n"
                        ],
                        [
                            110,
                            "  }\n"
                        ],
                        [
                            111,
                            "\n"
                        ],
                        [
                            112,
                            "  attribute {\n"
                        ],
                        [
                            113,
                            "    name = \"GameTitle\"\n"
                        ],
                        [
                            114,
                            "    type = \"S\"\n"
                        ],
                        [
                            115,
                            "  }\n"
                        ],
                        [
                            116,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            117,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        99,
                        117
                    ],
                    "resource": "aws_dynamodb_table.basic_dynamodb_table",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-is-enabled-on-your-dynamodb-tables"
                },
                {
                    "check_id": "CKV2_AWS_16",
                    "bc_check_id": "BC_AWS_GENERAL_44",
                    "check_name": "Ensure that Auto Scaling is enabled on your DynamoDB tables",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_dynamodb_table": {
                                "default": {
                                    "attribute": [
                                        {
                                            "name": [
                                                "UserId"
                                            ],
                                            "type": [
                                                "S"
                                            ]
                                        }
                                    ],
                                    "billing_mode": [
                                        "PROVISIONED"
                                    ],
                                    "hash_key": [
                                        "UserId"
                                    ],
                                    "name": [
                                        "GameScores"
                                    ],
                                    "range_key": [
                                        "UserId"
                                    ],
                                    "read_capacity": [
                                        20
                                    ],
                                    "replica": [
                                        {
                                            "region_name": [
                                                "us-east-2"
                                            ]
                                        },
                                        {
                                            "region_name": [
                                                "us-west-2"
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "write_capacity": [
                                        20
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "billing_mode",
                            "service_namespace"
                        ]
                    },
                    "code_block": [
                        [
                            10,
                            "resource \"aws_dynamodb_table\" \"default\" {\n"
                        ],
                        [
                            11,
                            "  name           = \"GameScores\"\n"
                        ],
                        [
                            12,
                            "  billing_mode   = \"PROVISIONED\"\n"
                        ],
                        [
                            13,
                            "  read_capacity  = 20\n"
                        ],
                        [
                            14,
                            "  write_capacity = 20\n"
                        ],
                        [
                            15,
                            "  hash_key       = \"UserId\"\n"
                        ],
                        [
                            16,
                            "  range_key      = \"UserId\"\n"
                        ],
                        [
                            17,
                            "\n"
                        ],
                        [
                            18,
                            "  attribute {\n"
                        ],
                        [
                            19,
                            "    name = \"UserId\"\n"
                        ],
                        [
                            20,
                            "    type = \"S\"\n"
                        ],
                        [
                            21,
                            "  }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  replica {\n"
                        ],
                        [
                            24,
                            "    region_name = \"us-east-2\"\n"
                        ],
                        [
                            25,
                            "  }\n"
                        ],
                        [
                            26,
                            "\n"
                        ],
                        [
                            27,
                            "  replica {\n"
                        ],
                        [
                            28,
                            "    region_name = \"us-west-2\"\n"
                        ],
                        [
                            29,
                            "  }\n"
                        ],
                        [
                            30,
                            "\n"
                        ],
                        [
                            31,
                            "  # server_side_encryption {\n"
                        ],
                        [
                            32,
                            "  # \tenabled     = true\n"
                        ],
                        [
                            33,
                            "  # \tkms_key_arn = aws_kms_key.dynamo_db_kms.key_id\n"
                        ],
                        [
                            34,
                            "  # }\n"
                        ],
                        [
                            35,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            36,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_table.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_table.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_table.tf",
                    "file_line_range": [
                        10,
                        36
                    ],
                    "resource": "aws_dynamodb_table.default",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-is-enabled-on-your-dynamodb-tables"
                },
                {
                    "check_id": "CKV2_AWS_23",
                    "bc_check_id": "BC_AWS_NETWORKING_60",
                    "check_name": "Route53 A Record has Attached Resource",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_route53_record": {
                                "fail": {
                                    "name": [
                                        "dns.freebeer.site"
                                    ],
                                    "records": [
                                        [
                                            "1.1.1.1"
                                        ]
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "ttl": [
                                        "300"
                                    ],
                                    "type": [
                                        "A"
                                    ],
                                    "zone_id": [
                                        "data.aws_route53_zone.primary.zone_id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "alias/name",
                            "networking",
                            "type"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_route53_record\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  zone_id = data.aws_route53_zone.primary.zone_id\n"
                        ],
                        [
                            5,
                            "  name    = \"dns.freebeer.site\"\n"
                        ],
                        [
                            6,
                            "  type    = \"A\"\n"
                        ],
                        [
                            7,
                            "  ttl     = \"300\"\n"
                        ],
                        [
                            8,
                            "  records = [\"1.1.1.1\"]\n"
                        ],
                        [
                            9,
                            "  tags    = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/route53/route53.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/route53/route53.tf",
                    "repo_file_path": "/terraform/aws/route53/route53.tf",
                    "file_line_range": [
                        3,
                        10
                    ],
                    "resource": "aws_route53_record.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/bc_aws_networking_53"
                },
                {
                    "check_id": "CKV2_AWS_9",
                    "bc_check_id": "BC_AWS_GENERAL_50",
                    "check_name": "Ensure that EBS are added in the backup plans of AWS Backup",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_ebs_volume": {
                                "fail": {
                                    "availability_zone": [
                                        "eu-west-1a"
                                    ],
                                    "size": [
                                        1
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_ebs_volume\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  availability_zone = \"eu-west-1a\"\n"
                        ],
                        [
                            14,
                            "  size              = 1\n"
                        ],
                        [
                            15,
                            "  tags              = { test = \"fail\" }\n"
                        ],
                        [
                            16,
                            "}\n"
                        ]
                    ],
                    "file_path": "/ebs/ebs_volume.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/ebs/ebs_volume.tf",
                    "repo_file_path": "/terraform/aws/ebs/ebs_volume.tf",
                    "file_line_range": [
                        12,
                        16
                    ],
                    "resource": "aws_ebs_volume.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ebs-are-added-in-the-backup-plans-of-aws-backup"
                },
                {
                    "check_id": "CKV2_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_61",
                    "check_name": "Ensure that IAM groups includes at least one IAM user",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "bad_group": {
                                    "group": [
                                        "test-group"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_iam_group_membership\" \"bad_group\" {\n"
                        ],
                        [
                            5,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            6,
                            "\n"
                        ],
                        [
                            7,
                            "\n"
                        ],
                        [
                            8,
                            "  group = aws_iam_group.bad_group.name\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group.tf",
                    "file_line_range": [
                        4,
                        9
                    ],
                    "resource": "aws_iam_group_membership.bad_group",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "group": [
                            {
                                "type": "resource",
                                "name": "aws_iam_group.bad_group",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user"
                },
                {
                    "check_id": "CKV2_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_61",
                    "check_name": "Ensure that IAM groups includes at least one IAM user",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "team2": {
                                    "group": [
                                        "aws_iam_group.group222.name"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ],
                                    "users": [
                                        [
                                            "test-user",
                                            "aws_iam_user.user_two2.name"
                                        ]
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_iam_group_membership\" \"team2\" {\n"
                        ],
                        [
                            2,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            3,
                            "\n"
                        ],
                        [
                            4,
                            "  users = [\n"
                        ],
                        [
                            5,
                            "    aws_iam_user.user_one2.name,\n"
                        ],
                        [
                            6,
                            "    aws_iam_user.user_two2.name,\n"
                        ],
                        [
                            7,
                            "  ]\n"
                        ],
                        [
                            8,
                            "\n"
                        ],
                        [
                            9,
                            "  group = aws_iam_group.group222.name\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        1,
                        10
                    ],
                    "resource": "aws_iam_group_membership.team2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "users": [
                            {
                                "type": "resource",
                                "name": "aws_iam_user.user_two2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user"
                },
                {
                    "check_id": "CKV2_AWS_14",
                    "bc_check_id": "BC_AWS_IAM_61",
                    "check_name": "Ensure that IAM groups includes at least one IAM user",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_iam_group_membership": {
                                "team3": {
                                    "group": [
                                        "test-group"
                                    ],
                                    "name": [
                                        "tf-testing-group-membership"
                                    ],
                                    "users": [
                                        []
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "users"
                        ]
                    },
                    "code_block": [
                        [
                            27,
                            "resource \"aws_iam_group_membership\" \"team3\" {\n"
                        ],
                        [
                            28,
                            "  name = \"tf-testing-group-membership\"\n"
                        ],
                        [
                            29,
                            "\n"
                        ],
                        [
                            30,
                            "  users = [\n"
                        ],
                        [
                            31,
                            "  ]\n"
                        ],
                        [
                            32,
                            "\n"
                        ],
                        [
                            33,
                            "  group = aws_iam_group.group3.name\n"
                        ],
                        [
                            34,
                            "}\n"
                        ]
                    ],
                    "file_path": "/iam/group/iam_group_without_users.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                    "repo_file_path": "/terraform/aws/iam/group/iam_group_without_users.tf",
                    "file_line_range": [
                        27,
                        34
                    ],
                    "resource": "aws_iam_group_membership.team3",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "group": [
                            {
                                "type": "resource",
                                "name": "aws_iam_group.group3",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/iam/group/iam_group_without_users.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user"
                },
                {
                    "check_id": "CKV2_AWS_19",
                    "bc_check_id": "BC_AWS_NETWORKING_48",
                    "check_name": "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_eip": {
                                "solo": {
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ],
                                    "vpc": [
                                        true
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "vpc",
                            "resource_type",
                            "instance",
                            "instance_id"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_eip\" \"solo\" {\n"
                        ],
                        [
                            5,
                            "  vpc  = true\n"
                        ],
                        [
                            6,
                            "  tags = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/eip/eip.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/eip/eip.tf",
                    "repo_file_path": "/terraform/aws/eip/eip.tf",
                    "file_line_range": [
                        4,
                        7
                    ],
                    "resource": "aws_eip.solo",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-eip-addresses-allocated-to-a-vpc-are-attached-to-ec2-instances"
                },
                {
                    "check_id": "CKV2_AWS_19",
                    "bc_check_id": "BC_AWS_NETWORKING_48",
                    "check_name": "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_eip": {
                                "nat": {
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "vpc",
                            "resource_type",
                            "instance",
                            "instance_id"
                        ]
                    },
                    "code_block": [
                        [
                            90,
                            "resource \"aws_eip\" \"nat\" {\n"
                        ],
                        [
                            91,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            92,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        90,
                        92
                    ],
                    "resource": "aws_eip.nat",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-all-eip-addresses-allocated-to-a-vpc-are-attached-to-ec2-instances"
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "fail": {
                                    "acl": [
                                        "public-read-write"
                                    ],
                                    "bucket": [
                                        "superfail"
                                    ],
                                    "object_lock_configuration": [
                                        {
                                            "object_lock_enabled": [
                                                false
                                            ]
                                        }
                                    ],
                                    "policy": [
                                        {
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Principal": {
                                                        "AWS": "*"
                                                    },
                                                    "Effect": "Deny",
                                                    "Action": [
                                                        "s3:*"
                                                    ],
                                                    "Resource": [
                                                        "*"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ],
                                    "versioning": [
                                        {
                                            "enabled": [
                                                false
                                            ],
                                            "mfa_delete": [
                                                false
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "block_public_acls",
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_s3_bucket\" \"fail\" {\n"
                        ],
                        [
                            12,
                            "  acl    = \"public-read-write\"\n"
                        ],
                        [
                            13,
                            "  bucket = \"superfail\"\n"
                        ],
                        [
                            14,
                            "\n"
                        ],
                        [
                            15,
                            "  versioning {\n"
                        ],
                        [
                            16,
                            "    enabled    = false\n"
                        ],
                        [
                            17,
                            "    mfa_delete = false\n"
                        ],
                        [
                            18,
                            "  }\n"
                        ],
                        [
                            19,
                            "\n"
                        ],
                        [
                            20,
                            "  object_lock_configuration {\n"
                        ],
                        [
                            21,
                            "    object_lock_enabled = false\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "\n"
                        ],
                        [
                            24,
                            "  policy = <<POLICY\n"
                        ],
                        [
                            25,
                            "{\n"
                        ],
                        [
                            26,
                            "  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            27,
                            "  \"Statement\": [\n"
                        ],
                        [
                            28,
                            "    {\n"
                        ],
                        [
                            29,
                            "      \"Principal\": {\n"
                        ],
                        [
                            30,
                            "        \"AWS\": \"*\"\n"
                        ],
                        [
                            31,
                            "      },\n"
                        ],
                        [
                            32,
                            "      \"Effect\": \"Deny\",\n"
                        ],
                        [
                            33,
                            "      \"Action\": [\n"
                        ],
                        [
                            34,
                            "        \"s3:*\"\n"
                        ],
                        [
                            35,
                            "      ],\n"
                        ],
                        [
                            36,
                            "      \"Resource\": [\n"
                        ],
                        [
                            37,
                            "        \"*\"\n"
                        ],
                        [
                            38,
                            "      ]\n"
                        ],
                        [
                            39,
                            "    }\n"
                        ],
                        [
                            40,
                            "  ]\n"
                        ],
                        [
                            41,
                            "}\n"
                        ],
                        [
                            42,
                            "POLICY\n"
                        ],
                        [
                            43,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            44,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3.tf",
                    "repo_file_path": "/terraform/aws/s3/s3.tf",
                    "file_line_range": [
                        11,
                        44
                    ],
                    "resource": "aws_s3_bucket.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "positive1": {
                                    "acl": [
                                        "private"
                                    ],
                                    "bucket": [
                                        "S3B_181355"
                                    ],
                                    "policy": [
                                        {
                                            "Id": "id113",
                                            "Version": "2012-10-17",
                                            "Statement": [
                                                {
                                                    "Action": [
                                                        "s3:*"
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:aws:s3:::S3B_181355/*",
                                                    "Principal": "*"
                                                }
                                            ]
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "block_public_acls",
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"positive1\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"S3B_181355\"\n"
                        ],
                        [
                            3,
                            "  acl    = \"private\"\n"
                        ],
                        [
                            4,
                            "\n"
                        ],
                        [
                            5,
                            "  policy = <<EOF\n"
                        ],
                        [
                            6,
                            "\t{\n"
                        ],
                        [
                            7,
                            "\t  \"Id\": \"id113\",\n"
                        ],
                        [
                            8,
                            "\t  \"Version\": \"2012-10-17\",\n"
                        ],
                        [
                            9,
                            "\t  \"Statement\": [\n"
                        ],
                        [
                            10,
                            "\t\t{\n"
                        ],
                        [
                            11,
                            "\t\t  \"Action\": [\n"
                        ],
                        [
                            12,
                            "\t\t\t\"s3:*\"\n"
                        ],
                        [
                            13,
                            "\t\t  ],\n"
                        ],
                        [
                            14,
                            "\t\t  \"Effect\": \"Allow\",\n"
                        ],
                        [
                            15,
                            "\t\t  \"Resource\": \"arn:aws:s3:::S3B_181355/*\",\n"
                        ],
                        [
                            16,
                            "\t\t  \"Principal\": \"*\"\n"
                        ],
                        [
                            17,
                            "\t\t}\n"
                        ],
                        [
                            18,
                            "\t  ]\n"
                        ],
                        [
                            19,
                            "\t}\n"
                        ],
                        [
                            20,
                            "  EOF\n"
                        ],
                        [
                            21,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            22,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_with_all_permissions.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_with_all_permissions.tf",
                    "file_line_range": [
                        1,
                        22
                    ],
                    "resource": "aws_s3_bucket.positive1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
                },
                {
                    "check_id": "CKV2_AWS_6",
                    "bc_check_id": "BC_AWS_NETWORKING_52",
                    "check_name": "Ensure that S3 bucket has a Public Access block",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_s3_bucket": {
                                "b": {
                                    "bucket": [
                                        "my-tf-test-bucket"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "block_public_acls",
                            "block_public_policy"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_s3_bucket\" \"b\" {\n"
                        ],
                        [
                            2,
                            "  bucket = \"my-tf-test-bucket\"\n"
                        ],
                        [
                            3,
                            "  tags   = { test = \"Fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "repo_file_path": "/terraform/aws/s3/s3_bucket_policy_accepts_http_requests.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_s3_bucket.b",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
                },
                {
                    "check_id": "CKV2_AWS_15",
                    "bc_check_id": "BC_AWS_NETWORKING_46",
                    "check_name": "Ensure that auto Scaling groups that are associated with a load balancer, are using Elastic Load Balancing health checks.",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_autoscaling_attachment": {
                                "test_bad_attachment": {
                                    "autoscaling_group_name": [
                                        "aws_autoscaling_group.autoscalling_bad.id"
                                    ],
                                    "elb": [
                                        "aws_elb.test_bad.id"
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "health_check",
                            "health_check_type",
                            "resource_type"
                        ]
                    },
                    "code_block": [
                        [
                            24,
                            "resource \"aws_autoscaling_attachment\" \"test_bad_attachment\" {\n"
                        ],
                        [
                            25,
                            "  autoscaling_group_name = aws_autoscaling_group.autoscalling_bad.id\n"
                        ],
                        [
                            26,
                            "  elb                    = aws_elb.test_bad.id\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/autoscaling/ELB.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/autoscaling/ELB.tf",
                    "repo_file_path": "/terraform/aws/autoscaling/ELB.tf",
                    "file_line_range": [
                        24,
                        27
                    ],
                    "resource": "aws_autoscaling_attachment.test_bad_attachment",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {},
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-groups-that-are-associated-with-a-load-balancer-are-using-elastic-load-balancing-health-checks"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "mainvpc": {
                                    "cidr_block": [
                                        "10.1.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            1,
                            "resource \"aws_vpc\" \"mainvpc\" {\n"
                        ],
                        [
                            2,
                            "  cidr_block = \"10.1.0.0/16\"\n"
                        ],
                        [
                            3,
                            "  tags       = { test = \"fail\" }\n"
                        ],
                        [
                            4,
                            "}\n"
                        ]
                    ],
                    "file_path": "/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "repo_file_path": "/terraform/aws/security_groups/vpc_default_security_group_accepts_all_traffic.tf",
                    "file_line_range": [
                        1,
                        4
                    ],
                    "resource": "aws_vpc.mainvpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "positive": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            4,
                            "resource \"aws_vpc\" \"positive\" {\n"
                        ],
                        [
                            5,
                            "  cidr_block = \"10.0.0.0/16\"\n"
                        ],
                        [
                            6,
                            "  tags = {\n"
                        ],
                        [
                            7,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            8,
                            "  }\n"
                        ],
                        [
                            9,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_without_network_firewall.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_without_network_firewall.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_without_network_firewall.tf",
                    "file_line_range": [
                        4,
                        9
                    ],
                    "resource": "aws_vpc.positive",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "main": {
                                    "cidr_block": [
                                        "192.168.100.0/24"
                                    ],
                                    "enable_dns_support": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            11,
                            "resource \"aws_vpc\" \"main\" {\n"
                        ],
                        [
                            12,
                            "  cidr_block         = \"192.168.100.0/24\"\n"
                        ],
                        [
                            13,
                            "  enable_dns_support = true\n"
                        ],
                        [
                            14,
                            "  tags               = { test = \"Fail\" }\n"
                        ],
                        [
                            15,
                            "}\n"
                        ]
                    ],
                    "file_path": "/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "repo_file_path": "/terraform/aws/dynamodb/dynamodb_vpc_endpoint_wihout_route_table_association.tf",
                    "file_line_range": [
                        11,
                        15
                    ],
                    "resource": "aws_vpc.main",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "bad_vpc": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_vpc\" \"bad_vpc\" {\n"
                        ],
                        [
                            6,
                            "  cidr_block = \"10.0.0.0/16\"\n"
                        ],
                        [
                            7,
                            "  tags       = { test = \"Fail\" }\n"
                        ],
                        [
                            8,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/nacl.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/nacl.tf",
                    "repo_file_path": "/terraform/aws/vpc/nacl.tf",
                    "file_line_range": [
                        5,
                        8
                    ],
                    "resource": "aws_vpc.bad_vpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "vpc2": {
                                    "cidr_block": [
                                        "10.2.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "tf-test-vpc-2",
                                            "Project": "CIS Certification"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            72,
                            "resource \"aws_vpc\" \"vpc2\" {\n"
                        ],
                        [
                            73,
                            "  cidr_block = var.vpc_2_cidr_block\n"
                        ],
                        [
                            74,
                            "\n"
                        ],
                        [
                            75,
                            "  tags = {\n"
                        ],
                        [
                            76,
                            "    Name    = \"tf-test-vpc-2\"\n"
                        ],
                        [
                            77,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            78,
                            "  }\n"
                        ],
                        [
                            79,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        72,
                        79
                    ],
                    "resource": "aws_vpc.vpc2",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "tf-test-vpc-2",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_2_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            },
                            {
                                "type": "resource",
                                "name": "aws_vpc.vpc2",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "eks_vpc": {
                                    "cidr_block": [
                                        "10.10.0.0/16"
                                    ],
                                    "enable_dns_hostnames": [
                                        true
                                    ],
                                    "enable_dns_support": [
                                        true
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            5,
                            "resource \"aws_vpc\" \"eks_vpc\" {\n"
                        ],
                        [
                            6,
                            "  cidr_block           = \"10.10.0.0/16\"\n"
                        ],
                        [
                            7,
                            "  enable_dns_hostnames = true\n"
                        ],
                        [
                            8,
                            "  enable_dns_support   = true\n"
                        ],
                        [
                            9,
                            "  tags                 = { test = \"Fail\" }\n"
                        ],
                        [
                            10,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc.tf",
                    "file_line_range": [
                        5,
                        10
                    ],
                    "resource": "aws_vpc.eks_vpc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_12",
                    "bc_check_id": "BC_AWS_NETWORKING_4",
                    "check_name": "Ensure the default security group of every VPC restricts all traffic",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_vpc": {
                                "vpc1": {
                                    "cidr_block": [
                                        "10.0.0.0/16"
                                    ],
                                    "tags": [
                                        {
                                            "Name": "tf-test-vpc-1",
                                            "Project": "CIS Certification"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/protocol",
                            "egress/to_port",
                            "ingress/to_port",
                            "egress/cidr_blocks",
                            "egress/from_port",
                            "ingress/self",
                            "egress/protocol",
                            "ingress/from_port"
                        ]
                    },
                    "code_block": [
                        [
                            41,
                            "resource \"aws_vpc\" \"vpc1\" {\n"
                        ],
                        [
                            42,
                            "  cidr_block = var.vpc_1_cidr_block\n"
                        ],
                        [
                            43,
                            "\n"
                        ],
                        [
                            44,
                            "  tags = {\n"
                        ],
                        [
                            45,
                            "    Name    = \"tf-test-vpc-1\"\n"
                        ],
                        [
                            46,
                            "    Project = \"CIS Certification\"\n"
                        ],
                        [
                            47,
                            "  }\n"
                        ],
                        [
                            48,
                            "}\n"
                        ]
                    ],
                    "file_path": "/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "repo_file_path": "/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                    "file_line_range": [
                        41,
                        48
                    ],
                    "resource": "aws_vpc.vpc1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "Name": "tf-test-vpc-1",
                        "Project": "CIS Certification"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "breadcrumbs": {
                        "cidr_block": [
                            {
                                "type": "variable",
                                "name": "vpc_1_cidr_block",
                                "path": "/Users/jameswoolfenden/code/fail/terraform/aws/vpc/vpc_peering_route_table_with_unrestricted_cidr.tf",
                                "module_connection": false
                            }
                        ]
                    },
                    "guideline": "https://docs.bridgecrew.io/docs/networking_4"
                },
                {
                    "check_id": "CKV2_AWS_7",
                    "bc_check_id": "BC_AWS_NETWORKING_40",
                    "check_name": "Ensure that Amazon EMR clusters' security groups are not open to the world",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_emr_cluster": {
                                "test": {
                                    "applications": [
                                        [
                                            "Spark"
                                        ]
                                    ],
                                    "keep_job_flow_alive_when_no_steps": [
                                        true
                                    ],
                                    "kerberos_attributes": [
                                        {
                                            "kdc_admin_password": [
                                                "somePassword"
                                            ]
                                        }
                                    ],
                                    "name": [
                                        "emr-test-arn"
                                    ],
                                    "release_label": [
                                        "emr-4.6.0"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ],
                                    "termination_protection": [
                                        false
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/*/cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_emr_cluster\" \"test\" {\n"
                        ],
                        [
                            10,
                            "  name          = \"emr-test-arn\"\n"
                        ],
                        [
                            11,
                            "  release_label = \"emr-4.6.0\"\n"
                        ],
                        [
                            12,
                            "  applications  = [\"Spark\"]\n"
                        ],
                        [
                            13,
                            "\n"
                        ],
                        [
                            14,
                            "  termination_protection            = false\n"
                        ],
                        [
                            15,
                            "  keep_job_flow_alive_when_no_steps = true\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  kerberos_attributes {\n"
                        ],
                        [
                            18,
                            "    kdc_admin_password = \"somePassword\"\n"
                        ],
                        [
                            19,
                            "  }\n"
                        ],
                        [
                            20,
                            "  tags = {\n"
                        ],
                        [
                            21,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            22,
                            "  }\n"
                        ],
                        [
                            23,
                            "}\n"
                        ]
                    ],
                    "file_path": "/emr/emr_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/emr/emr_cluster.tf",
                    "repo_file_path": "/terraform/aws/emr/emr_cluster.tf",
                    "file_line_range": [
                        9,
                        23
                    ],
                    "resource": "aws_emr_cluster.test",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-emr-clusters-security-groups-are-not-open-to-the-world"
                },
                {
                    "check_id": "CKV2_AWS_7",
                    "bc_check_id": "BC_AWS_NETWORKING_40",
                    "check_name": "Ensure that Amazon EMR clusters' security groups are not open to the world",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_emr_cluster": {
                                "fail": {
                                    "name": [
                                        "emr-test-arn"
                                    ],
                                    "release_label": [
                                        "emr-4.6.0"
                                    ],
                                    "tags": [
                                        {
                                            "test": "fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "ingress/*/cidr_blocks"
                        ]
                    },
                    "code_block": [
                        [
                            3,
                            "resource \"aws_emr_cluster\" \"fail\" {\n"
                        ],
                        [
                            4,
                            "  name          = \"emr-test-arn\"\n"
                        ],
                        [
                            5,
                            "  release_label = \"emr-4.6.0\"\n"
                        ],
                        [
                            6,
                            "  tags          = { test = \"fail\" }\n"
                        ],
                        [
                            7,
                            "}\n"
                        ]
                    ],
                    "file_path": "/emr/emr_without_vpc.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/emr/emr_without_vpc.tf",
                    "repo_file_path": "/terraform/aws/emr/emr_without_vpc.tf",
                    "file_line_range": [
                        3,
                        7
                    ],
                    "resource": "aws_emr_cluster.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-emr-clusters-security-groups-are-not-open-to-the-world"
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_lb": {
                                "lb_bad_1": {
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "load_balancer_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_lb\" \"lb_bad_1\" {\n"
                        ],
                        [
                            10,
                            "  tags = { test = \"Fail\" }\n"
                        ],
                        [
                            11,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/redirect.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/redirect.tf",
                    "repo_file_path": "/terraform/aws/lb/redirect.tf",
                    "file_line_range": [
                        9,
                        11
                    ],
                    "resource": "aws_lb.lb_bad_1",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_alb": {
                                "fail": {
                                    "drop_invalid_header_fields": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "bad_alb"
                                    ],
                                    "tags": [
                                        {
                                            "key": "value"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "load_balancer_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            12,
                            "resource \"aws_alb\" \"fail\" {\n"
                        ],
                        [
                            13,
                            "  name               = \"bad_alb\"\n"
                        ],
                        [
                            14,
                            "  internal           = false\n"
                        ],
                        [
                            15,
                            "  load_balancer_type = \"application\"\n"
                        ],
                        [
                            16,
                            "\n"
                        ],
                        [
                            17,
                            "  # access_logs {\n"
                        ],
                        [
                            18,
                            "  #   bucket  = aws_s3_bucket.lb_logs.bucket\n"
                        ],
                        [
                            19,
                            "  #   prefix  = \"test-lb\"\n"
                        ],
                        [
                            20,
                            "  #   enabled = true\n"
                        ],
                        [
                            21,
                            "  # }\n"
                        ],
                        [
                            22,
                            "\n"
                        ],
                        [
                            23,
                            "  drop_invalid_header_fields = false\n"
                        ],
                        [
                            24,
                            "  tags = {\n"
                        ],
                        [
                            25,
                            "    \"key\" = \"value\"\n"
                        ],
                        [
                            26,
                            "  }\n"
                        ],
                        [
                            27,
                            "}\n"
                        ]
                    ],
                    "file_path": "/elb/alb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/elb/alb.tf",
                    "repo_file_path": "/terraform/aws/elb/alb.tf",
                    "file_line_range": [
                        12,
                        27
                    ],
                    "resource": "aws_alb.fail",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "key": "value"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_28",
                    "bc_check_id": "BC_AWS_NETWORKING_58",
                    "check_name": "Ensure public facing ALB are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_alb": {
                                "disabled": {
                                    "enable_cross_zone_load_balancing": [
                                        false
                                    ],
                                    "internal": [
                                        false
                                    ],
                                    "load_balancer_type": [
                                        "application"
                                    ],
                                    "name": [
                                        "alb"
                                    ],
                                    "subnets": [
                                        "var.public_subnet_ids"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "load_balancer_type",
                            "internal"
                        ]
                    },
                    "code_block": [
                        [
                            14,
                            "resource \"aws_alb\" \"disabled\" {\n"
                        ],
                        [
                            15,
                            "  internal                         = false\n"
                        ],
                        [
                            16,
                            "  load_balancer_type               = \"application\"\n"
                        ],
                        [
                            17,
                            "  name                             = \"alb\"\n"
                        ],
                        [
                            18,
                            "  subnets                          = var.public_subnet_ids\n"
                        ],
                        [
                            19,
                            "  enable_cross_zone_load_balancing = false\n"
                        ],
                        [
                            20,
                            "  tags                             = { test = \"Fail\" }\n"
                        ],
                        [
                            21,
                            "}\n"
                        ]
                    ],
                    "file_path": "/lb/lb.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lb/lb.tf",
                    "repo_file_path": "/terraform/aws/lb/lb.tf",
                    "file_line_range": [
                        14,
                        21
                    ],
                    "resource": "aws_alb.disabled",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_29",
                    "bc_check_id": "BC_AWS_NETWORKING_59",
                    "check_name": "Ensure public API gateway are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "api_gw_stage": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.api_gw_deploy.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.api_gw.id"
                                    ],
                                    "stage_name": [
                                        "prod"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "endpoint_configuration/types"
                        ]
                    },
                    "code_block": [
                        [
                            77,
                            "resource \"aws_api_gateway_stage\" \"api_gw_stage\" {\n"
                        ],
                        [
                            78,
                            "  stage_name    = \"prod\"\n"
                        ],
                        [
                            79,
                            "  rest_api_id   = aws_api_gateway_rest_api.api_gw.id\n"
                        ],
                        [
                            80,
                            "  deployment_id = aws_api_gateway_deployment.api_gw_deploy.id\n"
                        ],
                        [
                            81,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            82,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api-policy/rest_api_with_vulnerable_policy.tf",
                    "file_line_range": [
                        77,
                        82
                    ],
                    "resource": "aws_api_gateway_stage.api_gw_stage",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_29",
                    "bc_check_id": "BC_AWS_NETWORKING_59",
                    "check_name": "Ensure public API gateway are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "no_assoc": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.no_assoc.id"
                                    ],
                                    "stage_name": [
                                        "example"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "endpoint_configuration/types"
                        ]
                    },
                    "code_block": [
                        [
                            20,
                            "resource \"aws_api_gateway_stage\" \"no_assoc\" {\n"
                        ],
                        [
                            21,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            22,
                            "  rest_api_id   = aws_api_gateway_rest_api.no_assoc.id\n"
                        ],
                        [
                            23,
                            "  stage_name    = \"example\"\n"
                        ],
                        [
                            24,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            25,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/aws_api_gateway_rest_api_no_waf.tf",
                    "file_line_range": [
                        20,
                        25
                    ],
                    "resource": "aws_api_gateway_stage.no_assoc",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf"
                },
                {
                    "check_id": "CKV2_AWS_29",
                    "bc_check_id": "BC_AWS_NETWORKING_59",
                    "check_name": "Ensure public API gateway are protected by WAF",
                    "check_result": {
                        "result": "FAILED",
                        "entity": {
                            "aws_api_gateway_stage": {
                                "fail_waf": {
                                    "deployment_id": [
                                        "aws_api_gateway_deployment.example.id"
                                    ],
                                    "rest_api_id": [
                                        "aws_api_gateway_rest_api.fail.id"
                                    ],
                                    "stage_name": [
                                        "fail-waf"
                                    ],
                                    "tags": [
                                        {
                                            "test": "Fail"
                                        }
                                    ]
                                }
                            }
                        },
                        "evaluated_keys": [
                            "resource_type",
                            "endpoint_configuration/types"
                        ]
                    },
                    "code_block": [
                        [
                            9,
                            "resource \"aws_api_gateway_stage\" \"fail_waf\" {\n"
                        ],
                        [
                            10,
                            "  deployment_id = aws_api_gateway_deployment.example.id\n"
                        ],
                        [
                            11,
                            "  stage_name    = \"fail-waf\"\n"
                        ],
                        [
                            12,
                            "  rest_api_id   = aws_api_gateway_rest_api.fail.id\n"
                        ],
                        [
                            13,
                            "  tags          = { test = \"Fail\" }\n"
                        ],
                        [
                            14,
                            "}\n"
                        ]
                    ],
                    "file_path": "/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "repo_file_path": "/terraform/aws/api-gateway/api-gateway-rest-api/api_gateway_rest_api.tf",
                    "file_line_range": [
                        9,
                        14
                    ],
                    "resource": "aws_api_gateway_stage.fail_waf",
                    "evaluations": null,
                    "check_class": "checkov.common.graph.checks_infra.base_check",
                    "fixed_definition": null,
                    "entity_tags": {
                        "test": "Fail"
                    },
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf"
                }
            ],
            "skipped_checks": [],
            "parsing_errors": [
                "/Users/jameswoolfenden/code/fail/terraform/aws/cognito/cognito_userpool_without_mfa.tf"
            ]
        },
        "summary": {
            "passed": 237,
            "failed": 522,
            "skipped": 0,
            "parsing_errors": 1,
            "resource_count": 358,
            "checkov_version": "2.0.826"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    },
    {
        "check_type": "secrets",
        "results": {
            "passed_checks": [],
            "failed_checks": [
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            18,
                            "    kdc_admin_password = \"somePassword\"\n"
                        ]
                    ],
                    "file_path": "/emr/emr_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/emr/emr_cluster.tf",
                    "repo_file_path": "/terraform/aws/emr/emr_cluster.tf",
                    "file_line_range": [
                        18,
                        19
                    ],
                    "resource": "81434fe5d949f5c9734c2b8732920cf5b5da2df6",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_2",
                    "bc_check_id": "BC_GIT_2",
                    "check_name": "AWS Access Key",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            1728,
                            "\t\t\t\t\t\"actual_value\": \"'  access_key = \\\"AKIAIOSFODNN7EXAMPLE\\\"' contains a secret\"\n"
                        ]
                    ],
                    "file_path": "/fails_kics.json",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/fails_kics.json",
                    "repo_file_path": "/terraform/aws/fails_kics.json",
                    "file_line_range": [
                        1728,
                        1729
                    ],
                    "resource": "25910f981e85ca04baf359199dd0bd4a3ae738b6",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_2"
                },
                {
                    "check_id": "CKV_SECRET_2",
                    "bc_check_id": "BC_GIT_2",
                    "check_name": "AWS Access Key",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            1739,
                            "\t\t\t\t\t\"actual_value\": \"'  access_key = \\\"AKIAXYZDQCEN346Y6EVN\\\"' contains a secret\"\n"
                        ]
                    ],
                    "file_path": "/fails_kics.json",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/fails_kics.json",
                    "repo_file_path": "/terraform/aws/fails_kics.json",
                    "file_line_range": [
                        1739,
                        1740
                    ],
                    "resource": "0a58724379fd7176daefafebe955e6caf571ff5a",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_2"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            21,
                            "      AWS_SECRET_ACCESS_KEY = \"MYMOSTSECRETTHING\"\n"
                        ]
                    ],
                    "file_path": "/lambda/lambda.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/lambda/lambda.tf",
                    "repo_file_path": "/terraform/aws/lambda/lambda.tf",
                    "file_line_range": [
                        21,
                        22
                    ],
                    "resource": "f5d4da20e0415b51f4b2963d5a0717253904aa62",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            25,
                            "    password = \"MindTheGapps\"\n"
                        ]
                    ],
                    "file_path": "/mq/mq_broker_encryption_disabled.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "repo_file_path": "/terraform/aws/mq/mq_broker_encryption_disabled.tf",
                    "file_line_range": [
                        25,
                        26
                    ],
                    "resource": "d84831d3451d194609abc10aa7c1d1628e27f7f9",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_2",
                    "bc_check_id": "BC_GIT_2",
                    "check_name": "AWS Access Key",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            3,
                            "  access_key = \"AKIAIOSFODNN7EXAMPLE\"\n"
                        ]
                    ],
                    "file_path": "/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider.tf",
                    "repo_file_path": "/terraform/aws/provider.tf",
                    "file_line_range": [
                        3,
                        4
                    ],
                    "resource": "25910f981e85ca04baf359199dd0bd4a3ae738b6",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_2"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            4,
                            "  secret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\n"
                        ]
                    ],
                    "file_path": "/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider.tf",
                    "repo_file_path": "/terraform/aws/provider.tf",
                    "file_line_range": [
                        4,
                        5
                    ],
                    "resource": "d70eab08607a4d05faa2d0d6647206599e9abc65",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_2",
                    "bc_check_id": "BC_GIT_2",
                    "check_name": "AWS Access Key",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            10,
                            "  access_key = \"AKIAXYZDQCEN346Y6EVN\"\n"
                        ]
                    ],
                    "file_path": "/provider/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider/provider.tf",
                    "repo_file_path": "/terraform/aws/provider/provider.tf",
                    "file_line_range": [
                        10,
                        11
                    ],
                    "resource": "0a58724379fd7176daefafebe955e6caf571ff5a",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_2"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            11,
                            "  secret_key = \"50W3qN7CuaMUl68u0CoAVY6fQykksBumX3Mq3VlI\"\n"
                        ]
                    ],
                    "file_path": "/provider/provider.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/provider/provider.tf",
                    "repo_file_path": "/terraform/aws/provider/provider.tf",
                    "file_line_range": [
                        11,
                        12
                    ],
                    "resource": "543fb814801bf1925142196407311f2770e4637f",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            22,
                            "  master_password         = \"password12345\"\n"
                        ]
                    ],
                    "file_path": "/rds/rds_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/rds/rds_cluster.tf",
                    "repo_file_path": "/terraform/aws/rds/rds_cluster.tf",
                    "file_line_range": [
                        22,
                        23
                    ],
                    "resource": "ae9030c665364eb2651d450e8321ae62dd51a726",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            21,
                            "  master_password                     = \"Mustbe8characters\"\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_cluster.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_cluster.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_cluster.tf",
                    "file_line_range": [
                        21,
                        22
                    ],
                    "resource": "7b5865e6360213cdd65426347e9c465041a038e5",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                },
                {
                    "check_id": "CKV_SECRET_6",
                    "bc_check_id": "BC_GIT_6",
                    "check_name": "Base64 High Entropy String",
                    "check_result": {
                        "result": "FAILED"
                    },
                    "code_block": [
                        [
                            5,
                            "  master_password     = \"Mustbe8characters\"\n"
                        ]
                    ],
                    "file_path": "/redshift/redshift_using_default_port.tf",
                    "file_abs_path": "/Users/jameswoolfenden/code/fail/terraform/aws/redshift/redshift_using_default_port.tf",
                    "repo_file_path": "/terraform/aws/redshift/redshift_using_default_port.tf",
                    "file_line_range": [
                        5,
                        6
                    ],
                    "resource": "7b5865e6360213cdd65426347e9c465041a038e5",
                    "evaluations": null,
                    "check_class": null,
                    "fixed_definition": null,
                    "entity_tags": null,
                    "caller_file_path": null,
                    "caller_file_line_range": null,
                    "resource_address": null,
                    "severity": null,
                    "description": null,
                    "short_description": null,
                    "vulnerability_details": null,
                    "guideline": "https://docs.bridgecrew.io/docs/git_secrets_6"
                }
            ],
            "skipped_checks": [],
            "parsing_errors": []
        },
        "summary": {
            "passed": 0,
            "failed": 12,
            "skipped": 0,
            "parsing_errors": 0,
            "resource_count": 12,
            "checkov_version": "2.0.826"
        },
        "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
    }
]

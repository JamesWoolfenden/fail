{
	"results": [
		{
			"rule_id": "AVD-AWS-0006",
			"long_id": "aws-athena-enable-at-rest-encryption",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration"
			],
			"description": "Workgroup does not have encryption configured.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_athena_workgroup.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 9,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0006",
			"long_id": "aws-athena-enable-at-rest-encryption",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration"
			],
			"description": "Database does not have encryption configured.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_athena_database.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-database.tf",
				"start_line": 7,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0007",
			"long_id": "aws-athena-no-encryption-override",
			"rule_description": "Athena workgroups should enforce configuration to prevent client disabling encryption",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Clients can ignore encryption requirements",
			"resolution": "Enforce the configuration to prevent client overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/no-encryption-override/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration"
			],
			"description": "The workgroup configuration is not enforced.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_athena_workgroup.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test_bad",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\ELB.tf",
				"start_line": 29,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test_bad",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\ELB.tf",
				"start_line": 29,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.not_ok_efs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\backup_vault\\backup_selection.tf",
				"start_line": 43,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-AWS-0005",
			"long_id": "aws-api-gateway-use-secure-tls-policy",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy"
			],
			"description": "Domain name is configured with an outdated TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_api_gateway_domain_name.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\certificate_rsa_key_bytes_lower_than_256.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0005",
			"long_id": "aws-api-gateway-use-secure-tls-policy",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy"
			],
			"description": "Domain name is configured with an outdated TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_api_gateway_domain_name.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\certhasexpired.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 6,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 6,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.fail_defaultcert",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 5,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 13,
				"end_line": 91
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.fail_defaultcert",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 5,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 13,
				"end_line": 91
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_cloudfront_distribution.fail_defaultcert",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 43,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.fail_defaultcert",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 5,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 82,
				"end_line": 82
			}
		},
		{
			"rule_id": "AVD-AWS-0014",
			"long_id": "aws-cloudtrail-enable-all-regions",
			"rule_description": "Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Activity could be happening in your account in a different region",
			"resolution": "Enable Cloudtrail in all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail"
			],
			"description": "Trail is not enabled across all regions.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudtrail.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0015",
			"long_id": "aws-cloudtrail-enable-at-rest-encryption",
			"rule_description": "Cloudtrail should be encrypted at rest to secure access to sensitive trail data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id"
			],
			"description": "Trail is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudtrail.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 18,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0016",
			"long_id": "aws-cloudtrail-enable-log-validation",
			"rule_description": "Cloudtrail log validation should be enabled to prevent tampering of log data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Illicit activity could be removed from the logs",
			"resolution": "Turn on log validation for Cloudtrail",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-log-validation/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation"
			],
			"description": "Trail does not have log validation enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudtrail.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 18,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_cloudwatch_log_group.logs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudwatch\\cloudwatch.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0018",
			"long_id": "aws-codebuild-enable-encryption",
			"rule_description": "CodeBuild Project artifacts encryption should not be disabled",
			"rule_provider": "aws",
			"rule_service": "codebuild",
			"impact": "CodeBuild project artifacts are unencrypted",
			"resolution": "Enable encryption for CodeBuild project artifacts",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/codebuild/enable-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project#encryption_disabled"
			],
			"description": "Encryption is not enabled for project artifacts.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_codebuild_project.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\codebuild\\codebuild.tf",
				"start_line": 12,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0019",
			"long_id": "aws-config-aggregate-all-regions",
			"rule_description": "Config configuration aggregator should be using all regions for source",
			"rule_provider": "aws",
			"rule_service": "config",
			"impact": "Sources that aren't covered by the aggregator are not include in the configuration",
			"resolution": "Set the aggregator to cover all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/config/aggregate-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions"
			],
			"description": "Configuration aggregation is not set to source from all regions.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_config_configuration_aggregator.organization",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\config\\config_configuration_aggregator.tf",
				"start_line": 11,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 15,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 32,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_security_group.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_security_group.tf",
				"start_line": 7,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 35,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0020",
			"long_id": "aws-documentdb-enable-log-export",
			"rule_description": "DocumentDB logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Limited visibility of audit trail for changes to the DocumentDB",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports"
			],
			"description": "Neither CloudWatch audit nor profiler log exports are enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0021",
			"long_id": "aws-documentdb-enable-storage-encryption",
			"rule_description": "DocumentDB storage must be encrypted",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable storage encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted"
			],
			"description": "Cluster storage does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0022",
			"long_id": "aws-documentdb-encryption-customer-key",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 99,
				"end_line": 117
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 99,
				"end_line": 117
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 99,
				"end_line": 117
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 91,
				"end_line": 97
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 91,
				"end_line": 97
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.allow_public_outbound_sg",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 66,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.allow_public_outbound_sg",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 70,
				"end_line": 70
			}
		},
		{
			"rule_id": "AVD-AWS-0026",
			"long_id": "aws-ebs-enable-volume-encryption",
			"rule_description": "EBS volumes must be encrypted",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of EBS volumes",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ebs/enable-volume-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
			],
			"description": "EBS volume is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ebs_volume.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0027",
			"long_id": "aws-ebs-encryption-customer-key",
			"rule_description": "EBS volume encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ebs/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
			],
			"description": "EBS volume does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ebs_volume.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 10,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0032",
			"long_id": "aws-ecr-no-public-access",
			"rule_description": "ECR repository policy must block public access",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Risk of potential data leakage of sensitive artifacts",
			"resolution": "Do not allow public access in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy#policy"
			],
			"description": "Policy provides public access to the ECR repository.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository_policy.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 10,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0034",
			"long_id": "aws-ecs-enable-container-insight",
			"rule_description": "ECS clusters should have container insights enabled",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Not all metrics and logs may be gathered for containers when Container Insights isn't enabled",
			"resolution": "Enable Container Insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/enable-container-insight/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting"
			],
			"description": "Cluster does not have container insights enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecs_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_cluster.tf",
				"start_line": 11,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0035",
			"long_id": "aws-ecs-enable-in-transit-encryption",
			"rule_description": "ECS Task Definitions with EFS volumes should use in-transit encryption",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Intercepted traffic to and from EFS may lead to data loss",
			"resolution": "Enable in transit encryption when using efs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption"
			],
			"description": "Task definition includes a volume which does not have in-transit-encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecs_task_definition.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 26,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'password': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.fail_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition_with_plaintext_password.tf",
				"start_line": 4,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'password': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition_network_mode_not_recommended.tf",
				"start_line": 17,
				"end_line": 57
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'DATABASE_PASSWORD': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 9,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.fs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 39,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.not_secure",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\efs\\efs_with_vulnerable_policy.tf",
				"start_line": 8,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.sharedstore",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\efs\\efs.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane controller manager logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane scheduler logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane API logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane authenticator logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0039",
			"long_id": "aws-eks-encrypt-secrets",
			"rule_description": "EKS should have the encryption of secrets enabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS secrets could be read if compromised",
			"resolution": "Enable encryption of EKS secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/encrypt-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config"
			],
			"description": "Cluster does not have secret encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0040",
			"long_id": "aws-eks-no-public-cluster-access",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/no-public-cluster-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access"
			],
			"description": "Public cluster access is enabled.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0041",
			"long_id": "aws-eks-no-public-cluster-access-to-cidr",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be accessed from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/no-public-cluster-access-to-cidr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config"
			],
			"description": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0045",
			"long_id": "aws-elasticache-enable-at-rest-encryption",
			"rule_description": "Elasticache Replication Group stores unencrypted data at-rest.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "At-rest data in the Replication Group could be compromised if accessed.",
			"resolution": "Enable at-rest encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled"
			],
			"description": "Replication group does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0050",
			"long_id": "aws-elasticache-enable-backup-retention",
			"rule_description": "Redis cluster should have backup retention turned on",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Without backups of the redis cluster recovery is made difficult",
			"resolution": "Configure snapshot retention for redis cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit"
			],
			"description": "Cluster snapshot retention is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticache_cluster.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\redis_not_compliant.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0050",
			"long_id": "aws-elasticache-enable-backup-retention",
			"rule_description": "Redis cluster should have backup retention turned on",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Without backups of the redis cluster recovery is made difficult",
			"resolution": "Configure snapshot retention for redis cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit"
			],
			"description": "Cluster snapshot retention is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticache_cluster.fail_redis",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_cluster.tf",
				"start_line": 7,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0051",
			"long_id": "aws-elasticache-enable-in-transit-encryption",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled"
			],
			"description": "Replication group does not have transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticache_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_security_group.tf",
				"start_line": 7,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 17,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 20,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0045",
			"long_id": "aws-elasticache-enable-at-rest-encryption",
			"rule_description": "Elasticache Replication Group stores unencrypted data at-rest.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "At-rest data in the Replication Group could be compromised if accessed.",
			"resolution": "Enable at-rest encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled"
			],
			"description": "Replication group does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0051",
			"long_id": "aws-elasticache-enable-in-transit-encryption",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled"
			],
			"description": "Replication group does not have transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.wu_tang",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
				"start_line": 4,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb_using_weak_ciphers.tf",
				"start_line": 3,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb.tf",
				"start_line": 5,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.wu_tang",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
				"start_line": 4,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb_using_weak_ciphers.tf",
				"start_line": 3,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb.tf",
				"start_line": 5,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0054",
			"long_id": "aws-elb-http-not-used",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/http-not-used/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener"
			],
			"description": "Listener for application load balancer does not use HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_alb_listener.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb_listener.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0056",
			"long_id": "aws-iam-no-password-reuse",
			"rule_description": "IAM Password policy should prevent password reuse.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Password reuse increase the risk of compromised passwords being abused",
			"resolution": "Prevent password reuse in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-password-reuse/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy allows reuse of recent passwords.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:Describe*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
				"start_line": 23,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action '*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 64,
				"end_line": 64
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 62,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action '*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 43,
				"end_line": 45
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 39,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:HeadBucket' on wildcarded resource 'arn:aws:s3:::b1'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 18,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 's3:HeadBucket'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 13,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:Describe*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0062",
			"long_id": "aws-iam-set-max-password-age",
			"rule_description": "IAM Password policy should have expiry less than or equal to 90 days.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Long life password increase the likelihood of a password eventually being compromised",
			"resolution": "Limit the password duration with an expiry in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/set-max-password-age/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy allows a maximum password age of greater than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0063",
			"long_id": "aws-iam-set-minimum-password-length",
			"rule_description": "IAM Password policy should have minimum password length of 14 or more characters.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/set-minimum-password-length/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy has a minimum password length of less than 14 characters.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 2,
				"end_line": 2
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance_with_no_vpc.tf",
				"start_line": 1,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.web",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
				"start_line": 18,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
				"start_line": 1,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.monitoring_positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
				"start_line": 17,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance_with_no_vpc.tf",
				"start_line": 1,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.web",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
				"start_line": 18,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
				"start_line": 1,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.monitoring_positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
				"start_line": 17,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0029",
			"long_id": "aws-ec2-no-secrets-in-user-data",
			"rule_description": "User data for EC2 instances must not contain sensitive AWS keys",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "User data is visible through the AWS Management console",
			"resolution": "Remove sensitive data from the EC2 instance user-data",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/no-secrets-in-user-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data"
			],
			"description": "Sensitive data found in instance user data: Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0064",
			"long_id": "aws-kinesis-enable-in-transit-encryption",
			"rule_description": "Kinesis stream is unencrypted.",
			"rule_provider": "aws",
			"rule_service": "kinesis",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kinesis/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream#encryption_type"
			],
			"description": "Stream does not use KMS encryption.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_kinesis_stream.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kinesis\\kinesis_stream.tf",
				"start_line": 8,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms_key_with_vulnerable_policy.tf",
				"start_line": 3,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms_key_is_disabled.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail_0",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms.tf",
				"start_line": 7,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:Describe*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_role_policy.positiveinlinepolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 97,
				"end_line": 97
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_role_policy.positiveinlinepolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 97,
				"end_line": 97
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_role_policy.positiveinlinepolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 97,
				"end_line": 97
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:Describe*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 146,
				"end_line": 146
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 141,
				"end_line": 144
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:Describe*' on wildcarded resource '*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 125,
				"end_line": 125
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:Describe*'",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 120,
				"end_line": 123
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\public_lambda_via_api_gateway.tf",
				"start_line": 12,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.my_lambda",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.positivefunction2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 21,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.positivefunction1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 1,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.morefail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda.tf",
				"start_line": 13,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail_code",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_shell_script_is_encoded.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 10,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail_code",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_shell_script_is_encoded.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 8,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 10,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0009",
			"long_id": "aws-autoscaling-no-public-ip",
			"rule_description": "Launch configuration should not have a public IP address.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The instance or configuration is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address"
			],
			"description": "Launch configuration associates public IP address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0009",
			"long_id": "aws-autoscaling-no-public-ip",
			"rule_description": "Launch configuration should not have a public IP address.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The instance or configuration is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address"
			],
			"description": "Launch configuration associates public IP address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0122",
			"long_id": "aws-autoscaling-no-sensitive-info",
			"rule_description": "Ensure all data stored in the launch configuration EBS is securely encrypted",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Sensitive credentials in user data can be leaked",
			"resolution": "Don't use sensitive data in user data",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-sensitive-info/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64"
			],
			"description": "Sensitive data found in user data: Check for Private Asymetric Key",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0122",
			"long_id": "aws-autoscaling-no-sensitive-info",
			"rule_description": "Ensure all data stored in the launch configuration EBS is securely encrypted",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Sensitive credentials in user data can be leaked",
			"resolution": "Don't use sensitive data in user data",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-sensitive-info/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64"
			],
			"description": "Sensitive data found in user data: Password literal text",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 14,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 14,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.lb_bad_1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 9,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 24,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.lb_bad_1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 9,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 14,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0054",
			"long_id": "aws-elb-http-not-used",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/http-not-used/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener"
			],
			"description": "Listener for application load balancer does not use HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lb_listener.listener_bad_1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 35,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0070",
			"long_id": "aws-mq-enable-audit-logging",
			"rule_description": "MQ Broker should have audit logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without audit logging it is difficult to trace activity in the MQ broker",
			"resolution": "Enable audit logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-audit-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit"
			],
			"description": "Broker does not have audit logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_mq_broker.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 10,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0071",
			"long_id": "aws-mq-enable-general-logging",
			"rule_description": "MQ Broker should have general logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable general logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-general-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general"
			],
			"description": "Broker does not have general logging enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_mq_broker.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 10,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0073",
			"long_id": "aws-msk-enable-in-transit-encryption",
			"rule_description": "A MSK cluster allows unencrypted data in transit.",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/msk/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info-argument-reference"
			],
			"description": "Cluster allows plaintext communication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_msk_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0074",
			"long_id": "aws-msk-enable-logging",
			"rule_description": "Ensure MSK Cluster logging is enabled",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/msk/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#"
			],
			"description": "Cluster does not ship logs to any service.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_msk_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 11,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0075",
			"long_id": "aws-neptune-enable-log-export",
			"rule_description": "Neptune logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Limited visibility of audit trail for changes to Neptune",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/neptune/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports"
			],
			"description": "Cluster does not have audit logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 38,
				"end_line": 49
			}
		},
		{
			"rule_id": "AVD-AWS-0076",
			"long_id": "aws-neptune-enable-storage-encryption",
			"rule_description": "Neptune storage must be encrypted at rest",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of Neptune storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/neptune/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 46,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0128",
			"long_id": "aws-neptune-encryption-customer-key",
			"rule_description": "Neptune encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/neptune/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 38,
				"end_line": 49
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_opsworks_rds_db_instance.my_instance",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\opsworks\\opsworks_rds_db_instance.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster_instance.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 15,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 17,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 9,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 15,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_security_group.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Cluster instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster_instance.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_rds_cluster.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_rds_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_security_group.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0084",
			"long_id": "aws-redshift-encryption-customer-key",
			"rule_description": "Redshift clusters should use at rest encryption",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Data may be leaked if infrastructure is compromised",
			"resolution": "Enable encryption using CMK",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted"
			],
			"description": "Cluster does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0084",
			"long_id": "aws-redshift-encryption-customer-key",
			"rule_description": "Redshift clusters should use at rest encryption",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Data may be leaked if infrastructure is compromised",
			"resolution": "Enable encryption using CMK",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted"
			],
			"description": "Cluster does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 16,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0127",
			"long_id": "aws-redshift-use-vpc",
			"rule_description": "Redshift cluster should be deployed into a specific VPC",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Redshift cluster does not benefit from VPC security if it is deployed in EC2 classic mode",
			"resolution": "Deploy Redshift cluster into a non default VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/use-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name"
			],
			"description": "Cluster is deployed outside of a VPC.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0127",
			"long_id": "aws-redshift-use-vpc",
			"rule_description": "Redshift cluster should be deployed into a specific VPC",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Redshift cluster does not benefit from VPC security if it is deployed in EC2 classic mode",
			"resolution": "Deploy Redshift cluster into a non default VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/use-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name"
			],
			"description": "Cluster is deployed outside of a VPC.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "Public access block does not block public ACLs",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "Public access block does not block public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "Public access block does not ignore public ACLs",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Buckets not publicly accessible through ACL.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access to the bucket can lead to data leakage",
			"resolution": "Don't use canned ACLs or switch to private acl",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Buckets not publicly accessible through ACL.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access to the bucket can lead to data leakage",
			"resolution": "Don't use canned ACLs or switch to private acl",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Buckets not publicly accessible through ACL.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access to the bucket can lead to data leakage",
			"resolution": "Don't use canned ACLs or switch to private acl",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read-write'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "Public access block does not restrict public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.fail_static",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.fail_mfa",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.fail_permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0098",
			"long_id": "aws-ssm-secret-use-customer-key",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ssm/secret-use-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id"
			],
			"description": "Secret explicitly uses the default key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_secretsmanager_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\secret_manager\\secretsmanager_secret.tf",
				"start_line": 7,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0098",
			"long_id": "aws-ssm-secret-use-customer-key",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ssm/secret-use-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id"
			],
			"description": "Secret explicitly uses the default key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_secretsmanager_secret.not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\secret_manager\\secrets_manager_with_vulnerable_policy.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 1,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-vpc-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 15,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\unrestricted_security_group_ingress.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.allow_tls",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 23,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.fail_rule",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group_rule.tf",
				"start_line": 9,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 41,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 33,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 28,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 22,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 16,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 14,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.allow_tls",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.allow_tls",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group_rule.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\unrestricted_security_group_ingress.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.fail_2383",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.fail_sensitive",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.fail_openport",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_http_port_open.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0095",
			"long_id": "aws-sns-enable-topic-encryption",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sns/enable-topic-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
			],
			"description": "Topic encryption does not use a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sns_topic.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sns\\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
				"start_line": 1,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0095",
			"long_id": "aws-sns-enable-topic-encryption",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sns/enable-topic-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
			],
			"description": "Topic encryption does not use a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sns_topic.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sns\\sns_topic.tf",
				"start_line": 7,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test_ec2_instance",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 90,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test_ec2_instance",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 90,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.test_queue",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 108,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue_exposed.tf",
				"start_line": 4,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue.tf",
				"start_line": 8,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0097",
			"long_id": "aws-sqs-no-wildcards-in-policy-documents",
			"rule_description": "AWS SQS policy document has wildcard action statement.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "SQS policies with wildcard actions allow more that is required",
			"resolution": "Keep policy scope to the minimum that is required to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/no-wildcards-in-policy-documents/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy"
			],
			"description": "Queue policy does not restrict actions to a known set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue_policy.fail.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0097",
			"long_id": "aws-sqs-no-wildcards-in-policy-documents",
			"rule_description": "AWS SQS policy document has wildcard action statement.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "SQS policies with wildcard actions allow more that is required",
			"resolution": "Keep policy scope to the minimum that is required to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/no-wildcards-in-policy-documents/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy"
			],
			"description": "Queue policy does not restrict actions to a known set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.public_internet_sg",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 65,
				"end_line": 70
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.public_internet_sg",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 58,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group.public_internet_sg",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 62,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0101",
			"long_id": "aws-vpc-no-default-vpc",
			"rule_description": "AWS best practice to not use the default VPC for workflows",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The default VPC does not have critical security features applied",
			"resolution": "Create a non-default vpc for resources to be created in",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-default-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc"
			],
			"description": "Default VPC is used.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_default_vpc.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\default_vpc.tf",
				"start_line": 8,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-vpc-no-excessive-port-access",
			"rule_description": "An ingress Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "All ports exposed for egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\network_acl_rule.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-vpc-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\no-public-ingress.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-vpc-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\network_acl_rule.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0109",
			"long_id": "aws-workspaces-enable-disk-encryption",
			"rule_description": "Root and user volumes on Workspaces should be encrypted",
			"rule_provider": "aws",
			"rule_service": "workspaces",
			"impact": "Data can be freely read if compromised",
			"resolution": "Root and user volume encryption should be enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/workspaces/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled"
			],
			"description": "Root volume does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_workspaces_workspace.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\workspace\\workspace_workspace.tf",
				"start_line": 8,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0109",
			"long_id": "aws-workspaces-enable-disk-encryption",
			"rule_description": "Root and user volumes on Workspaces should be encrypted",
			"rule_provider": "aws",
			"rule_service": "workspaces",
			"impact": "Data can be freely read if compromised",
			"resolution": "Root and user volume encryption should be enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/workspaces/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled"
			],
			"description": "User volume does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_workspaces_workspace.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\workspace\\workspace_workspace.tf",
				"start_line": 8,
				"end_line": 22
			}
		}
	]
}


       _               _
   ___| |__   ___  ___| | _______   __
  / __| '_ \ / _ \/ __| |/ / _ \ \ / /
 | (__| | | |  __/ (__|   < (_) \ V /
  \___|_| |_|\___|\___|_|\_\___/ \_/

By bridgecrew.io | version: 2.0.845

terraform scan results:

Passed checks: 677, Failed checks: 1338, Skipped checks: 1

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\ami\notencrypted.tf:17-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:19-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\autoscaling\autoscaling_without_lb.tf:19-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_launch_template.foobar
	File: /terraform\aws\autoscaling\autoscaling_without_lb.tf:15-17
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	PASSED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/general_4

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	PASSED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/public_2

Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29

Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	PASSED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/general_4

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	PASSED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/public_2

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\cloudformation_stack\cloudformation_stack.tf:37-39
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	PASSED for resource: aws_cloudfront_distribution.fail
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:7-65
	Guide: https://docs.bridgecrew.io/docs/logging_20

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/iam_23

Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure

Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration

Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint

Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation

Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint

Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy_document.test_destination_policy
	File: /terraform\aws\cloudwatch\cloudwatch_logs_destination_with_vulnerable_policy.tf:4-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_43

Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36

Check: CKV_AWS_165: "Ensure Dynamodb point in time recovery (backup) is enabled for global tables"
	PASSED for resource: aws_dynamodb_global_table.myTable
	File: /terraform\aws\dynamodb\dynamodb_global_table.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-dynamodb-point-in-time-recovery-is-enabled-for-global-tables

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	PASSED for resource: aws_subnet.private_subnet
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:16-23
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.allow_public_outbound_sg
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:56-68
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.allow_public_outbound_sg
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:56-68
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\ecs\ecs_task_definition.tf:44-46
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_97: "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions"
	PASSED for resource: aws_ecs_task_definition.positive1
	File: /terraform\aws\ecs\ecs_task_definition_network_mode_not_recommended.tf:3-58
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_39

Check: CKV_AWS_97: "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions"
	PASSED for resource: aws_ecs_task_definition.fail_password
	File: /terraform\aws\ecs\ecs_task_definition_with_plaintext_password.tf:2-55
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_39

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\efs\efs_with_vulnerable_policy.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\elasticache\elasticache_without_vpc.tf:14-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_6: "Ensure all Elasticsearch has node-to-node encryption enabled"
	PASSED for resource: aws_elasticsearch_domain.es_not_secure_policy
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_5

Check: CKV_AWS_6: "Ensure all Elasticsearch has node-to-node encryption enabled"
	PASSED for resource: aws_elasticsearch_domain.no_iam
	File: /terraform\aws\elasticsearch\elasticsearch_without_iam_authentication.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_5

Check: CKV_AWS_84: "Ensure Elasticsearch Domain Logging is enabled"
	PASSED for resource: aws_elasticsearch_domain.positive1
	File: /terraform\aws\elasticsearch\elasticsearch_without_slow_logs.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_7

Check: CKV_AWS_6: "Ensure all Elasticsearch has node-to-node encryption enabled"
	PASSED for resource: aws_elasticsearch_domain.positive1
	File: /terraform\aws\elasticsearch\elasticsearch_without_slow_logs.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_5

Check: CKV_AWS_138: "Ensure that ELB is cross-zone-load-balancing enabled"
	PASSED for resource: aws_elb.fail
	File: /terraform\aws\elb\elb_using_weak_ciphers.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled

Check: CKV_AWS_127: "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager"
	PASSED for resource: aws_elb.fail
	File: /terraform\aws\elb\elb_using_weak_ciphers.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager

Check: CKV_AWS_213: "Ensure ELB Policy uses only secure protocols"
	PASSED for resource: aws_load_balancer_policy.positive2
	File: /terraform\aws\elb\elb_using_weak_ciphers.tf:20-29

Check: CKV_AWS_213: "Ensure ELB Policy uses only secure protocols"
	PASSED for resource: aws_load_balancer_policy.positive3
	File: /terraform\aws\elb\elb_using_weak_ciphers.tf:31-40

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\elb\load_balancer_policy_using_insecure_protocols.tf:38-40
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_138: "Ensure that ELB is cross-zone-load-balancing enabled"
	PASSED for resource: aws_elb.wu_tang
	File: /terraform\aws\elb\load_balancer_policy_using_insecure_protocols.tf:4-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled

Check: CKV_AWS_127: "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager"
	PASSED for resource: aws_elb.wu_tang
	File: /terraform\aws\elb\load_balancer_policy_using_insecure_protocols.tf:4-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager

Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/iam_23

Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure

Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration

Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint

Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint

Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_43

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.fail
	File: /terraform\aws\iam\iam.tf:12-26
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.fail
	File: /terraform\aws\iam\iam.tf:12-26
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy.fail4
	File: /terraform\aws\iam\iam_admin.tf:71-87
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy.pass2
	File: /terraform\aws\iam\iam_admin.tf:89-106
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy.pass2
	File: /terraform\aws\iam\iam_admin.tf:89-106
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_ssoadmin_permission_set_inline_policy.pass1
	File: /terraform\aws\iam\iam_admin.tf:109-140
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_ssoadmin_permission_set_inline_policy.pass1
	File: /terraform\aws\iam\iam_admin.tf:109-140
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\iam\iam_authentication_without_mfa.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.mfa
	File: /terraform\aws\iam\iam_authentication_without_mfa.tf:19-40
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.mfa
	File: /terraform\aws\iam\iam_authentication_without_mfa.tf:19-40
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_168: "Ensure SQS queue policy is not public by only allowing specific services or principals to access it"
	PASSED for resource: aws_sqs_queue.positive1
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

Check: CKV_AWS_11: "Ensure IAM password policy requires at least one lowercase letter"
	PASSED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_6

Check: CKV_AWS_12: "Ensure IAM password policy requires at least one number"
	PASSED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_8

Check: CKV_AWS_14: "Ensure IAM password policy requires at least one symbol"
	PASSED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_7

Check: CKV_AWS_15: "Ensure IAM password policy requires at least one uppercase letter"
	PASSED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_5

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_11: "Ensure IAM password policy requires at least one lowercase letter"
	PASSED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_6

Check: CKV_AWS_12: "Ensure IAM password policy requires at least one number"
	PASSED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_8

Check: CKV_AWS_14: "Ensure IAM password policy requires at least one symbol"
	PASSED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_7

Check: CKV_AWS_15: "Ensure IAM password policy requires at least one uppercase letter"
	PASSED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_5

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.fail_key
	File: /terraform\aws\iam\iam_root_account_has_active_access_keys.tf:12-30
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.fail_key
	File: /terraform\aws\iam\iam_root_account_has_active_access_keys.tf:12-30
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.fail_mfa
	File: /terraform\aws\iam\iam_user_policy_without_mfa.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.fail_mfa
	File: /terraform\aws\iam\iam_user_policy_without_mfa.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\policy\iam_policy_grants_assumerole_permission_across_all_services.tf:4-23
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_user_policy.positive3
	File: /terraform\aws\iam\policy\iam_policy_grants_full_permissions.tf:16-37
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_user_policy.positive3
	File: /terraform\aws\iam\policy\iam_policy_grants_full_permissions.tf:16-37
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.fail
	File: /terraform\aws\iam\role\IAMRoleAllowAssumeFromAccount.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.fail2
	File: /terraform\aws\iam\role\IAMRoleAllowAssumeFromAccount.tf:20-34
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.lambdaRole
	File: /terraform\aws\iam\role\IAMRoleAllowsPublicAssume.tf:4-29
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.fail_principle
	File: /terraform\aws\iam\role\iam_role_allows_all_principals_to_assume.tf:4-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.fail_principle
	File: /terraform\aws\iam\role\iam_role_allows_all_principals_to_assume.tf:4-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_role_policy.test_policy
	File: /terraform\aws\iam\role\iam_role_policy_passrole_allows_all.tf:1-19
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_role_policy.test_policy
	File: /terraform\aws\iam\role\iam_role_policy_passrole_allows_all.tf:1-19
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\role\iam_role_with_full_privileges.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\role\iam_role_with_full_privileges.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.positive2
	File: /terraform\aws\iam\role\iam_role_with_full_privileges.tf:26-49
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.positive2
	File: /terraform\aws\iam\role\iam_role_with_full_privileges.tf:26-49
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\imagebuilder\aws_imagebuilder_component.tf:24-26
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_200: "Ensure that Image Recipe EBS Disk are encrypted with CMK"
	PASSED for resource: aws_imagebuilder_image_recipe.fail
	File: /terraform\aws\imagebuilder\aws_imagebuilder_image_recipe.tf:4-24

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_33: "Ensure KMS key policy does not contain wildcard (*) principal"
	PASSED for resource: aws_kms_key.fail
	File: /terraform\aws\kms\kms_key_is_disabled.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\kms\kms_key_with_vulnerable_policy.tf:37-39
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_33: "Ensure KMS key policy does not contain wildcard (*) principal"
	PASSED for resource: aws_kms_key.fail
	File: /terraform\aws\kms\kms_key_with_vulnerable_policy.tf:3-35
	Guide: https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal

Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	PASSED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_3

Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	PASSED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_3

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.positiverole1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:39-61
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.positiverole1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:39-61
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.positiverole2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:63-85
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.positiverole2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:63-85
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_role_policy.positiveinlinepolicy1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:88-107
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_role_policy.positiveinlinepolicy1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:88-107
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy.positivecustomermanagedpolicy1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:109-127
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy.positivecustomermanagedpolicy1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:109-127
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	PASSED for resource: aws_iam_policy.positivecustomermanagedpolicy2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:129-147
	Guide: https://docs.bridgecrew.io/docs/iam_47

Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	PASSED for resource: aws_iam_policy.positivecustomermanagedpolicy2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:129-147
	Guide: https://docs.bridgecrew.io/docs/iam_48

Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: aws_iam_policy_attachment.positivedirectpolicyattachment1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:155-158
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	PASSED for resource: aws_iam_policy_attachment.positivedirectpolicyattachment2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:166-169
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	PASSED for resource: aws_lambda_function.my_lambda
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_3

Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	PASSED for resource: aws_iam_role.lambda_role
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:13-31
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	PASSED for resource: aws_iam_role.lambda_role
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:13-31
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	PASSED for resource: aws_lambda_function.example
	File: /terraform\aws\lambda\public_lambda_via_api_gateway.tf:12-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_3

Check: CKV_AWS_69: "Ensure MQ Broker is not publicly exposed"
	PASSED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32
	Guide: https://docs.bridgecrew.io/docs/public_11

Check: CKV_AWS_33: "Ensure KMS key policy does not contain wildcard (*) principal"
	PASSED for resource: aws_kms_key.example
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:34-35
	Guide: https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal

Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20

Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14

Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/general_4

Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/public_2

Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12

Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	PASSED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/public_2

Check: CKV_AWS_141: "Ensured that redshift cluster allowing version upgrade by default"
	PASSED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-allow-version-upgrade-by-default

Check: CKV_AWS_87: "Redshift cluster should not be publicly accessible"
	PASSED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/public_9

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket_policy.positive1
	File: /terraform\aws\s3\s3_bucket_access_to_any_principal.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket_policy.positive1
	File: /terraform\aws\s3\s3_bucket_access_to_any_principal.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket_policy.positive1
	File: /terraform\aws\s3\s3_bucket_allows_all_actions_from_all_principals.tf:1-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket_policy.positive1
	File: /terraform\aws\s3\s3_bucket_allows_all_actions_from_all_principals.tf:1-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket_policy.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:5-30
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket_policy.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:5-30
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLS enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.block_public_bucket_3
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:10-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_19

Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.block_public_bucket_3
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:10-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_20

Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.block_public_bucket_3
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:10-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_21

Check: CKV_AWS_56: "Ensure S3 bucket has 'restrict_public_bucket' enabled"
	PASSED for resource: aws_s3_bucket_public_access_block.block_public_bucket_3
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:10-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_22

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_70: "Ensure S3 bucket does not allow an action with any Principal"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_23

Check: CKV_AWS_93: "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)"
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_53

Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	PASSED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\secret_mamager\secrets_manager_with_vulnerable_policy.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\securiity_group_unknown_port_exposed_to_internet.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\securiity_group_unknown_port_exposed_to_internet.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group.tf:40-44
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group.tf:40-44
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group_rule.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group_rule.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.allow_tls
	File: /terraform\aws\security_groups\security_groups_not_used.tf:8-33
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.allow_tls
	File: /terraform\aws\security_groups\security_groups_not_used.tf:8-33
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\security_http_port_open.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\security_http_port_open.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\security_http_port_open.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive2
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive2
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive2
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive3
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:31-43
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive3
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:31-43
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive3
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:31-43
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive4
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:46-58
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive4
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:46-58
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive4
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:46-58
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive5
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:61-73
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive5
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:61-73
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive5
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:61-73
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive6
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:76-88
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive6
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:76-88
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive6
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:76-88
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive7
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:91-103
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive7
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:91-103
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive7
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:91-103
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive8
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:106-118
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive8
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:106-118
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive8
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:106-118
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_small_public_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_small_public_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_small_public_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_wide_private_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_wide_private_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_wide_private_network.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sql_analysis_services_port_2383_is_publicly_accessible.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_31

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sql_analysis_services_port_2383_is_publicly_accessible.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\sql_analysis_services_port_2383_is_publicly_accessible.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group_rule.positive1
	File: /terraform\aws\security_groups\unrestricted_security_group_ingress.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group_rule.positive1
	File: /terraform\aws\security_groups\unrestricted_security_group_ingress.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_169: "Ensure SNS topic policy is not public by only allowing specific services or principals to access it"
	PASSED for resource: aws_sns_topic_policy.positive2
	File: /terraform\aws\sns\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf:5-22
	Guide: https://docs.bridgecrew.io/docs/ensure-sns-topic-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

Check: CKV_AWS_168: "Ensure SQS queue policy is not public by only allowing specific services or principals to access it"
	PASSED for resource: aws_sqs_queue.positive1
	File: /terraform\aws\sqs\sqs_queue_exposed.tf:4-27
	Guide: https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

Check: CKV_AWS_72: "Ensure SQS policy does not allow ALL (*) actions."
	PASSED for resource: aws_sqs_queue_policy.fail_policy
	File: /terraform\aws\sqs\sqs_queue_policy.tf:5-25
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_46

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	PASSED for resource: aws_subnet.public_subnet
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:18-25
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default

Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	PASSED for resource: aws_security_group.public_internet_sg
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:50-69
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	PASSED for resource: aws_security_group.public_internet_sg
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:50-69
	Guide: https://docs.bridgecrew.io/docs/networking_2

Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	PASSED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

Check: CKV_AWS_88: "EC2 instance should not have public IP."
	PASSED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/public_12

Check: CKV_AWS_168: "Ensure SQS queue policy is not public by only allowing specific services or principals to access it"
	PASSED for resource: aws_sqs_queue.test_queue
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:103-105
	Guide: https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\vpc\network_acl_with_unrestricted_access_to_rdp.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\vpc\network_acl_with_unrestricted_access_to_ssh.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	PASSED for resource: aws.default
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:13-15
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	PASSED for resource: aws_subnet.public
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:50-59
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default

Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	PASSED for resource: aws_subnet.private
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:61-70
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_92: "Ensure that Virtual Machines use managed disks"
	PASSED for resource: azurerm_linux_virtual_machine.bad_linux_example
	File: /terraform\azurerm\compute\linux_virtual_machine.tf:9-22
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-use-managed-disks

Check: CKV_AZURE_45: "Ensure that no sensitive credentials are exposed in VM custom_data"
	PASSED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\compute\virtual_machine.tf:12-35
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

Check: CKV_AZURE_118: "Ensure that Network Interfaces disable IP forwarding"
	PASSED for resource: azurerm_network_interface.main
	File: /terraform\azurerm\compute\virtual_machine.tf:53-63
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-disable-ip-forwarding

Check: CKV_AZURE_138: "Ensures that ACR disables anonymous pulling of images"
	PASSED for resource: azurerm_container_registry.positive2
	File: /terraform\azurerm\container\admin_user_enabled_for_container_registry.tf:6-13

Check: CKV_AZURE_137: "Ensure ACR admin account is disabled"
	PASSED for resource: azurerm_container_registry.acr
	File: /terraform\azurerm\container\azure_container_registry_with_no_locks.tf:1-7

Check: CKV_AZURE_138: "Ensures that ACR disables anonymous pulling of images"
	PASSED for resource: azurerm_container_registry.acr
	File: /terraform\azurerm\container\azure_container_registry_with_no_locks.tf:1-7

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	PASSED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\enable-ssl-enforcement.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

Check: CKV_AZURE_54: "Ensure MySQL is using the latest version of TLS encryption"
	PASSED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-mysql-is-using-the-latest-version-of-tls-encryption

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppHttpVersionLatest.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	PASSED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppsEnableAuthentication.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\authentication-enabled.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enable-http2.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enforce-https.tf:15-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_client_certificates_unrequired.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_ftps_enforce_disabled.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	PASSED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_ftps_enforce_disabled.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_managed_identity_disabled.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	PASSED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_not_using_latest_tls_encryption_version.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

Check: CKV_AZURE_39: "Ensure that no custom subscription owner roles are created"
	PASSED for resource: azurerm_role_definition.example2
	File: /terraform\azurerm\iam\role_definition_allows_custom_role_creation.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/do-not-create-custom-subscription-owner-roles

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesFirewallRulesSettings.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesPurgeProtection.tf:2-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultRecoveryEnabled.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\no-purge.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\specify-network-acl.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	PASSED for resource: azurerm_key_vault.example1
	File: /terraform\azurerm\keyvault\vault_auditing_disabled.tf:16-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	PASSED for resource: azurerm_key_vault.example1
	File: /terraform\azurerm\keyvault\vault_auditing_disabled.tf:16-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	PASSED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

Check: CKV_AZURE_2: "Ensure Azure managed disk has encryption enabled"
	PASSED for resource: azurerm_managed_disk.source
	File: /terraform\azurerm\managed_disk\ManagedDiskEncryptionSet.tf:5-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_1

Check: CKV_AZURE_38: "Ensure audit profile captures all the activities"
	PASSED for resource: azurerm_monitor_log_profile.positive1
	File: /terraform\azurerm\monitor\small_activity_log_retention_period.tf:2-23
	Guide: https://docs.bridgecrew.io/docs/ensure-audit-profile-captures-all-activities

Check: CKV_AZURE_52: "Ensure MSSQL is using the latest version of TLS encryption"
	PASSED for resource: azurerm_mssql_server.example
	File: /terraform\azurerm\mssql\SQLServerPublicAccessDisabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-mssql-is-using-the-latest-version-of-tls-encryption

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_11: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
	PASSED for resource: azurerm_sql_firewall_rule.positive3
	File: /terraform\azurerm\mssql\unrestricted_sql_server_access.tf:15-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_4

Check: CKV_AZURE_11: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
	PASSED for resource: azurerm_sql_firewall_rule.positive4
	File: /terraform\azurerm\mssql\unrestricted_sql_server_access.tf:23-29
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_4

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_udp
	File: /terraform\azurerm\network\NSGRuleUDPAccessRestricted.tf:2-22
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_udp
	File: /terraform\azurerm\network\NSGRuleUDPAccessRestricted.tf:2-22
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.positive5
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:34-42
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_range
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_range
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_range
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_rdp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:17-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_rdp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:17-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_rdp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:17-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_drp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:28-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_drp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:28-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_group.example_drp
	File: /terraform\azurerm\network\disable-rdp-from-internet.tf:28-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_118: "Ensure that Network Interfaces disable IP forwarding"
	PASSED for resource: azurerm_network_interface.positive
	File: /terraform\azurerm\network\network_interfaces_dont_use_public_ip.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-disable-ip-forwarding

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_egress
	File: /terraform\azurerm\network\no-public-egress.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_egress
	File: /terraform\azurerm\network\no-public-egress.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_egress
	File: /terraform\azurerm\network\no-public-egress.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ingress
	File: /terraform\azurerm\network\no-public-ingress.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ingress
	File: /terraform\azurerm\network\no-public-ingress.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_ingress
	File: /terraform\azurerm\network\no-public-ingress.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:14-25
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:14-25
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_group.fail_ssh
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:14-25
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ssh2
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:28-40
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_rule.fail_ssh2
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:28-40
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_rule.fail_ssh2
	File: /terraform\azurerm\network\ssh-blocked-from-internet.tf:28-40
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_9: "Ensure that RDP access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_ddos
	File: /terraform\azurerm\network\virtual_network_with_ddos_protection_plan_disabled.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_2

Check: CKV_AZURE_10: "Ensure that SSH access is restricted from the internet"
	PASSED for resource: azurerm_network_security_group.example_ddos
	File: /terraform\azurerm\network\virtual_network_with_ddos_protection_plan_disabled.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_3

Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	PASSED for resource: azurerm_network_security_group.example_ddos
	File: /terraform\azurerm\network\virtual_network_with_ddos_protection_plan_disabled.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerConnectionThrottlingEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerConnectionThrottlingEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogCheckpointEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogCheckpointEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogConnectionsEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogConnectionsEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	PASSED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerSSLEnforcementEnabled.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	PASSED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerSSLEnforcementEnabled.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_configuration.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_configuration.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_configuration.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgre_sql_log_duration_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgre_sql_log_duration_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgre_sql_log_duration_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgresql_log_disconnections_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgresql_log_disconnections_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\postgresql_log_disconnections_not_set.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\small_postgresql_db_server_log_retention_period.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\small_postgresql_db_server_log_retention_period.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	PASSED for resource: azurerm_postgresql_configuration.fail
	File: /terraform\azurerm\postgreSQL\small_postgresql_db_server_log_retention_period.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

Check: CKV_AZURE_91: "Ensure that only SSL are enabled for Cache for Redis"
	PASSED for resource: azurerm_redis_cache.example
	File: /terraform\azurerm\redis\RedisCachePublicNetworkAccessEnabled.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-only-ssl-are-enabled-for-cache-for-redis

Check: CKV_AZURE_91: "Ensure that only SSL are enabled for Cache for Redis"
	PASSED for resource: azurerm_redis_cache.positive1
	File: /terraform\azurerm\redis\redis_not_updated_regularly.tf:1-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-only-ssl-are-enabled-for-cache-for-redis

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_131: "Ensure that 'Security contact emails' is set"
	PASSED for resource: azurerm_security_center_contact.positive1
	File: /terraform\azurerm\security_center\email_alerts_disabled.tf:1-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-contact-emails-is-set

Check: CKV_AZURE_20: "Ensure that security contact 'Phone number' is set"
	PASSED for resource: azurerm_security_center_contact.positive1
	File: /terraform\azurerm\security_center\email_alerts_disabled.tf:1-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_3

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	PASSED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	PASSED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

Check: CKV_AZURE_21: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	PASSED for resource: azurerm_security_center_contact.positive
	File: /terraform\azurerm\security_center\security_contact_email.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_4

Check: CKV_AZURE_22: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	PASSED for resource: azurerm_security_center_contact.positive
	File: /terraform\azurerm\security_center\security_contact_email.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_5

Check: CKV_AZURE_20: "Ensure that security contact 'Phone number' is set"
	PASSED for resource: azurerm_security_center_contact.positive
	File: /terraform\azurerm\security_center\security_contact_email.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_3

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\StorageAccountAzureServicesAccessEnabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:23-31
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.fail
	File: /terraform\azurerm\storage\default-action-deny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\netrules.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.positive3
	File: /terraform\azurerm\storage\public_storage_account.tf:38-46
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.positive4
	File: /terraform\azurerm\storage\public_storage_account.tf:48-55
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account_network_rules.positive1
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	PASSED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

Check: CKV_AZURE_45: "Ensure that no sensitive credentials are exposed in VM custom_data"
	PASSED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	PASSED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	PASSED for resource: azurerm_linux_virtual_machine.example
	File: /terraform\azurerm\vms\VMStorageOsDisk.tf:2-30
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	PASSED for resource: azurerm_linux_virtual_machine.default
	File: /terraform\azurerm\vms\linux_virtual_machine.tf:4-20
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

Check: CKV_AZURE_92: "Ensure that Virtual Machines use managed disks"
	PASSED for resource: azurerm_linux_virtual_machine.default
	File: /terraform\azurerm\vms\linux_virtual_machine.tf:4-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-use-managed-disks

Check: CKV_AZURE_45: "Ensure that no sensitive credentials are exposed in VM custom_data"
	PASSED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

Check: CKV_AZURE_135: "Ensure Application Gateway WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell"
	PASSED for resource: azurerm_web_application_firewall_policy.example
	File: /terraform\azurerm\waf\WAFSpecifiedModeAppGW.tf:3-86
	Guide: https://docs.bridgecrew.io/docs/ensure-application-gateway-waf-prevents-message-lookup-in-log4j2

Check: CKV_DIO_4: "Ensure the firewall ingress is not wide open"
	PASSED for resource: digitalocean_firewall.fail
	File: /terraform\digitalocean\compute\no-public-egress.tf:7-16

Check: CKV_GCP_37: "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)"
	PASSED for resource: google_compute_disk.default
	File: /terraform\google\compute\disk\compute_disk.tf:9-18
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_x

Check: CKV_GCP_77: "Ensure Google compute firewall ingress does not allow on ftp port"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_default_firewall_rule.tf:3-6

Check: CKV_GCP_75: "Ensure Google compute firewall ingress does not allow unrestricted FTP access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_default_firewall_rule.tf:3-6

Check: CKV_GCP_2: "Ensure Google compute firewall ingress does not allow unrestricted ssh access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_default_firewall_rule.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_1

Check: CKV_GCP_88: "Ensure Google compute firewall ingress does not allow unrestricted mysql access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_default_firewall_rule.tf:3-6

Check: CKV_GCP_3: "Ensure Google compute firewall ingress does not allow unrestricted rdp access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_default_firewall_rule.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_2

Check: CKV_GCP_77: "Ensure Google compute firewall ingress does not allow on ftp port"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_firewall_rule_allows_all_ports.tf:4-18

Check: CKV_GCP_75: "Ensure Google compute firewall ingress does not allow unrestricted FTP access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_firewall_rule_allows_all_ports.tf:4-18

Check: CKV_GCP_2: "Ensure Google compute firewall ingress does not allow unrestricted ssh access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_firewall_rule_allows_all_ports.tf:4-18
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_1

Check: CKV_GCP_88: "Ensure Google compute firewall ingress does not allow unrestricted mysql access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_firewall_rule_allows_all_ports.tf:4-18

Check: CKV_GCP_3: "Ensure Google compute firewall ingress does not allow unrestricted rdp access"
	PASSED for resource: google_compute_firewall.fail
	File: /terraform\google\compute\firewall\google_compute_network_using_firewall_rule_allows_all_ports.tf:4-18
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_2

Check: CKV_GCP_38: "Ensure VM disks for critical VMs are encrypted with Customer Supplied Encryption Keys (CSEK)"
	PASSED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/encrypt-boot-disks-for-instances-with-cseks

Check: CKV_GCP_18: "Ensure GKE Control Plane is not public"
	PASSED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_10

Check: CKV_GCP_20: "Ensure master authorized networks is set to enabled in GKE clusters"
	PASSED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_12

Check: CKV_GCP_23: "Ensure Kubernetes Cluster is created with Alias IP ranges enabled"
	PASSED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_15

Check: CKV_GCP_1: "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters"
	PASSED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_1

Check: CKV_GCP_7: "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters"
	PASSED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_2

Check: CKV_GCP_8: "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters"
	PASSED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_3

Check: CKV_GCP_18: "Ensure GKE Control Plane is not public"
	PASSED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_10

Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	PASSED for resource: google_project_iam_binding.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_binding.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_44: "Ensure no roles that enable to impersonate and manage all service accounts are used at a folder level"
	PASSED for resource: google_folder_iam_member.fail
	File: /terraform\google\iam\iam_member\folder_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_5

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.project
	File: /terraform\google\iam\iam_member\no-privileged-service-accounts.tf:10-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.project
	File: /terraform\google\iam\iam_member\no-privileged-service-accounts.tf:10-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.project_123
	File: /terraform\google\iam\iam_member\no-project-level-default-service-account-assignment.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	PASSED for resource: google_project_iam_member.project_123
	File: /terraform\google\iam\iam_member\no-project-level-default-service-account-assignment.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	PASSED for resource: google_project_iam_member.project_123
	File: /terraform\google\iam\iam_member\no-project-level-default-service-account-assignment.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

Check: CKV_GCP_82: "Ensure KMS keys are protected from deletion"
	PASSED for resource: google_kms_crypto_key.positive1
	File: /terraform\google\kms\kms_crypto_key_publicly_accessible.tf:7-14

Check: CKV_GCP_43: "Ensure KMS encryption keys are rotated within a period of 90 days"
	PASSED for resource: google_kms_crypto_key.positive1
	File: /terraform\google\kms\kms_crypto_key_publicly_accessible.tf:7-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_4

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.project
	File: /terraform\google\project\RoleServiceAccountUser.tf:7-11
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.project
	File: /terraform\google\project\RoleServiceAccountUser.tf:7-11
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\project\google_project_iam_member_service_account_has_admin_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\project\google_project_iam_member_service_account_has_admin_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\project\google_project_iam_member_service_account_has_admin_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	PASSED for resource: google_project_iam_member.positive1
	File: /terraform\google\project\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.positive1
	File: /terraform\google\project\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	PASSED for resource: google_project_iam_binding.fail_service
	File: /terraform\google\project\project_iam_binding.tf:4-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\project\project_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	PASSED for resource: google_project_iam_member.fail
	File: /terraform\google\project\project_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

Check: CKV_GCP_79: "Ensure SQL database is using latest Major version"
	PASSED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48

Check: CKV_GCP_11: "Ensure that Cloud SQL database Instances are not open to the world"
	PASSED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_4

Check: CKV_GCP_11: "Ensure that Cloud SQL database Instances are not open to the world"
	PASSED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_4

Check: CKV_GCP_62: "Bucket should log access"
	PASSED for resource: google_storage_bucket.fail_self
	File: /terraform\google\storage\storage_bucket.tf:23-35
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_logging_2

Check: CKV_OPENSTACK_1: "Ensure no hard coded OpenStack password, token, or application_credential_secret exists in provider"
	PASSED for resource: openstack.default
	File: /terraform\openstack\fw\provider.openstack.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/bc_openstack_secrets_1

Check: CKV_OCI_16: "Ensure VCN has an inbound security list"
	PASSED for resource: oci_core_security_list.fail2
	File: /terraform\oracle\core_security_list\stateless.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_oci_networking_1

Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	PASSED for resource: aws_lb.test
	File: /terraform\aws\security_groups\security_groups_not_used.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	PASSED for resource: aws_alb.disabled
	File: /terraform\aws\lb\lb.tf:14-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	PASSED for resource: aws_lb.default
	File: /terraform\aws\lb\lb.tf:22-27
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	PASSED for resource: aws_alb.fail
	File: /terraform\aws\elb\alb.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route_table.private_rtb
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:25-31

Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route_table.public_rtb
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:27-43

Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route_table.public_route_table
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:118-130

Check: CKV2_AWS_35: "AWS NAT Gateways should be utilized for the default route"
	PASSED for resource: aws_route_table.private_route_table
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:132-144

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.positive1_1
	File: /terraform\aws\iam\policy\iam_policies_attached_to_user.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.fail_key
	File: /terraform\aws\iam\iam_root_account_has_active_access_keys.tf:7-10
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.positive1
	File: /terraform\aws\iam\policy\iam_policy_grants_full_permissions.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.user_one2
	File: /terraform\aws\iam\group\iam_group_without_users.tf:16-18
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.user_two2
	File: /terraform\aws\iam\group\iam_group_without_users.tf:20-22
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	PASSED for resource: aws_iam_user.fail_mfa
	File: /terraform\aws\iam\iam_user_policy_without_mfa.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.public_internet_sg
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:50-69
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.allow_public_outbound_sg
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:56-68
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	PASSED for resource: aws_security_group.block_access_not_ok
	File: /terraform\aws\emr\emr_cluster.tf:34-51
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

Check: CKV2_AZURE_7: "Ensure that Azure Active Directory Admin is configured"
	PASSED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-active-directory-admin-is-configured

Check: CKV_AZURE_119: "Ensure that Network Interfaces don't use public IPs"
	PASSED for resource: azurerm_network_interface.main
	File: /terraform\azurerm\compute\virtual_machine.tf:53-63
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-dont-use-public-ips

Check: CKV_AZURE_119: "Ensure that Network Interfaces don't use public IPs"
	PASSED for resource: azurerm_network_interface.fail
	File: /terraform\azurerm\network\network_interface.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-dont-use-public-ips

Check: CKV_AZURE_119: "Ensure that Network Interfaces don't use public IPs"
	PASSED for resource: azurerm_network_interface.positive
	File: /terraform\azurerm\network\network_interfaces_dont_use_public_ip.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-dont-use-public-ips

Check: CKV2_AZURE_19: "Ensure that Azure Synapse workspaces have no IP firewall rules attached"
	PASSED for resource: azurerm_synapse_workspace.fail
	File: /terraform\azurerm\synapse\virtual-network-enabled.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-synapse-workspaces-have-no-ip-firewall-rules-attached

Check: CKV2_AZURE_19: "Ensure that Azure Synapse workspaces have no IP firewall rules attached"
	PASSED for resource: azurerm_synapse_workspace.example
	File: /terraform\azurerm\synapse\SynapseWorkspaceEnablesManagedVirtualNetworks.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-synapse-workspaces-have-no-ip-firewall-rules-attached

Check: CKV2_AZURE_14: "Ensure that Unattached disks are encrypted"
	PASSED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-unattached-disks-are-encrypted

Check: CKV2_AZURE_14: "Ensure that Unattached disks are encrypted"
	PASSED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-unattached-disks-are-encrypted

Check: CKV2_AZURE_14: "Ensure that Unattached disks are encrypted"
	PASSED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-unattached-disks-are-encrypted

Check: CKV2_AZURE_13: "Ensure that sql servers enables data security policy"
	PASSED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-servers-enables-data-security-policy

Check: CKV2_AZURE_13: "Ensure that sql servers enables data security policy"
	PASSED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-servers-enables-data-security-policy

Check: CKV2_AZURE_13: "Ensure that sql servers enables data security policy"
	PASSED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-servers-enables-data-security-policy

Check: CKV2_AZURE_13: "Ensure that sql servers enables data security policy"
	PASSED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-servers-enables-data-security-policy

Check: CKV2_AZURE_13: "Ensure that sql servers enables data security policy"
	PASSED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-servers-enables-data-security-policy

Check: CKV2_AWS_1: "Ensure that all NACL are attached to subnets"
	PASSED for resource: aws_network_acl.allow_public_outbound_nacl
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:38-54
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets

Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	PASSED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	PASSED for resource: aws_lb.test
	File: /terraform\aws\security_groups\security_groups_not_used.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	PASSED for resource: aws_lb.default
	File: /terraform\aws\lb\lb.tf:22-27
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	PASSED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	PASSED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	PASSED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

Check: CKV2_AZURE_9: "Ensure Virtual Machines are utilizing Managed Disks"
	PASSED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/ensure-virtual-machines-are-utilizing-managed-disks

Check: CKV2_AZURE_2: "Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account"
	PASSED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vulnerability-assessment-va-is-enabled-on-a-sql-server-by-setting-a-storage-account

Check: CKV2_GCP_7: "Ensure that a MySQL database instance does not allow anyone to connect with administrative privileges"
	PASSED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/ensure-that-a-mysql-database-instance-does-not-allow-anyone-to-connect-with-administrative-privileges

Check: CKV2_GCP_7: "Ensure that a MySQL database instance does not allow anyone to connect with administrative privileges"
	PASSED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/ensure-that-a-mysql-database-instance-does-not-allow-anyone-to-connect-with-administrative-privileges

Check: CKV2_GCP_8: "Ensure that Cloud KMS Key Rings are not anonymously or publicly accessible"
	PASSED for resource: google_kms_key_ring.keyring
	File: /terraform\google\kms\google_kms_crypto_key.tf:7-10

Check: CKV2_GCP_8: "Ensure that Cloud KMS Key Rings are not anonymously or publicly accessible"
	PASSED for resource: google_kms_key_ring.positive1
	File: /terraform\google\kms\kms_crypto_key_publicly_accessible.tf:3-6

Check: CKV2_AWS_29: "Ensure public API gateway are protected by WAF"
	PASSED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_stage.fail.tf:13-18
	Guide: https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf

Check: CKV2_GCP_6: "Ensure that Cloud KMS cryptokeys are not anonymously or publicly accessible"
	PASSED for resource: google_kms_crypto_key.positive1
	File: /terraform\google\kms\kms_crypto_key_publicly_accessible.tf:7-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cloud-kms-cryptokeys-are-not-anonymously-or-publicly-accessible

Check: CKV2_AZURE_6: "Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled"
	PASSED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/ensure-allow-access-to-azure-services-for-postgresql-database-server-is-disabled

Check: CKV2_AZURE_6: "Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled"
	PASSED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/ensure-allow-access-to-azure-services-for-postgresql-database-server-is-disabled

Check: CKV2_AZURE_6: "Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled"
	PASSED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/ensure-allow-access-to-azure-services-for-postgresql-database-server-is-disabled

Check: CKV2_AZURE_6: "Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled"
	PASSED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-allow-access-to-azure-services-for-postgresql-database-server-is-disabled

Check: CKV_AWS_205: "Ensure to Limit AMI launch Permissions"
	FAILED for resource: aws_ami_launch_permission.fail
	File: /terraform\aws\ami\ami_shared_with_multiple_accounts.tf:4-7

		4 | resource "aws_ami_launch_permission" "fail" {
		5 |   image_id   = "ami-2345678"
		6 |   account_id = "987654321"
		7 | }


Check: CKV_AWS_204: "Ensure AMIs are encrypted using KMS CMKs"
	FAILED for resource: aws_ami.fail
	File: /terraform\aws\ami\notencrypted.tf:3-15

		3  | resource "aws_ami" "fail" {
		4  |   name                = "terraform-example"
		5  |   virtualization_type = "hvm"
		6  |   root_device_name    = "/dev/xvda"
		7  |
		8  |   ebs_block_device {
		9  |     device_name = "/dev/xvda"
		10 |     volume_size = 8
		11 |   }
		12 |   tags = {
		13 |     "key" = "value"
		14 |   }
		15 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-deployment\api_gateway_deployment_without_access_log_setting.tf:11-19
	Guide: https://docs.bridgecrew.io/docs/logging_17

		11 | resource "aws_api_gateway_stage" "fail" {
		12 |   deployment_id = aws_api_gateway_deployment.fail.id
		13 |   rest_api_id   = aws_api_gateway_rest_api.example.id
		14 |   stage_name    = "example"
		15 |   # access_log_settings {
		16 |   #   destination_arn = "dest"
		17 |   #   format = "format"
		18 |   # }
		19 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-deployment\api_gateway_deployment_without_access_log_setting.tf:11-19

		11 | resource "aws_api_gateway_stage" "fail" {
		12 |   deployment_id = aws_api_gateway_deployment.fail.id
		13 |   rest_api_id   = aws_api_gateway_rest_api.example.id
		14 |   stage_name    = "example"
		15 |   # access_log_settings {
		16 |   #   destination_arn = "dest"
		17 |   #   format = "format"
		18 |   # }
		19 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-deployment\api_gateway_deployment_without_access_log_setting.tf:11-19
	Guide: https://docs.bridgecrew.io/docs/logging_15

		11 | resource "aws_api_gateway_stage" "fail" {
		12 |   deployment_id = aws_api_gateway_deployment.fail.id
		13 |   rest_api_id   = aws_api_gateway_rest_api.example.id
		14 |   stage_name    = "example"
		15 |   # access_log_settings {
		16 |   #   destination_arn = "dest"
		17 |   #   format = "format"
		18 |   # }
		19 | }


Check: CKV_AWS_206: "Ensure API Gateway Domain uses a modern security Policy"
	FAILED for resource: aws_api_gateway_domain_name.fail
	File: /terraform\aws\api-gateway\api-gateway-domain-name\api_gateway_domain_name.tf:6-9

		6 | resource "aws_api_gateway_domain_name" "fail" {
		7 |   security_policy = "TLS_1_0"
		8 |   domain_name     = "FreeBeer"
		9 | }


Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	FAILED for resource: aws_api_gateway_method.fail
	File: /terraform\aws\api-gateway\api-gateway-method\api_gateway_method.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set

		4 | resource "aws_api_gateway_method" "fail" {
		5 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		6 |   resource_id   = aws_api_gateway_resource.fail.id
		7 |   http_method   = "GET"
		8 |   authorization = "NONE"
		9 | }


Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	FAILED for resource: aws_api_gateway_method.positive3
	File: /terraform\aws\api-gateway\api-gateway-resource\open_access_to_resources_through_api.tf:18-24
	Guide: https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set

		18 | resource "aws_api_gateway_method" "positive3" {
		19 |   rest_api_id = aws_api_gateway_rest_api.MyDemoAPI.id
		20 |   resource_id = aws_api_gateway_resource.MyDemoResource.id
		21 |   http_method = "GET"
		22 |   # http_method   = "OPTIONS"
		23 |   authorization = "NONE"
		24 | }


Check: CKV_AWS_59: "Ensure there is no open access to back-end resources through API"
	FAILED for resource: aws_api_gateway_method.api_gw_method
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:53-58
	Guide: https://docs.bridgecrew.io/docs/public_6-api-gateway-authorizer-set

		53 | resource "aws_api_gateway_method" "api_gw_method" {
		54 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		55 |   resource_id   = aws_api_gateway_resource.api_gw_resource.id
		56 |   http_method   = "GET"
		57 |   authorization = "NONE"
		58 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.api_gw_stage
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:75-79
	Guide: https://docs.bridgecrew.io/docs/logging_17

		75 | resource "aws_api_gateway_stage" "api_gw_stage" {
		76 |   stage_name    = "prod"
		77 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		78 |   deployment_id = aws_api_gateway_deployment.api_gw_deploy.id
		79 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.api_gw_stage
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:75-79

		75 | resource "aws_api_gateway_stage" "api_gw_stage" {
		76 |   stage_name    = "prod"
		77 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		78 |   deployment_id = aws_api_gateway_deployment.api_gw_deploy.id
		79 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.api_gw_stage
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:75-79
	Guide: https://docs.bridgecrew.io/docs/logging_15

		75 | resource "aws_api_gateway_stage" "api_gw_stage" {
		76 |   stage_name    = "prod"
		77 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		78 |   deployment_id = aws_api_gateway_deployment.api_gw_deploy.id
		79 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.fail_waf
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/logging_17

		9  | resource "aws_api_gateway_stage" "fail_waf" {
		10 |   deployment_id = aws_api_gateway_deployment.example.id
		11 |   stage_name    = "fail-waf"
		12 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		13 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.fail_waf
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:9-13

		9  | resource "aws_api_gateway_stage" "fail_waf" {
		10 |   deployment_id = aws_api_gateway_deployment.example.id
		11 |   stage_name    = "fail-waf"
		12 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		13 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.fail_waf
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/logging_15

		9  | resource "aws_api_gateway_stage" "fail_waf" {
		10 |   deployment_id = aws_api_gateway_deployment.example.id
		11 |   stage_name    = "fail-waf"
		12 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		13 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.no_assoc
	File: /terraform\aws\api-gateway\api-gateway-rest-api\aws_api_gateway_rest_api_no_waf.tf:17-21
	Guide: https://docs.bridgecrew.io/docs/logging_17

		17 | resource "aws_api_gateway_stage" "no_assoc" {
		18 |   deployment_id = aws_api_gateway_deployment.example.id
		19 |   rest_api_id   = aws_api_gateway_rest_api.no_assoc.id
		20 |   stage_name    = "example"
		21 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.no_assoc
	File: /terraform\aws\api-gateway\api-gateway-rest-api\aws_api_gateway_rest_api_no_waf.tf:17-21

		17 | resource "aws_api_gateway_stage" "no_assoc" {
		18 |   deployment_id = aws_api_gateway_deployment.example.id
		19 |   rest_api_id   = aws_api_gateway_rest_api.no_assoc.id
		20 |   stage_name    = "example"
		21 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.no_assoc
	File: /terraform\aws\api-gateway\api-gateway-rest-api\aws_api_gateway_rest_api_no_waf.tf:17-21
	Guide: https://docs.bridgecrew.io/docs/logging_15

		17 | resource "aws_api_gateway_stage" "no_assoc" {
		18 |   deployment_id = aws_api_gateway_deployment.example.id
		19 |   rest_api_id   = aws_api_gateway_rest_api.no_assoc.id
		20 |   stage_name    = "example"
		21 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_stage.fail.tf:13-18
	Guide: https://docs.bridgecrew.io/docs/logging_17

		13 | resource "aws_api_gateway_stage" "fail" {
		14 |   deployment_id        = aws_api_gateway_deployment.example.id
		15 |   rest_api_id          = aws_api_gateway_rest_api.fail.id
		16 |   stage_name           = "example"
		17 |   xray_tracing_enabled = false
		18 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_stage.fail.tf:13-18

		13 | resource "aws_api_gateway_stage" "fail" {
		14 |   deployment_id        = aws_api_gateway_deployment.example.id
		15 |   rest_api_id          = aws_api_gateway_rest_api.fail.id
		16 |   stage_name           = "example"
		17 |   xray_tracing_enabled = false
		18 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_stage.fail.tf:13-18
	Guide: https://docs.bridgecrew.io/docs/logging_15

		13 | resource "aws_api_gateway_stage" "fail" {
		14 |   deployment_id        = aws_api_gateway_deployment.example.id
		15 |   rest_api_id          = aws_api_gateway_rest_api.fail.id
		16 |   stage_name           = "example"
		17 |   xray_tracing_enabled = false
		18 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_without_ssl_certificate.tf:8-13
	Guide: https://docs.bridgecrew.io/docs/logging_17

		8  | resource "aws_api_gateway_stage" "fail" {
		9  |   stage_name    = "prod"
		10 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		11 |   deployment_id = aws_api_gateway_deployment.fail.id
		12 |   #   client_certificate_id = "12131323"
		13 | }


Check: CKV_AWS_120: "Ensure API Gateway caching is enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_without_ssl_certificate.tf:8-13

		8  | resource "aws_api_gateway_stage" "fail" {
		9  |   stage_name    = "prod"
		10 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		11 |   deployment_id = aws_api_gateway_deployment.fail.id
		12 |   #   client_certificate_id = "12131323"
		13 | }


Check: CKV_AWS_73: "Ensure API Gateway has X-Ray Tracing enabled"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_without_ssl_certificate.tf:8-13
	Guide: https://docs.bridgecrew.io/docs/logging_15

		8  | resource "aws_api_gateway_stage" "fail" {
		9  |   stage_name    = "prod"
		10 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		11 |   deployment_id = aws_api_gateway_deployment.fail.id
		12 |   #   client_certificate_id = "12131323"
		13 | }


Check: CKV_AWS_76: "Ensure API Gateway has Access Logging enabled"
	FAILED for resource: aws_apigatewayv2_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\apigatewayv2_stage.tf:11-17
	Guide: https://docs.bridgecrew.io/docs/logging_17

		11 | resource "aws_apigatewayv2_stage" "fail" {
		12 |   api_id = aws_apigatewayv2_api.example.id
		13 |   name   = "example-stage"
		14 |   tags = {
		15 |     "key" = "value"
		16 |   }
		17 | }


Check: CKV_AWS_194: "Ensure AppSync has Field-Level logs enabled"
	FAILED for resource: aws_appsync_graphql_api.default
	File: /terraform\aws\appsync\appsync.tf:5-8

		5 | resource "aws_appsync_graphql_api" "default" {
		6 |   authentication_type = "API_KEY"
		7 |   name                = "example"
		8 | }


Check: CKV_AWS_193: "Ensure AppSync has Logging enabled"
	FAILED for resource: aws_appsync_graphql_api.default
	File: /terraform\aws\appsync\appsync.tf:5-8

		5 | resource "aws_appsync_graphql_api" "default" {
		6 |   authentication_type = "API_KEY"
		7 |   name                = "example"
		8 | }


Check: CKV_AWS_77: "Ensure Athena Database is encrypted at rest (default is unencrypted)"
	FAILED for resource: aws_athena_database.fail
	File: /terraform\aws\athena\athena-database.tf:7-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_29

		7 | resource "aws_athena_database" "fail" {
		8 |   name = "wg-non-encrypted"
		9 | }


Check: CKV_AWS_82: "Ensure Athena Workgroup should enforce configuration to prevent client disabling encryption"
	FAILED for resource: aws_athena_workgroup.fail
	File: /terraform\aws\athena\athena-workgroup.tf:9-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_33

		9  | resource "aws_athena_workgroup" "fail" {
		10 |   name = "wg-non-encrypted"
		11 |
		12 |   configuration {
		13 |     enforce_workgroup_configuration    = false
		14 |     publish_cloudwatch_metrics_enabled = false
		15 |
		16 |     result_configuration {
		17 |       output_location = "s3://mys3bucket"
		18 |     }
		19 |   }
		20 | }


Check: CKV_AWS_159: "Ensure that Athena Workgroup is encrypted"
	FAILED for resource: aws_athena_workgroup.fail
	File: /terraform\aws\athena\athena-workgroup.tf:9-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-athena-workgroup-is-encrypted

		9  | resource "aws_athena_workgroup" "fail" {
		10 |   name = "wg-non-encrypted"
		11 |
		12 |   configuration {
		13 |     enforce_workgroup_configuration    = false
		14 |     publish_cloudwatch_metrics_enabled = false
		15 |
		16 |     result_configuration {
		17 |       output_location = "s3://mys3bucket"
		18 |     }
		19 |   }
		20 | }


Check: CKV_AWS_153: "Autoscaling groups should supply tags to launch configurations"
	FAILED for resource: aws_autoscaling_group.autoscalling_bad
	File: /terraform\aws\autoscaling\ELB.tf:10-21
	Guide: https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations

		10 | resource "aws_autoscaling_group" "autoscalling_bad" {
		11 |   max_size                  = 5
		12 |   min_size                  = 2
		13 |   health_check_grace_period = 300
		14 |   health_check_type         = "ELB"
		15 |   desired_capacity          = 4
		16 |   force_delete              = true
		17 |
		18 |   lifecycle {
		19 |     ignore_changes = [load_balancers, target_group_arns]
		20 |   }
		21 | }


Check: CKV_AWS_92: "Ensure the ELB has access logging enabled"
	FAILED for resource: aws_elb.test_bad
	File: /terraform\aws\autoscaling\ELB.tf:28-56
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_23

		28 | resource "aws_elb" "test_bad" {
		29 |   name               = "foobar-terraform-elb"
		30 |   availability_zones = ["us-west-2a", "us-west-2b", "us-west-2c"]
		31 |
		32 |   listener {
		33 |     instance_port     = 8000
		34 |     instance_protocol = "http"
		35 |     lb_port           = 80
		36 |     lb_protocol       = "http"
		37 |   }
		38 |
		39 |   listener {
		40 |     instance_port      = 8000
		41 |     instance_protocol  = "http"
		42 |     lb_port            = 443
		43 |     lb_protocol        = "https"
		44 |     ssl_certificate_id = "arn:aws:iam::123456789012:server-certificate/certName"
		45 |   }
		46 |
		47 |   instances                   = [aws_instance.foo.id]
		48 |   cross_zone_load_balancing   = false
		49 |   idle_timeout                = 400
		50 |   connection_draining         = true
		51 |   connection_draining_timeout = 400
		52 |
		53 |   tags = {
		54 |     Name = "foobar-terraform-elb"
		55 |   }
		56 | }


Check: CKV_AWS_138: "Ensure that ELB is cross-zone-load-balancing enabled"
	FAILED for resource: aws_elb.test_bad
	File: /terraform\aws\autoscaling\ELB.tf:28-56
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled

		28 | resource "aws_elb" "test_bad" {
		29 |   name               = "foobar-terraform-elb"
		30 |   availability_zones = ["us-west-2a", "us-west-2b", "us-west-2c"]
		31 |
		32 |   listener {
		33 |     instance_port     = 8000
		34 |     instance_protocol = "http"
		35 |     lb_port           = 80
		36 |     lb_protocol       = "http"
		37 |   }
		38 |
		39 |   listener {
		40 |     instance_port      = 8000
		41 |     instance_protocol  = "http"
		42 |     lb_port            = 443
		43 |     lb_protocol        = "https"
		44 |     ssl_certificate_id = "arn:aws:iam::123456789012:server-certificate/certName"
		45 |   }
		46 |
		47 |   instances                   = [aws_instance.foo.id]
		48 |   cross_zone_load_balancing   = false
		49 |   idle_timeout                = 400
		50 |   connection_draining         = true
		51 |   connection_draining_timeout = 400
		52 |
		53 |   tags = {
		54 |     Name = "foobar-terraform-elb"
		55 |   }
		56 | }


Check: CKV_AWS_127: "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager"
	FAILED for resource: aws_elb.test_bad
	File: /terraform\aws\autoscaling\ELB.tf:28-56
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager

		28 | resource "aws_elb" "test_bad" {
		29 |   name               = "foobar-terraform-elb"
		30 |   availability_zones = ["us-west-2a", "us-west-2b", "us-west-2c"]
		31 |
		32 |   listener {
		33 |     instance_port     = 8000
		34 |     instance_protocol = "http"
		35 |     lb_port           = 80
		36 |     lb_protocol       = "http"
		37 |   }
		38 |
		39 |   listener {
		40 |     instance_port      = 8000
		41 |     instance_protocol  = "http"
		42 |     lb_port            = 443
		43 |     lb_protocol        = "https"
		44 |     ssl_certificate_id = "arn:aws:iam::123456789012:server-certificate/certName"
		45 |   }
		46 |
		47 |   instances                   = [aws_instance.foo.id]
		48 |   cross_zone_load_balancing   = false
		49 |   idle_timeout                = 400
		50 |   connection_draining         = true
		51 |   connection_draining_timeout = 400
		52 |
		53 |   tags = {
		54 |     Name = "foobar-terraform-elb"
		55 |   }
		56 | }


Check: CKV_AWS_153: "Autoscaling groups should supply tags to launch configurations"
	FAILED for resource: aws_autoscaling_group.fail
	File: /terraform\aws\autoscaling\autoscaling.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations

		4  | resource "aws_autoscaling_group" "fail" {
		5  |   name                 = "foobar3-terraform-test"
		6  |   max_size             = 5
		7  |   min_size             = 2
		8  |   launch_configuration = aws_launch_configuration.foobar.name
		9  |   vpc_zone_identifier  = [aws_subnet.example1.id, aws_subnet.example2.id]
		10 | }


Check: CKV_AWS_153: "Autoscaling groups should supply tags to launch configurations"
	FAILED for resource: aws_autoscaling_group.bar
	File: /terraform\aws\autoscaling\autoscaling_without_lb.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/autoscaling-groups-should-supply-tags-to-launch-configurations

		3  | resource "aws_autoscaling_group" "bar" {
		4  |   availability_zones = ["us-east-1a"]
		5  |   desired_capacity   = 1
		6  |   max_size           = 1
		7  |   min_size           = 1
		8  |
		9  |   launch_template {
		10 |     id      = aws_launch_template.foobar.id
		11 |     version = "$Latest"
		12 |   }
		13 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_launch_template.foobar
	File: /terraform\aws\autoscaling\autoscaling_without_lb.tf:15-17
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		15 | resource "aws_launch_template" "foobar" {
		16 |
		17 | }


Check: CKV_AWS_42: "Ensure EFS is securely encrypted"
	FAILED for resource: aws_efs_file_system.ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:38-44
	Guide: https://docs.bridgecrew.io/docs/general_17

		38 | resource "aws_efs_file_system" "ok_efs" {
		39 |   creation_token = "my-product"
		40 |
		41 |   tags = {
		42 |     Name = "MyProduct"
		43 |   }
		44 | }


Check: CKV_AWS_184: "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_efs_file_system.ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:38-44
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_104

		38 | resource "aws_efs_file_system" "ok_efs" {
		39 |   creation_token = "my-product"
		40 |
		41 |   tags = {
		42 |     Name = "MyProduct"
		43 |   }
		44 | }


Check: CKV_AWS_42: "Ensure EFS is securely encrypted"
	FAILED for resource: aws_efs_file_system.not_ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:46-52
	Guide: https://docs.bridgecrew.io/docs/general_17

		46 | resource "aws_efs_file_system" "not_ok_efs" {
		47 |   creation_token = "my-product"
		48 |
		49 |   tags = {
		50 |     Name = "MyProduct"
		51 |   }
		52 | }


Check: CKV_AWS_184: "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_efs_file_system.not_ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:46-52
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_104

		46 | resource "aws_efs_file_system" "not_ok_efs" {
		47 |   creation_token = "my-product"
		48 |
		49 |   tags = {
		50 |     Name = "MyProduct"
		51 |   }
		52 | }


Check: CKV_AWS_166: "Ensure Backup Vault is encrypted at rest using KMS CMK"
	FAILED for resource: aws_backup_vault.backup
	File: /terraform\aws\backup_vault\backup_vault.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/ensure-backup-vault-is-encrypted-at-rest-using-kms-cmk

		4 | resource "aws_backup_vault" "backup" {
		5 |   name = "example_backup_vault"
		6 | }


Check: CKV_AWS_210: "Batch job does not define a privileged container"
	FAILED for resource: aws_batch_job_definition.positive1
	File: /terraform\aws\batch\batch_job_definition_with_privileged_container_properties.tf:4-42

		4  | resource "aws_batch_job_definition" "positive1" {
		5  |   name = "tf_test_batch_job_definition"
		6  |   type = "container"
		7  |
		8  |   container_properties = <<CONTAINER_PROPERTIES
		9  | {
		10 |     "command": ["ls", "-la"],
		11 |     "image": "busybox",
		12 |     "memory": 1024,
		13 |     "vcpus": 1,
		14 |     "privileged": true,
		15 |     "volumes": [
		16 |       {
		17 |         "host": {
		18 |           "sourcePath": "/tmp"
		19 |         },
		20 |         "name": "tmp"
		21 |       }
		22 |     ],
		23 |     "environment": [
		24 |         {"name": "VARNAME", "value": "VARVAL"}
		25 |     ],
		26 |     "mountPoints": [
		27 |         {
		28 |           "sourceVolume": "tmp",
		29 |           "containerPath": "/tmp",
		30 |           "readOnly": false
		31 |         }
		32 |     ],
		33 |     "ulimits": [
		34 |       {
		35 |         "hardLimit": 1024,
		36 |         "name": "nofile",
		37 |         "softLimit": 1024
		38 |       }
		39 |     ]
		40 | }
		41 | CONTAINER_PROPERTIES
		42 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		3  | resource "aws_db_instance" "fail" {
		4  |   allocated_storage                   = 20
		5  |   storage_type                        = "gp2"
		6  |   engine                              = "mysql"
		7  |   engine_version                      = "5.7"
		8  |   instance_class                      = "db.t2.micro"
		9  |   name                                = "mydb"
		10 |   username                            = "foo"
		11 |   password                            = "foobarbaz"
		12 |   iam_database_authentication_enabled = true
		13 |   storage_encrypted                   = true
		14 |   ca_cert_identifier                  = "rds-ca-2015"
		15 | }


Check: CKV_AWS_211: "Ensure RDS uses a modern CaCert"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15

		3  | resource "aws_db_instance" "fail" {
		4  |   allocated_storage                   = 20
		5  |   storage_type                        = "gp2"
		6  |   engine                              = "mysql"
		7  |   engine_version                      = "5.7"
		8  |   instance_class                      = "db.t2.micro"
		9  |   name                                = "mydb"
		10 |   username                            = "foo"
		11 |   password                            = "foobarbaz"
		12 |   iam_database_authentication_enabled = true
		13 |   storage_encrypted                   = true
		14 |   ca_cert_identifier                  = "rds-ca-2015"
		15 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		3  | resource "aws_db_instance" "fail" {
		4  |   allocated_storage                   = 20
		5  |   storage_type                        = "gp2"
		6  |   engine                              = "mysql"
		7  |   engine_version                      = "5.7"
		8  |   instance_class                      = "db.t2.micro"
		9  |   name                                = "mydb"
		10 |   username                            = "foo"
		11 |   password                            = "foobarbaz"
		12 |   iam_database_authentication_enabled = true
		13 |   storage_encrypted                   = true
		14 |   ca_cert_identifier                  = "rds-ca-2015"
		15 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/general_73

		3  | resource "aws_db_instance" "fail" {
		4  |   allocated_storage                   = 20
		5  |   storage_type                        = "gp2"
		6  |   engine                              = "mysql"
		7  |   engine_version                      = "5.7"
		8  |   instance_class                      = "db.t2.micro"
		9  |   name                                = "mydb"
		10 |   username                            = "foo"
		11 |   password                            = "foobarbaz"
		12 |   iam_database_authentication_enabled = true
		13 |   storage_encrypted                   = true
		14 |   ca_cert_identifier                  = "rds-ca-2015"
		15 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		17 | resource "aws_db_instance" "pass" {
		18 |   allocated_storage                   = 20
		19 |   storage_type                        = "gp2"
		20 |   engine                              = "mysql"
		21 |   engine_version                      = "5.7"
		22 |   instance_class                      = "db.t2.micro"
		23 |   name                                = "mydb"
		24 |   username                            = "foo"
		25 |   password                            = "foobarbaz"
		26 |   iam_database_authentication_enabled = true
		27 |   storage_encrypted                   = true
		28 |   ca_cert_identifier                  = "rds-ca-2019"
		29 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		17 | resource "aws_db_instance" "pass" {
		18 |   allocated_storage                   = 20
		19 |   storage_type                        = "gp2"
		20 |   engine                              = "mysql"
		21 |   engine_version                      = "5.7"
		22 |   instance_class                      = "db.t2.micro"
		23 |   name                                = "mydb"
		24 |   username                            = "foo"
		25 |   password                            = "foobarbaz"
		26 |   iam_database_authentication_enabled = true
		27 |   storage_encrypted                   = true
		28 |   ca_cert_identifier                  = "rds-ca-2019"
		29 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.pass
	File: /terraform\aws\cert\ca_certificate_identifier_is_outdated.tf:17-29
	Guide: https://docs.bridgecrew.io/docs/general_73

		17 | resource "aws_db_instance" "pass" {
		18 |   allocated_storage                   = 20
		19 |   storage_type                        = "gp2"
		20 |   engine                              = "mysql"
		21 |   engine_version                      = "5.7"
		22 |   instance_class                      = "db.t2.micro"
		23 |   name                                = "mydb"
		24 |   username                            = "foo"
		25 |   password                            = "foobarbaz"
		26 |   iam_database_authentication_enabled = true
		27 |   storage_encrypted                   = true
		28 |   ca_cert_identifier                  = "rds-ca-2019"
		29 | }


Check: CKV_AWS_206: "Ensure API Gateway Domain uses a modern security Policy"
	FAILED for resource: aws_api_gateway_domain_name.fail
	File: /terraform\aws\cert\certhasexpired.tf:2-5

		2 | resource "aws_api_gateway_domain_name" "fail" {
		3 |   certificate_body = file("expiredCertificate.pem")
		4 |   domain_name      = "api.example.com"
		5 | }


Check: CKV_AWS_206: "Ensure API Gateway Domain uses a modern security Policy"
	FAILED for resource: aws_api_gateway_domain_name.example
	File: /terraform\aws\cert\certificate_rsa_key_bytes_lower_than_256.tf:2-5

		2 | resource "aws_api_gateway_domain_name" "example" {
		3 |   certificate_body = file("./rsa1024.pem")
		4 |   domain_name      = "api.example.com"
		5 | }


Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: aws_cloudfront_distribution.s3_distribution
	File: /terraform\aws\cloudfront\cloudfront.tf:13-88
	Guide: https://docs.bridgecrew.io/docs/networking_32

		13 | resource "aws_cloudfront_distribution" "s3_distribution" {
		14 |   dynamic "origin" {
		15 |     for_each = local.origins
		16 |     content {
		17 |       domain_name = origin.value["domain_name"]
		18 |       origin_id   = origin.value["origin_id"]
		19 |
		20 |       s3_origin_config {
		21 |         origin_access_identity = origin.value["origin_access_identity"]
		22 |       }
		23 |     }
		24 |   }
		25 |
		26 |   enabled             = true
		27 |   is_ipv6_enabled     = true
		28 |   default_root_object = "index.html"
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = var.default_behaviour.allowed_methods
		32 |     cached_methods   = var.default_behaviour.cached_methods
		33 |     target_origin_id = var.default_behaviour.origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = var.default_behaviour.query_string
		37 |
		38 |       cookies {
		39 |         forward = var.default_behaviour.forward
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = var.default_behaviour.min_ttl
		45 |     default_ttl            = var.default_behaviour.default_ttl
		46 |     max_ttl                = var.default_behaviour.max_ttl
		47 |   }
		48 |
		49 |   dynamic "ordered_cache_behavior" {
		50 |     for_each = var.behaviours
		51 |     content {
		52 |       path_pattern     = ordered_cache_behavior.value["path_pattern"]
		53 |       allowed_methods  = ordered_cache_behavior.value["allowed_methods"]
		54 |       cached_methods   = ordered_cache_behavior.value["cached_methods"]
		55 |       target_origin_id = ordered_cache_behavior.value["origin_id"]
		56 |       forwarded_values {
		57 |         headers      = ordered_cache_behavior.value["headers"]
		58 |         query_string = ordered_cache_behavior.value["query_string"]
		59 |         cookies {
		60 |           forward = ordered_cache_behavior.value["forward"]
		61 |         }
		62 |       }
		63 |       min_ttl                = ordered_cache_behavior.value["min_ttl"]
		64 |       default_ttl            = ordered_cache_behavior.value["default_ttl"]
		65 |       max_ttl                = ordered_cache_behavior.value["max_ttl"]
		66 |       compress               = ordered_cache_behavior.value["compress"]
		67 |       viewer_protocol_policy = "allow-all"
		68 |     }
		69 |   }
		70 |
		71 |   price_class = "PriceClass_200"
		72 |
		73 |   restrictions {
		74 |     geo_restriction {
		75 |       restriction_type = var.geo_restrictions["restriction_type"]
		76 |       locations        = var.geo_restrictions["locations"]
		77 |     }
		78 |   }
		79 |
		80 |   viewer_certificate {
		81 |     cloudfront_default_certificate = var.viewer_certificate["cloudfront_default_certificate"]
		82 |     minimum_protocol_version       = var.viewer_certificate["minimum_protocol_version"]
		83 |   }
		84 |
		85 |   lifecycle {
		86 |     ignore_changes = [tags]
		87 |   }
		88 | }


Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	FAILED for resource: aws_cloudfront_distribution.s3_distribution
	File: /terraform\aws\cloudfront\cloudfront.tf:13-88
	Guide: https://docs.bridgecrew.io/docs/logging_20

		13 | resource "aws_cloudfront_distribution" "s3_distribution" {
		14 |   dynamic "origin" {
		15 |     for_each = local.origins
		16 |     content {
		17 |       domain_name = origin.value["domain_name"]
		18 |       origin_id   = origin.value["origin_id"]
		19 |
		20 |       s3_origin_config {
		21 |         origin_access_identity = origin.value["origin_access_identity"]
		22 |       }
		23 |     }
		24 |   }
		25 |
		26 |   enabled             = true
		27 |   is_ipv6_enabled     = true
		28 |   default_root_object = "index.html"
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = var.default_behaviour.allowed_methods
		32 |     cached_methods   = var.default_behaviour.cached_methods
		33 |     target_origin_id = var.default_behaviour.origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = var.default_behaviour.query_string
		37 |
		38 |       cookies {
		39 |         forward = var.default_behaviour.forward
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = var.default_behaviour.min_ttl
		45 |     default_ttl            = var.default_behaviour.default_ttl
		46 |     max_ttl                = var.default_behaviour.max_ttl
		47 |   }
		48 |
		49 |   dynamic "ordered_cache_behavior" {
		50 |     for_each = var.behaviours
		51 |     content {
		52 |       path_pattern     = ordered_cache_behavior.value["path_pattern"]
		53 |       allowed_methods  = ordered_cache_behavior.value["allowed_methods"]
		54 |       cached_methods   = ordered_cache_behavior.value["cached_methods"]
		55 |       target_origin_id = ordered_cache_behavior.value["origin_id"]
		56 |       forwarded_values {
		57 |         headers      = ordered_cache_behavior.value["headers"]
		58 |         query_string = ordered_cache_behavior.value["query_string"]
		59 |         cookies {
		60 |           forward = ordered_cache_behavior.value["forward"]
		61 |         }
		62 |       }
		63 |       min_ttl                = ordered_cache_behavior.value["min_ttl"]
		64 |       default_ttl            = ordered_cache_behavior.value["default_ttl"]
		65 |       max_ttl                = ordered_cache_behavior.value["max_ttl"]
		66 |       compress               = ordered_cache_behavior.value["compress"]
		67 |       viewer_protocol_policy = "allow-all"
		68 |     }
		69 |   }
		70 |
		71 |   price_class = "PriceClass_200"
		72 |
		73 |   restrictions {
		74 |     geo_restriction {
		75 |       restriction_type = var.geo_restrictions["restriction_type"]
		76 |       locations        = var.geo_restrictions["locations"]
		77 |     }
		78 |   }
		79 |
		80 |   viewer_certificate {
		81 |     cloudfront_default_certificate = var.viewer_certificate["cloudfront_default_certificate"]
		82 |     minimum_protocol_version       = var.viewer_certificate["minimum_protocol_version"]
		83 |   }
		84 |
		85 |   lifecycle {
		86 |     ignore_changes = [tags]
		87 |   }
		88 | }


Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.s3_distribution
	File: /terraform\aws\cloudfront\cloudfront.tf:13-88
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63

		13 | resource "aws_cloudfront_distribution" "s3_distribution" {
		14 |   dynamic "origin" {
		15 |     for_each = local.origins
		16 |     content {
		17 |       domain_name = origin.value["domain_name"]
		18 |       origin_id   = origin.value["origin_id"]
		19 |
		20 |       s3_origin_config {
		21 |         origin_access_identity = origin.value["origin_access_identity"]
		22 |       }
		23 |     }
		24 |   }
		25 |
		26 |   enabled             = true
		27 |   is_ipv6_enabled     = true
		28 |   default_root_object = "index.html"
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = var.default_behaviour.allowed_methods
		32 |     cached_methods   = var.default_behaviour.cached_methods
		33 |     target_origin_id = var.default_behaviour.origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = var.default_behaviour.query_string
		37 |
		38 |       cookies {
		39 |         forward = var.default_behaviour.forward
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = var.default_behaviour.min_ttl
		45 |     default_ttl            = var.default_behaviour.default_ttl
		46 |     max_ttl                = var.default_behaviour.max_ttl
		47 |   }
		48 |
		49 |   dynamic "ordered_cache_behavior" {
		50 |     for_each = var.behaviours
		51 |     content {
		52 |       path_pattern     = ordered_cache_behavior.value["path_pattern"]
		53 |       allowed_methods  = ordered_cache_behavior.value["allowed_methods"]
		54 |       cached_methods   = ordered_cache_behavior.value["cached_methods"]
		55 |       target_origin_id = ordered_cache_behavior.value["origin_id"]
		56 |       forwarded_values {
		57 |         headers      = ordered_cache_behavior.value["headers"]
		58 |         query_string = ordered_cache_behavior.value["query_string"]
		59 |         cookies {
		60 |           forward = ordered_cache_behavior.value["forward"]
		61 |         }
		62 |       }
		63 |       min_ttl                = ordered_cache_behavior.value["min_ttl"]
		64 |       default_ttl            = ordered_cache_behavior.value["default_ttl"]
		65 |       max_ttl                = ordered_cache_behavior.value["max_ttl"]
		66 |       compress               = ordered_cache_behavior.value["compress"]
		67 |       viewer_protocol_policy = "allow-all"
		68 |     }
		69 |   }
		70 |
		71 |   price_class = "PriceClass_200"
		72 |
		73 |   restrictions {
		74 |     geo_restriction {
		75 |       restriction_type = var.geo_restrictions["restriction_type"]
		76 |       locations        = var.geo_restrictions["locations"]
		77 |     }
		78 |   }
		79 |
		80 |   viewer_certificate {
		81 |     cloudfront_default_certificate = var.viewer_certificate["cloudfront_default_certificate"]
		82 |     minimum_protocol_version       = var.viewer_certificate["minimum_protocol_version"]
		83 |   }
		84 |
		85 |   lifecycle {
		86 |     ignore_changes = [tags]
		87 |   }
		88 | }


Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.s3_distribution
	File: /terraform\aws\cloudfront\cloudfront.tf:13-88
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27

		13 | resource "aws_cloudfront_distribution" "s3_distribution" {
		14 |   dynamic "origin" {
		15 |     for_each = local.origins
		16 |     content {
		17 |       domain_name = origin.value["domain_name"]
		18 |       origin_id   = origin.value["origin_id"]
		19 |
		20 |       s3_origin_config {
		21 |         origin_access_identity = origin.value["origin_access_identity"]
		22 |       }
		23 |     }
		24 |   }
		25 |
		26 |   enabled             = true
		27 |   is_ipv6_enabled     = true
		28 |   default_root_object = "index.html"
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = var.default_behaviour.allowed_methods
		32 |     cached_methods   = var.default_behaviour.cached_methods
		33 |     target_origin_id = var.default_behaviour.origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = var.default_behaviour.query_string
		37 |
		38 |       cookies {
		39 |         forward = var.default_behaviour.forward
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = var.default_behaviour.min_ttl
		45 |     default_ttl            = var.default_behaviour.default_ttl
		46 |     max_ttl                = var.default_behaviour.max_ttl
		47 |   }
		48 |
		49 |   dynamic "ordered_cache_behavior" {
		50 |     for_each = var.behaviours
		51 |     content {
		52 |       path_pattern     = ordered_cache_behavior.value["path_pattern"]
		53 |       allowed_methods  = ordered_cache_behavior.value["allowed_methods"]
		54 |       cached_methods   = ordered_cache_behavior.value["cached_methods"]
		55 |       target_origin_id = ordered_cache_behavior.value["origin_id"]
		56 |       forwarded_values {
		57 |         headers      = ordered_cache_behavior.value["headers"]
		58 |         query_string = ordered_cache_behavior.value["query_string"]
		59 |         cookies {
		60 |           forward = ordered_cache_behavior.value["forward"]
		61 |         }
		62 |       }
		63 |       min_ttl                = ordered_cache_behavior.value["min_ttl"]
		64 |       default_ttl            = ordered_cache_behavior.value["default_ttl"]
		65 |       max_ttl                = ordered_cache_behavior.value["max_ttl"]
		66 |       compress               = ordered_cache_behavior.value["compress"]
		67 |       viewer_protocol_policy = "allow-all"
		68 |     }
		69 |   }
		70 |
		71 |   price_class = "PriceClass_200"
		72 |
		73 |   restrictions {
		74 |     geo_restriction {
		75 |       restriction_type = var.geo_restrictions["restriction_type"]
		76 |       locations        = var.geo_restrictions["locations"]
		77 |     }
		78 |   }
		79 |
		80 |   viewer_certificate {
		81 |     cloudfront_default_certificate = var.viewer_certificate["cloudfront_default_certificate"]
		82 |     minimum_protocol_version       = var.viewer_certificate["minimum_protocol_version"]
		83 |   }
		84 |
		85 |   lifecycle {
		86 |     ignore_changes = [tags]
		87 |   }
		88 | }


Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: aws_cloudfront_distribution.fail
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:7-65
	Guide: https://docs.bridgecrew.io/docs/networking_32

		7  | resource "aws_cloudfront_distribution" "fail" {
		8  |   origin {
		9  |     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
		10 |     origin_id   = local.s3_origin_id
		11 |
		12 |     s3_origin_config {
		13 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		14 |     }
		15 |   }
		16 |
		17 |   enabled             = false
		18 |   is_ipv6_enabled     = true
		19 |   comment             = "Some comment"
		20 |   default_root_object = "index.html"
		21 |
		22 |   logging_config {
		23 |     include_cookies = false
		24 |     bucket          = "mylogs.s3.amazonaws.com"
		25 |     prefix          = "myprefix"
		26 |   }
		27 |
		28 |   aliases = ["mysite.example.com", "yoursite.example.com"]
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		32 |     cached_methods   = ["GET", "HEAD"]
		33 |     target_origin_id = local.s3_origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = false
		37 |
		38 |       cookies {
		39 |         forward = "none"
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = 0
		45 |     default_ttl            = 3600
		46 |     max_ttl                = 86400
		47 |   }
		48 |
		49 |   price_class = "PriceClass_200"
		50 |
		51 |   restrictions {
		52 |     geo_restriction {
		53 |       restriction_type = "whitelist"
		54 |       locations        = ["US", "CA", "GB", "DE"]
		55 |     }
		56 |   }
		57 |
		58 |   tags = {
		59 |     Environment = "production"
		60 |   }
		61 |
		62 |   viewer_certificate {
		63 |     cloudfront_default_certificate = true
		64 |   }
		65 | }


Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.fail
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:7-65
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63

		7  | resource "aws_cloudfront_distribution" "fail" {
		8  |   origin {
		9  |     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
		10 |     origin_id   = local.s3_origin_id
		11 |
		12 |     s3_origin_config {
		13 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		14 |     }
		15 |   }
		16 |
		17 |   enabled             = false
		18 |   is_ipv6_enabled     = true
		19 |   comment             = "Some comment"
		20 |   default_root_object = "index.html"
		21 |
		22 |   logging_config {
		23 |     include_cookies = false
		24 |     bucket          = "mylogs.s3.amazonaws.com"
		25 |     prefix          = "myprefix"
		26 |   }
		27 |
		28 |   aliases = ["mysite.example.com", "yoursite.example.com"]
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		32 |     cached_methods   = ["GET", "HEAD"]
		33 |     target_origin_id = local.s3_origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = false
		37 |
		38 |       cookies {
		39 |         forward = "none"
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = 0
		45 |     default_ttl            = 3600
		46 |     max_ttl                = 86400
		47 |   }
		48 |
		49 |   price_class = "PriceClass_200"
		50 |
		51 |   restrictions {
		52 |     geo_restriction {
		53 |       restriction_type = "whitelist"
		54 |       locations        = ["US", "CA", "GB", "DE"]
		55 |     }
		56 |   }
		57 |
		58 |   tags = {
		59 |     Environment = "production"
		60 |   }
		61 |
		62 |   viewer_certificate {
		63 |     cloudfront_default_certificate = true
		64 |   }
		65 | }


Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.fail
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:7-65
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27

		7  | resource "aws_cloudfront_distribution" "fail" {
		8  |   origin {
		9  |     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
		10 |     origin_id   = local.s3_origin_id
		11 |
		12 |     s3_origin_config {
		13 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		14 |     }
		15 |   }
		16 |
		17 |   enabled             = false
		18 |   is_ipv6_enabled     = true
		19 |   comment             = "Some comment"
		20 |   default_root_object = "index.html"
		21 |
		22 |   logging_config {
		23 |     include_cookies = false
		24 |     bucket          = "mylogs.s3.amazonaws.com"
		25 |     prefix          = "myprefix"
		26 |   }
		27 |
		28 |   aliases = ["mysite.example.com", "yoursite.example.com"]
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		32 |     cached_methods   = ["GET", "HEAD"]
		33 |     target_origin_id = local.s3_origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = false
		37 |
		38 |       cookies {
		39 |         forward = "none"
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = 0
		45 |     default_ttl            = 3600
		46 |     max_ttl                = 86400
		47 |   }
		48 |
		49 |   price_class = "PriceClass_200"
		50 |
		51 |   restrictions {
		52 |     geo_restriction {
		53 |       restriction_type = "whitelist"
		54 |       locations        = ["US", "CA", "GB", "DE"]
		55 |     }
		56 |   }
		57 |
		58 |   tags = {
		59 |     Environment = "production"
		60 |   }
		61 |
		62 |   viewer_certificate {
		63 |     cloudfront_default_certificate = true
		64 |   }
		65 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		72 | resource "aws_s3_bucket" "b" {
		73 |   bucket = "mylovelyhorse"
		74 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		72 | resource "aws_s3_bucket" "b" {
		73 |   bucket = "mylovelyhorse"
		74 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		72 | resource "aws_s3_bucket" "b" {
		73 |   bucket = "mylovelyhorse"
		74 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		72 | resource "aws_s3_bucket" "b" {
		73 |   bucket = "mylovelyhorse"
		74 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:72-74
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		72 | resource "aws_s3_bucket" "b" {
		73 |   bucket = "mylovelyhorse"
		74 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		6 | resource "aws_s3_bucket" "positive1" {
		7 |   # configs
		8 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		6 | resource "aws_s3_bucket" "positive1" {
		7 |   # configs
		8 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		6 | resource "aws_s3_bucket" "positive1" {
		7 |   # configs
		8 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		6 | resource "aws_s3_bucket" "positive1" {
		7 |   # configs
		8 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:6-8
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		6 | resource "aws_s3_bucket" "positive1" {
		7 |   # configs
		8 | }


Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: aws_cloudfront_distribution.positive2
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:10-50
	Guide: https://docs.bridgecrew.io/docs/networking_32

		10 | resource "aws_cloudfront_distribution" "positive2" {
		11 |   origin {
		12 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		13 |     origin_id   = local.s3_origin_id
		14 |
		15 |     s3_origin_config {
		16 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		17 |     }
		18 |   }
		19 |
		20 |   enabled             = true
		21 |   is_ipv6_enabled     = true
		22 |   comment             = "Some comment"
		23 |   default_root_object = "index.html"
		24 |
		25 |   default_cache_behavior {
		26 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		27 |     cached_methods   = ["GET", "HEAD"]
		28 |     target_origin_id = local.s3_origin_id
		29 |
		30 |     forwarded_values {
		31 |       query_string = false
		32 |
		33 |       cookies {
		34 |         forward = "none"
		35 |       }
		36 |     }
		37 |
		38 |     viewer_protocol_policy = "allow-all"
		39 |     min_ttl                = 0
		40 |     default_ttl            = 3600
		41 |     max_ttl                = 86400
		42 |   }
		43 |
		44 |   restrictions {
		45 |     geo_restriction {
		46 |       restriction_type = "whitelist"
		47 |       locations        = ["US", "CA", "GB", "DE"]
		48 |     }
		49 |   }
		50 | }


Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	FAILED for resource: aws_cloudfront_distribution.positive2
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:10-50
	Guide: https://docs.bridgecrew.io/docs/logging_20

		10 | resource "aws_cloudfront_distribution" "positive2" {
		11 |   origin {
		12 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		13 |     origin_id   = local.s3_origin_id
		14 |
		15 |     s3_origin_config {
		16 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		17 |     }
		18 |   }
		19 |
		20 |   enabled             = true
		21 |   is_ipv6_enabled     = true
		22 |   comment             = "Some comment"
		23 |   default_root_object = "index.html"
		24 |
		25 |   default_cache_behavior {
		26 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		27 |     cached_methods   = ["GET", "HEAD"]
		28 |     target_origin_id = local.s3_origin_id
		29 |
		30 |     forwarded_values {
		31 |       query_string = false
		32 |
		33 |       cookies {
		34 |         forward = "none"
		35 |       }
		36 |     }
		37 |
		38 |     viewer_protocol_policy = "allow-all"
		39 |     min_ttl                = 0
		40 |     default_ttl            = 3600
		41 |     max_ttl                = 86400
		42 |   }
		43 |
		44 |   restrictions {
		45 |     geo_restriction {
		46 |       restriction_type = "whitelist"
		47 |       locations        = ["US", "CA", "GB", "DE"]
		48 |     }
		49 |   }
		50 | }


Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.positive2
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:10-50
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63

		10 | resource "aws_cloudfront_distribution" "positive2" {
		11 |   origin {
		12 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		13 |     origin_id   = local.s3_origin_id
		14 |
		15 |     s3_origin_config {
		16 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		17 |     }
		18 |   }
		19 |
		20 |   enabled             = true
		21 |   is_ipv6_enabled     = true
		22 |   comment             = "Some comment"
		23 |   default_root_object = "index.html"
		24 |
		25 |   default_cache_behavior {
		26 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		27 |     cached_methods   = ["GET", "HEAD"]
		28 |     target_origin_id = local.s3_origin_id
		29 |
		30 |     forwarded_values {
		31 |       query_string = false
		32 |
		33 |       cookies {
		34 |         forward = "none"
		35 |       }
		36 |     }
		37 |
		38 |     viewer_protocol_policy = "allow-all"
		39 |     min_ttl                = 0
		40 |     default_ttl            = 3600
		41 |     max_ttl                = 86400
		42 |   }
		43 |
		44 |   restrictions {
		45 |     geo_restriction {
		46 |       restriction_type = "whitelist"
		47 |       locations        = ["US", "CA", "GB", "DE"]
		48 |     }
		49 |   }
		50 | }


Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.positive2
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:10-50
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27

		10 | resource "aws_cloudfront_distribution" "positive2" {
		11 |   origin {
		12 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		13 |     origin_id   = local.s3_origin_id
		14 |
		15 |     s3_origin_config {
		16 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		17 |     }
		18 |   }
		19 |
		20 |   enabled             = true
		21 |   is_ipv6_enabled     = true
		22 |   comment             = "Some comment"
		23 |   default_root_object = "index.html"
		24 |
		25 |   default_cache_behavior {
		26 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		27 |     cached_methods   = ["GET", "HEAD"]
		28 |     target_origin_id = local.s3_origin_id
		29 |
		30 |     forwarded_values {
		31 |       query_string = false
		32 |
		33 |       cookies {
		34 |         forward = "none"
		35 |       }
		36 |     }
		37 |
		38 |     viewer_protocol_policy = "allow-all"
		39 |     min_ttl                = 0
		40 |     default_ttl            = 3600
		41 |     max_ttl                = 86400
		42 |   }
		43 |
		44 |   restrictions {
		45 |     geo_restriction {
		46 |       restriction_type = "whitelist"
		47 |       locations        = ["US", "CA", "GB", "DE"]
		48 |     }
		49 |   }
		50 | }


Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: aws_cloudfront_distribution.positive3
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:52-96
	Guide: https://docs.bridgecrew.io/docs/networking_32

		52 | resource "aws_cloudfront_distribution" "positive3" {
		53 |   origin {
		54 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		55 |     origin_id   = local.s3_origin_id
		56 |
		57 |     s3_origin_config {
		58 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		59 |     }
		60 |   }
		61 |
		62 |   enabled             = true
		63 |   is_ipv6_enabled     = true
		64 |   comment             = "Some comment"
		65 |   default_root_object = "index.html"
		66 |
		67 |   default_cache_behavior {
		68 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		69 |     cached_methods   = ["GET", "HEAD"]
		70 |     target_origin_id = local.s3_origin_id
		71 |
		72 |     forwarded_values {
		73 |       query_string = false
		74 |
		75 |       cookies {
		76 |         forward = "none"
		77 |       }
		78 |     }
		79 |
		80 |     viewer_protocol_policy = "allow-all"
		81 |     min_ttl                = 0
		82 |     default_ttl            = 3600
		83 |     max_ttl                = 86400
		84 |   }
		85 |
		86 |   restrictions {
		87 |     geo_restriction {
		88 |       restriction_type = "whitelist"
		89 |       locations        = ["US", "CA", "GB", "DE"]
		90 |     }
		91 |   }
		92 |
		93 |   viewer_certificate {
		94 |     cloudfront_default_certificate = true
		95 |   }
		96 | }


Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	FAILED for resource: aws_cloudfront_distribution.positive3
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:52-96
	Guide: https://docs.bridgecrew.io/docs/logging_20

		52 | resource "aws_cloudfront_distribution" "positive3" {
		53 |   origin {
		54 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		55 |     origin_id   = local.s3_origin_id
		56 |
		57 |     s3_origin_config {
		58 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		59 |     }
		60 |   }
		61 |
		62 |   enabled             = true
		63 |   is_ipv6_enabled     = true
		64 |   comment             = "Some comment"
		65 |   default_root_object = "index.html"
		66 |
		67 |   default_cache_behavior {
		68 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		69 |     cached_methods   = ["GET", "HEAD"]
		70 |     target_origin_id = local.s3_origin_id
		71 |
		72 |     forwarded_values {
		73 |       query_string = false
		74 |
		75 |       cookies {
		76 |         forward = "none"
		77 |       }
		78 |     }
		79 |
		80 |     viewer_protocol_policy = "allow-all"
		81 |     min_ttl                = 0
		82 |     default_ttl            = 3600
		83 |     max_ttl                = 86400
		84 |   }
		85 |
		86 |   restrictions {
		87 |     geo_restriction {
		88 |       restriction_type = "whitelist"
		89 |       locations        = ["US", "CA", "GB", "DE"]
		90 |     }
		91 |   }
		92 |
		93 |   viewer_certificate {
		94 |     cloudfront_default_certificate = true
		95 |   }
		96 | }


Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.positive3
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:52-96
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63

		52 | resource "aws_cloudfront_distribution" "positive3" {
		53 |   origin {
		54 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		55 |     origin_id   = local.s3_origin_id
		56 |
		57 |     s3_origin_config {
		58 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		59 |     }
		60 |   }
		61 |
		62 |   enabled             = true
		63 |   is_ipv6_enabled     = true
		64 |   comment             = "Some comment"
		65 |   default_root_object = "index.html"
		66 |
		67 |   default_cache_behavior {
		68 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		69 |     cached_methods   = ["GET", "HEAD"]
		70 |     target_origin_id = local.s3_origin_id
		71 |
		72 |     forwarded_values {
		73 |       query_string = false
		74 |
		75 |       cookies {
		76 |         forward = "none"
		77 |       }
		78 |     }
		79 |
		80 |     viewer_protocol_policy = "allow-all"
		81 |     min_ttl                = 0
		82 |     default_ttl            = 3600
		83 |     max_ttl                = 86400
		84 |   }
		85 |
		86 |   restrictions {
		87 |     geo_restriction {
		88 |       restriction_type = "whitelist"
		89 |       locations        = ["US", "CA", "GB", "DE"]
		90 |     }
		91 |   }
		92 |
		93 |   viewer_certificate {
		94 |     cloudfront_default_certificate = true
		95 |   }
		96 | }


Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.positive3
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:52-96
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27

		52 | resource "aws_cloudfront_distribution" "positive3" {
		53 |   origin {
		54 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		55 |     origin_id   = local.s3_origin_id
		56 |
		57 |     s3_origin_config {
		58 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		59 |     }
		60 |   }
		61 |
		62 |   enabled             = true
		63 |   is_ipv6_enabled     = true
		64 |   comment             = "Some comment"
		65 |   default_root_object = "index.html"
		66 |
		67 |   default_cache_behavior {
		68 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		69 |     cached_methods   = ["GET", "HEAD"]
		70 |     target_origin_id = local.s3_origin_id
		71 |
		72 |     forwarded_values {
		73 |       query_string = false
		74 |
		75 |       cookies {
		76 |         forward = "none"
		77 |       }
		78 |     }
		79 |
		80 |     viewer_protocol_policy = "allow-all"
		81 |     min_ttl                = 0
		82 |     default_ttl            = 3600
		83 |     max_ttl                = 86400
		84 |   }
		85 |
		86 |   restrictions {
		87 |     geo_restriction {
		88 |       restriction_type = "whitelist"
		89 |       locations        = ["US", "CA", "GB", "DE"]
		90 |     }
		91 |   }
		92 |
		93 |   viewer_certificate {
		94 |     cloudfront_default_certificate = true
		95 |   }
		96 | }


Check: CKV_AWS_34: "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS"
	FAILED for resource: aws_cloudfront_distribution.positive4
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:98-142
	Guide: https://docs.bridgecrew.io/docs/networking_32

		98  | resource "aws_cloudfront_distribution" "positive4" {
		99  |   origin {
		100 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		101 |     origin_id   = local.s3_origin_id
		102 |
		103 |     s3_origin_config {
		104 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		105 |     }
		106 |   }
		107 |
		108 |   enabled             = true
		109 |   is_ipv6_enabled     = true
		110 |   comment             = "Some comment"
		111 |   default_root_object = "index.html"
		112 |
		113 |   default_cache_behavior {
		114 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		115 |     cached_methods   = ["GET", "HEAD"]
		116 |     target_origin_id = local.s3_origin_id
		117 |
		118 |     forwarded_values {
		119 |       query_string = false
		120 |
		121 |       cookies {
		122 |         forward = "none"
		123 |       }
		124 |     }
		125 |
		126 |     viewer_protocol_policy = "allow-all"
		127 |     min_ttl                = 0
		128 |     default_ttl            = 3600
		129 |     max_ttl                = 86400
		130 |   }
		131 |
		132 |   restrictions {
		133 |     geo_restriction {
		134 |       restriction_type = "whitelist"
		135 |       locations        = ["US", "CA", "GB", "DE"]
		136 |     }
		137 |   }
		138 |
		139 |   viewer_certificate {
		140 |     acm_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn
		141 |   }
		142 | }


Check: CKV_AWS_86: "Ensure Cloudfront distribution has Access Logging enabled"
	FAILED for resource: aws_cloudfront_distribution.positive4
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:98-142
	Guide: https://docs.bridgecrew.io/docs/logging_20

		98  | resource "aws_cloudfront_distribution" "positive4" {
		99  |   origin {
		100 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		101 |     origin_id   = local.s3_origin_id
		102 |
		103 |     s3_origin_config {
		104 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		105 |     }
		106 |   }
		107 |
		108 |   enabled             = true
		109 |   is_ipv6_enabled     = true
		110 |   comment             = "Some comment"
		111 |   default_root_object = "index.html"
		112 |
		113 |   default_cache_behavior {
		114 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		115 |     cached_methods   = ["GET", "HEAD"]
		116 |     target_origin_id = local.s3_origin_id
		117 |
		118 |     forwarded_values {
		119 |       query_string = false
		120 |
		121 |       cookies {
		122 |         forward = "none"
		123 |       }
		124 |     }
		125 |
		126 |     viewer_protocol_policy = "allow-all"
		127 |     min_ttl                = 0
		128 |     default_ttl            = 3600
		129 |     max_ttl                = 86400
		130 |   }
		131 |
		132 |   restrictions {
		133 |     geo_restriction {
		134 |       restriction_type = "whitelist"
		135 |       locations        = ["US", "CA", "GB", "DE"]
		136 |     }
		137 |   }
		138 |
		139 |   viewer_certificate {
		140 |     acm_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn
		141 |   }
		142 | }


Check: CKV_AWS_174: "Verify CloudFront Distribution Viewer Certificate is using TLS v1.2"
	FAILED for resource: aws_cloudfront_distribution.positive4
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:98-142
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_63

		98  | resource "aws_cloudfront_distribution" "positive4" {
		99  |   origin {
		100 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		101 |     origin_id   = local.s3_origin_id
		102 |
		103 |     s3_origin_config {
		104 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		105 |     }
		106 |   }
		107 |
		108 |   enabled             = true
		109 |   is_ipv6_enabled     = true
		110 |   comment             = "Some comment"
		111 |   default_root_object = "index.html"
		112 |
		113 |   default_cache_behavior {
		114 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		115 |     cached_methods   = ["GET", "HEAD"]
		116 |     target_origin_id = local.s3_origin_id
		117 |
		118 |     forwarded_values {
		119 |       query_string = false
		120 |
		121 |       cookies {
		122 |         forward = "none"
		123 |       }
		124 |     }
		125 |
		126 |     viewer_protocol_policy = "allow-all"
		127 |     min_ttl                = 0
		128 |     default_ttl            = 3600
		129 |     max_ttl                = 86400
		130 |   }
		131 |
		132 |   restrictions {
		133 |     geo_restriction {
		134 |       restriction_type = "whitelist"
		135 |       locations        = ["US", "CA", "GB", "DE"]
		136 |     }
		137 |   }
		138 |
		139 |   viewer_certificate {
		140 |     acm_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn
		141 |   }
		142 | }


Check: CKV_AWS_68: "CloudFront Distribution should have WAF enabled"
	FAILED for resource: aws_cloudfront_distribution.positive4
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:98-142
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_27

		98  | resource "aws_cloudfront_distribution" "positive4" {
		99  |   origin {
		100 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		101 |     origin_id   = local.s3_origin_id
		102 |
		103 |     s3_origin_config {
		104 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		105 |     }
		106 |   }
		107 |
		108 |   enabled             = true
		109 |   is_ipv6_enabled     = true
		110 |   comment             = "Some comment"
		111 |   default_root_object = "index.html"
		112 |
		113 |   default_cache_behavior {
		114 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		115 |     cached_methods   = ["GET", "HEAD"]
		116 |     target_origin_id = local.s3_origin_id
		117 |
		118 |     forwarded_values {
		119 |       query_string = false
		120 |
		121 |       cookies {
		122 |         forward = "none"
		123 |       }
		124 |     }
		125 |
		126 |     viewer_protocol_policy = "allow-all"
		127 |     min_ttl                = 0
		128 |     default_ttl            = 3600
		129 |     max_ttl                = 86400
		130 |   }
		131 |
		132 |   restrictions {
		133 |     geo_restriction {
		134 |       restriction_type = "whitelist"
		135 |       locations        = ["US", "CA", "GB", "DE"]
		136 |     }
		137 |   }
		138 |
		139 |   viewer_certificate {
		140 |     acm_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn
		141 |   }
		142 | }


Check: CKV_AWS_35: "Ensure CloudTrail logs are encrypted at rest using KMS CMKs"
	FAILED for resource: aws_cloudtrail.fail
	File: /terraform\aws\cloudtrail\cloudtrail.tf:18-24
	Guide: https://docs.bridgecrew.io/docs/logging_7

		18 | resource "aws_cloudtrail" "fail" {
		19 |   name                          = "TRAIL"
		20 |   s3_bucket_name                = aws_s3_bucket.test.id
		21 |   include_global_service_events = true
		22 |   enable_logging                = false
		23 |   is_multi_region_trail         = false
		24 | }


Check: CKV_AWS_36: "Ensure CloudTrail log file validation is enabled"
	FAILED for resource: aws_cloudtrail.fail
	File: /terraform\aws\cloudtrail\cloudtrail.tf:18-24
	Guide: https://docs.bridgecrew.io/docs/logging_2

		18 | resource "aws_cloudtrail" "fail" {
		19 |   name                          = "TRAIL"
		20 |   s3_bucket_name                = aws_s3_bucket.test.id
		21 |   include_global_service_events = true
		22 |   enable_logging                = false
		23 |   is_multi_region_trail         = false
		24 | }


Check: CKV_AWS_67: "Ensure CloudTrail is enabled in all Regions"
	FAILED for resource: aws_cloudtrail.fail
	File: /terraform\aws\cloudtrail\cloudtrail.tf:18-24
	Guide: https://docs.bridgecrew.io/docs/logging_1

		18 | resource "aws_cloudtrail" "fail" {
		19 |   name                          = "TRAIL"
		20 |   s3_bucket_name                = aws_s3_bucket.test.id
		21 |   include_global_service_events = true
		22 |   enable_logging                = false
		23 |   is_multi_region_trail         = false
		24 | }


Check: CKV_AWS_158: "Ensure that CloudWatch Log Group is encrypted by KMS"
	FAILED for resource: aws_cloudwatch_log_group.logs
	File: /terraform\aws\cloudwatch\cloudwatch.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cloudwatch-log-group-is-encrypted-by-kms

		8  | resource "aws_cloudwatch_log_group" "logs" {
		9  |   name = var.log_group_name
		10 | }


Check: CKV_AWS_66: "Ensure that CloudWatch Log Group specifies retention days"
	FAILED for resource: aws_cloudwatch_log_group.logs
	File: /terraform\aws\cloudwatch\cloudwatch.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/logging_13

		8  | resource "aws_cloudwatch_log_group" "logs" {
		9  |   name = var.log_group_name
		10 | }


Check: CKV_AWS_147: "Ensure that CodeBuild projects are encrypted"
	FAILED for resource: aws_codebuild_project.default
	File: /terraform\aws\codebuild\codebuild.tf:8-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-codebuild-projects-are-encrypted-1

		8  | resource "aws_codebuild_project" "default" {
		9  |   name         = "example"
		10 |   service_role = "aws_iam_role.example.arn"
		11 |
		12 |   artifacts {
		13 |     type                = "S3"
		14 |     encryption_disabled = true
		15 |   }
		16 |   environment {
		17 |     compute_type = "BUILD_GENERAL1_SMALL"
		18 |     image        = "docker:dind"
		19 |     type         = "LINUX_CONTAINER"
		20 |   }
		21 |   source {
		22 |     type = "NO_SOURCE"
		23 |   }
		24 |
		25 |   secondary_artifacts {
		26 |     encryption_disabled = false
		27 |   }
		28 |
		29 | }


Check: CKV_AWS_78: "Ensure that CodeBuild Project encryption is not disabled"
	FAILED for resource: aws_codebuild_project.default
	File: /terraform\aws\codebuild\codebuild.tf:8-29
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_30

		8  | resource "aws_codebuild_project" "default" {
		9  |   name         = "example"
		10 |   service_role = "aws_iam_role.example.arn"
		11 |
		12 |   artifacts {
		13 |     type                = "S3"
		14 |     encryption_disabled = true
		15 |   }
		16 |   environment {
		17 |     compute_type = "BUILD_GENERAL1_SMALL"
		18 |     image        = "docker:dind"
		19 |     type         = "LINUX_CONTAINER"
		20 |   }
		21 |   source {
		22 |     type = "NO_SOURCE"
		23 |   }
		24 |
		25 |   secondary_artifacts {
		26 |     encryption_disabled = false
		27 |   }
		28 |
		29 | }


Check: CKV_AWS_121: "Ensure AWS Config is enabled in all regions"
	FAILED for resource: aws_config_configuration_aggregator.organization
	File: /terraform\aws\config\config_configuration_aggregator.tf:7-15
	Guide: https://docs.bridgecrew.io/docs/logging_5-enable-aws-config-regions

		7  | resource "aws_config_configuration_aggregator" "organization" {
		8  |
		9  |   name = "example"
		10 |
		11 |   account_aggregation_source {
		12 |     account_ids = ["123456789012"]
		13 |     regions     = ["us-east-2", "us-east-1", "us-west-1", "us-west-2"]
		14 |   }
		15 | }


Check: CKV_AWS_1: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/iam_23

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_107: "Ensure IAM policies does not allow credentials exposure"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-credentials-exposure

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_108: "Ensure IAM policies does not allow data exfiltration"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-data-exfiltration

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_109: "Ensure IAM policies does not allow permissions management / resource exposure without constraints"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-permissions-management-resource-exposure-without-constraint

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_111: "Ensure IAM policies does not allow write access without constraints"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-do-not-allow-write-access-without-constraint

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_49: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy_document.fail
	File: /terraform\aws\data\data.iam_policy_document.tf:11-23
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_43

		11 | data "aws_iam_policy_document" "fail" {
		12 |   version = "2012-10-17"
		13 |
		14 |   statement {
		15 |     effect = "Allow"
		16 |     actions = [
		17 |       "*"
		18 |     ]
		19 |     resources = [
		20 |       "*",
		21 |     ]
		22 |   }
		23 | }


Check: CKV_AWS_47: "Ensure DAX is encrypted at rest (default is unencrypted)"
	FAILED for resource: aws_dax_cluster.name
	File: /terraform\aws\dax\dax_cluster.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_23

		7  | resource "aws_dax_cluster" "name" {
		8  |   cluster_name         = var.cluster_name
		9  |   iam_role_arn         = var.iam_role_arn
		10 |   parameter_group_name = aws_dax_parameter_group.example.name
		11 |   subnet_group_name    = aws_dax_subnet_group.example.name
		12 |   tags                 = var.common_tags
		13 | }


Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/general_4

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/general_73

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	FAILED for resource: aws_db_instance.default
	File: /terraform\aws\db_instance\db_instance.tf:15-36
	Guide: https://docs.bridgecrew.io/docs/public_2

		15 | resource "aws_db_instance" "default" {
		16 |   name                   = var.dbname
		17 |   engine                 = "mysql"
		18 |   option_group_name      = aws_db_option_group.default.name
		19 |   parameter_group_name   = aws_db_parameter_group.default.name
		20 |   db_subnet_group_name   = aws_db_subnet_group.default.name
		21 |   vpc_security_group_ids = [aws_security_group.default.id]
		22 |
		23 |   identifier              = "rds-${local.resource_prefix.value}"
		24 |   engine_version          = "8.0" # Latest major version
		25 |   instance_class          = "db.t3.micro"
		26 |   allocated_storage       = "20"
		27 |   username                = "admin"
		28 |   password                = var.password
		29 |   apply_immediately       = true
		30 |   multi_az                = false
		31 |   backup_retention_period = 0
		32 |   storage_encrypted       = false
		33 |   skip_final_snapshot     = true
		34 |   monitoring_interval     = 0
		35 |   publicly_accessible     = true
		36 | }


Check: CKV_AWS_198: "Ensure no aws_db_security_group resources exist"
	FAILED for resource: aws_db_security_group.positive1
	File: /terraform\aws\db_instance\db_security_group.tf:7-17

		7  | resource "aws_db_security_group" "positive1" {
		8  |   name = "rds_sg"
		9  |
		10 |   ingress {
		11 |     cidr = "0.0.0.0/0"
		12 |   }
		13 |
		14 |   ingress {
		15 |     cidr = "10.0.0.0/24"
		16 |   }
		17 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_db_security_group.positive1
	File: /terraform\aws\db_instance\db_security_group.tf:7-17
	Guide: https://docs.bridgecrew.io/docs/networking_31

		7  | resource "aws_db_security_group" "positive1" {
		8  |   name = "rds_sg"
		9  |
		10 |   ingress {
		11 |     cidr = "0.0.0.0/0"
		12 |   }
		13 |
		14 |   ingress {
		15 |     cidr = "10.0.0.0/24"
		16 |   }
		17 | }


Check: CKV_AWS_212: "Ensure EBS Volume is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_dms_replication_instance.fail
	File: /terraform\aws\dms\dms.tf:9-17

		9  | resource "aws_dms_replication_instance" "fail" {
		10 |   engine_version             = "3.1.4"
		11 |   multi_az                   = false
		12 |   publicly_accessible        = true
		13 |   replication_instance_class = "dms.t2.micro"
		14 |   replication_instance_id    = "test-dms-replication-instance-tf"
		15 |   # kms_key_arn = ""
		16 |   # auto_minor_version_upgrade=false
		17 | }


Check: CKV_AWS_89: "DMS replication instance should not be publicly accessible"
	FAILED for resource: aws_dms_replication_instance.fail
	File: /terraform\aws\dms\dms.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/public_13

		9  | resource "aws_dms_replication_instance" "fail" {
		10 |   engine_version             = "3.1.4"
		11 |   multi_az                   = false
		12 |   publicly_accessible        = true
		13 |   replication_instance_class = "dms.t2.micro"
		14 |   replication_instance_id    = "test-dms-replication-instance-tf"
		15 |   # kms_key_arn = ""
		16 |   # auto_minor_version_upgrade=false
		17 | }


Check: CKV_AWS_182: "Ensure Doc DB is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_docdb_cluster.examplea
	File: /terraform\aws\documentdb\docdb_cluster.tf:14-35
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_102

		14 | resource "aws_docdb_cluster" "examplea" {
		15 |   cluster_identifier = var.cluster_identifier
		16 |   engine             = "docdb"
		17 |   engine_version     = ""
		18 |   apply_immediately  = var.apply_immediately
		19 |   availability_zones = data.aws_availability_zones.available.names
		20 |
		21 |   db_subnet_group_name            = aws_docdb_subnet_group.examplea.name
		22 |   db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name
		23 |   deletion_protection             = var.deletion_protection
		24 |   master_username                 = var.master_username
		25 |   master_password                 = var.master_password
		26 |   backup_retention_period         = var.backup_retention_period
		27 |   preferred_backup_window         = "07:00-09:00"
		28 |   preferred_maintenance_window    = "sat:05:00-sat:07:00"
		29 |   skip_final_snapshot             = true
		30 |   vpc_security_group_ids          = []
		31 |   enabled_cloudwatch_logs_exports = "something"
		32 |   tags = {
		33 |     "key" = "value"
		34 |   }
		35 | }


Check: CKV_AWS_74: "Ensure DocDB is encrypted at rest (default is unencrypted)"
	FAILED for resource: aws_docdb_cluster.examplea
	File: /terraform\aws\documentdb\docdb_cluster.tf:14-35
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_28

		14 | resource "aws_docdb_cluster" "examplea" {
		15 |   cluster_identifier = var.cluster_identifier
		16 |   engine             = "docdb"
		17 |   engine_version     = ""
		18 |   apply_immediately  = var.apply_immediately
		19 |   availability_zones = data.aws_availability_zones.available.names
		20 |
		21 |   db_subnet_group_name            = aws_docdb_subnet_group.examplea.name
		22 |   db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name
		23 |   deletion_protection             = var.deletion_protection
		24 |   master_username                 = var.master_username
		25 |   master_password                 = var.master_password
		26 |   backup_retention_period         = var.backup_retention_period
		27 |   preferred_backup_window         = "07:00-09:00"
		28 |   preferred_maintenance_window    = "sat:05:00-sat:07:00"
		29 |   skip_final_snapshot             = true
		30 |   vpc_security_group_ids          = []
		31 |   enabled_cloudwatch_logs_exports = "something"
		32 |   tags = {
		33 |     "key" = "value"
		34 |   }
		35 | }


Check: CKV_AWS_85: "Ensure DocDB Logging is enabled"
	FAILED for resource: aws_docdb_cluster.examplea
	File: /terraform\aws\documentdb\docdb_cluster.tf:14-35
	Guide: https://docs.bridgecrew.io/docs/logging_19

		14 | resource "aws_docdb_cluster" "examplea" {
		15 |   cluster_identifier = var.cluster_identifier
		16 |   engine             = "docdb"
		17 |   engine_version     = ""
		18 |   apply_immediately  = var.apply_immediately
		19 |   availability_zones = data.aws_availability_zones.available.names
		20 |
		21 |   db_subnet_group_name            = aws_docdb_subnet_group.examplea.name
		22 |   db_cluster_parameter_group_name = aws_docdb_cluster_parameter_group.examplea.name
		23 |   deletion_protection             = var.deletion_protection
		24 |   master_username                 = var.master_username
		25 |   master_password                 = var.master_password
		26 |   backup_retention_period         = var.backup_retention_period
		27 |   preferred_backup_window         = "07:00-09:00"
		28 |   preferred_maintenance_window    = "sat:05:00-sat:07:00"
		29 |   skip_final_snapshot             = true
		30 |   vpc_security_group_ids          = []
		31 |   enabled_cloudwatch_logs_exports = "something"
		32 |   tags = {
		33 |     "key" = "value"
		34 |   }
		35 | }


Check: CKV_AWS_104: "Ensure DocDB has audit logs enabled"
	FAILED for resource: aws_docdb_cluster_parameter_group.examplea
	File: /terraform\aws\documentdb\docdb_cluster.tf:37-76
	Guide: https://docs.bridgecrew.io/docs/ensure-docdb-has-audit-logs-enabled

		37 | resource "aws_docdb_cluster_parameter_group" "examplea" {
		38 |   family      = var.family
		39 |   name        = var.param_group_name
		40 |   description = "docdb cluster parameter group"
		41 |
		42 |   parameter {
		43 |     name  = "tls"
		44 |     value = "disabled"
		45 |   }
		46 |
		47 |   parameter {
		48 |     name  = "audit_logs"
		49 |     value = "disabled"
		50 |   }
		51 |
		52 |   parameter {
		53 |     name  = "change_stream_log_retention_duration"
		54 |     value = var.change_stream_log_retention_duration
		55 |   }
		56 |
		57 |   parameter {
		58 |     name  = "profiler"
		59 |     value = var.profiler
		60 |   }
		61 |
		62 |   parameter {
		63 |     name  = "profiler_sampling_rate"
		64 |     value = var.profiler_sampling_rate
		65 |   }
		66 |
		67 |   parameter {
		68 |     name  = "profiler_threshold_ms"
		69 |     value = var.profiler_threshold_ms
		70 |   }
		71 |
		72 |   parameter {
		73 |     name  = "ttl_monitor"
		74 |     value = var.ttl_monitor
		75 |   }
		76 | }


Check: CKV_AWS_90: "Ensure DocDB TLS is not disabled"
	FAILED for resource: aws_docdb_cluster_parameter_group.examplea
	File: /terraform\aws\documentdb\docdb_cluster.tf:37-76
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_37

		37 | resource "aws_docdb_cluster_parameter_group" "examplea" {
		38 |   family      = var.family
		39 |   name        = var.param_group_name
		40 |   description = "docdb cluster parameter group"
		41 |
		42 |   parameter {
		43 |     name  = "tls"
		44 |     value = "disabled"
		45 |   }
		46 |
		47 |   parameter {
		48 |     name  = "audit_logs"
		49 |     value = "disabled"
		50 |   }
		51 |
		52 |   parameter {
		53 |     name  = "change_stream_log_retention_duration"
		54 |     value = var.change_stream_log_retention_duration
		55 |   }
		56 |
		57 |   parameter {
		58 |     name  = "profiler"
		59 |     value = var.profiler
		60 |   }
		61 |
		62 |   parameter {
		63 |     name  = "profiler_sampling_rate"
		64 |     value = var.profiler_sampling_rate
		65 |   }
		66 |
		67 |   parameter {
		68 |     name  = "profiler_threshold_ms"
		69 |     value = var.profiler_threshold_ms
		70 |   }
		71 |
		72 |   parameter {
		73 |     name  = "ttl_monitor"
		74 |     value = var.ttl_monitor
		75 |   }
		76 | }


Check: CKV_AWS_28: "Ensure Dynamodb point in time recovery (backup) is enabled"
	FAILED for resource: aws_dynamodb_table.default
	File: /terraform\aws\dynamodb\dynamodb_table.tf:10-35
	Guide: https://docs.bridgecrew.io/docs/general_6

		10 | resource "aws_dynamodb_table" "default" {
		11 |   name           = "GameScores"
		12 |   billing_mode   = "PROVISIONED"
		13 |   read_capacity  = 20
		14 |   write_capacity = 20
		15 |   hash_key       = "UserId"
		16 |   range_key      = "UserId"
		17 |
		18 |   attribute {
		19 |     name = "UserId"
		20 |     type = "S"
		21 |   }
		22 |
		23 |   replica {
		24 |     region_name = "us-east-2"
		25 |   }
		26 |
		27 |   replica {
		28 |     region_name = "us-west-2"
		29 |   }
		30 |
		31 |   # server_side_encryption {
		32 |   # 	enabled     = true
		33 |   # 	kms_key_arn = aws_kms_key.dynamo_db_kms.key_id
		34 |   # }
		35 | }


Check: CKV_AWS_119: "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK"
	FAILED for resource: aws_dynamodb_table.default
	File: /terraform\aws\dynamodb\dynamodb_table.tf:10-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted

		10 | resource "aws_dynamodb_table" "default" {
		11 |   name           = "GameScores"
		12 |   billing_mode   = "PROVISIONED"
		13 |   read_capacity  = 20
		14 |   write_capacity = 20
		15 |   hash_key       = "UserId"
		16 |   range_key      = "UserId"
		17 |
		18 |   attribute {
		19 |     name = "UserId"
		20 |     type = "S"
		21 |   }
		22 |
		23 |   replica {
		24 |     region_name = "us-east-2"
		25 |   }
		26 |
		27 |   replica {
		28 |     region_name = "us-west-2"
		29 |   }
		30 |
		31 |   # server_side_encryption {
		32 |   # 	enabled     = true
		33 |   # 	kms_key_arn = aws_kms_key.dynamo_db_kms.key_id
		34 |   # }
		35 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.allow_public_outbound_sg
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:56-68
	Guide: https://docs.bridgecrew.io/docs/networking_31

		56 | resource "aws_security_group" "allow_public_outbound_sg" {
		57 |   name        = "allow-public-outbound-sg"
		58 |   description = "Allow HTTPS outbound traffic"
		59 |   vpc_id      = aws_vpc.main.id
		60 |
		61 |   egress {
		62 |     from_port   = 443
		63 |     to_port     = 443
		64 |     protocol    = "tcp"
		65 |     cidr_blocks = [local.s3_prefix_list_cidr_block]
		66 |   }
		67 |
		68 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		86 | resource "aws_instance" "test" {
		87 |   ami                    = data.aws_ami.ubuntu.id
		88 |   instance_type          = "t2.micro"
		89 |   vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]
		90 |   subnet_id              = aws_subnet.private_subnet.id
		91 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		86 | resource "aws_instance" "test" {
		87 |   ami                    = data.aws_ami.ubuntu.id
		88 |   instance_type          = "t2.micro"
		89 |   vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]
		90 |   subnet_id              = aws_subnet.private_subnet.id
		91 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		86 | resource "aws_instance" "test" {
		87 |   ami                    = data.aws_ami.ubuntu.id
		88 |   instance_type          = "t2.micro"
		89 |   vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]
		90 |   subnet_id              = aws_subnet.private_subnet.id
		91 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.test
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:86-91
	Guide: https://docs.bridgecrew.io/docs/general_13

		86 | resource "aws_instance" "test" {
		87 |   ami                    = data.aws_ami.ubuntu.id
		88 |   instance_type          = "t2.micro"
		89 |   vpc_security_group_ids = [aws_security_group.allow_public_outbound_sg.id]
		90 |   subnet_id              = aws_subnet.private_subnet.id
		91 | }


Check: CKV_AWS_28: "Ensure Dynamodb point in time recovery (backup) is enabled"
	FAILED for resource: aws_dynamodb_table.basic_dynamodb_table
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:93-110
	Guide: https://docs.bridgecrew.io/docs/general_6

		93  | resource "aws_dynamodb_table" "basic_dynamodb_table" {
		94  |   name           = "GameScores"
		95  |   billing_mode   = "PROVISIONED"
		96  |   read_capacity  = 5
		97  |   write_capacity = 5
		98  |   hash_key       = "UserId"
		99  |   range_key      = "GameTitle"
		100 |
		101 |   attribute {
		102 |     name = "UserId"
		103 |     type = "S"
		104 |   }
		105 |
		106 |   attribute {
		107 |     name = "GameTitle"
		108 |     type = "S"
		109 |   }
		110 | }


Check: CKV_AWS_119: "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK"
	FAILED for resource: aws_dynamodb_table.basic_dynamodb_table
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:93-110
	Guide: https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted

		93  | resource "aws_dynamodb_table" "basic_dynamodb_table" {
		94  |   name           = "GameScores"
		95  |   billing_mode   = "PROVISIONED"
		96  |   read_capacity  = 5
		97  |   write_capacity = 5
		98  |   hash_key       = "UserId"
		99  |   range_key      = "GameTitle"
		100 |
		101 |   attribute {
		102 |     name = "UserId"
		103 |     type = "S"
		104 |   }
		105 |
		106 |   attribute {
		107 |     name = "GameTitle"
		108 |     type = "S"
		109 |   }
		110 | }


Check: CKV_AWS_106: "Ensure EBS default encryption is enabled"
	FAILED for resource: aws_ebs_encryption_by_default.disabled
	File: /terraform\aws\ebs\ebs_encryption_defaults.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-ebs-default-encryption-is-enabled

		3 | resource "aws_ebs_encryption_by_default" "disabled" {
		4 |   enabled = false
		5 | }


Check: CKV_AWS_183: "Ensure EBS Snapshot Copy is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_ebs_snapshot_copy.fail
	File: /terraform\aws\ebs\ebs_snapshot_copy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_103

		5  | resource "aws_ebs_snapshot_copy" "fail" {
		6  |   source_snapshot_id = aws_ebs_snapshot.test.id
		7  |   source_region      = data.aws_region.current.name
		8  |   encrypted          = true
		9  |
		10 |   tags = {
		11 |     Name = "testAccEBSSnapshotCopyWithKMSConfig"
		12 |   }
		13 | }


Check: CKV_AWS_3: "Ensure all data stored in the EBS is securely encrypted"
	FAILED for resource: aws_ebs_volume.fail
	File: /terraform\aws\ebs\ebs_volume.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/general_3-encrypt-eps-volume

		12 | resource "aws_ebs_volume" "fail" {
		13 |   availability_zone = "eu-west-1a"
		14 |   size              = 1
		15 | }


Check: CKV_AWS_189: "Ensure EBS Volume is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_ebs_volume.fail
	File: /terraform\aws\ebs\ebs_volume.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_109

		12 | resource "aws_ebs_volume" "fail" {
		13 |   availability_zone = "eu-west-1a"
		14 |   size              = 1
		15 | }


Check: CKV_AWS_163: "Ensure ECR image scanning on push is enabled"
	FAILED for resource: aws_ecr_repository.name
	File: /terraform\aws\ecr\ecr_repository.tf:10-13
	Guide: https://docs.bridgecrew.io/docs/general_8

		10 | resource "aws_ecr_repository" "name" {
		11 |   name                 = "bar"
		12 |   image_tag_mutability = "MUTABLE"
		13 | }


Check: CKV_AWS_51: "Ensure ECR Image Tags are immutable"
	FAILED for resource: aws_ecr_repository.name
	File: /terraform\aws\ecr\ecr_repository.tf:10-13
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_24

		10 | resource "aws_ecr_repository" "name" {
		11 |   name                 = "bar"
		12 |   image_tag_mutability = "MUTABLE"
		13 | }


Check: CKV_AWS_136: "Ensure that ECR repositories are encrypted using KMS"
	FAILED for resource: aws_ecr_repository.name
	File: /terraform\aws\ecr\ecr_repository.tf:10-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted

		10 | resource "aws_ecr_repository" "name" {
		11 |   name                 = "bar"
		12 |   image_tag_mutability = "MUTABLE"
		13 | }


Check: CKV_AWS_163: "Ensure ECR image scanning on push is enabled"
	FAILED for resource: aws_ecr_repository.positive1
	File: /terraform\aws\ecr\ecr_repository_is_publicly_accessible.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/general_8

		4 | resource "aws_ecr_repository" "positive1" {
		5 |   name = "bar"
		6 | }


Check: CKV_AWS_51: "Ensure ECR Image Tags are immutable"
	FAILED for resource: aws_ecr_repository.positive1
	File: /terraform\aws\ecr\ecr_repository_is_publicly_accessible.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_24

		4 | resource "aws_ecr_repository" "positive1" {
		5 |   name = "bar"
		6 | }


Check: CKV_AWS_136: "Ensure that ECR repositories are encrypted using KMS"
	FAILED for resource: aws_ecr_repository.positive1
	File: /terraform\aws\ecr\ecr_repository_is_publicly_accessible.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted

		4 | resource "aws_ecr_repository" "positive1" {
		5 |   name = "bar"
		6 | }


Check: CKV_AWS_32: "Ensure ECR policy is not set to public"
	FAILED for resource: aws_ecr_repository_policy.positive2
	File: /terraform\aws\ecr\ecr_repository_is_publicly_accessible.tf:8-39
	Guide: https://docs.bridgecrew.io/docs/public_1-ecr-repositories-not-public

		8  | resource "aws_ecr_repository_policy" "positive2" {
		9  |   repository = aws_ecr_repository.foo.name
		10 |
		11 |   policy = <<EOF
		12 | {
		13 |     "Version": "2008-10-17",
		14 |     "Statement": [
		15 |         {
		16 |             "Sid": "new policy",
		17 |             "Effect": "Allow",
		18 |             "Principal": "*",
		19 |             "Action": [
		20 |                 "ecr:GetDownloadUrlForLayer",
		21 |                 "ecr:BatchGetImage",
		22 |                 "ecr:BatchCheckLayerAvailability",
		23 |                 "ecr:PutImage",
		24 |                 "ecr:InitiateLayerUpload",
		25 |                 "ecr:UploadLayerPart",
		26 |                 "ecr:CompleteLayerUpload",
		27 |                 "ecr:DescribeRepositories",
		28 |                 "ecr:GetRepositoryPolicy",
		29 |                 "ecr:ListImages",
		30 |                 "ecr:DeleteRepository",
		31 |                 "ecr:BatchDeleteImage",
		32 |                 "ecr:SetRepositoryPolicy",
		33 |                 "ecr:DeleteRepositoryPolicy"
		34 |             ]
		35 |         }
		36 |     ]
		37 | }
		38 | EOF
		39 | }


Check: CKV_AWS_32: "Ensure ECR policy is not set to public"
	FAILED for resource: aws_ecr_repository_policy.fail
	File: /terraform\aws\ecr\ecr_repository_policy.tf:1-30
	Guide: https://docs.bridgecrew.io/docs/public_1-ecr-repositories-not-public

		1  | resource "aws_ecr_repository_policy" "fail" {
		2  |   repository = "public_repo"
		3  |   policy     = <<POLICY
		4  | {   "Version": "2008-10-17",
		5  |     "Statement": [
		6  |         {
		7  |             "Sid": "new policy",
		8  |             "Effect": "Allow",
		9  |             "Principal": "*",
		10 |             "Action": [
		11 |                 "ecr:GetDownloadUrlForLayer",
		12 |                 "ecr:BatchGetImage",
		13 |                 "ecr:BatchCheckLayerAvailability",
		14 |                 "ecr:PutImage",
		15 |                 "ecr:InitiateLayerUpload",
		16 |                 "ecr:UploadLayerPart",
		17 |                 "ecr:CompleteLayerUpload",
		18 |                 "ecr:DescribeRepositories",
		19 |                 "ecr:GetRepositoryPolicy",
		20 |                 "ecr:ListImages",
		21 |                 "ecr:DeleteRepository",
		22 |                 "ecr:BatchDeleteImage",
		23 |                 "ecr:SetRepositoryPolicy",
		24 |                 "ecr:DeleteRepositoryPolicy"
		25 |             ]
		26 |         }
		27 |     ]
		28 |     }
		29 | POLICY
		30 | }


Check: CKV_AWS_163: "Ensure ECR image scanning on push is enabled"
	FAILED for resource: aws_ecr_repository.foo
	File: /terraform\aws\ecr\ecr_repository_without_policy.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/general_8

		3 | resource "aws_ecr_repository" "foo" {
		4 |   name = "bar"
		5 | }


Check: CKV_AWS_51: "Ensure ECR Image Tags are immutable"
	FAILED for resource: aws_ecr_repository.foo
	File: /terraform\aws\ecr\ecr_repository_without_policy.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_24

		3 | resource "aws_ecr_repository" "foo" {
		4 |   name = "bar"
		5 | }


Check: CKV_AWS_136: "Ensure that ECR repositories are encrypted using KMS"
	FAILED for resource: aws_ecr_repository.foo
	File: /terraform\aws\ecr\ecr_repository_without_policy.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted

		3 | resource "aws_ecr_repository" "foo" {
		4 |   name = "bar"
		5 | }


Check: CKV_AWS_65: "Ensure container insights are enabled on ECS cluster"
	FAILED for resource: aws_ecs_cluster.fail
	File: /terraform\aws\ecs\ecs_cluster.tf:11-13
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_11

		11 | resource "aws_ecs_cluster" "fail" {
		12 |   name = "white-hart"
		13 | }


Check: CKV_AWS_97: "Ensure Encryption in transit is enabled for EFS volumes in ECS Task definitions"
	FAILED for resource: aws_ecs_task_definition.fail
	File: /terraform\aws\ecs\ecs_task_definition.tf:7-35
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_39

		7  | resource "aws_ecs_task_definition" "fail" {
		8  |   family                = "service"
		9  |   container_definitions = <<EOF
		10 | [
		11 |   {
		12 |     "name": "my_service",
		13 |     "essential": true,
		14 |     "memory": 256,
		15 |     "environment": [
		16 |       { "name": "ENVIRONMENT", "value": "development" },
		17 |       { "name": "DATABASE_PASSWORD", "value": "oh no D:"}
		18 |     ]
		19 |   }
		20 | ]
		21 | EOF
		22 |
		23 |   volume {
		24 |     name = "service-storage"
		25 |
		26 |     efs_volume_configuration {
		27 |       file_system_id = aws_efs_file_system.fs.id
		28 |       root_directory = "/opt/data"
		29 |       authorization_config {
		30 |         access_point_id = aws_efs_access_point.fail.id
		31 |         iam             = "ENABLED"
		32 |       }
		33 |     }
		34 |   }
		35 | }


Check: CKV_AWS_42: "Ensure EFS is securely encrypted"
	FAILED for resource: aws_efs_file_system.fs
	File: /terraform\aws\ecs\ecs_task_definition.tf:38-38
	Guide: https://docs.bridgecrew.io/docs/general_17

		38 | resource "aws_efs_file_system" "fs" {}


Check: CKV_AWS_184: "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_efs_file_system.fs
	File: /terraform\aws\ecs\ecs_task_definition.tf:38-38
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_104

		38 | resource "aws_efs_file_system" "fs" {}


Check: CKV_AWS_42: "Ensure EFS is securely encrypted"
	FAILED for resource: aws_efs_file_system.sharedstore
	File: /terraform\aws\efs\efs.tf:8-23
	Guide: https://docs.bridgecrew.io/docs/general_17

		8  | resource "aws_efs_file_system" "sharedstore" {
		9  |
		10 |   creation_token = var.efs["creation_token"]
		11 |
		12 |   lifecycle_policy {
		13 |     transition_to_ia = var.efs["transition_to_ia"]
		14 |   }
		15 |
		16 |   kms_key_id                      = ""
		17 |   encrypted                       = false
		18 |   performance_mode                = var.efs["performance_mode"]
		19 |   provisioned_throughput_in_mibps = var.efs["provisioned_throughput_in_mibps"]
		20 |   throughput_mode                 = var.efs["throughput_mode"]
		21 |   tags                            = var.common_tags
		22 |
		23 | }


Check: CKV_AWS_184: "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_efs_file_system.sharedstore
	File: /terraform\aws\efs\efs.tf:8-23
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_104

		8  | resource "aws_efs_file_system" "sharedstore" {
		9  |
		10 |   creation_token = var.efs["creation_token"]
		11 |
		12 |   lifecycle_policy {
		13 |     transition_to_ia = var.efs["transition_to_ia"]
		14 |   }
		15 |
		16 |   kms_key_id                      = ""
		17 |   encrypted                       = false
		18 |   performance_mode                = var.efs["performance_mode"]
		19 |   provisioned_throughput_in_mibps = var.efs["provisioned_throughput_in_mibps"]
		20 |   throughput_mode                 = var.efs["throughput_mode"]
		21 |   tags                            = var.common_tags
		22 |
		23 | }


Check: CKV_AWS_42: "Ensure EFS is securely encrypted"
	FAILED for resource: aws_efs_file_system.not_secure
	File: /terraform\aws\efs\efs_with_vulnerable_policy.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/general_17

		8  | resource "aws_efs_file_system" "not_secure" {
		9  |   creation_token = "efs-not-secure"
		10 |
		11 |   tags = {
		12 |     Name = "NotSecure"
		13 |   }
		14 | }


Check: CKV_AWS_184: "Ensure resource is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_efs_file_system.not_secure
	File: /terraform\aws\efs\efs_with_vulnerable_policy.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_104

		8  | resource "aws_efs_file_system" "not_secure" {
		9  |   creation_token = "efs-not-secure"
		10 |
		11 |   tags = {
		12 |     Name = "NotSecure"
		13 |   }
		14 | }


Check: CKV_AWS_37: "Ensure Amazon EKS control plane logging enabled for all log types"
	FAILED for resource: aws_eks_cluster.fail
	File: /terraform\aws\eks\eks_cluster.tf:13-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_kubernetes_4

		13 | resource "aws_eks_cluster" "fail" {
		14 |   name     = "fail_cluster"
		15 |   role_arn = var.cluster_arn
		16 |   vpc_config {
		17 |     endpoint_public_access = true
		18 |     public_access_cidrs    = ["0.0.0.0/0"]
		19 |   }
		20 | }


Check: CKV_AWS_39: "Ensure Amazon EKS public endpoint disabled"
	FAILED for resource: aws_eks_cluster.fail
	File: /terraform\aws\eks\eks_cluster.tf:13-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_kubernetes_2

		13 | resource "aws_eks_cluster" "fail" {
		14 |   name     = "fail_cluster"
		15 |   role_arn = var.cluster_arn
		16 |   vpc_config {
		17 |     endpoint_public_access = true
		18 |     public_access_cidrs    = ["0.0.0.0/0"]
		19 |   }
		20 | }


Check: CKV_AWS_38: "Ensure Amazon EKS public endpoint not accessible to 0.0.0.0/0"
	FAILED for resource: aws_eks_cluster.fail
	File: /terraform\aws\eks\eks_cluster.tf:13-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_kubernetes_1

		13 | resource "aws_eks_cluster" "fail" {
		14 |   name     = "fail_cluster"
		15 |   role_arn = var.cluster_arn
		16 |   vpc_config {
		17 |     endpoint_public_access = true
		18 |     public_access_cidrs    = ["0.0.0.0/0"]
		19 |   }
		20 | }


Check: CKV_AWS_58: "Ensure EKS Cluster has Secrets Encryption Enabled"
	FAILED for resource: aws_eks_cluster.fail
	File: /terraform\aws\eks\eks_cluster.tf:13-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_kubernetes_3

		13 | resource "aws_eks_cluster" "fail" {
		14 |   name     = "fail_cluster"
		15 |   role_arn = var.cluster_arn
		16 |   vpc_config {
		17 |     endpoint_public_access = true
		18 |     public_access_cidrs    = ["0.0.0.0/0"]
		19 |   }
		20 | }


Check: CKV_AWS_100: "Ensure Amazon EKS Node group has implicit SSH access from 0.0.0.0/0"
	FAILED for resource: aws_eks_node_group.fail
	File: /terraform\aws\eks\eks_node.tf:4-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_kubernetes_5

		4  | resource "aws_eks_node_group" "fail" {
		5  |   cluster_name    = aws_eks_cluster.example.name
		6  |   node_group_name = "example"
		7  |   node_role_arn   = aws_iam_role.example.arn
		8  |   subnet_ids      = aws_subnet.example[*].id
		9  |
		10 |   remote_access {
		11 |     ec2_ssh_key = "some-key"
		12 |   }
		13 |
		14 |   scaling_config {
		15 |     desired_size = 1
		16 |     max_size     = 1
		17 |     min_size     = 1
		18 |   }
		19 | }


Check: CKV_AWS_134: "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on"
	FAILED for resource: aws_elasticache_cluster.fail_redis
	File: /terraform\aws\elasticache\elasticache_cluster.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on

		7  | resource "aws_elasticache_cluster" "fail_redis" {
		8  |   cluster_id           = "cluster"
		9  |   engine               = "redis"
		10 |   node_type            = "cache.t2.micro"
		11 |   num_cache_nodes      = 1
		12 |   parameter_group_name = "default.redis6.x"
		13 | }


Check: CKV_AWS_191: "Ensure Elasticache replication group is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticache\elasticache_replication_group.tf:10-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_111

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "tf-%s"
		12 |   replication_group_description = "test description"
		13 |   node_type                     = "cache.t2.micro"
		14 |   number_cache_clusters         = "1"
		15 |   port                          = 6379
		16 |   subnet_group_name             = aws_elasticache_subnet_group.bar.name
		17 |   security_group_ids            = [aws_security_group.bar.id]
		18 |   parameter_group_name          = "default.redis3.2"
		19 |   availability_zones            = [data.aws_availability_zones.available.names[0]]
		20 |   engine_version                = "3.2.6"
		21 |   transit_encryption_enabled    = false
		22 | }


Check: CKV_AWS_29: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at rest"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticache\elasticache_replication_group.tf:10-22
	Guide: https://docs.bridgecrew.io/docs/general_9

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "tf-%s"
		12 |   replication_group_description = "test description"
		13 |   node_type                     = "cache.t2.micro"
		14 |   number_cache_clusters         = "1"
		15 |   port                          = 6379
		16 |   subnet_group_name             = aws_elasticache_subnet_group.bar.name
		17 |   security_group_ids            = [aws_security_group.bar.id]
		18 |   parameter_group_name          = "default.redis3.2"
		19 |   availability_zones            = [data.aws_availability_zones.available.names[0]]
		20 |   engine_version                = "3.2.6"
		21 |   transit_encryption_enabled    = false
		22 | }


Check: CKV_AWS_30: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticache\elasticache_replication_group.tf:10-22
	Guide: https://docs.bridgecrew.io/docs/general_10

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "tf-%s"
		12 |   replication_group_description = "test description"
		13 |   node_type                     = "cache.t2.micro"
		14 |   number_cache_clusters         = "1"
		15 |   port                          = 6379
		16 |   subnet_group_name             = aws_elasticache_subnet_group.bar.name
		17 |   security_group_ids            = [aws_security_group.bar.id]
		18 |   parameter_group_name          = "default.redis3.2"
		19 |   availability_zones            = [data.aws_availability_zones.available.names[0]]
		20 |   engine_version                = "3.2.6"
		21 |   transit_encryption_enabled    = false
		22 | }


Check: CKV_AWS_31: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit and has auth token"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticache\elasticache_replication_group.tf:10-22
	Guide: https://docs.bridgecrew.io/docs/general_11

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "tf-%s"
		12 |   replication_group_description = "test description"
		13 |   node_type                     = "cache.t2.micro"
		14 |   number_cache_clusters         = "1"
		15 |   port                          = 6379
		16 |   subnet_group_name             = aws_elasticache_subnet_group.bar.name
		17 |   security_group_ids            = [aws_security_group.bar.id]
		18 |   parameter_group_name          = "default.redis3.2"
		19 |   availability_zones            = [data.aws_availability_zones.available.names[0]]
		20 |   engine_version                = "3.2.6"
		21 |   transit_encryption_enabled    = false
		22 | }


Check: CKV_AWS_196: "Ensure no aws_elasticache_security_group resources exist"
	FAILED for resource: aws_elasticache_security_group.fail
	File: /terraform\aws\elasticache\elasticache_security_group.tf:7-10

		7  | resource "aws_elasticache_security_group" "fail" {
		8  |   name                 = "elasticache-security-group"
		9  |   security_group_names = [aws_security_group.bar.name]
		10 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_elasticache_security_group.fail
	File: /terraform\aws\elasticache\elasticache_security_group.tf:7-10
	Guide: https://docs.bridgecrew.io/docs/networking_31

		7  | resource "aws_elasticache_security_group" "fail" {
		8  |   name                 = "elasticache-security-group"
		9  |   security_group_names = [aws_security_group.bar.name]
		10 | }


Check: CKV_AWS_134: "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on"
	FAILED for resource: aws_elasticache_cluster.fails
	File: /terraform\aws\elasticache\redis_not_compliant.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on

		3  | resource "aws_elasticache_cluster" "fails" {
		4  |   cluster_id      = "cluster-example"
		5  |   engine          = "redis"
		6  |   node_type       = "cache.m4.large"
		7  |   num_cache_nodes = 1
		8  |   engine_version  = "2.6.13"
		9  |   port            = 6379
		10 | }


Check: CKV_AWS_191: "Ensure Elasticache replication group is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticsearch\elasticache_replication_group.tf:10-15
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_111

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "foo"
		12 |   replication_group_description = "my foo cluster"
		13 |
		14 |   at_rest_encryption_enabled = false
		15 | }


Check: CKV_AWS_29: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at rest"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticsearch\elasticache_replication_group.tf:10-15
	Guide: https://docs.bridgecrew.io/docs/general_9

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "foo"
		12 |   replication_group_description = "my foo cluster"
		13 |
		14 |   at_rest_encryption_enabled = false
		15 | }


Check: CKV_AWS_30: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticsearch\elasticache_replication_group.tf:10-15
	Guide: https://docs.bridgecrew.io/docs/general_10

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "foo"
		12 |   replication_group_description = "my foo cluster"
		13 |
		14 |   at_rest_encryption_enabled = false
		15 | }


Check: CKV_AWS_31: "Ensure all data stored in the Elasticache Replication Group is securely encrypted at transit and has auth token"
	FAILED for resource: aws_elasticache_replication_group.fail
	File: /terraform\aws\elasticsearch\elasticache_replication_group.tf:10-15
	Guide: https://docs.bridgecrew.io/docs/general_11

		10 | resource "aws_elasticache_replication_group" "fail" {
		11 |   replication_group_id          = "foo"
		12 |   replication_group_description = "my foo cluster"
		13 |
		14 |   at_rest_encryption_enabled = false
		15 | }


Check: CKV_AWS_83: "Ensure Elasticsearch Domain enforces HTTPS"
	FAILED for resource: aws_elasticsearch_domain.es_not_secure_policy
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_6

		5  | resource "aws_elasticsearch_domain" "es_not_secure_policy" {
		6  |   domain_name = "es-not-secure-policy"
		7  |
		8  |   ebs_options {
		9  |     ebs_enabled = true
		10 |     volume_size = 10
		11 |     volume_type = "gp2"
		12 |   }
		13 | }


Check: CKV_AWS_84: "Ensure Elasticsearch Domain Logging is enabled"
	FAILED for resource: aws_elasticsearch_domain.es_not_secure_policy
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_7

		5  | resource "aws_elasticsearch_domain" "es_not_secure_policy" {
		6  |   domain_name = "es-not-secure-policy"
		7  |
		8  |   ebs_options {
		9  |     ebs_enabled = true
		10 |     volume_size = 10
		11 |     volume_type = "gp2"
		12 |   }
		13 | }


Check: CKV_AWS_5: "Ensure all data stored in the Elasticsearch is securely encrypted at rest"
	FAILED for resource: aws_elasticsearch_domain.es_not_secure_policy
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest

		5  | resource "aws_elasticsearch_domain" "es_not_secure_policy" {
		6  |   domain_name = "es-not-secure-policy"
		7  |
		8  |   ebs_options {
		9  |     ebs_enabled = true
		10 |     volume_size = 10
		11 |     volume_type = "gp2"
		12 |   }
		13 | }


Check: CKV_AWS_137: "Ensure that Elasticsearch is configured inside a VPC"
	FAILED for resource: aws_elasticsearch_domain.es_not_secure_policy
	File: /terraform\aws\elasticsearch\elasticsearch_domain_with_vulnerable_policy.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc

		5  | resource "aws_elasticsearch_domain" "es_not_secure_policy" {
		6  |   domain_name = "es-not-secure-policy"
		7  |
		8  |   ebs_options {
		9  |     ebs_enabled = true
		10 |     volume_size = 10
		11 |     volume_type = "gp2"
		12 |   }
		13 | }


Check: CKV_AWS_83: "Ensure Elasticsearch Domain enforces HTTPS"
	FAILED for resource: aws_elasticsearch_domain.no_iam
	File: /terraform\aws\elasticsearch\elasticsearch_without_iam_authentication.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_6

		3 | resource "aws_elasticsearch_domain" "no_iam" {
		4 |   domain_name           = "tf-test"
		5 |   elasticsearch_version = "2.3"
		6 | }


Check: CKV_AWS_84: "Ensure Elasticsearch Domain Logging is enabled"
	FAILED for resource: aws_elasticsearch_domain.no_iam
	File: /terraform\aws\elasticsearch\elasticsearch_without_iam_authentication.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_7

		3 | resource "aws_elasticsearch_domain" "no_iam" {
		4 |   domain_name           = "tf-test"
		5 |   elasticsearch_version = "2.3"
		6 | }


Check: CKV_AWS_5: "Ensure all data stored in the Elasticsearch is securely encrypted at rest"
	FAILED for resource: aws_elasticsearch_domain.no_iam
	File: /terraform\aws\elasticsearch\elasticsearch_without_iam_authentication.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest

		3 | resource "aws_elasticsearch_domain" "no_iam" {
		4 |   domain_name           = "tf-test"
		5 |   elasticsearch_version = "2.3"
		6 | }


Check: CKV_AWS_137: "Ensure that Elasticsearch is configured inside a VPC"
	FAILED for resource: aws_elasticsearch_domain.no_iam
	File: /terraform\aws\elasticsearch\elasticsearch_without_iam_authentication.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc

		3 | resource "aws_elasticsearch_domain" "no_iam" {
		4 |   domain_name           = "tf-test"
		5 |   elasticsearch_version = "2.3"
		6 | }


Check: CKV_AWS_83: "Ensure Elasticsearch Domain enforces HTTPS"
	FAILED for resource: aws_elasticsearch_domain.positive1
	File: /terraform\aws\elasticsearch\elasticsearch_without_slow_logs.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_6

		3  | resource "aws_elasticsearch_domain" "positive1" {
		4  |   log_publishing_options {
		5  |     cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		6  |     log_type                 = "ES_APPLICATION_LOGS"
		7  |     enabled                  = true
		8  |   }
		9  |   # log_publishing_options {
		10 |   #   log_type=
		11 |   # }
		12 | }


Check: CKV_AWS_5: "Ensure all data stored in the Elasticsearch is securely encrypted at rest"
	FAILED for resource: aws_elasticsearch_domain.positive1
	File: /terraform\aws\elasticsearch\elasticsearch_without_slow_logs.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest

		3  | resource "aws_elasticsearch_domain" "positive1" {
		4  |   log_publishing_options {
		5  |     cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		6  |     log_type                 = "ES_APPLICATION_LOGS"
		7  |     enabled                  = true
		8  |   }
		9  |   # log_publishing_options {
		10 |   #   log_type=
		11 |   # }
		12 | }


Check: CKV_AWS_137: "Ensure that Elasticsearch is configured inside a VPC"
	FAILED for resource: aws_elasticsearch_domain.positive1
	File: /terraform\aws\elasticsearch\elasticsearch_without_slow_logs.tf:3-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc

		3  | resource "aws_elasticsearch_domain" "positive1" {
		4  |   log_publishing_options {
		5  |     cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		6  |     log_type                 = "ES_APPLICATION_LOGS"
		7  |     enabled                  = true
		8  |   }
		9  |   # log_publishing_options {
		10 |   #   log_type=
		11 |   # }
		12 | }


Check: CKV_AWS_83: "Ensure Elasticsearch Domain enforces HTTPS"
	FAILED for resource: aws_elasticsearch_domain.node_to_node_encryption_disabled
	File: /terraform\aws\elasticsearch\elastisearch_domain.tf:17-41
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_6

		17 | resource "aws_elasticsearch_domain" "node_to_node_encryption_disabled" {
		18 |   domain_name = "node_to_node_encryption_disabled"
		19 |   domain_endpoint_options {
		20 |     enforce_https       = false
		21 |     tls_security_policy = "Policy-Min-TLS-1-0-2019-07"
		22 |   }
		23 |
		24 |   cluster_config {
		25 |     instance_count = 2 // a value > 1
		26 |   }
		27 |
		28 |   encrypt_at_rest {
		29 |     enabled = false
		30 |   }
		31 |
		32 |   node_to_node_encryption {
		33 |     enabled = false
		34 |   }
		35 |
		36 |   #   log_publishing_options {
		37 |   #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		38 |   #   log_type                 = "INDEX_SLOW_LOGS"
		39 |   #   enabled                  = false
		40 |   # }
		41 | }


Check: CKV_AWS_84: "Ensure Elasticsearch Domain Logging is enabled"
	FAILED for resource: aws_elasticsearch_domain.node_to_node_encryption_disabled
	File: /terraform\aws\elasticsearch\elastisearch_domain.tf:17-41
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_7

		17 | resource "aws_elasticsearch_domain" "node_to_node_encryption_disabled" {
		18 |   domain_name = "node_to_node_encryption_disabled"
		19 |   domain_endpoint_options {
		20 |     enforce_https       = false
		21 |     tls_security_policy = "Policy-Min-TLS-1-0-2019-07"
		22 |   }
		23 |
		24 |   cluster_config {
		25 |     instance_count = 2 // a value > 1
		26 |   }
		27 |
		28 |   encrypt_at_rest {
		29 |     enabled = false
		30 |   }
		31 |
		32 |   node_to_node_encryption {
		33 |     enabled = false
		34 |   }
		35 |
		36 |   #   log_publishing_options {
		37 |   #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		38 |   #   log_type                 = "INDEX_SLOW_LOGS"
		39 |   #   enabled                  = false
		40 |   # }
		41 | }


Check: CKV_AWS_5: "Ensure all data stored in the Elasticsearch is securely encrypted at rest"
	FAILED for resource: aws_elasticsearch_domain.node_to_node_encryption_disabled
	File: /terraform\aws\elasticsearch\elastisearch_domain.tf:17-41
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_3-enable-encryptionatrest

		17 | resource "aws_elasticsearch_domain" "node_to_node_encryption_disabled" {
		18 |   domain_name = "node_to_node_encryption_disabled"
		19 |   domain_endpoint_options {
		20 |     enforce_https       = false
		21 |     tls_security_policy = "Policy-Min-TLS-1-0-2019-07"
		22 |   }
		23 |
		24 |   cluster_config {
		25 |     instance_count = 2 // a value > 1
		26 |   }
		27 |
		28 |   encrypt_at_rest {
		29 |     enabled = false
		30 |   }
		31 |
		32 |   node_to_node_encryption {
		33 |     enabled = false
		34 |   }
		35 |
		36 |   #   log_publishing_options {
		37 |   #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		38 |   #   log_type                 = "INDEX_SLOW_LOGS"
		39 |   #   enabled                  = false
		40 |   # }
		41 | }


Check: CKV_AWS_137: "Ensure that Elasticsearch is configured inside a VPC"
	FAILED for resource: aws_elasticsearch_domain.node_to_node_encryption_disabled
	File: /terraform\aws\elasticsearch\elastisearch_domain.tf:17-41
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elasticsearch-is-configured-inside-a-vpc

		17 | resource "aws_elasticsearch_domain" "node_to_node_encryption_disabled" {
		18 |   domain_name = "node_to_node_encryption_disabled"
		19 |   domain_endpoint_options {
		20 |     enforce_https       = false
		21 |     tls_security_policy = "Policy-Min-TLS-1-0-2019-07"
		22 |   }
		23 |
		24 |   cluster_config {
		25 |     instance_count = 2 // a value > 1
		26 |   }
		27 |
		28 |   encrypt_at_rest {
		29 |     enabled = false
		30 |   }
		31 |
		32 |   node_to_node_encryption {
		33 |     enabled = false
		34 |   }
		35 |
		36 |   #   log_publishing_options {
		37 |   #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		38 |   #   log_type                 = "INDEX_SLOW_LOGS"
		39 |   #   enabled                  = false
		40 |   # }
		41 | }


Check: CKV_AWS_6: "Ensure all Elasticsearch has node-to-node encryption enabled"
	FAILED for resource: aws_elasticsearch_domain.node_to_node_encryption_disabled
	File: /terraform\aws\elasticsearch\elastisearch_domain.tf:17-41
	Guide: https://docs.bridgecrew.io/docs/elasticsearch_5

		17 | resource "aws_elasticsearch_domain" "node_to_node_encryption_disabled" {
		18 |   domain_name = "node_to_node_encryption_disabled"
		19 |   domain_endpoint_options {
		20 |     enforce_https       = false
		21 |     tls_security_policy = "Policy-Min-TLS-1-0-2019-07"
		22 |   }
		23 |
		24 |   cluster_config {
		25 |     instance_count = 2 // a value > 1
		26 |   }
		27 |
		28 |   encrypt_at_rest {
		29 |     enabled = false
		30 |   }
		31 |
		32 |   node_to_node_encryption {
		33 |     enabled = false
		34 |   }
		35 |
		36 |   #   log_publishing_options {
		37 |   #   cloudwatch_log_group_arn = aws_cloudwatch_log_group.example.arn
		38 |   #   log_type                 = "INDEX_SLOW_LOGS"
		39 |   #   enabled                  = false
		40 |   # }
		41 | }


Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_alb.fail
	File: /terraform\aws\elb\alb.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers

		12 | resource "aws_alb" "fail" {
		13 |   name               = "bad_alb"
		14 |   internal           = false
		15 |   load_balancer_type = "application"
		16 |
		17 |   # access_logs {
		18 |   #   bucket  = aws_s3_bucket.lb_logs.bucket
		19 |   #   prefix  = "test-lb"
		20 |   #   enabled = true
		21 |   # }
		22 |
		23 |   drop_invalid_header_fields = false
		24 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_alb.fail
	File: /terraform\aws\elb\alb.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		12 | resource "aws_alb" "fail" {
		13 |   name               = "bad_alb"
		14 |   internal           = false
		15 |   load_balancer_type = "application"
		16 |
		17 |   # access_logs {
		18 |   #   bucket  = aws_s3_bucket.lb_logs.bucket
		19 |   #   prefix  = "test-lb"
		20 |   #   enabled = true
		21 |   # }
		22 |
		23 |   drop_invalid_header_fields = false
		24 | }


Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_alb.fail
	File: /terraform\aws\elb\alb.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62

		12 | resource "aws_alb" "fail" {
		13 |   name               = "bad_alb"
		14 |   internal           = false
		15 |   load_balancer_type = "application"
		16 |
		17 |   # access_logs {
		18 |   #   bucket  = aws_s3_bucket.lb_logs.bucket
		19 |   #   prefix  = "test-lb"
		20 |   #   enabled = true
		21 |   # }
		22 |
		23 |   drop_invalid_header_fields = false
		24 | }


Check: CKV_AWS_2: "Ensure ALB protocol is HTTPS"
	FAILED for resource: aws_alb_listener.fail
	File: /terraform\aws\elb\alb_listener.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/networking_29

		8  | resource "aws_alb_listener" "fail" {
		9  |   protocol = "HTTP"
		10 | }


Check: CKV_AWS_103: "Ensure that load balancer is using TLS 1.2"
	FAILED for resource: aws_alb_listener.fail
	File: /terraform\aws\elb\alb_listener.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_43

		8  | resource "aws_alb_listener" "fail" {
		9  |   protocol = "HTTP"
		10 | }


Check: CKV_AWS_92: "Ensure the ELB has access logging enabled"
	FAILED for resource: aws_elb.test
	File: /terraform\aws\elb\elb.tf:5-15
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_23

		5  | resource "aws_elb" "test" {
		6  |   name                      = "test-lb-tf"
		7  |   availability_zones        = ["us-west-2a", "us-west-2b", "us-west-2c"]
		8  |   cross_zone_load_balancing = false
		9  |   listener {
		10 |     instance_port     = 8000
		11 |     instance_protocol = "http"
		12 |     lb_port           = 80
		13 |     lb_protocol       = "http"
		14 |   }
		15 | }


Check: CKV_AWS_138: "Ensure that ELB is cross-zone-load-balancing enabled"
	FAILED for resource: aws_elb.test
	File: /terraform\aws\elb\elb.tf:5-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elb-is-cross-zone-load-balancing-enabled

		5  | resource "aws_elb" "test" {
		6  |   name                      = "test-lb-tf"
		7  |   availability_zones        = ["us-west-2a", "us-west-2b", "us-west-2c"]
		8  |   cross_zone_load_balancing = false
		9  |   listener {
		10 |     instance_port     = 8000
		11 |     instance_protocol = "http"
		12 |     lb_port           = 80
		13 |     lb_protocol       = "http"
		14 |   }
		15 | }


Check: CKV_AWS_127: "Ensure that Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager"
	FAILED for resource: aws_elb.test
	File: /terraform\aws\elb\elb.tf:5-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-load-balancers-uses-ssl-certificates-provided-by-aws-certificate-manager

		5  | resource "aws_elb" "test" {
		6  |   name                      = "test-lb-tf"
		7  |   availability_zones        = ["us-west-2a", "us-west-2b", "us-west-2c"]
		8  |   cross_zone_load_balancing = false
		9  |   listener {
		10 |     instance_port     = 8000
		11 |     instance_protocol = "http"
		12 |     lb_port           = 80
		13 |     lb_protocol       = "http"
		14 |   }
		15 | }


Check: CKV_AWS_92: "Ensure the ELB has access logging enabled"
	FAILED for resource: aws_elb.fail
	File: /terraform\aws\elb\elb_using_weak_ciphers.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_23

		3  | resource "aws_elb" "fail" {
		4  |   name               = "wu-tang"
		5  |   availability_zones = ["us-east-1a"]
		6  |
		7  |   listener {
		8  |     instance_port      = 443
		9  |     instance_protocol  = "http"
		10 |     lb_port            = 443
		11 |     lb_protocol        = "https"
		12 |     ssl_certificate_id = "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
		13 |   }
		14 |
		15 |   tags = {
		16 |     Name = "wu-tang"
		17 |   }
		18 | }


Check: CKV_AWS_92: "Ensure the ELB has access logging enabled"
	FAILED for resource: aws_elb.wu_tang
	File: /terraform\aws\elb\load_balancer_policy_using_insecure_protocols.tf:4-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_23

		4  | resource "aws_elb" "wu_tang" {
		5  |   name = "wu-tang"
		6  |
		7  |   subnets = ["subnet-08d97e381dbc80d40", "subnet-03fdfb13a135366a7"]
		8  |   listener {
		9  |     instance_port      = 443
		10 |     instance_protocol  = "http"
		11 |     lb_port            = 443
		12 |     lb_protocol        = "https"
		13 |     ssl_certificate_id = "arn:aws:iam::000000000000:server-certificate/wu-tang.net"
		14 |   }
		15 |
		16 |   tags = {
		17 |     Name = "wu-tang"
		18 |   }
		19 | }


Check: CKV_AWS_213: "Ensure ELB Policy uses only secure protocols"
	FAILED for resource: aws_load_balancer_policy.fail
	File: /terraform\aws\elb\load_balancer_policy_using_insecure_protocols.tf:21-35

		21 | resource "aws_load_balancer_policy" "fail" {
		22 |   load_balancer_name = aws_elb.wu-tang.name
		23 |   policy_name        = "wu-tang-ssl"
		24 |   policy_type_name   = "SSLNegotiationPolicyType"
		25 |
		26 |   policy_attribute {
		27 |     name  = "Protocol-TLSv1.2"
		28 |     value = "true"
		29 |   }
		30 |
		31 |   policy_attribute {
		32 |     name  = "Protocol-TLSv1"
		33 |     value = "true"
		34 |   }
		35 | }


Check: CKV_AWS_114: "Ensure that EMR clusters with Kerberos have Kerberos Realm set"
	FAILED for resource: aws_emr_cluster.test
	File: /terraform\aws\emr\emr_cluster.tf:9-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-emr-clusters-have-kerberos-enabled

		9  | resource "aws_emr_cluster" "test" {
		10 |   name          = "emr-test-arn"
		11 |   release_label = "emr-4.6.0"
		12 |   applications  = ["Spark"]
		13 |
		14 |   termination_protection            = false
		15 |   keep_job_flow_alive_when_no_steps = true
		16 |
		17 |   kerberos_attributes {
		18 |     kdc_admin_password = "somePassword"
		19 |   }
		20 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.block_access_not_ok
	File: /terraform\aws\emr\emr_cluster.tf:34-51
	Guide: https://docs.bridgecrew.io/docs/networking_31

		34 | resource "aws_security_group" "block_access_not_ok" {
		35 |   name        = "block_access"
		36 |   description = "Block all traffic"
		37 |
		38 |   ingress {
		39 |     from_port   = 0
		40 |     to_port     = 65535
		41 |     protocol    = "-1"
		42 |     cidr_blocks = ["0.0.0.0/0"]
		43 |   }
		44 |
		45 |   egress {
		46 |     from_port   = 0
		47 |     to_port     = 0
		48 |     protocol    = "-1"
		49 |     cidr_blocks = ["0.0.0.0/0"]
		50 |   }
		51 | }


Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.block_access_not_ok
	File: /terraform\aws\emr\emr_cluster.tf:34-51
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

		34 | resource "aws_security_group" "block_access_not_ok" {
		35 |   name        = "block_access"
		36 |   description = "Block all traffic"
		37 |
		38 |   ingress {
		39 |     from_port   = 0
		40 |     to_port     = 65535
		41 |     protocol    = "-1"
		42 |     cidr_blocks = ["0.0.0.0/0"]
		43 |   }
		44 |
		45 |   egress {
		46 |     from_port   = 0
		47 |     to_port     = 0
		48 |     protocol    = "-1"
		49 |     cidr_blocks = ["0.0.0.0/0"]
		50 |   }
		51 | }


Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	FAILED for resource: aws_security_group.block_access_not_ok
	File: /terraform\aws\emr\emr_cluster.tf:34-51
	Guide: https://docs.bridgecrew.io/docs/networking_2

		34 | resource "aws_security_group" "block_access_not_ok" {
		35 |   name        = "block_access"
		36 |   description = "Block all traffic"
		37 |
		38 |   ingress {
		39 |     from_port   = 0
		40 |     to_port     = 65535
		41 |     protocol    = "-1"
		42 |     cidr_blocks = ["0.0.0.0/0"]
		43 |   }
		44 |
		45 |   egress {
		46 |     from_port   = 0
		47 |     to_port     = 0
		48 |     protocol    = "-1"
		49 |     cidr_blocks = ["0.0.0.0/0"]
		50 |   }
		51 | }


Check: CKV_AWS_171: "Ensure Cluster security configuration encryption is using SSE-KMS"
	FAILED for resource: aws_emr_security_configuration.fail
	File: /terraform\aws\emr\emr_security_configuration.tf:5-23
	Guide: https://docs.bridgecrew.io/docs/ensure-emr-cluster-security-configuration-encryption-uses-sse-kms

		5  | resource "aws_emr_security_configuration" "fail" {
		6  |   name = "fail"
		7  |
		8  |   configuration = <<EOF
		9  | {
		10 |   "EncryptionConfiguration": {
		11 |     "EnableAtRestEncryption": true,
		12 |     "AtRestEncryptionConfiguration": {
		13 |       "S3EncryptionConfiguration": {
		14 |         "EncryptionMode": "SSE-S3"
		15 |       },
		16 |       "LocalDiskEncryptionConfiguration": {
		17 |         "EncryptionKeyProviderType": "AwsS3"
		18 |       }
		19 |     }
		20 |   }
		21 | }
		22 | EOF
		23 | }


Check: CKV_AWS_178: "Ensure fx ontap file system is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_fsx_ontap_file_system.fail
	File: /terraform\aws\fsx\fsx.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_98

		5  | resource "aws_fsx_ontap_file_system" "fail" {
		6  |   storage_capacity    = 1024
		7  |   subnet_ids          = [aws_subnet.test1.id, aws_subnet.test2.id]
		8  |   deployment_type     = "MULTI_AZ_1"
		9  |   throughput_capacity = 512
		10 |   preferred_subnet_id = aws_subnet.test1.id
		11 | }


Check: CKV_AWS_190: "Ensure lustre file systems is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_fsx_lustre_file_system.fail
	File: /terraform\aws\fsx\fsx_lustre.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_110

		4 | resource "aws_fsx_lustre_file_system" "fail" {
		5 |   storage_capacity            = 1200
		6 |   subnet_ids                  = [aws_subnet.test1.id]
		7 |   deployment_type             = "PERSISTENT_1"
		8 |   per_unit_storage_throughput = 50
		9 | }


Check: CKV_AWS_179: "Ensure FSX Windows filesystem is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_fsx_windows_file_system.fail
	File: /terraform\aws\fsx\fsx_windows.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_99

		4  | resource "aws_fsx_windows_file_system" "fail" {
		5  |   active_directory_id = aws_directory_service_directory.test.id
		6  |   skip_final_backup   = true
		7  |   storage_capacity    = 32
		8  |   subnet_ids          = [aws_subnet.test1.id]
		9  |   throughput_capacity = 8
		10 | }


Check: CKV_AWS_167: "Ensure Glacier Vault access policy is not public by only allowing specific services or principals to access it"
	FAILED for resource: aws_glacier_vault.my_archive2
	File: /terraform\aws\glacier_vault\glacier_vault.tf:6-31
	Guide: https://docs.bridgecrew.io/docs/ensure-glacier-vault-access-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

		6  | resource "aws_glacier_vault" "my_archive2" {
		7  |   name = "MyArchive"
		8  |
		9  |   access_policy = <<EOF
		10 | {
		11 |     "Version":"2012-10-17",
		12 |     "Statement":[
		13 |        {
		14 |           "Sid": "add-read-only-perm",
		15 |            "Principal": {
		16 |             "AWS": [
		17 |                 "arn:aws:iam::123456789101:role/vault-reader",
		18 |                 "*"
		19 |             ]
		20 |           },
		21 |           "Effect": "Allow",
		22 |           "Action": [
		23 |              "glacier:InitiateJob",
		24 |              "glacier:GetJobOutput"
		25 |           ],
		26 |           "Resource": "arn:aws:glacier:eu-west-1:432981146916:vaults/MyArchive"
		27 |        }
		28 |     ]
		29 | }
		30 | EOF
		31 | }


Check: CKV_AWS_75: "Ensure Global Accelerator accelerator has flow logs enabled"
	FAILED for resource: aws_globalaccelerator_accelerator.example
	File: /terraform\aws\globacc\globacc.tf:4-11
	Guide: https://docs.bridgecrew.io/docs/logging_16

		4  | resource "aws_globalaccelerator_accelerator" "example" {
		5  |   name            = "Example"
		6  |   ip_address_type = "IPV4"
		7  |   enabled         = true
		8  |   attributes {
		9  |     flow_logs_enabled = false
		10 |   }
		11 | }


Check: CKV_AWS_94: "Ensure Glue Data Catalog Encryption is enabled"
	FAILED for resource: aws_glue_data_catalog_encryption_settings.test
	File: /terraform\aws\glue\glue_data_catalog_encryption_settings.tf:5-14
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_37

		5  | resource "aws_glue_data_catalog_encryption_settings" "test" {
		6  |   data_catalog_encryption_settings {
		7  |     connection_password_encryption {
		8  |       return_connection_password_encrypted = false
		9  |     }
		10 |     encryption_at_rest {
		11 |       catalog_encryption_mode = "DISABLED"
		12 |     }
		13 |   }
		14 | }


Check: CKV_AWS_99: "Ensure Glue Security Configuration Encryption is enabled"
	FAILED for resource: aws_glue_security_configuration.test
	File: /terraform\aws\glue\glue_security_configuration.tf:5-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_41

		5  | resource "aws_glue_security_configuration" "test" {
		6  |   name = "example"
		7  |
		8  |   encryption_configuration {
		9  |     cloudwatch_encryption {
		10 |       cloudwatch_encryption_mode = "DISABLED"
		11 |     }
		12 |
		13 |     job_bookmarks_encryption {
		14 |       job_bookmarks_encryption_mode = "DISABLED"
		15 |     }
		16 |
		17 |     s3_encryption {
		18 |       kms_key_arn        = data.aws_kms_key.example.arn
		19 |       s3_encryption_mode = "SSE-KMS"
		20 |     }
		21 |   }
		22 | }


Check: CKV_AWS_110: "Ensure IAM policies does not allow privilege escalation"
	FAILED for resource: aws_iam_policy_document.glue-example-policy
	File: /terraform\aws\glue\glue_with_vulnerable_policy.tf:4-15
	Guide: https://docs.bridgecrew.io/docs/ensure-iam-policies-does-not-allow-privilege-escalation

		4  | data "aws_iam_policy_document" "glue-example-policy" {
		5  |   statement {
		6  |     actions = [
		7  |       "glue:*",
		8  |     ]
		9  |     resources = ["arn:data.aws_partition.current.partition:glue:data.aws_region.current.name:data.aws_caller_identity.current.account_id:*"]
		10 |     principals {
		11 |       identifiers = ["*"]
		12 |       type        = "AWS"
		13 |     }
		14 |   }
		15 | }


Check: CKV_AWS_9: "Ensure IAM password policy expires passwords within 90 days or less"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_11

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_10: "Ensure IAM password policy requires minimum length of 14 or greater"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_9-1

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_11: "Ensure IAM password policy requires at least one lowercase letter"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_6

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_12: "Ensure IAM password policy requires at least one number"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_8

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_13: "Ensure IAM password policy prevents password reuse"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_10

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_14: "Ensure IAM password policy requires at least one symbol"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_7

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_15: "Ensure IAM password policy requires at least one uppercase letter"
	FAILED for resource: aws_iam_account_password_policy.fail
	File: /terraform\aws\iam\aws_iam_account_password_policy.tf:11-12
	Guide: https://docs.bridgecrew.io/docs/iam_5

		11 | resource "aws_iam_account_password_policy" "fail" {
		12 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_policy_attachment.fail
	File: /terraform\aws\iam\iam.tf:5-10
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		5  | resource "aws_iam_policy_attachment" "fail" {
		6  |   name       = "example"
		7  |   policy_arn = aws_iam_policy.policy.arn
		8  |
		9  |   users = ["example"]
		10 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.fail
	File: /terraform\aws\iam\iam.tf:12-26
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		12 | resource "aws_iam_user_policy" "fail" {
		13 |   user = "example"
		14 |   policy = jsonencode({
		15 |     Version = "2012-10-17"
		16 |     Statement = [
		17 |       {
		18 |         Action = [
		19 |           "ec2:Describe*",
		20 |         ]
		21 |         Effect   = "Allow"
		22 |         Resource = "*"
		23 |       },
		24 |     ]
		25 |   })
		26 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy_attachment.fail
	File: /terraform\aws\iam\iam.tf:28-31
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		28 | resource "aws_iam_user_policy_attachment" "fail" {
		29 |   user       = "example"
		30 |   policy_arn = aws_iam_policy.policy.arn
		31 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.fail1
	File: /terraform\aws\iam\iam_admin.tf:5-29
	Guide: https://docs.bridgecrew.io/docs/iam_47

		5  | resource "aws_iam_policy" "fail1" {
		6  |   name = "fail1"
		7  |   path = "/"
		8  |   # the policy doesn't actually make sense, but it tests checking arrays for *
		9  |   policy = <<POLICY
		10 | {
		11 |   "Statement": [
		12 |     {
		13 |       "Action": [
		14 |         "s3:HeadBucket",
		15 |         "*"
		16 |       ],
		17 |       "Effect": "Allow",
		18 |       "Resource": [
		19 |         "arn:aws:s3:::b1",
		20 |         "arn:aws:s3:::b1/*",
		21 |         "*"
		22 |       ],
		23 |       "Sid": ""
		24 |     }
		25 |   ],
		26 |   "Version": "2012-10-17"
		27 | }
		28 | POLICY
		29 | }


Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy.fail1
	File: /terraform\aws\iam\iam_admin.tf:5-29
	Guide: https://docs.bridgecrew.io/docs/iam_48

		5  | resource "aws_iam_policy" "fail1" {
		6  |   name = "fail1"
		7  |   path = "/"
		8  |   # the policy doesn't actually make sense, but it tests checking arrays for *
		9  |   policy = <<POLICY
		10 | {
		11 |   "Statement": [
		12 |     {
		13 |       "Action": [
		14 |         "s3:HeadBucket",
		15 |         "*"
		16 |       ],
		17 |       "Effect": "Allow",
		18 |       "Resource": [
		19 |         "arn:aws:s3:::b1",
		20 |         "arn:aws:s3:::b1/*",
		21 |         "*"
		22 |       ],
		23 |       "Sid": ""
		24 |     }
		25 |   ],
		26 |   "Version": "2012-10-17"
		27 | }
		28 | POLICY
		29 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.fail2
	File: /terraform\aws\iam\iam_admin.tf:31-51
	Guide: https://docs.bridgecrew.io/docs/iam_47

		31 | resource "aws_iam_policy" "fail2" {
		32 |   name   = "fail2"
		33 |   path   = "/"
		34 |   policy = <<POLICY
		35 | {
		36 |   "Statement": [
		37 |     {
		38 |       "Action": [
		39 |         "*"
		40 |       ],
		41 |       "Effect": "Allow",
		42 |       "Resource": [
		43 |         "*"
		44 |       ],
		45 |       "Sid": ""
		46 |     }
		47 |   ],
		48 |   "Version": "2012-10-17"
		49 | }
		50 | POLICY
		51 | }


Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy.fail2
	File: /terraform\aws\iam\iam_admin.tf:31-51
	Guide: https://docs.bridgecrew.io/docs/iam_48

		31 | resource "aws_iam_policy" "fail2" {
		32 |   name   = "fail2"
		33 |   path   = "/"
		34 |   policy = <<POLICY
		35 | {
		36 |   "Statement": [
		37 |     {
		38 |       "Action": [
		39 |         "*"
		40 |       ],
		41 |       "Effect": "Allow",
		42 |       "Resource": [
		43 |         "*"
		44 |       ],
		45 |       "Sid": ""
		46 |     }
		47 |   ],
		48 |   "Version": "2012-10-17"
		49 | }
		50 | POLICY
		51 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.fail3
	File: /terraform\aws\iam\iam_admin.tf:53-69
	Guide: https://docs.bridgecrew.io/docs/iam_47

		53 | resource "aws_iam_policy" "fail3" {
		54 |   name   = "fail3"
		55 |   path   = "/"
		56 |   policy = <<POLICY
		57 | {
		58 |   "Statement": [
		59 |     {
		60 |       "Action": "*",
		61 |       "Effect": "Allow",
		62 |       "Resource": "*",
		63 |       "Sid": ""
		64 |     }
		65 |   ],
		66 |   "Version": "2012-10-17"
		67 | }
		68 | POLICY
		69 | }


Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_policy.fail3
	File: /terraform\aws\iam\iam_admin.tf:53-69
	Guide: https://docs.bridgecrew.io/docs/iam_48

		53 | resource "aws_iam_policy" "fail3" {
		54 |   name   = "fail3"
		55 |   path   = "/"
		56 |   policy = <<POLICY
		57 | {
		58 |   "Statement": [
		59 |     {
		60 |       "Action": "*",
		61 |       "Effect": "Allow",
		62 |       "Resource": "*",
		63 |       "Sid": ""
		64 |     }
		65 |   ],
		66 |   "Version": "2012-10-17"
		67 | }
		68 | POLICY
		69 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_policy.fail4
	File: /terraform\aws\iam\iam_admin.tf:71-87
	Guide: https://docs.bridgecrew.io/docs/iam_47

		71 | resource "aws_iam_policy" "fail4" {
		72 |   name = "fail4"
		73 |   path = "/"
		74 |   # implicit allow, not actually valid, but it's a default that we check
		75 |   policy = <<POLICY
		76 | {
		77 |   "Statement": [
		78 |     {
		79 |       "Action": "*",
		80 |       "Resource": "*",
		81 |       "Sid": ""
		82 |     }
		83 |   ],
		84 |   "Version": "2012-10-17"
		85 | }
		86 | POLICY
		87 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_ssoadmin_permission_set_inline_policy.fail1
	File: /terraform\aws\iam\iam_admin.tf:142-165
	Guide: https://docs.bridgecrew.io/docs/iam_47

		142 | resource "aws_ssoadmin_permission_set_inline_policy" "fail1" {
		143 |   instance_arn       = aws_ssoadmin_permission_set.example.instance_arn
		144 |   permission_set_arn = aws_ssoadmin_permission_set.example.arn
		145 |   inline_policy      = <<POLICY
		146 | {
		147 |   "Statement": [
		148 |     {
		149 |       "Action": [
		150 |         "s3:HeadBucket",
		151 |         "*"
		152 |       ],
		153 |       "Effect": "Allow",
		154 |       "Resource": [
		155 |         "arn:aws:s3:::b1",
		156 |         "arn:aws:s3:::b1/*",
		157 |         "*"
		158 |       ],
		159 |       "Sid": ""
		160 |     }
		161 |   ],
		162 |   "Version": "2012-10-17"
		163 | }
		164 | POLICY
		165 | }


Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_ssoadmin_permission_set_inline_policy.fail1
	File: /terraform\aws\iam\iam_admin.tf:142-165
	Guide: https://docs.bridgecrew.io/docs/iam_48

		142 | resource "aws_ssoadmin_permission_set_inline_policy" "fail1" {
		143 |   instance_arn       = aws_ssoadmin_permission_set.example.instance_arn
		144 |   permission_set_arn = aws_ssoadmin_permission_set.example.arn
		145 |   inline_policy      = <<POLICY
		146 | {
		147 |   "Statement": [
		148 |     {
		149 |       "Action": [
		150 |         "s3:HeadBucket",
		151 |         "*"
		152 |       ],
		153 |       "Effect": "Allow",
		154 |       "Resource": [
		155 |         "arn:aws:s3:::b1",
		156 |         "arn:aws:s3:::b1/*",
		157 |         "*"
		158 |       ],
		159 |       "Sid": ""
		160 |     }
		161 |   ],
		162 |   "Version": "2012-10-17"
		163 | }
		164 | POLICY
		165 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.mfa
	File: /terraform\aws\iam\iam_authentication_without_mfa.tf:19-40
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		19 | resource "aws_iam_user_policy" "mfa" {
		20 |   name_prefix = "aws-foundations-benchmark-1-4-0"
		21 |   user        = aws_iam_user.mfa.name
		22 |
		23 |   policy = <<EOF
		24 | {
		25 |    "Version": "2012-10-17",
		26 |    "Statement": [
		27 |      {
		28 |        "Effect": "Allow",
		29 |        "Resource": "${aws_iam_user.mfa.arn}",
		30 |        "Action": "sts:AssumeRole",
		31 |        "Condition": {
		32 |          "BoolIfExists": {
		33 |            "aws:MultiFactorAuthPresent" : "false"
		34 |          }
		35 |        }
		36 |      }
		37 |    ]
		38 | }
		39 | EOF
		40 | }


Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	FAILED for resource: aws_sqs_queue.positive1
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue

		1 | resource "aws_sqs_queue" "positive1" {
		2 |   name = "examplequeue"
		3 | }


Check: CKV_AWS_9: "Ensure IAM password policy expires passwords within 90 days or less"
	FAILED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_11

		6  | resource "aws_iam_account_password_policy" "positive2" {
		7  |   minimum_password_length        = 8
		8  |   require_lowercase_characters   = true
		9  |   require_numbers                = true
		10 |   require_uppercase_characters   = true
		11 |   require_symbols                = true
		12 |   allow_users_to_change_password = false
		13 | }


Check: CKV_AWS_10: "Ensure IAM password policy requires minimum length of 14 or greater"
	FAILED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_9-1

		6  | resource "aws_iam_account_password_policy" "positive2" {
		7  |   minimum_password_length        = 8
		8  |   require_lowercase_characters   = true
		9  |   require_numbers                = true
		10 |   require_uppercase_characters   = true
		11 |   require_symbols                = true
		12 |   allow_users_to_change_password = false
		13 | }


Check: CKV_AWS_13: "Ensure IAM password policy prevents password reuse"
	FAILED for resource: aws_iam_account_password_policy.positive2
	File: /terraform\aws\iam\iam_aws_passord_policy_with_unchangeable_passwords.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/iam_10

		6  | resource "aws_iam_account_password_policy" "positive2" {
		7  |   minimum_password_length        = 8
		8  |   require_lowercase_characters   = true
		9  |   require_numbers                = true
		10 |   require_uppercase_characters   = true
		11 |   require_symbols                = true
		12 |   allow_users_to_change_password = false
		13 | }


Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	FAILED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\iam_cross_account_iam_assume_role_policy_without_external_id_or_mfa.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

		1  | resource "aws_iam_role" "positive1" {
		2  |   name = "test_role"
		3  |
		4  |   assume_role_policy = <<EOF
		5  | {
		6  |   "Version": "2012-10-17",
		7  |   "Statement": [
		8  |     {
		9  |       "Action": "sts:AssumeRole",
		10 |       "Principal": {
		11 |         "AWS": "arn:aws:iam::987654321145:root"
		12 |       },
		13 |       "Effect": "Allow",
		14 |       "Resource": "*",
		15 |       "Sid": ""
		16 |     }
		17 |   ]
		18 | }
		19 | EOF
		20 |
		21 |   tags = {
		22 |     tag-key = "tag-value"
		23 |   }
		24 | }


Check: CKV_AWS_9: "Ensure IAM password policy expires passwords within 90 days or less"
	FAILED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_11

		1 | resource "aws_iam_account_password_policy" "expire" {
		2 |   minimum_password_length        = 8
		3 |   require_lowercase_characters   = true
		4 |   require_numbers                = true
		5 |   require_uppercase_characters   = true
		6 |   require_symbols                = true
		7 |   allow_users_to_change_password = true
		8 |   max_password_age               = 180
		9 | }


Check: CKV_AWS_10: "Ensure IAM password policy requires minimum length of 14 or greater"
	FAILED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_9-1

		1 | resource "aws_iam_account_password_policy" "expire" {
		2 |   minimum_password_length        = 8
		3 |   require_lowercase_characters   = true
		4 |   require_numbers                = true
		5 |   require_uppercase_characters   = true
		6 |   require_symbols                = true
		7 |   allow_users_to_change_password = true
		8 |   max_password_age               = 180
		9 | }


Check: CKV_AWS_13: "Ensure IAM password policy prevents password reuse"
	FAILED for resource: aws_iam_account_password_policy.expire
	File: /terraform\aws\iam\iam_misconfigured_password_policy_expiration.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/iam_10

		1 | resource "aws_iam_account_password_policy" "expire" {
		2 |   minimum_password_length        = 8
		3 |   require_lowercase_characters   = true
		4 |   require_numbers                = true
		5 |   require_uppercase_characters   = true
		6 |   require_symbols                = true
		7 |   allow_users_to_change_password = true
		8 |   max_password_age               = 180
		9 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.fail_key
	File: /terraform\aws\iam\iam_root_account_has_active_access_keys.tf:12-30
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		12 | resource "aws_iam_user_policy" "fail_key" {
		13 |   name = "test"
		14 |   user = aws_iam_user.fail_key.name
		15 |
		16 |   policy = <<EOF
		17 | {
		18 |   "Version": "2012-10-17",
		19 |   "Statement": [
		20 |     {
		21 |       "Action": [
		22 |         "ec2:Describe*"
		23 |       ],
		24 |       "Effect": "Allow",
		25 |       "Resource": "*"
		26 |     }
		27 |   ]
		28 | }
		29 | EOF
		30 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.fail_mfa
	File: /terraform\aws\iam\iam_user_policy_without_mfa.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		14 | resource "aws_iam_user_policy" "fail_mfa" {
		15 |   name = "test"
		16 |   user = aws_iam_user.fail_mfa.name
		17 |
		18 |   policy = <<EOF
		19 | {
		20 |    "Version": "2012-10-17",
		21 |    "Statement": [
		22 |      {
		23 |        "Effect": "Allow",
		24 |        "Principal": {
		25 |          "AWS": "arn:aws:iam::111122223333:root"
		26 |        },
		27 |        "Action": "sts:AssumeRole"
		28 |      }
		29 |    ]
		30 | }
		31 | EOF
		32 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_policy_attachment.positive1_3
	File: /terraform\aws\iam\policy\iam_policies_attached_to_user.tf:16-37
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		16 | resource "aws_iam_policy_attachment" "positive1_3" {
		17 |   name  = "excess_policy"
		18 |   users = [aws_iam_user.user.name]
		19 |
		20 |   policy = <<EOF
		21 | {
		22 |   "Version": "2012-10-17",
		23 |   "Statement": [
		24 |     {
		25 |       "Action": [
		26 |         "ec2:*",
		27 |         "s3:*",
		28 |         "lambda:*",
		29 |         "cloudwatch:*"
		30 |       ],
		31 |       "Effect": "Allow",
		32 |       "Resource": "*"
		33 |     }
		34 |   ]
		35 | }
		36 | EOF
		37 | }


Check: CKV_AWS_62: "Ensure IAM policies that allow full "*-*" administrative privileges are not created"
	FAILED for resource: aws_iam_role_policy.positive1
	File: /terraform\aws\iam\policy\iam_policies_with_full_privileges.tf:1-17
	Guide: https://docs.bridgecrew.io/docs/iam_47

		1  | resource "aws_iam_role_policy" "positive1" {
		2  |   name = "apigateway-cloudwatch-logging"
		3  |   role = aws_iam_role.apigateway_cloudwatch_logging.id
		4  |
		5  |   policy = <<EOF
		6  | {
		7  |   "Version": "2012-10-17",
		8  |   "Statement": [
		9  |     {
		10 |       "Effect": "Allow",
		11 |       "Action": ["*"],
		12 |       "Resource": "*"
		13 |     }
		14 |   ]
		15 | }
		16 | EOF
		17 | }


Check: CKV_AWS_63: "Ensure no IAM policies documents allow "*" as a statement's actions"
	FAILED for resource: aws_iam_role_policy.positive1
	File: /terraform\aws\iam\policy\iam_policies_with_full_privileges.tf:1-17
	Guide: https://docs.bridgecrew.io/docs/iam_48

		1  | resource "aws_iam_role_policy" "positive1" {
		2  |   name = "apigateway-cloudwatch-logging"
		3  |   role = aws_iam_role.apigateway_cloudwatch_logging.id
		4  |
		5  |   policy = <<EOF
		6  | {
		7  |   "Version": "2012-10-17",
		8  |   "Statement": [
		9  |     {
		10 |       "Effect": "Allow",
		11 |       "Action": ["*"],
		12 |       "Resource": "*"
		13 |     }
		14 |   ]
		15 | }
		16 | EOF
		17 | }


Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	FAILED for resource: aws_iam_role.positive1
	File: /terraform\aws\iam\policy\iam_policy_grants_assumerole_permission_across_all_services.tf:4-23
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

		4  | resource "aws_iam_role" "positive1" {
		5  |   name_prefix = "openshift-instance-role"
		6  |
		7  |   assume_role_policy = <<EOF
		8  | {
		9  |     "Version": "2012-10-17",
		10 |     "Statement": [
		11 |         {
		12 |             "Action": "sts:AssumeRole",
		13 |             "Principal": {
		14 |                 "Service": "ec2.amazonaws.com",
		15 |                 "AWS": "*"
		16 |             },
		17 |             "Effect": "Allow",
		18 |             "Sid": ""
		19 |         }
		20 |     ]
		21 | }
		22 | EOF
		23 | }


Check: CKV_AWS_40: "Ensure IAM policies are attached only to groups or roles (Reducing access management complexity may in-turn reduce opportunity for a principal to inadvertently receive or retain excessive privileges.)"
	FAILED for resource: aws_iam_user_policy.positive3
	File: /terraform\aws\iam\policy\iam_policy_grants_full_permissions.tf:16-37
	Guide: https://docs.bridgecrew.io/docs/iam_16-iam-policy-privileges-1

		16 | resource "aws_iam_user_policy" "positive3" {
		17 |   name = "excess_policy"
		18 |   user = aws_iam_user.user.name
		19 |
		20 |   policy = <<EOF
		21 | {
		22 |   "Version": "2012-10-17",
		23 |   "Statement": [
		24 |     {
		25 |       "Action": [
		26 |         "ec2:*",
		27 |         "s3:*",
		28 |         "lambda:*",
		29 |         "cloudwatch:*"
		30 |       ],
		31 |       "Effect": "Allow",
		32 |       "Resource": "*"
		33 |     }
		34 |   ]
		35 | }
		36 | EOF
		37 | }


Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	FAILED for resource: aws_iam_role.fail
	File: /terraform\aws\iam\role\IAMRoleAllowAssumeFromAccount.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

		3  | resource "aws_iam_role" "fail" {
		4  |   name               = "fail-default"
		5  |   assume_role_policy = <<POLICY
		6  | {
		7  |     "Version": "2012-10-17",
		8  |     "Statement": [
		9  |        {
		10 |            "Action": "sts:AssumeRole",
		11 |            "Principal": {"AWS": "123123123123"},
		12 |            "Effect": "Allow",
		13 |            "Sid": ""
		14 |         }]
		15 | }
		16 | POLICY
		17 | }


Check: CKV_AWS_61: "Ensure IAM role allows only specific principals in account to assume it"
	FAILED for resource: aws_iam_role.fail2
	File: /terraform\aws\iam\role\IAMRoleAllowAssumeFromAccount.tf:20-34
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_45

		20 | resource "aws_iam_role" "fail2" {
		21 |   name               = "fail-default"
		22 |   assume_role_policy = <<POLICY
		23 | {
		24 |   "Version": "2012-10-17",
		25 |   "Statement": [
		26 |       {
		27 |     "Action": "sts:AssumeRole",
		28 |     "Principal": {"AWS": "arn:aws:iam::123123123123:root"},
		29 |     "Effect": "Allow",
		30 |     "Sid": ""
		31 |   }]
		32 | }
		33 | POLICY
		34 | }


Check: CKV_AWS_60: "Ensure IAM role allows only specific services or principals to assume it"
	FAILED for resource: aws_iam_role.lambdaRole
	File: /terraform\aws\iam\role\IAMRoleAllowsPublicAssume.tf:4-29
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_44

		4  | resource "aws_iam_role" "lambdaRole" {
		5  |   namename_prefix    = "test"
		6  |   assume_role_policy = <<EOF
		7  | {
		8  | "Version": "2012-10-17",
		9  | "Statement": [
		10 | {
		11 | "Action": "sts:AssumeRole",
		12 | "Principal" : {"Service": "lambda.amazonaws.com"},
		13 | "Effect": "Allow"
		14 | },
		15 | {
		16 | "Action": "sts:AssumeRole",
		17 | "Principal" : {"AWS": "*"},
		18 | "Effect": "Allow"
		19 | },
		20 | {
		21 | "Action": "sts:AssumeRole",
		22 | "Principal" : {"Service": "events.amazonaws.com"},
		23 | "Effect": "Allow"
		24 | }
		25 | ]
		26 | }
		27 |
		28 | EOF
		29 | }


Check: CKV_AWS_180: "Ensure Image Builder component is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_imagebuilder_component.fail
	File: /terraform\aws\imagebuilder\aws_imagebuilder_component.tf:4-22
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_100

		4  | resource "aws_imagebuilder_component" "fail" {
		5  |   data = yamlencode({
		6  |     phases = [{
		7  |       name = "build"
		8  |       steps = [{
		9  |         action = "ExecuteBash"
		10 |         inputs = {
		11 |           commands = ["echo 'hello world'"]
		12 |         }
		13 |         name      = "example"
		14 |         onFailure = "Continue"
		15 |       }]
		16 |     }]
		17 |     schemaVersion = 1.0
		18 |   })
		19 |   name     = "examplea"
		20 |   platform = "Linux"
		21 |   version  = "1.0.0"
		22 | }


Check: CKV_AWS_199: "Ensure Image Builder Distribution Configuration encrypts AMI's using KMS - a customer managed Key (CMK)"
	FAILED for resource: aws_imagebuilder_distribution_configuration.example
	File: /terraform\aws\imagebuilder\aws_imagebuilder_distribution_configuration.tf:3-23

		3  | resource "aws_imagebuilder_distribution_configuration" "example" {
		4  |   name        = "example"
		5  |   description = "non empty value"
		6  |
		7  |   distribution {
		8  |     ami_distribution_configuration {
		9  |       //kms_key_id = ""
		10 |       ami_tags = {
		11 |         CostCenter = "IT"
		12 |       }
		13 |
		14 |       name = "example-{{ imagebuilder:buildDate }}"
		15 |
		16 |       launch_permission {
		17 |         user_ids = ["123456789012"]
		18 |       }
		19 |     }
		20 |
		21 |     region = "us-east-1"
		22 |   }
		23 | }

Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		17 | resource "aws_instance" "monitoring_positive1" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		17 | resource "aws_instance" "monitoring_positive1" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		17 | resource "aws_instance" "monitoring_positive1" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.monitoring_positive1
	File: /terraform\aws\instance\ec2_instance_monitoring_disabled.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/general_13

		17 | resource "aws_instance" "monitoring_positive1" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		1  | resource "aws_instance" "positive1" {
		2  |   ami           = data.aws_ami.ubuntu.id
		3  |   instance_type = "t3.micro"
		4  |
		5  |   tags = {
		6  |     Name = "HelloWorld"
		7  |   }
		8  |
		9  |   security_groups = [aws_security_group.default.id]
		10 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		1  | resource "aws_instance" "positive1" {
		2  |   ami           = data.aws_ami.ubuntu.id
		3  |   instance_type = "t3.micro"
		4  |
		5  |   tags = {
		6  |     Name = "HelloWorld"
		7  |   }
		8  |
		9  |   security_groups = [aws_security_group.default.id]
		10 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		1  | resource "aws_instance" "positive1" {
		2  |   ami           = data.aws_ami.ubuntu.id
		3  |   instance_type = "t3.micro"
		4  |
		5  |   tags = {
		6  |     Name = "HelloWorld"
		7  |   }
		8  |
		9  |   security_groups = [aws_security_group.default.id]
		10 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\ec2_instance_using_default_security_group.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/general_13

		1  | resource "aws_instance" "positive1" {
		2  |   ami           = data.aws_ami.ubuntu.id
		3  |   instance_type = "t3.micro"
		4  |
		5  |   tags = {
		6  |     Name = "HelloWorld"
		7  |   }
		8  |
		9  |   security_groups = [aws_security_group.default.id]
		10 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		17 | resource "aws_instance" "web" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		17 | resource "aws_instance" "web" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		17 | resource "aws_instance" "web" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.web
	File: /terraform\aws\instance\ec2_not_ebs_optimized.tf:17-24
	Guide: https://docs.bridgecrew.io/docs/general_13

		17 | resource "aws_instance" "web" {
		18 |   ami           = data.aws_ami.ubuntu.id
		19 |   instance_type = "t3.micro"
		20 |
		21 |   tags = {
		22 |     Name = "HelloWorld"
		23 |   }
		24 | }


Check: CKV_AWS_46: "Ensure no hard-coded secrets exist in EC2 user data"
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_1

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_88: "EC2 instance should not have public IP."
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/public_12

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.fail
	File: /terraform\aws\instance\instance.tf:14-32
	Guide: https://docs.bridgecrew.io/docs/general_13

		14 | resource "aws_instance" "fail" {
		15 |   ami                         = var.ami
		16 |   instance_type               = "t2.nano"
		17 |   associate_public_ip_address = true
		18 |   vpc_security_group_ids = [
		19 |   aws_security_group.web-node.id]
		20 |   subnet_id = aws_subnet.web_subnet.id
		21 |   user_data = <<EOF
		22 | 		 #! /bin/bash
		23 | 		 sudo apt-get update
		24 | 		 sudo apt-get install -y apache2
		25 | 		 sudo systemctl start apache2
		26 | 		 sudo systemctl enable apache2
		27 | 		 export AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMAAA
		28 | 		 export AWS_SECRET_ACCESS_KEY=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
		29 | 		 export AWS_DEFAULT_REGION=us-west-2
		30 | 		 echo "<h1>Deployed via Terraform</h1>" | sudo tee /var/www/html/index.html
		31 | 		 EOF
		32 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		1 | resource "aws_instance" "positive1" {
		2 |   ami = "ami-003634241a8fcdec0"
		3 |
		4 |   instance_type = "t2.micro"
		5 |
		6 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		1 | resource "aws_instance" "positive1" {
		2 |   ami = "ami-003634241a8fcdec0"
		3 |
		4 |   instance_type = "t2.micro"
		5 |
		6 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		1 | resource "aws_instance" "positive1" {
		2 |   ami = "ami-003634241a8fcdec0"
		3 |
		4 |   instance_type = "t2.micro"
		5 |
		6 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.positive1
	File: /terraform\aws\instance\instance_with_no_vpc.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/general_13

		1 | resource "aws_instance" "positive1" {
		2 |   ami = "ami-003634241a8fcdec0"
		3 |
		4 |   instance_type = "t2.micro"
		5 |
		6 | }


Check: CKV_AWS_185: "Ensure Kinesis Stream is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_kinesis_stream.fail
	File: /terraform\aws\kinesis\kinesis_stream.tf:8-11
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_105

		8  | resource "aws_kinesis_stream" "fail" {
		9  |   name        = "test_stream-%[1]d"
		10 |   shard_count = 1
		11 | }


Check: CKV_AWS_43: "Ensure Kinesis Stream is securely encrypted"
	FAILED for resource: aws_kinesis_stream.fail
	File: /terraform\aws\kinesis\kinesis_stream.tf:8-11
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_22

		8  | resource "aws_kinesis_stream" "fail" {
		9  |   name        = "test_stream-%[1]d"
		10 |   shard_count = 1
		11 | }


Check: CKV_AWS_177: "Ensure Kinesis Video Stream is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_kinesis_video_stream.fail
	File: /terraform\aws\kinesis\kinesis_video_stream.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_97

		4 | resource "aws_kinesis_video_stream" "fail" {
		5 |   name = "terraform-kinesis-video-stream-test"
		6 |
		7 |   data_retention_in_hours = 1
		8 |   device_name             = "kinesis-video-device-name"
		9 | }


Check: CKV_AWS_33: "Ensure KMS key policy does not contain wildcard (*) principal"
	FAILED for resource: aws_kms_key.fail_0
	File: /terraform\aws\kms\kms.tf:7-32
	Guide: https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal

		7  | resource "aws_kms_key" "fail_0" {
		8  |   description = "description"
		9  |   policy      = <<POLICY
		10 | {
		11 |   "Version": "2012-10-17",
		12 |   "Statement": [
		13 |     {
		14 |       "Effect": "Allow",
		15 |       "Principal": {
		16 |         "AWS": "arn:aws:iam::111122223333:root"
		17 |       },
		18 |       "Action": "kms:*",
		19 |       "Resource": "*"
		20 |     },
		21 |     {
		22 |       "Effect": "Allow",
		23 |       "Principal": {
		24 |         "AWS": "*"
		25 |       },
		26 |       "Action": "kms:*",
		27 |       "Resource": "*"
		28 |     },
		29 |   ]
		30 | }
		31 | POLICY
		32 | }


Check: CKV_AWS_7: "Ensure rotation for customer created CMKs is enabled"
	FAILED for resource: aws_kms_key.fail_0
	File: /terraform\aws\kms\kms.tf:7-32
	Guide: https://docs.bridgecrew.io/docs/logging_8

		7  | resource "aws_kms_key" "fail_0" {
		8  |   description = "description"
		9  |   policy      = <<POLICY
		10 | {
		11 |   "Version": "2012-10-17",
		12 |   "Statement": [
		13 |     {
		14 |       "Effect": "Allow",
		15 |       "Principal": {
		16 |         "AWS": "arn:aws:iam::111122223333:root"
		17 |       },
		18 |       "Action": "kms:*",
		19 |       "Resource": "*"
		20 |     },
		21 |     {
		22 |       "Effect": "Allow",
		23 |       "Principal": {
		24 |         "AWS": "*"
		25 |       },
		26 |       "Action": "kms:*",
		27 |       "Resource": "*"
		28 |     },
		29 |   ]
		30 | }
		31 | POLICY
		32 | }


Check: CKV_AWS_7: "Ensure rotation for customer created CMKs is enabled"
	FAILED for resource: aws_kms_key.fail
	File: /terraform\aws\kms\kms_key_is_disabled.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/logging_8

		3 | resource "aws_kms_key" "fail" {
		4 |   description = "KMS key 1"
		5 |   is_enabled  = false
		6 | }


Check: CKV_AWS_7: "Ensure rotation for customer created CMKs is enabled"
	FAILED for resource: aws_kms_key.fail
	File: /terraform\aws\kms\kms_key_with_vulnerable_policy.tf:3-35
	Guide: https://docs.bridgecrew.io/docs/logging_8

		3  | resource "aws_kms_key" "fail" {
		4  |   description             = "KMS key + secure_policy"
		5  |   deletion_window_in_days = 7
		6  |
		7  |   policy = <<EOF
		8  | {
		9  |     "Version": "2008-10-17",
		10 |     "Statement": [
		11 |         {
		12 |             "Sid": "Secure Policy",
		13 |             "Effect": "Allow",
		14 |             "Resource": "*",
		15 |             "Action": [
		16 |             "kms:Create*",
		17 |             "kms:Describe*",
		18 |             "kms:Enable*",
		19 |             "kms:List*",
		20 |             "kms:Put*",
		21 |             "kms:Update*",
		22 |             "kms:Revoke*",
		23 |             "kms:Disable*",
		24 |             "kms:Get*",
		25 |             "kms:Delete*",
		26 |             "kms:TagResource",
		27 |             "kms:UntagResource",
		28 |             "kms:ScheduleKeyDeletion",
		29 |             "kms:CancelKeyDeletion"
		30 |             ]
		31 |         }
		32 |     ]
		33 | }
		34 | EOF
		35 | }


Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_45: "Ensure no hard-coded secrets exist in lambda environment"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_3

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_173: "Check encryption settings for Lambda environmental variable"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_5

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.morefail
	File: /terraform\aws\lambda\lambda.tf:13-24
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		13 | resource "aws_lambda_function" "morefail" {
		14 |   function_name = "morefail"
		15 |   role          = ""
		16 |   handler       = "index.handler"
		17 |   runtime       = "python3.9"
		18 |   environment {
		19 |     variables = {
		20 |       AWS_ACCESS_KEY_ID     = "AKIAIOSFODNN7EXAMPLE",
		21 |       AWS_SECRET_ACCESS_KEY = "MYMOSTSECRETTHING"
		22 |     }
		23 |   }
		24 | }


Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		1  | resource "aws_lambda_function" "positivefunction1" {
		2  |   filename         = "lambda_function_payload.zip"
		3  |   function_name    = "lambda_function_name"
		4  |   role             = aws_iam_role.positiverole1.arn
		5  |   handler          = "exports.test"
		6  |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		7  |   runtime          = "nodejs12.x"
		8  |
		9  |   tags = {
		10 |     Name = "lambda"
		11 |   }
		12 |
		13 |   environment = {
		14 |     variables = {
		15 |       foo = "bar"
		16 |     }
		17 |   }
		18 | }


Check: CKV_AWS_173: "Check encryption settings for Lambda environmental variable"
	FAILED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_5

		1  | resource "aws_lambda_function" "positivefunction1" {
		2  |   filename         = "lambda_function_payload.zip"
		3  |   function_name    = "lambda_function_name"
		4  |   role             = aws_iam_role.positiverole1.arn
		5  |   handler          = "exports.test"
		6  |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		7  |   runtime          = "nodejs12.x"
		8  |
		9  |   tags = {
		10 |     Name = "lambda"
		11 |   }
		12 |
		13 |   environment = {
		14 |     variables = {
		15 |       foo = "bar"
		16 |     }
		17 |   }
		18 | }


Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		1  | resource "aws_lambda_function" "positivefunction1" {
		2  |   filename         = "lambda_function_payload.zip"
		3  |   function_name    = "lambda_function_name"
		4  |   role             = aws_iam_role.positiverole1.arn
		5  |   handler          = "exports.test"
		6  |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		7  |   runtime          = "nodejs12.x"
		8  |
		9  |   tags = {
		10 |     Name = "lambda"
		11 |   }
		12 |
		13 |   environment = {
		14 |     variables = {
		15 |       foo = "bar"
		16 |     }
		17 |   }
		18 | }


Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		1  | resource "aws_lambda_function" "positivefunction1" {
		2  |   filename         = "lambda_function_payload.zip"
		3  |   function_name    = "lambda_function_name"
		4  |   role             = aws_iam_role.positiverole1.arn
		5  |   handler          = "exports.test"
		6  |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		7  |   runtime          = "nodejs12.x"
		8  |
		9  |   tags = {
		10 |     Name = "lambda"
		11 |   }
		12 |
		13 |   environment = {
		14 |     variables = {
		15 |       foo = "bar"
		16 |     }
		17 |   }
		18 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.positivefunction1
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		1  | resource "aws_lambda_function" "positivefunction1" {
		2  |   filename         = "lambda_function_payload.zip"
		3  |   function_name    = "lambda_function_name"
		4  |   role             = aws_iam_role.positiverole1.arn
		5  |   handler          = "exports.test"
		6  |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		7  |   runtime          = "nodejs12.x"
		8  |
		9  |   tags = {
		10 |     Name = "lambda"
		11 |   }
		12 |
		13 |   environment = {
		14 |     variables = {
		15 |       foo = "bar"
		16 |     }
		17 |   }
		18 | }


Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		20 | resource "aws_lambda_function" "positivefunction2" {
		21 |   filename         = "lambda_function_payload.zip"
		22 |   function_name    = "lambda_function_name"
		23 |   role             = aws_iam_role.positiverole2.arn
		24 |   handler          = "exports.test"
		25 |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		26 |   runtime          = "nodejs12.x"
		27 |
		28 |   tags = {
		29 |     Name = "lambda"
		30 |   }
		31 |
		32 |   environment = {
		33 |     variables = {
		34 |       foo = "bar"
		35 |     }
		36 |   }
		37 | }


Check: CKV_AWS_173: "Check encryption settings for Lambda environmental variable"
	FAILED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_5

		20 | resource "aws_lambda_function" "positivefunction2" {
		21 |   filename         = "lambda_function_payload.zip"
		22 |   function_name    = "lambda_function_name"
		23 |   role             = aws_iam_role.positiverole2.arn
		24 |   handler          = "exports.test"
		25 |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		26 |   runtime          = "nodejs12.x"
		27 |
		28 |   tags = {
		29 |     Name = "lambda"
		30 |   }
		31 |
		32 |   environment = {
		33 |     variables = {
		34 |       foo = "bar"
		35 |     }
		36 |   }
		37 | }


Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		20 | resource "aws_lambda_function" "positivefunction2" {
		21 |   filename         = "lambda_function_payload.zip"
		22 |   function_name    = "lambda_function_name"
		23 |   role             = aws_iam_role.positiverole2.arn
		24 |   handler          = "exports.test"
		25 |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		26 |   runtime          = "nodejs12.x"
		27 |
		28 |   tags = {
		29 |     Name = "lambda"
		30 |   }
		31 |
		32 |   environment = {
		33 |     variables = {
		34 |       foo = "bar"
		35 |     }
		36 |   }
		37 | }


Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		20 | resource "aws_lambda_function" "positivefunction2" {
		21 |   filename         = "lambda_function_payload.zip"
		22 |   function_name    = "lambda_function_name"
		23 |   role             = aws_iam_role.positiverole2.arn
		24 |   handler          = "exports.test"
		25 |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		26 |   runtime          = "nodejs12.x"
		27 |
		28 |   tags = {
		29 |     Name = "lambda"
		30 |   }
		31 |
		32 |   environment = {
		33 |     variables = {
		34 |       foo = "bar"
		35 |     }
		36 |   }
		37 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.positivefunction2
	File: /terraform\aws\lambda\lambda_function_with_privileged_role.tf:20-37
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		20 | resource "aws_lambda_function" "positivefunction2" {
		21 |   filename         = "lambda_function_payload.zip"
		22 |   function_name    = "lambda_function_name"
		23 |   role             = aws_iam_role.positiverole2.arn
		24 |   handler          = "exports.test"
		25 |   source_code_hash = filebase64sha256("lambda_function_payload.zip")
		26 |   runtime          = "nodejs12.x"
		27 |
		28 |   tags = {
		29 |     Name = "lambda"
		30 |   }
		31 |
		32 |   environment = {
		33 |     variables = {
		34 |       foo = "bar"
		35 |     }
		36 |   }
		37 | }


Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.my_lambda
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		5  | resource "aws_lambda_function" "my_lambda" {
		6  |   filename      = "~/Downloads/lambda.json.zip"
		7  |   function_name = "my-lambda"
		8  |   role          = aws_iam_role.lambda_role.arn
		9  |   handler       = "lambda_function.lambda_handler"
		10 |   runtime       = "python3.8"
		11 | }


Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.my_lambda
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		5  | resource "aws_lambda_function" "my_lambda" {
		6  |   filename      = "~/Downloads/lambda.json.zip"
		7  |   function_name = "my-lambda"
		8  |   role          = aws_iam_role.lambda_role.arn
		9  |   handler       = "lambda_function.lambda_handler"
		10 |   runtime       = "python3.8"
		11 | }


Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.my_lambda
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		5  | resource "aws_lambda_function" "my_lambda" {
		6  |   filename      = "~/Downloads/lambda.json.zip"
		7  |   function_name = "my-lambda"
		8  |   role          = aws_iam_role.lambda_role.arn
		9  |   handler       = "lambda_function.lambda_handler"
		10 |   runtime       = "python3.8"
		11 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.my_lambda
	File: /terraform\aws\lambda\lambda_with_vulnerable_policy.tf:5-11
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		5  | resource "aws_lambda_function" "my_lambda" {
		6  |   filename      = "~/Downloads/lambda.json.zip"
		7  |   function_name = "my-lambda"
		8  |   role          = aws_iam_role.lambda_role.arn
		9  |   handler       = "lambda_function.lambda_handler"
		10 |   runtime       = "python3.8"
		11 | }


Check: CKV_AWS_116: "Ensure that AWS Lambda function is configured for a Dead Letter Queue(DLQ)"
	FAILED for resource: aws_lambda_function.example
	File: /terraform\aws\lambda\public_lambda_via_api_gateway.tf:12-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-a-dead-letter-queue-dlq

		12 | resource "aws_lambda_function" "example" {
		13 |   function_name = "ServerlessPerson"
		14 |
		15 |   handler = "MyHandler::handleRequest"
		16 |   runtime = "java11"
		17 |
		18 |   role = aws_iam_role.lambda_exec.arn
		19 | }


Check: CKV_AWS_115: "Ensure that AWS Lambda function is configured for function-level concurrent execution limit"
	FAILED for resource: aws_lambda_function.example
	File: /terraform\aws\lambda\public_lambda_via_api_gateway.tf:12-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-for-function-level-concurrent-execution-limit

		12 | resource "aws_lambda_function" "example" {
		13 |   function_name = "ServerlessPerson"
		14 |
		15 |   handler = "MyHandler::handleRequest"
		16 |   runtime = "java11"
		17 |
		18 |   role = aws_iam_role.lambda_exec.arn
		19 | }


Check: CKV_AWS_117: "Ensure that AWS Lambda function is configured inside a VPC"
	FAILED for resource: aws_lambda_function.example
	File: /terraform\aws\lambda\public_lambda_via_api_gateway.tf:12-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aws-lambda-function-is-configured-inside-a-vpc-1

		12 | resource "aws_lambda_function" "example" {
		13 |   function_name = "ServerlessPerson"
		14 |
		15 |   handler = "MyHandler::handleRequest"
		16 |   runtime = "java11"
		17 |
		18 |   role = aws_iam_role.lambda_exec.arn
		19 | }


Check: CKV_AWS_50: "X-ray tracing is enabled for Lambda"
	FAILED for resource: aws_lambda_function.example
	File: /terraform\aws\lambda\public_lambda_via_api_gateway.tf:12-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_serverless_4

		12 | resource "aws_lambda_function" "example" {
		13 |   function_name = "ServerlessPerson"
		14 |
		15 |   handler = "MyHandler::handleRequest"
		16 |   runtime = "java11"
		17 |
		18 |   role = aws_iam_role.lambda_exec.arn
		19 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_launch_configuration.as_conf
	File: /terraform\aws\launch\launch_configuration.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		9  | resource "aws_launch_configuration" "as_conf" {
		10 |   name          = "web_config"
		11 |   image_id      = data.aws_ami.ubuntu.id
		12 |   instance_type = "t2.micro"
		13 |   user_data     = <<EOF
		14 | export DATABASE_PASSWORD=\"SomeSortOfPassword\"
		15 | EOF
		16 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_launch_configuration.as_conf
	File: /terraform\aws\launch\launch_configuration.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/general_13

		9  | resource "aws_launch_configuration" "as_conf" {
		10 |   name          = "web_config"
		11 |   image_id      = data.aws_ami.ubuntu.id
		12 |   instance_type = "t2.micro"
		13 |   user_data     = <<EOF
		14 | export DATABASE_PASSWORD=\"SomeSortOfPassword\"
		15 | EOF
		16 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_launch_configuration.fail
	File: /terraform\aws\launch\launch_configuration2.tf:8-13
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		8  | resource "aws_launch_configuration" "fail" {
		9  |   root_block_device {
		10 |     encrypted = false
		11 |   }
		12 |   associate_public_ip_address = true
		13 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_launch_configuration.fail
	File: /terraform\aws\launch\launch_configuration2.tf:8-13
	Guide: https://docs.bridgecrew.io/docs/general_13

		8  | resource "aws_launch_configuration" "fail" {
		9  |   root_block_device {
		10 |     encrypted = false
		11 |   }
		12 |   associate_public_ip_address = true
		13 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_launch_configuration.positive1
	File: /terraform\aws\launch\user_data_contains_encoded_private_key.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		1  | resource "aws_launch_configuration" "positive1" {
		2  |   image_id         = data.aws_ami.ubuntu.id
		3  |   instance_type    = "m4.large"
		4  |   spot_price       = "0.001"
		5  |   user_data_base64 = "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpzb21lS2V5" # someKey
		6  |
		7  |   lifecycle {
		8  |     create_before_destroy = true
		9  |   }
		10 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_launch_configuration.positive1
	File: /terraform\aws\launch\user_data_contains_encoded_private_key.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/general_13

		1  | resource "aws_launch_configuration" "positive1" {
		2  |   image_id         = data.aws_ami.ubuntu.id
		3  |   instance_type    = "m4.large"
		4  |   spot_price       = "0.001"
		5  |   user_data_base64 = "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpzb21lS2V5" # someKey
		6  |
		7  |   lifecycle {
		8  |     create_before_destroy = true
		9  |   }
		10 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_launch_configuration.positive1
	File: /terraform\aws\launch\user_data_shell_script_is_encoded.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		1  | resource "aws_launch_configuration" "positive1" {
		2  |   image_id         = data.aws_ami.ubuntu.id
		3  |   instance_type    = "m4.large"
		4  |   spot_price       = "0.001"
		5  |   user_data_base64 = "IyEvYmluL3NoCmVjaG8gIkhlbGxvIHdvcmxkIg==" # #!/bin/sh echo "Hello world"
		6  |
		7  |   lifecycle {
		8  |     create_before_destroy = true
		9  |   }
		10 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_launch_configuration.positive1
	File: /terraform\aws\launch\user_data_shell_script_is_encoded.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/general_13

		1  | resource "aws_launch_configuration" "positive1" {
		2  |   image_id         = data.aws_ami.ubuntu.id
		3  |   instance_type    = "m4.large"
		4  |   spot_price       = "0.001"
		5  |   user_data_base64 = "IyEvYmluL3NoCmVjaG8gIkhlbGxvIHdvcmxkIg==" # #!/bin/sh echo "Hello world"
		6  |
		7  |   lifecycle {
		8  |     create_before_destroy = true
		9  |   }
		10 | }


Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_alb.disabled
	File: /terraform\aws\lb\lb.tf:14-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers

		14 | resource "aws_alb" "disabled" {
		15 |   internal                         = false
		16 |   load_balancer_type               = "application"
		17 |   name                             = "alb"
		18 |   subnets                          = var.public_subnet_ids
		19 |   enable_cross_zone_load_balancing = false
		20 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_alb.disabled
	File: /terraform\aws\lb\lb.tf:14-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		14 | resource "aws_alb" "disabled" {
		15 |   internal                         = false
		16 |   load_balancer_type               = "application"
		17 |   name                             = "alb"
		18 |   subnets                          = var.public_subnet_ids
		19 |   enable_cross_zone_load_balancing = false
		20 | }


Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_alb.disabled
	File: /terraform\aws\lb\lb.tf:14-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62

		14 | resource "aws_alb" "disabled" {
		15 |   internal                         = false
		16 |   load_balancer_type               = "application"
		17 |   name                             = "alb"
		18 |   subnets                          = var.public_subnet_ids
		19 |   enable_cross_zone_load_balancing = false
		20 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_lb.default
	File: /terraform\aws\lb\lb.tf:22-27
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		22 | resource "aws_lb" "default" {
		23 |   internal           = false
		24 |   load_balancer_type = "network"
		25 |   name               = "nlb"
		26 |   subnets            = var.public_subnet_ids
		27 | }


Check: CKV_AWS_152: "Ensure that Load Balancer (Network/Gateway) has cross-zone load balancing enabled"
	FAILED for resource: aws_lb.default
	File: /terraform\aws\lb\lb.tf:22-27
	Guide: https://docs.bridgecrew.io/docs/ensure-that-load-balancer-networkgateway-has-cross-zone-load-balancing-enabled

		22 | resource "aws_lb" "default" {
		23 |   internal           = false
		24 |   load_balancer_type = "network"
		25 |   name               = "nlb"
		26 |   subnets            = var.public_subnet_ids
		27 | }


Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_lb.default
	File: /terraform\aws\lb\lb.tf:22-27
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62

		22 | resource "aws_lb" "default" {
		23 |   internal           = false
		24 |   load_balancer_type = "network"
		25 |   name               = "nlb"
		26 |   subnets            = var.public_subnet_ids
		27 | }


Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_lb.lb_bad_1
	File: /terraform\aws\lb\redirect.tf:9-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers

		9  | resource "aws_lb" "lb_bad_1" {
		10 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_lb.lb_bad_1
	File: /terraform\aws\lb\redirect.tf:9-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		9  | resource "aws_lb" "lb_bad_1" {
		10 | }


Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_lb.lb_bad_1
	File: /terraform\aws\lb\redirect.tf:9-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62

		9  | resource "aws_lb" "lb_bad_1" {
		10 | }


Check: CKV_AWS_2: "Ensure ALB protocol is HTTPS"
	FAILED for resource: aws_lb_listener.listener_bad_1
	File: /terraform\aws\lb\redirect.tf:12-20
	Guide: https://docs.bridgecrew.io/docs/networking_29

		12 | resource "aws_lb_listener" "listener_bad_1" {
		13 |   load_balancer_arn = aws_lb.lb_bad_1.arn
		14 |   port              = "80"
		15 |   protocol          = "HTTP"
		16 |
		17 |   default_action {
		18 |     type = "some-action"
		19 |   }
		20 | }


Check: CKV_AWS_103: "Ensure that load balancer is using TLS 1.2"
	FAILED for resource: aws_lb_listener.listener_bad_1
	File: /terraform\aws\lb\redirect.tf:12-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_43

		12 | resource "aws_lb_listener" "listener_bad_1" {
		13 |   load_balancer_arn = aws_lb.lb_bad_1.arn
		14 |   port              = "80"
		15 |   protocol          = "HTTP"
		16 |
		17 |   default_action {
		18 |     type = "some-action"
		19 |   }
		20 | }


Check: CKV_AWS_208: "Ensure MQBroker version is current"
	FAILED for resource: aws_mq_configuration.fail
	File: /terraform\aws\mq\aws_mq_configuration.fail.tf:2-18

		2  | resource "aws_mq_configuration" "fail" {
		3  |   description    = "Example Configuration"
		4  |   name           = "example"
		5  |   engine_type    = "ActiveMQ"
		6  |   engine_version = "5.15.0"
		7  |
		8  |   data = <<DATA
		9  | <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
		10 | <broker xmlns="http://activemq.apache.org/schema/core">
		11 |   <plugins>
		12 |     <forcePersistencyModeBrokerPlugin persistenceFlag="true"/>
		13 |     <statisticsBrokerPlugin/>
		14 |     <timeStampingBrokerPlugin ttlCeiling="86400000" zeroExpirationOverride="86400000"/>
		15 |   </plugins>
		16 | </broker>
		17 | DATA
		18 | }


Check: CKV_AWS_197: "Ensure MQ Broker Audit logging is enabled"
	FAILED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32

		10 | resource "aws_mq_broker" "pass" {
		11 |   broker_name = "example"
		12 |
		13 |   configuration {
		14 |     id       = aws_mq_configuration.fail.id
		15 |     revision = aws_mq_configuration.fail.latest_revision
		16 |   }
		17 |
		18 |   engine_type        = "ActiveMQ"
		19 |   engine_version     = "5.15.13"
		20 |   host_instance_type = "mq.t2.micro"
		21 |   security_groups    = [aws_security_group.test.id]
		22 |
		23 |   user {
		24 |     username = "ExampleUser"
		25 |     password = "MindTheGapps"
		26 |   }
		27 |
		28 |   # encryption_options {
		29 |   #   use_aws_owned_key = false
		30 |   #   kms_key_id        = aws_kms_key.example.arn
		31 |   # }
		32 | }


Check: CKV_AWS_209: "Ensure MQ broker encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32

		10 | resource "aws_mq_broker" "pass" {
		11 |   broker_name = "example"
		12 |
		13 |   configuration {
		14 |     id       = aws_mq_configuration.fail.id
		15 |     revision = aws_mq_configuration.fail.latest_revision
		16 |   }
		17 |
		18 |   engine_type        = "ActiveMQ"
		19 |   engine_version     = "5.15.13"
		20 |   host_instance_type = "mq.t2.micro"
		21 |   security_groups    = [aws_security_group.test.id]
		22 |
		23 |   user {
		24 |     username = "ExampleUser"
		25 |     password = "MindTheGapps"
		26 |   }
		27 |
		28 |   # encryption_options {
		29 |   #   use_aws_owned_key = false
		30 |   #   kms_key_id        = aws_kms_key.example.arn
		31 |   # }
		32 | }


Check: CKV_AWS_48: "Ensure MQ Broker logging is enabled"
	FAILED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_10

		10 | resource "aws_mq_broker" "pass" {
		11 |   broker_name = "example"
		12 |
		13 |   configuration {
		14 |     id       = aws_mq_configuration.fail.id
		15 |     revision = aws_mq_configuration.fail.latest_revision
		16 |   }
		17 |
		18 |   engine_type        = "ActiveMQ"
		19 |   engine_version     = "5.15.13"
		20 |   host_instance_type = "mq.t2.micro"
		21 |   security_groups    = [aws_security_group.test.id]
		22 |
		23 |   user {
		24 |     username = "ExampleUser"
		25 |     password = "MindTheGapps"
		26 |   }
		27 |
		28 |   # encryption_options {
		29 |   #   use_aws_owned_key = false
		30 |   #   kms_key_id        = aws_kms_key.example.arn
		31 |   # }
		32 | }


Check: CKV_AWS_207: "Ensure MQ Broker minor version updates are enabled"
	FAILED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32

		10 | resource "aws_mq_broker" "pass" {
		11 |   broker_name = "example"
		12 |
		13 |   configuration {
		14 |     id       = aws_mq_configuration.fail.id
		15 |     revision = aws_mq_configuration.fail.latest_revision
		16 |   }
		17 |
		18 |   engine_type        = "ActiveMQ"
		19 |   engine_version     = "5.15.13"
		20 |   host_instance_type = "mq.t2.micro"
		21 |   security_groups    = [aws_security_group.test.id]
		22 |
		23 |   user {
		24 |     username = "ExampleUser"
		25 |     password = "MindTheGapps"
		26 |   }
		27 |
		28 |   # encryption_options {
		29 |   #   use_aws_owned_key = false
		30 |   #   kms_key_id        = aws_kms_key.example.arn
		31 |   # }
		32 | }


Check: CKV_AWS_208: "Ensure MQBroker version is current"
	FAILED for resource: aws_mq_broker.pass
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:10-32

		10 | resource "aws_mq_broker" "pass" {
		11 |   broker_name = "example"
		12 |
		13 |   configuration {
		14 |     id       = aws_mq_configuration.fail.id
		15 |     revision = aws_mq_configuration.fail.latest_revision
		16 |   }
		17 |
		18 |   engine_type        = "ActiveMQ"
		19 |   engine_version     = "5.15.13"
		20 |   host_instance_type = "mq.t2.micro"
		21 |   security_groups    = [aws_security_group.test.id]
		22 |
		23 |   user {
		24 |     username = "ExampleUser"
		25 |     password = "MindTheGapps"
		26 |   }
		27 |
		28 |   # encryption_options {
		29 |   #   use_aws_owned_key = false
		30 |   #   kms_key_id        = aws_kms_key.example.arn
		31 |   # }
		32 | }


Check: CKV_AWS_7: "Ensure rotation for customer created CMKs is enabled"
	FAILED for resource: aws_kms_key.example
	File: /terraform\aws\mq\mq_broker_encryption_disabled.tf:34-35
	Guide: https://docs.bridgecrew.io/docs/logging_8

		34 | resource "aws_kms_key" "example" {
		35 | }


Check: CKV_AWS_81: "Ensure MSK Cluster encryption in rest and transit is enabled"
	FAILED for resource: aws_msk_cluster.name
	File: /terraform\aws\msk\msk_cluster.tf:11-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_32

		11 | resource "aws_msk_cluster" "name" {
		12 |   name = "example"
		13 |
		14 |   encryption_info {
		15 |     encryption_in_transit {
		16 |       client_broker = "TLS_PLAINTEXT"
		17 |       in_cluster    = true
		18 |     }
		19 |   }
		20 | }


Check: CKV_AWS_80: "Ensure MSK Cluster logging is enabled"
	FAILED for resource: aws_msk_cluster.name
	File: /terraform\aws\msk\msk_cluster.tf:11-20
	Guide: https://docs.bridgecrew.io/docs/logging_18

		11 | resource "aws_msk_cluster" "name" {
		12 |   name = "example"
		13 |
		14 |   encryption_info {
		15 |     encryption_in_transit {
		16 |       client_broker = "TLS_PLAINTEXT"
		17 |       in_cluster    = true
		18 |     }
		19 |   }
		20 | }


Check: CKV_AWS_101: "Ensure Neptune logging is enabled"
	FAILED for resource: aws_neptune_cluster.default
	File: /terraform\aws\neptune\neptune.tf:38-48
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_24

		38 | resource "aws_neptune_cluster" "default" {
		39 |   cluster_identifier                  = var.neptune-dbname
		40 |   engine                              = "neptune"
		41 |   backup_retention_period             = 5
		42 |   preferred_backup_window             = "07:00-09:00"
		43 |   skip_final_snapshot                 = true
		44 |   iam_database_authentication_enabled = false
		45 |   apply_immediately                   = true
		46 |   storage_encrypted                   = false
		47 |   # enable_cloudwatch_logs_exports = false
		48 | }


Check: CKV_AWS_44: "Ensure Neptune storage is securely encrypted"
	FAILED for resource: aws_neptune_cluster.default
	File: /terraform\aws\neptune\neptune.tf:38-48
	Guide: https://docs.bridgecrew.io/docs/general_18

		38 | resource "aws_neptune_cluster" "default" {
		39 |   cluster_identifier                  = var.neptune-dbname
		40 |   engine                              = "neptune"
		41 |   backup_retention_period             = 5
		42 |   preferred_backup_window             = "07:00-09:00"
		43 |   skip_final_snapshot                 = true
		44 |   iam_database_authentication_enabled = false
		45 |   apply_immediately                   = true
		46 |   storage_encrypted                   = false
		47 |   # enable_cloudwatch_logs_exports = false
		48 | }


Check: CKV_AWS_102: "Ensure Neptune Cluster instance is not publicly available"
	FAILED for resource: aws_neptune_cluster_instance.fail
	File: /terraform\aws\neptune\neptune_instance.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_42

		4 | resource "aws_neptune_cluster_instance" "fail" {
		5 |   publicly_accessible = true
		6 | }


Check: CKV_AWS_101: "Ensure Neptune logging is enabled"
	FAILED for resource: aws_neptune_cluster.postive1
	File: /terraform\aws\neptune\neptune_logging_disabled.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_24

		1 | resource "aws_neptune_cluster" "postive1" {
		2 |   cluster_identifier                  = "neptune-cluster"
		3 |   engine                              = "neptune"
		4 |   backup_retention_period             = 5
		5 |   preferred_backup_window             = "10:10-11:11"
		6 |   skip_final_snapshot                 = true
		7 |   iam_database_authentication_enabled = true
		8 |   apply_immediately                   = true
		9 | }


Check: CKV_AWS_44: "Ensure Neptune storage is securely encrypted"
	FAILED for resource: aws_neptune_cluster.postive1
	File: /terraform\aws\neptune\neptune_logging_disabled.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/general_18

		1 | resource "aws_neptune_cluster" "postive1" {
		2 |   cluster_identifier                  = "neptune-cluster"
		3 |   engine                              = "neptune"
		4 |   backup_retention_period             = 5
		5 |   preferred_backup_window             = "10:10-11:11"
		6 |   skip_final_snapshot                 = true
		7 |   iam_database_authentication_enabled = true
		8 |   apply_immediately                   = true
		9 | }


Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	FAILED for resource: aws.default
	File: /terraform\aws\provider\provider.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

		8  | provider "aws" {
		9  |   region     = "eu-west-2"
		10 |   access_key = "AKIAXYZDQCEN346Y6EVN"
		11 |   secret_key = "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"
		12 | }


Check: CKV_AWS_172: "Ensure QLDB ledger has deletion protection enabled"
	FAILED for resource: aws_qldb_ledger.disabled
	File: /terraform\aws\qldb\qldb_ledger.tf:5-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_storage_1

		5  | resource "aws_qldb_ledger" "disabled" {
		6  |   name             = "ledger"
		7  |   permissions_mode = "ALLOW_ALL"
		8  |
		9  |   deletion_protection = false
		10 | }


Check: CKV_AWS_170: "Ensure QLDB ledger permissions mode is set to STANDARD"
	FAILED for resource: aws_qldb_ledger.disabled
	File: /terraform\aws\qldb\qldb_ledger.tf:5-10
	Guide: https://docs.bridgecrew.io/docs/ensure-qldb-ledger-permissions-mode-is-set-to-standard-1

		5  | resource "aws_qldb_ledger" "disabled" {
		6  |   name             = "ledger"
		7  |   permissions_mode = "ALLOW_ALL"
		8  |
		9  |   deletion_protection = false
		10 | }


Check: CKV_AWS_146: "Ensure that RDS database cluster snapshot is encrypted"
	FAILED for resource: aws_db_cluster_snapshot.example
	File: /terraform\aws\rds\db_cluster_snapshot.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-database-cluster-snapshot-is-encrypted-1

		3 | resource "aws_db_cluster_snapshot" "example" {
		4 |   db_cluster_identifier          = aws_rds_cluster.example.id
		5 |   db_cluster_snapshot_identifier = "resourcetestsnapshot1234"
		6 | }


Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/general_4

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/general_73

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/public_2

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV_AWS_198: "Ensure no aws_db_security_group resources exist"
	FAILED for resource: aws_db_security_group.fail
	File: /terraform\aws\rds\db_security_group.tf:8-9

		8 | resource "aws_db_security_group" "fail" {
		9 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_db_security_group.fail
	File: /terraform\aws\rds\db_security_group.tf:8-9
	Guide: https://docs.bridgecrew.io/docs/networking_31

		8 | resource "aws_db_security_group" "fail" {
		9 | }


Check: CKV_AWS_140: "Ensure that RDS global clusters are encrypted"
	FAILED for resource: aws_rds_global_cluster.example
	File: /terraform\aws\rds\global_cluster.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-global-clusters-are-encrypted

		3 | resource "aws_rds_global_cluster" "example" {
		4 |   global_cluster_identifier = "example"
		5 | }


Check: CKV_AWS_96: "Ensure all data stored in Aurora is securely encrypted at rest"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_38

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV_AWS_162: "Ensure RDS cluster has IAM authentication enabled"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-cluster-has-iam-authentication-enabled

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV_AWS_139: "Ensure that RDS clusters have deletion protection enabled"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-and-instances-have-deletion-protection-enabled

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV_AWS_128: "Ensure that an Amazon RDS Clusters have AWS Identity and Access Management (IAM) authentication enabled"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-an-amazon-rds-clusters-have-iam-authentication-enabled

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage                   = 20
		3  |   storage_type                        = "gp2"
		4  |   engine                              = "mysql"
		5  |   engine_version                      = "5.7"
		6  |   instance_class                      = "db.t2.micro"
		7  |   name                                = "mydb"
		8  |   username                            = "foo"
		9  |   password                            = "foobarbaz"
		10 |   iam_database_authentication_enabled = true
		11 |   storage_encrypted                   = true
		12 |   ca_cert_identifier                  = "rds-ca-2019"
		13 |   auto_minor_version_upgrade          = false
		14 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage                   = 20
		3  |   storage_type                        = "gp2"
		4  |   engine                              = "mysql"
		5  |   engine_version                      = "5.7"
		6  |   instance_class                      = "db.t2.micro"
		7  |   name                                = "mydb"
		8  |   username                            = "foo"
		9  |   password                            = "foobarbaz"
		10 |   iam_database_authentication_enabled = true
		11 |   storage_encrypted                   = true
		12 |   ca_cert_identifier                  = "rds-ca-2019"
		13 |   auto_minor_version_upgrade          = false
		14 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_automatic_minor_upgrades_disabled.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/general_73

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage                   = 20
		3  |   storage_type                        = "gp2"
		4  |   engine                              = "mysql"
		5  |   engine_version                      = "5.7"
		6  |   instance_class                      = "db.t2.micro"
		7  |   name                                = "mydb"
		8  |   username                            = "foo"
		9  |   password                            = "foobarbaz"
		10 |   iam_database_authentication_enabled = true
		11 |   storage_encrypted                   = true
		12 |   ca_cert_identifier                  = "rds-ca-2019"
		13 |   auto_minor_version_upgrade          = false
		14 | }


Check: CKV_AWS_96: "Ensure all data stored in Aurora is securely encrypted at rest"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_38

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV_AWS_133: "Ensure that RDS instances has backup policy"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV_AWS_162: "Ensure RDS cluster has IAM authentication enabled"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-cluster-has-iam-authentication-enabled

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV_AWS_139: "Ensure that RDS clusters have deletion protection enabled"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-and-instances-have-deletion-protection-enabled

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV_AWS_128: "Ensure that an Amazon RDS Clusters have AWS Identity and Access Management (IAM) authentication enabled"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-an-amazon-rds-clusters-have-iam-authentication-enabled

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_rds_cluster_instance.fail
	File: /terraform\aws\rds\rds_cluster_instance.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		8  | resource "aws_rds_cluster_instance" "fail" {
		9  |   name                            = "bar"
		10 |   performance_insights_enabled    = false
		11 |   performance_insights_kms_key_id = ""
		12 |   kms_key_id                      = ""
		13 |   publicly_accessible             = true
		14 | }


Check: CKV_AWS_17: "Ensure all data stored in RDS is not publicly accessible"
	FAILED for resource: aws_rds_cluster_instance.fail
	File: /terraform\aws\rds\rds_cluster_instance.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/public_2

		8  | resource "aws_rds_cluster_instance" "fail" {
		9  |   name                            = "bar"
		10 |   performance_insights_enabled    = false
		11 |   performance_insights_kms_key_id = ""
		12 |   kms_key_id                      = ""
		13 |   publicly_accessible             = true
		14 | }


Check: CKV_AWS_129: "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage    = 10
		3  |   engine               = "mysql"
		4  |   engine_version       = "5.7"
		5  |   instance_class       = "db.t3.micro"
		6  |   name                 = "mydb"
		7  |   username             = "foo"
		8  |   password             = "foobarbaz"
		9  |   parameter_group_name = aws_elasticache_parameter_group.default.id
		10 |   skip_final_snapshot  = true
		11 |   port                 = 3306
		12 | }


Check: CKV_AWS_16: "Ensure all data stored in the RDS is securely encrypted at rest"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/general_4

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage    = 10
		3  |   engine               = "mysql"
		4  |   engine_version       = "5.7"
		5  |   instance_class       = "db.t3.micro"
		6  |   name                 = "mydb"
		7  |   username             = "foo"
		8  |   password             = "foobarbaz"
		9  |   parameter_group_name = aws_elasticache_parameter_group.default.id
		10 |   skip_final_snapshot  = true
		11 |   port                 = 3306
		12 | }


Check: CKV_AWS_118: "Ensure that enhanced monitoring is enabled for Amazon RDS instances"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage    = 10
		3  |   engine               = "mysql"
		4  |   engine_version       = "5.7"
		5  |   instance_class       = "db.t3.micro"
		6  |   name                 = "mydb"
		7  |   username             = "foo"
		8  |   password             = "foobarbaz"
		9  |   parameter_group_name = aws_elasticache_parameter_group.default.id
		10 |   skip_final_snapshot  = true
		11 |   port                 = 3306
		12 | }


Check: CKV_AWS_161: "Ensure RDS database has IAM authentication enabled"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/ensure-rds-database-has-iam-authentication-enabled

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage    = 10
		3  |   engine               = "mysql"
		4  |   engine_version       = "5.7"
		5  |   instance_class       = "db.t3.micro"
		6  |   name                 = "mydb"
		7  |   username             = "foo"
		8  |   password             = "foobarbaz"
		9  |   parameter_group_name = aws_elasticache_parameter_group.default.id
		10 |   skip_final_snapshot  = true
		11 |   port                 = 3306
		12 | }


Check: CKV_AWS_157: "Ensure that RDS instances have Multi-AZ enabled"
	FAILED for resource: aws_db_instance.positive1
	File: /terraform\aws\rds\rds_using_default_port.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/general_73

		1  | resource "aws_db_instance" "positive1" {
		2  |   allocated_storage    = 10
		3  |   engine               = "mysql"
		4  |   engine_version       = "5.7"
		5  |   instance_class       = "db.t3.micro"
		6  |   name                 = "mydb"
		7  |   username             = "foo"
		8  |   password             = "foobarbaz"
		9  |   parameter_group_name = aws_elasticache_parameter_group.default.id
		10 |   skip_final_snapshot  = true
		11 |   port                 = 3306
		12 | }


Check: CKV_AWS_141: "Ensured that redshift cluster allowing version upgrade by default"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-allow-version-upgrade-by-default

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_188: "Ensure RedShift Cluster is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_108

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_64: "Ensure all data stored in the Redshift cluster is securely encrypted at rest"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/general_25

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_142: "Ensure that Redshift cluster is encrypted by KMS"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-cluster-is-encrypted-by-kms

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_71: "Ensure Redshift Cluster logging is enabled"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_12

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_154: "Ensure Redshift is not deployed outside of a VPC"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/ensure-redshift-is-not-deployed-outside-of-a-vpc

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_87: "Redshift cluster should not be publicly accessible"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/public_9

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV_AWS_105: "Ensure Redshift uses SSL"
	FAILED for resource: aws_redshift_parameter_group.fail
	File: /terraform\aws\redshift\redshift_parameter.tf:4-7
	Guide: https://docs.bridgecrew.io/docs/ensure-redshift-uses-ssl

		4 | resource "aws_redshift_parameter_group" "fail" {
		5 |   name   = var.param_group_name
		6 |   family = "redshift-1.0"
		7 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_redshift_security_group.fail
	File: /terraform\aws\redshift\redshift_security_group.tf:8-18
	Guide: https://docs.bridgecrew.io/docs/networking_31

		8  | resource "aws_redshift_security_group" "fail" {
		9  |   name = "http"
		10 |
		11 |   ingress {
		12 |     description = "HTTP from VPC"
		13 |     from_port   = 80
		14 |     to_port     = 80
		15 |     protocol    = "tcp"
		16 |     cidr_blocks = [aws_vpc.main.cidr_block]
		17 |   }
		18 | }


Check: CKV_AWS_188: "Ensure RedShift Cluster is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_108

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV_AWS_64: "Ensure all data stored in the Redshift cluster is securely encrypted at rest"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/general_25

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV_AWS_142: "Ensure that Redshift cluster is encrypted by KMS"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-cluster-is-encrypted-by-kms

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV_AWS_71: "Ensure Redshift Cluster logging is enabled"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_12

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV_AWS_154: "Ensure Redshift is not deployed outside of a VPC"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-redshift-is-not-deployed-outside-of-a-vpc

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_143: "Ensure that S3 bucket has lock configuration enabled by default"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-lock-configuration-enabled-by-default

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV_AWS_53: "Ensure S3 bucket has block public ACLS enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.fail
	File: /terraform\aws\s3\s3_bucket_public_access_block.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_19

		8  | resource "aws_s3_bucket_public_access_block" "fail" {
		9  |   bucket = aws_s3_bucket.fail.id
		10 | }


Check: CKV_AWS_54: "Ensure S3 bucket has block public policy enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.fail
	File: /terraform\aws\s3\s3_bucket_public_access_block.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_20

		8  | resource "aws_s3_bucket_public_access_block" "fail" {
		9  |   bucket = aws_s3_bucket.fail.id
		10 | }


Check: CKV_AWS_55: "Ensure S3 bucket has ignore public ACLs enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.fail
	File: /terraform\aws\s3\s3_bucket_public_access_block.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_21

		8  | resource "aws_s3_bucket_public_access_block" "fail" {
		9  |   bucket = aws_s3_bucket.fail.id
		10 | }


Check: CKV_AWS_56: "Ensure S3 bucket has 'restrict_public_bucket' enabled"
	FAILED for resource: aws_s3_bucket_public_access_block.fail
	File: /terraform\aws\s3\s3_bucket_public_access_block.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_aws_s3_22

		8  | resource "aws_s3_bucket_public_access_block" "fail" {
		9  |   bucket = aws_s3_bucket.fail.id
		10 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_57: "S3 Bucket has an ACL defined which allows public WRITE access."
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.public_bucket
	File: /terraform\aws\s3\s3_bucket_public_acl_overridden_by_public_access_block.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		5 | resource "aws_s3_bucket" "public_bucket" {
		6 |   bucket = "bucket-with-public-acl-3"
		7 |   acl    = "public-read-write"
		8 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "S3B_181355"
		3  |   acl    = "private"
		4  |
		5  |   policy = <<EOF
		6  | 	{
		7  | 	  "Id": "id113",
		8  | 	  "Version": "2012-10-17",
		9  | 	  "Statement": [
		10 | 		{
		11 | 		  "Action": [
		12 | 			"s3:*"
		13 | 		  ],
		14 | 		  "Effect": "Allow",
		15 | 		  "Resource": "arn:aws:s3:::S3B_181355/*",
		16 | 		  "Principal": "*"
		17 | 		}
		18 | 	  ]
		19 | 	}
		20 |   EOF
		21 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "S3B_181355"
		3  |   acl    = "private"
		4  |
		5  |   policy = <<EOF
		6  | 	{
		7  | 	  "Id": "id113",
		8  | 	  "Version": "2012-10-17",
		9  | 	  "Statement": [
		10 | 		{
		11 | 		  "Action": [
		12 | 			"s3:*"
		13 | 		  ],
		14 | 		  "Effect": "Allow",
		15 | 		  "Resource": "arn:aws:s3:::S3B_181355/*",
		16 | 		  "Principal": "*"
		17 | 		}
		18 | 	  ]
		19 | 	}
		20 |   EOF
		21 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "S3B_181355"
		3  |   acl    = "private"
		4  |
		5  |   policy = <<EOF
		6  | 	{
		7  | 	  "Id": "id113",
		8  | 	  "Version": "2012-10-17",
		9  | 	  "Statement": [
		10 | 		{
		11 | 		  "Action": [
		12 | 			"s3:*"
		13 | 		  ],
		14 | 		  "Effect": "Allow",
		15 | 		  "Resource": "arn:aws:s3:::S3B_181355/*",
		16 | 		  "Principal": "*"
		17 | 		}
		18 | 	  ]
		19 | 	}
		20 |   EOF
		21 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "S3B_181355"
		3  |   acl    = "private"
		4  |
		5  |   policy = <<EOF
		6  | 	{
		7  | 	  "Id": "id113",
		8  | 	  "Version": "2012-10-17",
		9  | 	  "Statement": [
		10 | 		{
		11 | 		  "Action": [
		12 | 			"s3:*"
		13 | 		  ],
		14 | 		  "Effect": "Allow",
		15 | 		  "Resource": "arn:aws:s3:::S3B_181355/*",
		16 | 		  "Principal": "*"
		17 | 		}
		18 | 	  ]
		19 | 	}
		20 |   EOF
		21 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_all_permissions.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "S3B_181355"
		3  |   acl    = "private"
		4  |
		5  |   policy = <<EOF
		6  | 	{
		7  | 	  "Id": "id113",
		8  | 	  "Version": "2012-10-17",
		9  | 	  "Statement": [
		10 | 		{
		11 | 		  "Action": [
		12 | 			"s3:*"
		13 | 		  ],
		14 | 		  "Effect": "Allow",
		15 | 		  "Resource": "arn:aws:s3:::S3B_181355/*",
		16 | 		  "Principal": "*"
		17 | 		}
		18 | 	  ]
		19 | 	}
		20 |   EOF
		21 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_with_unsecured_cors_rule.tf:1-21
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		1  | resource "aws_s3_bucket" "positive1" {
		2  |   bucket = "my-tf-test-bucket"
		3  |   acl    = "public-read"
		4  |
		5  |   tags = {
		6  |     Name        = "My bucket"
		7  |     Environment = "Dev"
		8  |   }
		9  |
		10 |   versioning {
		11 |     enabled = false
		12 |   }
		13 |
		14 |   cors_rule {
		15 |     allowed_headers = ["*"]
		16 |     allowed_methods = ["PUT", "POST"]
		17 |     allowed_origins = ["https://s3-website-test.hashicorp.com"]
		18 |     expose_headers  = ["ETag"]
		19 |     max_age_seconds = 3000
		20 |   }
		21 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		1 | resource "aws_s3_bucket" "positive1" {
		2 |   bucket = "my-tf-test-bucket"
		3 |   acl    = "private"
		4 |
		5 |   tags = {
		6 |     Name        = "My bucket"
		7 |     Environment = "Dev"
		8 |   }
		9 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		1 | resource "aws_s3_bucket" "positive1" {
		2 |   bucket = "my-tf-test-bucket"
		3 |   acl    = "private"
		4 |
		5 |   tags = {
		6 |     Name        = "My bucket"
		7 |     Environment = "Dev"
		8 |   }
		9 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		1 | resource "aws_s3_bucket" "positive1" {
		2 |   bucket = "my-tf-test-bucket"
		3 |   acl    = "private"
		4 |
		5 |   tags = {
		6 |     Name        = "My bucket"
		7 |     Environment = "Dev"
		8 |   }
		9 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		1 | resource "aws_s3_bucket" "positive1" {
		2 |   bucket = "my-tf-test-bucket"
		3 |   acl    = "private"
		4 |
		5 |   tags = {
		6 |     Name        = "My bucket"
		7 |     Environment = "Dev"
		8 |   }
		9 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_bucket_without_enabled_mfa_delete.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		1 | resource "aws_s3_bucket" "positive1" {
		2 |   bucket = "my-tf-test-bucket"
		3 |   acl    = "private"
		4 |
		5 |   tags = {
		6 |     Name        = "My bucket"
		7 |     Environment = "Dev"
		8 |   }
		9 | }


Check: CKV_AWS_186: "Ensure S3 bucket Object is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_s3_bucket_object.fail
	File: /terraform\aws\s3\s3_object.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_106

		3 | resource "aws_s3_bucket_object" "fail" {
		4 |   bucket = aws_s3_bucket.data.id
		5 |   key    = "customer-master.xlsx"
		6 |   source = "resources/customer-master.xlsx"
		7 | }


Check: CKV_AWS_181: "Ensure S3 Object Copy is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_s3_object_copy.fail
	File: /terraform\aws\s3\s3_object_copy.tf:4-14
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_101

		4  | resource "aws_s3_object_copy" "fail" {
		5  |   bucket = "destination_bucket"
		6  |   key    = "destination_key"
		7  |   source = "source_bucket/source_key"
		8  |
		9  |   grant {
		10 |     uri         = "http://acs.amazonaws.com/groups/global/AllUsers"
		11 |     type        = "Group"
		12 |     permissions = ["READ"]
		13 |   }
		14 | }


Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3_13-enable-logging

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_144: "Ensure that S3 bucket has cross-region replication enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_19: "Ensure all data stored in the S3 bucket is securely encrypted at rest"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_145: "Ensure that S3 buckets are encrypted with KMS by default"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_20: "S3 Bucket has an ACL defined which allows public READ access."
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_21: "Ensure all data stored in the S3 bucket have versioning enabled"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3_16-enable-versioning

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV_AWS_187: "Ensure Sagemaker domain is encrypted by KMS using a customer managed Key (CMK)"
	FAILED for resource: aws_sagemaker_domain.fail
	File: /terraform\aws\sagemaker\sagemaker.tf:5-18
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_107

		5  | resource "aws_sagemaker_domain" "fail" {
		6  |   domain_name = "examplea"
		7  |   auth_mode   = "IAM"
		8  |   vpc_id      = aws_vpc.test.id
		9  |   subnet_ids  = [aws_subnet.test.id]
		10 |
		11 |   default_user_settings {
		12 |     execution_role = aws_iam_role.test.arn
		13 |   }
		14 |
		15 |   retention_policy {
		16 |     home_efs_file_system = "Delete"
		17 |   }
		18 | }


Check: CKV_AWS_98: "Ensure all data stored in the Sagemaker Endpoint is securely encrypted at rest"
	FAILED for resource: aws_sagemaker_endpoint_configuration.fail
	File: /terraform\aws\sagemaker\sagemaker_endpoint_configuration.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_40

		4 | resource "aws_sagemaker_endpoint_configuration" "fail" {
		5 |
		6 | }


Check: CKV_AWS_122: "Ensure that direct internet access is disabled for an Amazon SageMaker Notebook Instance"
	FAILED for resource: aws_sagemaker_notebook_instance.name
	File: /terraform\aws\sagemaker\sagemaker_notebook_instance.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-direct-internet-access-is-disabled-for-an-amazon-sagemaker-notebook-instance

		5 | resource "aws_sagemaker_notebook_instance" "name" {
		6 |   direct_internet_access = "enabled"
		7 | }


Check: CKV_AWS_22: "Ensure SageMaker Notebook is encrypted at rest using KMS CMK"
	FAILED for resource: aws_sagemaker_notebook_instance.name
	File: /terraform\aws\sagemaker\sagemaker_notebook_instance.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/general_14

		5 | resource "aws_sagemaker_notebook_instance" "name" {
		6 |   direct_internet_access = "enabled"
		7 | }


Check: CKV_AWS_149: "Ensure that Secrets Manager secret is encrypted using KMS CMK"
	FAILED for resource: aws_secretsmanager_secret.not_secure_policy
	File: /terraform\aws\secret_mamager\secrets_manager_with_vulnerable_policy.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-secrets-manager-secret-is-encrypted-using-kms

		8  | resource "aws_secretsmanager_secret" "not_secure_policy" {
		9  |   name = "not_secure_secret"
		10 | }


Check: CKV_AWS_149: "Ensure that Secrets Manager secret is encrypted using KMS CMK"
	FAILED for resource: aws_secretsmanager_secret.fail
	File: /terraform\aws\secret_mamager\secretsmanager_secret.tf:7-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-secrets-manager-secret-is-encrypted-using-kms

		7 | resource "aws_secretsmanager_secret" "fail" {
		8 |   name = "lambda_password"
		9 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\securiity_group_unknown_port_exposed_to_internet.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/networking_31

		1  | resource "aws_security_group" "positive1" {
		2  |   name        = "allow_tls"
		3  |   description = "Allow TLS inbound traffic"
		4  |   vpc_id      = aws_vpc.main.id
		5  |
		6  |   ingress {
		7  |     description = "TLS from VPC"
		8  |     from_port   = 44
		9  |     to_port     = 443
		10 |     protocol    = "tcp"
		11 |     cidr_blocks = ["0.0.0.0/0"]
		12 |   }
		13 |
		14 |   egress {
		15 |     from_port   = 0
		16 |     to_port     = 0
		17 |     protocol    = "-1"
		18 |     cidr_blocks = ["0.0.0.0/0"]
		19 |   }
		20 |
		21 |   tags = {
		22 |     Name = "allow_tls"
		23 |   }
		24 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.bad_example
	File: /terraform\aws\security_groups\security_group.tf:15-38
	Guide: https://docs.bridgecrew.io/docs/networking_31

		15 | resource "aws_security_group" "bad_example" {
		16 |   ingress {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     cidr_blocks = ["0.0.0.0/0"]
		20 |   }
		21 |
		22 |   ingress {
		23 |     from_port   = 3389
		24 |     to_port     = 3389
		25 |     cidr_blocks = ["0.0.0.0/0"]
		26 |   }
		27 |
		28 |   egress {
		29 |     from_port   = 22
		30 |     to_port     = 22
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 |   egress {
		34 |     from_port   = 3389
		35 |     to_port     = 3389
		36 |     cidr_blocks = ["0.0.0.0/0"]
		37 |   }
		38 | }


Check: CKV_AWS_24: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22"
	FAILED for resource: aws_security_group.bad_example
	File: /terraform\aws\security_groups\security_group.tf:15-38
	Guide: https://docs.bridgecrew.io/docs/networking_1-port-security

		15 | resource "aws_security_group" "bad_example" {
		16 |   ingress {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     cidr_blocks = ["0.0.0.0/0"]
		20 |   }
		21 |
		22 |   ingress {
		23 |     from_port   = 3389
		24 |     to_port     = 3389
		25 |     cidr_blocks = ["0.0.0.0/0"]
		26 |   }
		27 |
		28 |   egress {
		29 |     from_port   = 22
		30 |     to_port     = 22
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 |   egress {
		34 |     from_port   = 3389
		35 |     to_port     = 3389
		36 |     cidr_blocks = ["0.0.0.0/0"]
		37 |   }
		38 | }


Check: CKV_AWS_25: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389"
	FAILED for resource: aws_security_group.bad_example
	File: /terraform\aws\security_groups\security_group.tf:15-38
	Guide: https://docs.bridgecrew.io/docs/networking_2

		15 | resource "aws_security_group" "bad_example" {
		16 |   ingress {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     cidr_blocks = ["0.0.0.0/0"]
		20 |   }
		21 |
		22 |   ingress {
		23 |     from_port   = 3389
		24 |     to_port     = 3389
		25 |     cidr_blocks = ["0.0.0.0/0"]
		26 |   }
		27 |
		28 |   egress {
		29 |     from_port   = 22
		30 |     to_port     = 22
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 |   egress {
		34 |     from_port   = 3389
		35 |     to_port     = 3389
		36 |     cidr_blocks = ["0.0.0.0/0"]
		37 |   }
		38 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group.tf:40-44
	Guide: https://docs.bridgecrew.io/docs/networking_31

		40 | resource "aws_security_group_rule" "fail" {
		41 |   security_group_id = aws_security_group.bad_example.id
		42 |   type              = "ingress"
		43 |   cidr_blocks       = ["172.31.0.0/16"]
		44 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group_rule.fail
	File: /terraform\aws\security_groups\security_group_rule.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/networking_31

		9  | resource "aws_security_group_rule" "fail" {
		10 |   type              = "ingress"
		11 |   from_port         = 0
		12 |   to_port           = 65535
		13 |   protocol          = "tcp"
		14 |   cidr_blocks       = [aws_vpc.example.cidr_block]
		15 |   ipv6_cidr_blocks  = [aws_vpc.example.ipv6_cidr_block]
		16 |   security_group_id = "sg-123456"
		17 | }


Check: CKV_AWS_131: "Ensure that ALB drops HTTP headers"
	FAILED for resource: aws_lb.test
	File: /terraform\aws\security_groups\security_groups_not_used.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers

		1 | resource "aws_lb" "test" {
		2 |   name               = "test"
		3 |   load_balancer_type = "application"
		4 |   subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		5 |   internal           = true
		6 | }


Check: CKV_AWS_91: "Ensure the ELBv2 (Application/Network) has access logging enabled"
	FAILED for resource: aws_lb.test
	File: /terraform\aws\security_groups\security_groups_not_used.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_22

		1 | resource "aws_lb" "test" {
		2 |   name               = "test"
		3 |   load_balancer_type = "application"
		4 |   subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		5 |   internal           = true
		6 | }


Check: CKV_AWS_150: "Ensure that Load Balancer has deletion protection enabled"
	FAILED for resource: aws_lb.test
	File: /terraform\aws\security_groups\security_groups_not_used.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_62

		1 | resource "aws_lb" "test" {
		2 |   name               = "test"
		3 |   load_balancer_type = "application"
		4 |   subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
		5 |   internal           = true
		6 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.allow_tls
	File: /terraform\aws\security_groups\security_groups_not_used.tf:8-33
	Guide: https://docs.bridgecrew.io/docs/networking_31

		8  | resource "aws_security_group" "allow_tls" {
		9  |   name        = "allow_tls"
		10 |   description = "Allow TLS inbound traffic"
		11 |   vpc_id      = aws_vpc.main.id
		12 |
		13 |   ingress {
		14 |     description      = "TLS from VPC"
		15 |     from_port        = 443
		16 |     to_port          = 443
		17 |     protocol         = "tcp"
		18 |     cidr_blocks      = [aws_vpc.main.cidr_block]
		19 |     ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]
		20 |   }
		21 |
		22 |   egress {
		23 |     from_port        = 0
		24 |     to_port          = 0
		25 |     protocol         = "-1"
		26 |     cidr_blocks      = ["0.0.0.0/0"]
		27 |     ipv6_cidr_blocks = ["::/0"]
		28 |   }
		29 |
		30 |   tags = {
		31 |     Name = "allow_tls"
		32 |   }
		33 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group_rule.positive1
	File: /terraform\aws\security_groups\unrestricted_security_group_ingress.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/networking_31

		1 | resource "aws_security_group_rule" "positive1" {
		2 |   type              = "ingress"
		3 |   from_port         = 3306
		4 |   to_port           = 3306
		5 |   protocol          = "tcp"
		6 |   cidr_blocks       = ["0.0.0.0/0"]
		7 |   security_group_id = aws_security_group.default.id
		8 | }


Check: CKV_AWS_26: "Ensure all data stored in the SNS topic is encrypted"
	FAILED for resource: aws_sns_topic.fail
	File: /terraform\aws\sns\sns_topic.tf:7-8
	Guide: https://docs.bridgecrew.io/docs/general_15

		7 | resource "aws_sns_topic" "fail" {
		8 | }


Check: CKV_AWS_169: "Ensure SNS topic policy is not public by only allowing specific services or principals to access it"
	FAILED for resource: aws_sns_topic_policy.sns_tp2
	File: /terraform\aws\sns\sns_topic_policy.tf:3-34
	Guide: https://docs.bridgecrew.io/docs/ensure-sns-topic-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

		3  | resource "aws_sns_topic_policy" "sns_tp2" {
		4  |   arn = aws_sns_topic.test.arn
		5  |
		6  |   policy = <<POLICY
		7  | {
		8  |     "Version":"2012-10-17",
		9  |     "Statement":[
		10 |        {
		11 |            "Principal": {
		12 |             "AWS": [
		13 |                 "arn:aws:iam::123456789101:role/sns",
		14 |                 "*"
		15 |             ]
		16 |           },
		17 |           "Effect": "Allow",
		18 |           "Action": [
		19 |             "SNS:Subscribe",
		20 |             "SNS:SetTopicAttributes",
		21 |             "SNS:RemovePermission",
		22 |             "SNS:Receive",
		23 |             "SNS:Publish",
		24 |             "SNS:ListSubscriptionsByTopic",
		25 |             "SNS:GetTopicAttributes",
		26 |             "SNS:DeleteTopic",
		27 |             "SNS:AddPermission",
		28 |           ],
		29 |           "Resource": "${aws_sns_topic.test.arn}"
		30 |        }
		31 |     ]
		32 | }
		33 | POLICY
		34 | }


Check: CKV_AWS_26: "Ensure all data stored in the SNS topic is encrypted"
	FAILED for resource: aws_sns_topic.positive1
	File: /terraform\aws\sns\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/general_15

		1 | resource "aws_sns_topic" "positive1" {
		2 |   name = "my-topic-with-policy"
		3 | }


Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	FAILED for resource: aws_sqs_queue.fail
	File: /terraform\aws\sqs\sqs_queue.tf:8-21
	Guide: https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue

		8  | resource "aws_sqs_queue" "fail" {
		9  |   #   kms_master_key_id  =aws_kms_key.pass.arn
		10 |   policy = <<POLICY
		11 | {
		12 |   "Statement": [
		13 |     {
		14 |       "Effect": "Allow",
		15 |       "Principal": "*",
		16 |       "Action": "*"
		17 |     }
		18 |   ]
		19 | }
		20 | POLICY
		21 | }


Check: CKV_AWS_168: "Ensure SQS queue policy is not public by only allowing specific services or principals to access it"
	FAILED for resource: aws_sqs_queue.fail
	File: /terraform\aws\sqs\sqs_queue.tf:8-21
	Guide: https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

		8  | resource "aws_sqs_queue" "fail" {
		9  |   #   kms_master_key_id  =aws_kms_key.pass.arn
		10 |   policy = <<POLICY
		11 | {
		12 |   "Statement": [
		13 |     {
		14 |       "Effect": "Allow",
		15 |       "Principal": "*",
		16 |       "Action": "*"
		17 |     }
		18 |   ]
		19 | }
		20 | POLICY
		21 | }


Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	FAILED for resource: aws_sqs_queue.positive1
	File: /terraform\aws\sqs\sqs_queue_exposed.tf:4-27
	Guide: https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue

		4  | resource "aws_sqs_queue" "positive1" {
		5  |   name = "examplequeue"
		6  |
		7  |   policy = <<POLICY
		8  | {
		9  |   "Version": "2012-10-17",
		10 |   "Id": "sqspolicy",
		11 |   "Statement": [
		12 |     {
		13 |       "Sid": "First",
		14 |       "Effect": "Allow",
		15 |       "Principal": "*",
		16 |       "Action": "sqs:SendMessage",
		17 |       "Resource": "${aws_sqs_queue.q.arn}",
		18 |       "Condition": {
		19 |         "ArnEquals": {
		20 |           "aws:SourceArn": "${aws_sns_topic.example.arn}"
		21 |         }
		22 |       }
		23 |     }
		24 |   ]
		25 | }
		26 | POLICY
		27 | }


Check: CKV_AWS_72: "Ensure SQS policy does not allow ALL (*) actions."
	FAILED for resource: aws_sqs_queue_policy.fail
	File: /terraform\aws\sqs\sqs_queue_policy.fail.tf:5-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_iam_46

		5  | resource "aws_sqs_queue_policy" "fail" {
		6  |   queue_url = aws_sqs_queue.fail.id
		7  |
		8  |   policy = <<POLICY
		9  | {
		10 |   "Statement": [
		11 |     {
		12 |       "Effect": "Allow",
		13 |       "Principal": "*",
		14 |       "Action": "*"
		15 |     }
		16 |   ]
		17 | }
		18 | POLICY
		19 | }


Check: CKV_AWS_168: "Ensure SQS queue policy is not public by only allowing specific services or principals to access it"
	FAILED for resource: aws_sqs_queue_policy.fail
	File: /terraform\aws\sqs\sqs_queue_policy.fail.tf:5-19
	Guide: https://docs.bridgecrew.io/docs/ensure-sqs-queue-policy-is-not-public-by-only-allowing-specific-services-or-principals-to-access-it

		5  | resource "aws_sqs_queue_policy" "fail" {
		6  |   queue_url = aws_sqs_queue.fail.id
		7  |
		8  |   policy = <<POLICY
		9  | {
		10 |   "Statement": [
		11 |     {
		12 |       "Effect": "Allow",
		13 |       "Principal": "*",
		14 |       "Action": "*"
		15 |     }
		16 |   ]
		17 | }
		18 | POLICY
		19 | }


Check: CKV_AWS_23: "Ensure every security groups rule has a description"
	FAILED for resource: aws_security_group.public_internet_sg
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:50-69
	Guide: https://docs.bridgecrew.io/docs/networking_31

		50 | resource "aws_security_group" "public_internet_sg" {
		51 |   name        = "public-internet-sg"
		52 |   description = "Allow all local traffic with internet access"
		53 |   vpc_id      = aws_vpc.main.id
		54 |
		55 |   egress {
		56 |     from_port   = 0
		57 |     to_port     = 0
		58 |     protocol    = "-1"
		59 |     cidr_blocks = [local.quad_zero_cidr_block]
		60 |   }
		61 |
		62 |   ingress {
		63 |     from_port   = 0
		64 |     to_port     = 0
		65 |     protocol    = "-1"
		66 |     cidr_blocks = [local.cidr_block]
		67 |   }
		68 |
		69 | }


Check: CKV_AWS_126: "Ensure that detailed monitoring is enabled for EC2 instances"
	FAILED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances

		87 | resource "aws_instance" "test_ec2_instance" {
		88 |   ami                    = data.aws_ami.ubuntu.id
		89 |   instance_type          = "t2.micro"
		90 |   subnet_id              = aws_subnet.public_subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public_internet_sg.id]
		92 | }


Check: CKV_AWS_135: "Ensure that EC2 is EBS optimized"
	FAILED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized

		87 | resource "aws_instance" "test_ec2_instance" {
		88 |   ami                    = data.aws_ami.ubuntu.id
		89 |   instance_type          = "t2.micro"
		90 |   subnet_id              = aws_subnet.public_subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public_internet_sg.id]
		92 | }


Check: CKV_AWS_79: "Ensure Instance Metadata Service Version 1 is not enabled"
	FAILED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/bc_aws_general_31

		87 | resource "aws_instance" "test_ec2_instance" {
		88 |   ami                    = data.aws_ami.ubuntu.id
		89 |   instance_type          = "t2.micro"
		90 |   subnet_id              = aws_subnet.public_subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public_internet_sg.id]
		92 | }


Check: CKV_AWS_8: "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted"
	FAILED for resource: aws_instance.test_ec2_instance
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:87-92
	Guide: https://docs.bridgecrew.io/docs/general_13

		87 | resource "aws_instance" "test_ec2_instance" {
		88 |   ami                    = data.aws_ami.ubuntu.id
		89 |   instance_type          = "t2.micro"
		90 |   subnet_id              = aws_subnet.public_subnet.id
		91 |   vpc_security_group_ids = [aws_security_group.public_internet_sg.id]
		92 | }


Check: CKV_AWS_27: "Ensure all data stored in the SQS queue is encrypted"
	FAILED for resource: aws_sqs_queue.test_queue
	File: /terraform\aws\sqs\sqs_vpc_endpoint_without_dns_resolution.tf:103-105
	Guide: https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue

		103 | resource "aws_sqs_queue" "test_queue" {
		104 |   name = "test-queue"
		105 | }


Check: CKV_AWS_112: "Ensure Session Manager data is encrypted in transit"
	FAILED for resource: aws_ssm_document.s3_enabled_not_encrypted_yaml
	File: /terraform\aws\ssm\ssm.tf:6-31
	Guide: https://docs.bridgecrew.io/docs/ensure-session-manager-data-is-encrypted-in-transit

		6  | resource "aws_ssm_document" "s3_enabled_not_encrypted_yaml" {
		7  |   name          = "SSM-SessionManagerRunShell"
		8  |   document_type = "Session"
		9  |
		10 |   document_format = "YAML"
		11 |
		12 |   content = <<DOC
		13 |   schemaVersion: '1.0'
		14 |   description: Document to hold regional settings for Session Manager
		15 |   sessionType: Standard_Stream
		16 |   inputs:
		17 |     s3BucketName: 'example'
		18 |     s3KeyPrefix: ''
		19 |     s3EncryptionEnabled: false
		20 |     cloudWatchLogGroupName: ''
		21 |     cloudWatchEncryptionEnabled: false
		22 |     cloudWatchStreamingEnabled: true
		23 |     kmsKeyId: ''
		24 |     runAsEnabled: true
		25 |     runAsDefaultUser: ''
		26 |     idleSessionTimeout: '20'
		27 |     shellProfile:
		28 |       windows: ''
		29 |       linux: ''
		30 | DOC
		31 | }


Check: CKV_AWS_113: "Ensure Session Manager logs are enabled and encrypted"
	FAILED for resource: aws_ssm_document.s3_enabled_not_encrypted_yaml
	File: /terraform\aws\ssm\ssm.tf:6-31
	Guide: https://docs.bridgecrew.io/docs/ensure-that-load-balancer-has-deletion-protection-enabled

		6  | resource "aws_ssm_document" "s3_enabled_not_encrypted_yaml" {
		7  |   name          = "SSM-SessionManagerRunShell"
		8  |   document_type = "Session"
		9  |
		10 |   document_format = "YAML"
		11 |
		12 |   content = <<DOC
		13 |   schemaVersion: '1.0'
		14 |   description: Document to hold regional settings for Session Manager
		15 |   sessionType: Standard_Stream
		16 |   inputs:
		17 |     s3BucketName: 'example'
		18 |     s3KeyPrefix: ''
		19 |     s3EncryptionEnabled: false
		20 |     cloudWatchLogGroupName: ''
		21 |     cloudWatchEncryptionEnabled: false
		22 |     cloudWatchStreamingEnabled: true
		23 |     kmsKeyId: ''
		24 |     runAsEnabled: true
		25 |     runAsDefaultUser: ''
		26 |     idleSessionTimeout: '20'
		27 |     shellProfile:
		28 |       windows: ''
		29 |       linux: ''
		30 | DOC
		31 | }


Check: CKV_AWS_130: "Ensure VPC subnets do not assign public IP by default"
	FAILED for resource: aws_subnet.test
	File: /terraform\aws\subnet\subnet.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default

		4 | resource "aws_subnet" "test" {
		5 |   vpc_id     = aws_vpc.main.id
		6 |   cidr_block = "10.0.1.0/24"
		7 |
		8 |   map_public_ip_on_launch = true
		9 | }


Check: CKV_AWS_160: "Ensure that Timestream database is encrypted with KMS CMK"
	FAILED for resource: aws_timestreamwrite_database.default
	File: /terraform\aws\timestream\timestream.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-timestream-database-is-encrypted-with-kms-cmk

		3 | resource "aws_timestreamwrite_database" "default" {
		4 |   database_name = "timestream"
		5 | }


Check: CKV_AWS_164: "Ensure Transfer Server is not exposed publicly."
	FAILED for resource: aws_transfer_server.example
	File: /terraform\aws\transfer_server\transferserver.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/ensure-transfer-server-is-not-exposed-publicly

		4 | resource "aws_transfer_server" "example" {
		5 |   protocols = ["SFTP"]
		6 | }


Check: CKV_AWS_148: "Ensure no default VPC is planned to be provisioned"
	FAILED for resource: aws_default_vpc.default
	File: /terraform\aws\vpc\default_vpc.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/ensure-no-default-vpc-is-planned-to-be-provisioned

		8  | resource "aws_default_vpc" "default" {
		9  |   tags = {
		10 |     Name = "Default VPC"
		11 |   }
		12 | }


Check: CKV_AWS_123: "Ensure that VPC Endpoint Service is configured for Manual Acceptance"
	FAILED for resource: aws_vpc_endpoint_service.example
	File: /terraform\aws\vpc_endpoint\vpc_endpoint.tf:4-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vpc-endpoint-service-is-configured-for-manual-acceptance

		4 | resource "aws_vpc_endpoint_service" "example" {
		5 |   acceptance_required        = false
		6 |   network_load_balancer_arns = [aws_lb.example.arn]
		7 | }


Check: CKV_AWS_175: "Ensure WAF has associated rules"
	FAILED for resource: aws_wafregional_web_acl.fail
	File: /terraform\aws\waf\waf.tf:5-13
	Guide: https://docs.bridgecrew.clou/docs/bc_aws_networking_64

		5  | resource "aws_wafregional_web_acl" "fail" {
		6  |   name        = "tfWebACLregionalfail"
		7  |   metric_name = "tfWebACLregionalfail"
		8  |
		9  |   default_action {
		10 |     type = "ALLOW"
		11 |   }
		12 |
		13 | }


Check: CKV_AWS_176: "Ensure Logging is enabled for WAF  Web Access Control Lists"
	FAILED for resource: aws_wafregional_web_acl.fail
	File: /terraform\aws\waf\waf.tf:5-13
	Guide: https://docs.bridgecrew.clou/docs/bc_aws_logging_31

		5  | resource "aws_wafregional_web_acl" "fail" {
		6  |   name        = "tfWebACLregionalfail"
		7  |   metric_name = "tfWebACLregionalfail"
		8  |
		9  |   default_action {
		10 |     type = "ALLOW"
		11 |   }
		12 |
		13 | }


Check: CKV_AWS_175: "Ensure WAF has associated rules"
	FAILED for resource: aws_waf_web_acl.fail
	File: /terraform\aws\waf\waf.tf:16-23
	Guide: https://docs.bridgecrew.clou/docs/bc_aws_networking_64

		16 | resource "aws_waf_web_acl" "fail" {
		17 |   name        = "tfWebACL"
		18 |   metric_name = "tfWebACL"
		19 |
		20 |   default_action {
		21 |     type = "ALLOW"
		22 |   }
		23 | }


Check: CKV_AWS_176: "Ensure Logging is enabled for WAF  Web Access Control Lists"
	FAILED for resource: aws_waf_web_acl.fail
	File: /terraform\aws\waf\waf.tf:16-23
	Guide: https://docs.bridgecrew.clou/docs/bc_aws_logging_31

		16 | resource "aws_waf_web_acl" "fail" {
		17 |   name        = "tfWebACL"
		18 |   metric_name = "tfWebACL"
		19 |
		20 |   default_action {
		21 |     type = "ALLOW"
		22 |   }
		23 | }


Check: CKV_AWS_192: "Ensure WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell"
	FAILED for resource: aws_wafv2_web_acl.no_rule
	File: /terraform\aws\waf\waf2.tf:5-19
	Guide: https://docs.bridgecrew.io/docs/ensure-waf-prevents-message-lookup-in-log4j2

		5  | resource "aws_wafv2_web_acl" "no_rule" {
		6  |   name        = "managed-rule-example-fail"
		7  |   description = "Example of a managed rule."
		8  |   scope       = "REGIONAL"
		9  |
		10 |   default_action {
		11 |     allow {}
		12 |   }
		13 |
		14 |   visibility_config {
		15 |     cloudwatch_metrics_enabled = false
		16 |     metric_name                = "friendly-metric-name"
		17 |     sampled_requests_enabled   = false
		18 |   }
		19 | }


Check: CKV_AWS_175: "Ensure WAF has associated rules"
	FAILED for resource: aws_wafv2_web_acl.no_rule
	File: /terraform\aws\waf\waf2.tf:5-19
	Guide: https://docs.bridgecrew.clou/docs/bc_aws_networking_64

		5  | resource "aws_wafv2_web_acl" "no_rule" {
		6  |   name        = "managed-rule-example-fail"
		7  |   description = "Example of a managed rule."
		8  |   scope       = "REGIONAL"
		9  |
		10 |   default_action {
		11 |     allow {}
		12 |   }
		13 |
		14 |   visibility_config {
		15 |     cloudwatch_metrics_enabled = false
		16 |     metric_name                = "friendly-metric-name"
		17 |     sampled_requests_enabled   = false
		18 |   }
		19 | }


Check: CKV_AWS_156: "Ensure that Workspace root volumes are encrypted"
	FAILED for resource: aws_workspaces_workspace.fail
	File: /terraform\aws\workspace\workspace_workspace.tf:8-22
	Guide: https://docs.bridgecrew.io/docs/ensure-that-workspace-root-volumes-are-encrypted

		8  | resource "aws_workspaces_workspace" "fail" {
		9  |   directory_id = aws_workspaces_directory.main.id
		10 |   bundle_id    = data.aws_workspaces_bundle.bundle.id
		11 |   user_name    = var.user_name
		12 |
		13 |   workspace_properties {
		14 |     compute_type_name                         = "VALUE"
		15 |     user_volume_size_gib                      = 10
		16 |     root_volume_size_gib                      = 80
		17 |     running_mode                              = "AUTO_STOP"
		18 |     running_mode_auto_stop_timeout_in_minutes = 60
		19 |   }
		20 |
		21 |   tags = var.common_tags
		22 | }


Check: CKV_AWS_155: "Ensure that Workspace user volumes are encrypted"
	FAILED for resource: aws_workspaces_workspace.fail
	File: /terraform\aws\workspace\workspace_workspace.tf:8-22
	Guide: https://docs.bridgecrew.io/docs/ensure-that-workspace-user-volumes-are-encrypted

		8  | resource "aws_workspaces_workspace" "fail" {
		9  |   directory_id = aws_workspaces_directory.main.id
		10 |   bundle_id    = data.aws_workspaces_bundle.bundle.id
		11 |   user_name    = var.user_name
		12 |
		13 |   workspace_properties {
		14 |     compute_type_name                         = "VALUE"
		15 |     user_volume_size_gib                      = 10
		16 |     root_volume_size_gib                      = 80
		17 |     running_mode                              = "AUTO_STOP"
		18 |     running_mode_auto_stop_timeout_in_minutes = 60
		19 |   }
		20 |
		21 |   tags = var.common_tags
		22 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\aks\aks_network_policy_misconfigured.tf:3-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		3  | resource "azurerm_kubernetes_cluster" "fail" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   default_node_pool {
		10 |     name       = "default"
		11 |     node_count = 1
		12 |     vm_size    = "Standard_D2_v2"
		13 |   }
		14 |
		15 |   identity {
		16 |     type = "SystemAssigned"
		17 |   }
		18 |
		19 |   tags = {
		20 |     Environment = "Production"
		21 |   }
		22 |
		23 |   network_profile {
		24 |     #...other configurations
		25 |   }
		26 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\aks\aks_uses_azure_policies_addon_disabled.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		3  | resource "azurerm_kubernetes_cluster" "positive1" {
		4  |   name                = "example-aks1"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   dns_prefix          = "exampleaks1"
		8  |
		9  |   addon_profile {
		10 |
		11 |     azure_policy {
		12 |
		13 |       enabled = false
		14 |
		15 |     }
		16 |   }
		17 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail_cluster
	File: /terraform\azurerm\aks\azurerm_kubernetes_cluster.tf:15-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		15 | resource "azurerm_kubernetes_cluster" "fail_cluster" {
		16 |   name                = "example-aks1"
		17 |   location            = azurerm_resource_group.example.location
		18 |   resource_group_name = azurerm_resource_group.example.name
		19 |   dns_prefix          = "exampleaks1"
		20 |   default_node_pool {
		21 |     name       = "default"
		22 |     node_count = 1
		23 |     vm_size    = "Standard_D2_v2"
		24 |   }
		25 |   identity {
		26 |     type = "SystemAssigned"
		27 |   }
		28 |
		29 |
		30 |   role_based_access_control {
		31 |     enabled = false
		32 |   }
		33 |   addon_profile {
		34 |     kube_dashboard {
		35 |       enabled = true
		36 |     }
		37 |   }
		38 |   tags = { Environment = "Production" }
		39 | }


Check: CKV_AZURE_107: "Ensure that API management services use virtual networks"
	FAILED for resource: azurerm_api_management.example
	File: /terraform\azurerm\api-management\api_manangement.tf:4-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-api-management-services-uses-virtual-networks

		4  | resource "azurerm_api_management" "example" {
		5  |   name                = "example-apim"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   publisher_name      = "My Company"
		9  |   publisher_email     = "company@terraform.io"
		10 |
		11 |   sku_name = "Developer_1"
		12 |
		13 |   policy {
		14 |     xml_content = <<XML
		15 |                     <policies>
		16 |                       <inbound />
		17 |                       <backend />
		18 |                       <outbound />
		19 |                       <on-error />
		20 |                     </policies>
		21 |                 XML
		22 |
		23 |   }
		24 | }


Check: CKV_AZURE_120: "Ensure that Application Gateway enables WAF"
	FAILED for resource: azurerm_application_gateway.network
	File: /terraform\azurerm\application\application_gateway.tf:4-57
	Guide: https://docs.bridgecrew.io/docs/ensure-that-application-gateway-enables-waf

		4  | resource "azurerm_application_gateway" "network" {
		5  |   name                = "example-apigateway"
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   location            = azurerm_resource_group.example.location
		8  |
		9  |   sku {
		10 |     name     = "Standard_Small"
		11 |     tier     = "Standard"
		12 |     capacity = 2
		13 |   }
		14 |
		15 |   gateway_ip_configuration {
		16 |     name      = "my-gateway-ip-configuration"
		17 |     subnet_id = azurerm_subnet.frontend.id
		18 |   }
		19 |
		20 |   frontend_port {
		21 |     name = local.frontend_port_name
		22 |     port = 80
		23 |   }
		24 |
		25 |   frontend_ip_configuration {
		26 |     name                 = local.frontend_ip_configuration_name
		27 |     public_ip_address_id = azurerm_public_ip.example.id
		28 |   }
		29 |
		30 |   backend_address_pool {
		31 |     name = local.backend_address_pool_name
		32 |   }
		33 |
		34 |   backend_http_settings {
		35 |     name                  = local.http_setting_name
		36 |     cookie_based_affinity = "Disabled"
		37 |     path                  = "/path1/"
		38 |     port                  = 80
		39 |     protocol              = "Http"
		40 |     request_timeout       = 60
		41 |   }
		42 |
		43 |   http_listener {
		44 |     name                           = local.listener_name
		45 |     frontend_ip_configuration_name = local.frontend_ip_configuration_name
		46 |     frontend_port_name             = local.frontend_port_name
		47 |     protocol                       = "Http"
		48 |   }
		49 |
		50 |   request_routing_rule {
		51 |     name                       = local.request_routing_rule_name
		52 |     rule_type                  = "Basic"
		53 |     http_listener_name         = local.listener_name
		54 |     backend_address_pool_name  = local.backend_address_pool_name
		55 |     backend_http_settings_name = local.http_setting_name
		56 |   }
		57 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_57: "Ensure that CORS disallows every resource to access app services"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-app-services

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_83: "Ensure that 'Java version' is the latest, if used to run the web app"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-java-version-is-the-latest-if-used-to-run-the-web-app

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_15: "Ensure web app is using the latest version of TLS encryption"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_6

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_81: "Ensure that 'PHP version' is the latest, if used to run the web app"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-php-version-is-the-latest-if-used-to-run-the-web-app

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_82: "Ensure that 'Python version' is the latest, if used to run the web app"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-python-version-is-the-latest-if-used-to-run-the-web-app

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_72: "Ensure that remote debugging is not enabled for app services"
	FAILED for resource: azurerm_app_service.fail
	File: /terraform\azurerm\appservice\app_service.tf:36-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-remote-debugging-is-not-enabled-for-app-services

		36 | resource "azurerm_app_service" "fail" {
		37 |   name                     = "example-app-service"
		38 |   location                 = azurerm_resource_group.example.location
		39 |   resource_group_name      = azurerm_resource_group.example.name
		40 |   app_service_plan_id      = azurerm_app_service_plan.example.id
		41 |   remote_debugging_enabled = true
		42 |   site_config {
		43 |     python_version           = "2.7"
		44 |     php_version              = "7.1"
		45 |     min_tls_version          = "1.0"
		46 |     java_version             = "7.0"
		47 |     dotnet_framework_version = "v4.0"
		48 |     cors {
		49 |       allowed_origins = ["*"]
		50 |     }
		51 |   }
		52 |
		53 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_ftps_enforce_disabled.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     ftps_state               = "AllAllowed"
		13 |   }
		14 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_http2_disabled.tf:3-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   app_settings = {
		10 |     "SOME_KEY" = "some-value"
		11 |   }
		12 |
		13 |   connection_string {
		14 |     name  = "Database"
		15 |     type  = "SQLServer"
		16 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		17 |   }
		18 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\app_service_managed_identity_disabled.tf:4-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		4  | resource "azurerm_app_service" "positive1" {
		5  |   name                = "example-app-service"
		6  |   location            = azurerm_resource_group.example.location
		7  |   resource_group_name = azurerm_resource_group.example.name
		8  |   app_service_plan_id = azurerm_app_service_plan.example.id
		9  |
		10 |   site_config {
		11 |     dotnet_framework_version = "v4.0"
		12 |     scm_type                 = "LocalGit"
		13 |   }
		14 |
		15 |   app_settings = {
		16 |     "SOME_KEY" = "some-value"
		17 |   }
		18 |
		19 |   auth_settings = {
		20 |     enabled = true
		21 |   }
		22 |
		23 |   connection_string {
		24 |     name  = "Database"
		25 |     type  = "SQLServer"
		26 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		27 |   }
		28 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.positive1
	File: /terraform\azurerm\appservice\azure_app_service_client_certificate_disabled.tf:3-23
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		3  | resource "azurerm_app_service" "positive1" {
		4  |   name                = "example-app-service"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   app_service_plan_id = azurerm_app_service_plan.example.id
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |   }
		13 |
		14 |   app_settings = {
		15 |     SOME_KEY = "some-value"
		16 |   }
		17 |
		18 |   connection_string {
		19 |     name  = "Database"
		20 |     type  = "SQLServer"
		21 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		22 |   }
		23 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.example2
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:17-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		17 | resource "azurerm_app_service" "example2" {
		18 |   name                = "example-app-service"
		19 |   location            = azurerm_resource_group.example.location
		20 |   resource_group_name = azurerm_resource_group.example.name
		21 |   app_service_plan_id = azurerm_app_service_plan.example.id
		22 |
		23 |   site_config {
		24 |     dotnet_framework_version = "v4.0"
		25 |     scm_type                 = "LocalGit"
		26 |   }
		27 |
		28 |   https_only = false
		29 |
		30 |   connection_string {
		31 |     name  = "Database"
		32 |     type  = "SQLServer"
		33 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		34 |   }
		35 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.example3
	File: /terraform\azurerm\appservice\web_app_accepting_traffic_other_than_https.tf:37-53
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		37 | resource "azurerm_app_service" "example3" {
		38 |   name                = "example-app-service"
		39 |   location            = azurerm_resource_group.example.location
		40 |   resource_group_name = azurerm_resource_group.example.name
		41 |   app_service_plan_id = azurerm_app_service_plan.example.id
		42 |
		43 |   site_config {
		44 |     dotnet_framework_version = "v4.0"
		45 |     scm_type                 = "LocalGit"
		46 |   }
		47 |
		48 |   connection_string {
		49 |     name  = "Database"
		50 |     type  = "SQLServer"
		51 |     value = "Server=some-server.mydomain.com;Integrated Security=SSPI"
		52 |   }
		53 | }


Check: CKV_AZURE_39: "Ensure that no custom subscription owner roles are created"
	FAILED for resource: azurerm_role_definition.example
	File: /terraform\azurerm\authorization\azurerm_role_definition.tf:9-22
	Guide: https://docs.bridgecrew.io/docs/do-not-create-custom-subscription-owner-roles

		9  | resource "azurerm_role_definition" "example" {
		10 |   name        = "my-custom-role"
		11 |   scope       = data.azurerm_subscription.primary.id
		12 |   description = "This is a custom role created via Terraform"
		13 |
		14 |   permissions {
		15 |     actions     = ["*"]
		16 |     not_actions = []
		17 |   }
		18 |
		19 |   assignable_scopes = [
		20 |     "/"
		21 |   ]
		22 | }


Check: CKV_AZURE_73: "Ensure that Automation account variables are encrypted"
	FAILED for resource: azurerm_automation_variable_string.example
	File: /terraform\azurerm\automation\AutomationEncrypted.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-automation-account-variables-are-encrypted

		4  | resource "azurerm_automation_variable_string" "example" {
		5  |   name                    = "tfex-example-var"
		6  |   resource_group_name     = azurerm_resource_group.example.name
		7  |   automation_account_name = azurerm_automation_account.example.name
		8  |   value                   = "Hello, Terraform Basic Test."
		9  |   encrypted               = false
		10 | }


Check: CKV_AZURE_76: "Ensure that Azure Batch account uses key vault to encrypt data"
	FAILED for resource: azurerm_batch_account.example
	File: /terraform\azurerm\batch\BatchAccountUsesKeyVaultEncryption.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-batch-account-uses-key-vault-to-encrypt-data

		4  | resource "azurerm_batch_account" "example" {
		5  |   name                 = "testbatchaccount"
		6  |   resource_group_name  = azurerm_resource_group.example.name
		7  |   location             = azurerm_resource_group.example.location
		8  |   pool_allocation_mode = "BatchService"
		9  |   storage_account_id   = azurerm_storage_account.example.id
		10 | }


Check: CKV_AZURE_50: "Ensure Virtual Machine Extensions are not Installed"
	FAILED for resource: azurerm_linux_virtual_machine.bad_linux_example
	File: /terraform\azurerm\compute\linux_virtual_machine.tf:9-22
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_14

		9  | resource "azurerm_linux_virtual_machine" "bad_linux_example" {
		10 |   name                            = "bad-linux-machine"
		11 |   resource_group_name             = azurerm_resource_group.example.name
		12 |   location                        = azurerm_resource_group.example.location
		13 |   size                            = "Standard_F2"
		14 |   admin_username                  = "adminuser"
		15 |   admin_password                  = "somePassword"
		16 |   disable_password_authentication = false
		17 |   network_interface_ids           = [azurerm_network_interface.main.id]
		18 |   os_disk {
		19 |     storage_account_type = "Premium_LRS"
		20 |     caching              = "None"
		21 |   }
		22 | }


Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_linux_virtual_machine.bad_linux_example
	File: /terraform\azurerm\compute\linux_virtual_machine.tf:9-22
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

		9  | resource "azurerm_linux_virtual_machine" "bad_linux_example" {
		10 |   name                            = "bad-linux-machine"
		11 |   resource_group_name             = azurerm_resource_group.example.name
		12 |   location                        = azurerm_resource_group.example.location
		13 |   size                            = "Standard_F2"
		14 |   admin_username                  = "adminuser"
		15 |   admin_password                  = "somePassword"
		16 |   disable_password_authentication = false
		17 |   network_interface_ids           = [azurerm_network_interface.main.id]
		18 |   os_disk {
		19 |     storage_account_type = "Premium_LRS"
		20 |     caching              = "None"
		21 |   }
		22 | }


Check: CKV_AZURE_2: "Ensure Azure managed disk has encryption enabled"
	FAILED for resource: azurerm_managed_disk.fail
	File: /terraform\azurerm\compute\managed_disk.tf:6-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_1

		6  | resource "azurerm_managed_disk" "fail" {
		7  |   encryption_settings {
		8  |     enabled = false
		9  |   }
		10 |   name                 = "Warez"
		11 |   storage_account_type = "Standard_LRS"
		12 |   location             = "uksouth"
		13 |   create_option        = "Empty"
		14 |   resource_group_name  = azurerm_resource_group.example.name
		15 | }


Check: CKV_AZURE_93: "Ensure that managed disks use a specific set of disk encryption sets for the customer-managed key encryption"
	FAILED for resource: azurerm_managed_disk.fail
	File: /terraform\azurerm\compute\managed_disk.tf:6-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-disks-use-a-specific-set-of-disk-encryption-sets-for-the-customer-managed-key-encryption

		6  | resource "azurerm_managed_disk" "fail" {
		7  |   encryption_settings {
		8  |     enabled = false
		9  |   }
		10 |   name                 = "Warez"
		11 |   storage_account_type = "Standard_LRS"
		12 |   location             = "uksouth"
		13 |   create_option        = "Empty"
		14 |   resource_group_name  = azurerm_resource_group.example.name
		15 | }


Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\compute\virtual_machine.tf:12-35
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

		12 | resource "azurerm_virtual_machine" "fail" {
		13 |   name                  = "fail"
		14 |   location              = "uksouth"
		15 |   network_interface_ids = ["azurerm_network_interface.main.id"]
		16 |   vm_size               = ""
		17 |   resource_group_name   = azurerm_resource_group.example.name
		18 |
		19 |   os_profile_linux_config {
		20 |     disable_password_authentication = false
		21 |
		22 |   }
		23 |
		24 |   os_profile {
		25 |     computer_name  = "HAL"
		26 |     admin_username = "DAVE"
		27 |     custom_data    = <<EOF
		28 | export DATABASE_PASSWORD=\"SomeSortOfPassword\"
		29 | EOF
		30 |   }
		31 |   storage_os_disk {
		32 |     name          = "toxic"
		33 |     create_option = "empty"
		34 |   }
		35 | }


Check: CKV_AZURE_98: "Ensure that Azure Container group is deployed into virtual network"
	FAILED for resource: azurerm_container_group.example
	File: /terraform\azurerm\container\ContainerGroupDeployedIntoVirtualNetwork.tf:3-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-container-container-group-is-deployed-into-virtual-network

		3  | resource "azurerm_container_group" "example" {
		4  |   name                = "example-continst"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |   ip_address_type     = "public"
		8  |   dns_name_label      = "aci-label"
		9  |   os_type             = "Linux"
		10 |
		11 |   container {
		12 |     name   = "hello-world"
		13 |     image  = "microsoft/aci-helloworld:latest"
		14 |     cpu    = "0.5"
		15 |     memory = "1.5"
		16 |
		17 |     ports {
		18 |       port     = 443
		19 |       protocol = "TCP"
		20 |     }
		21 |   }
		22 |
		23 |   container {
		24 |     name   = "sidecar"
		25 |     image  = "microsoft/aci-tutorial-sidecar"
		26 |     cpu    = "0.5"
		27 |     memory = "1.5"
		28 |   }
		29 | }


Check: CKV_AZURE_137: "Ensure ACR admin account is disabled"
	FAILED for resource: azurerm_container_registry.positive2
	File: /terraform\azurerm\container\admin_user_enabled_for_container_registry.tf:6-13

		6  | resource "azurerm_container_registry" "positive2" {
		7  |   name                     = "containerRegistry1"
		8  |   resource_group_name      = azurerm_resource_group.rg.name
		9  |   location                 = azurerm_resource_group.rg.location
		10 |   sku                      = "Premium"
		11 |   admin_enabled            = true
		12 |   georeplication_locations = ["East US", "West Europe"]
		13 | }


Check: CKV_AZURE_139: "Ensure ACR set to disable public networking"
	FAILED for resource: azurerm_container_registry.positive2
	File: /terraform\azurerm\container\admin_user_enabled_for_container_registry.tf:6-13

		6  | resource "azurerm_container_registry" "positive2" {
		7  |   name                     = "containerRegistry1"
		8  |   resource_group_name      = azurerm_resource_group.rg.name
		9  |   location                 = azurerm_resource_group.rg.location
		10 |   sku                      = "Premium"
		11 |   admin_enabled            = true
		12 |   georeplication_locations = ["East US", "West Europe"]
		13 | }


Check: CKV_AZURE_139: "Ensure ACR set to disable public networking"
	FAILED for resource: azurerm_container_registry.acr
	File: /terraform\azurerm\container\azure_container_registry_with_no_locks.tf:1-7

		1 | resource "azurerm_container_registry" "acr" {
		2 |   name                = "containerRegistry1"
		3 |   resource_group_name = azurerm_resource_group.rg.name
		4 |   location            = azurerm_resource_group.rg.location
		5 |   sku                 = "Standard"
		6 |   admin_enabled       = false
		7 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail
	File: /terraform\azurerm\container\configured-network-policy.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		3 | resource "azurerm_kubernetes_cluster" "fail" {
		4 |   network_profile {
		5 |   }
		6 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail_limit
	File: /terraform\azurerm\container\limit-authorized-ips.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		3 | resource "azurerm_kubernetes_cluster" "fail_limit" {
		4 |
		5 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail_log
	File: /terraform\azurerm\container\logging.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		2 | resource "azurerm_kubernetes_cluster" "fail_log" {
		3 |   addon_profile {}
		4 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.fail_rbac
	File: /terraform\azurerm\container\use-rbac-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		2 | resource "azurerm_kubernetes_cluster" "fail_rbac" {
		3 |   role_based_access_control {
		4 |     enabled = false
		5 |   }
		6 | }


Check: CKV_AZURE_99: "Ensure Cosmos DB accounts have restricted access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBAccountsRestrictedAccess.tf:2-39
	Guide: https://docs.bridgecrew.io/docs/ensure-cosmos-db-accounts-have-restricted-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                              = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location                          = azurerm_resource_group.rg.location
		5  |   resource_group_name               = azurerm_resource_group.rg.name
		6  |   offer_type                        = "Standard"
		7  |   kind                              = "GlobalDocumentDB"
		8  |   is_virtual_network_filter_enabled = true
		9  |
		10 |   enable_automatic_failover = true
		11 |
		12 |   capabilities {
		13 |     name = "EnableAggregationPipeline"
		14 |   }
		15 |
		16 |   capabilities {
		17 |     name = "mongoEnableDocLevelTTL"
		18 |   }
		19 |
		20 |   capabilities {
		21 |     name = "MongoDBv3.4"
		22 |   }
		23 |
		24 |   consistency_policy {
		25 |     consistency_level       = "BoundedStaleness"
		26 |     max_interval_in_seconds = 10
		27 |     max_staleness_prefix    = 200
		28 |   }
		29 |
		30 |   geo_location {
		31 |     location          = var.failover_location
		32 |     failover_priority = 1
		33 |   }
		34 |
		35 |   geo_location {
		36 |     location          = azurerm_resource_group.rg.location
		37 |     failover_priority = 0
		38 |   }
		39 | }


Check: CKV_AZURE_132: "Ensure cosmosdb does not allow privileged escalation by restricting management plane changes"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBAccountsRestrictedAccess.tf:2-39
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_4

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                              = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location                          = azurerm_resource_group.rg.location
		5  |   resource_group_name               = azurerm_resource_group.rg.name
		6  |   offer_type                        = "Standard"
		7  |   kind                              = "GlobalDocumentDB"
		8  |   is_virtual_network_filter_enabled = true
		9  |
		10 |   enable_automatic_failover = true
		11 |
		12 |   capabilities {
		13 |     name = "EnableAggregationPipeline"
		14 |   }
		15 |
		16 |   capabilities {
		17 |     name = "mongoEnableDocLevelTTL"
		18 |   }
		19 |
		20 |   capabilities {
		21 |     name = "MongoDBv3.4"
		22 |   }
		23 |
		24 |   consistency_policy {
		25 |     consistency_level       = "BoundedStaleness"
		26 |     max_interval_in_seconds = 10
		27 |     max_staleness_prefix    = 200
		28 |   }
		29 |
		30 |   geo_location {
		31 |     location          = var.failover_location
		32 |     failover_priority = 1
		33 |   }
		34 |
		35 |   geo_location {
		36 |     location          = azurerm_resource_group.rg.location
		37 |     failover_priority = 0
		38 |   }
		39 | }


Check: CKV_AZURE_101: "Ensure that Azure Cosmos DB disables public network access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBAccountsRestrictedAccess.tf:2-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cosmos-db-disables-public-network-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                              = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location                          = azurerm_resource_group.rg.location
		5  |   resource_group_name               = azurerm_resource_group.rg.name
		6  |   offer_type                        = "Standard"
		7  |   kind                              = "GlobalDocumentDB"
		8  |   is_virtual_network_filter_enabled = true
		9  |
		10 |   enable_automatic_failover = true
		11 |
		12 |   capabilities {
		13 |     name = "EnableAggregationPipeline"
		14 |   }
		15 |
		16 |   capabilities {
		17 |     name = "mongoEnableDocLevelTTL"
		18 |   }
		19 |
		20 |   capabilities {
		21 |     name = "MongoDBv3.4"
		22 |   }
		23 |
		24 |   consistency_policy {
		25 |     consistency_level       = "BoundedStaleness"
		26 |     max_interval_in_seconds = 10
		27 |     max_staleness_prefix    = 200
		28 |   }
		29 |
		30 |   geo_location {
		31 |     location          = var.failover_location
		32 |     failover_priority = 1
		33 |   }
		34 |
		35 |   geo_location {
		36 |     location          = azurerm_resource_group.rg.location
		37 |     failover_priority = 0
		38 |   }
		39 | }


Check: CKV_AZURE_100: "Ensure that Cosmos DB accounts have customer-managed keys to encrypt data at rest"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBAccountsRestrictedAccess.tf:2-39
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cosmos-db-accounts-have-customer-managed-keys-to-encrypt-data-at-rest

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                              = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location                          = azurerm_resource_group.rg.location
		5  |   resource_group_name               = azurerm_resource_group.rg.name
		6  |   offer_type                        = "Standard"
		7  |   kind                              = "GlobalDocumentDB"
		8  |   is_virtual_network_filter_enabled = true
		9  |
		10 |   enable_automatic_failover = true
		11 |
		12 |   capabilities {
		13 |     name = "EnableAggregationPipeline"
		14 |   }
		15 |
		16 |   capabilities {
		17 |     name = "mongoEnableDocLevelTTL"
		18 |   }
		19 |
		20 |   capabilities {
		21 |     name = "MongoDBv3.4"
		22 |   }
		23 |
		24 |   consistency_policy {
		25 |     consistency_level       = "BoundedStaleness"
		26 |     max_interval_in_seconds = 10
		27 |     max_staleness_prefix    = 200
		28 |   }
		29 |
		30 |   geo_location {
		31 |     location          = var.failover_location
		32 |     failover_priority = 1
		33 |   }
		34 |
		35 |   geo_location {
		36 |     location          = azurerm_resource_group.rg.location
		37 |     failover_priority = 0
		38 |   }
		39 | }


Check: CKV_AZURE_140: "Ensure that Local Authentication is disabled on CosmosDB"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBAccountsRestrictedAccess.tf:2-39

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                              = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location                          = azurerm_resource_group.rg.location
		5  |   resource_group_name               = azurerm_resource_group.rg.name
		6  |   offer_type                        = "Standard"
		7  |   kind                              = "GlobalDocumentDB"
		8  |   is_virtual_network_filter_enabled = true
		9  |
		10 |   enable_automatic_failover = true
		11 |
		12 |   capabilities {
		13 |     name = "EnableAggregationPipeline"
		14 |   }
		15 |
		16 |   capabilities {
		17 |     name = "mongoEnableDocLevelTTL"
		18 |   }
		19 |
		20 |   capabilities {
		21 |     name = "MongoDBv3.4"
		22 |   }
		23 |
		24 |   consistency_policy {
		25 |     consistency_level       = "BoundedStaleness"
		26 |     max_interval_in_seconds = 10
		27 |     max_staleness_prefix    = 200
		28 |   }
		29 |
		30 |   geo_location {
		31 |     location          = var.failover_location
		32 |     failover_priority = 1
		33 |   }
		34 |
		35 |   geo_location {
		36 |     location          = azurerm_resource_group.rg.location
		37 |     failover_priority = 0
		38 |   }
		39 | }


Check: CKV_AZURE_99: "Ensure Cosmos DB accounts have restricted access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisableAccessKeyWrite.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-cosmos-db-accounts-have-restricted-access

		2 | resource "azurerm_cosmosdb_account" "db" {
		3 |   name     = "tfex-cosmos-db-${random_integer.ri.result}"
		4 |   location = azurerm_resource_group.rg.location
		5 | }


Check: CKV_AZURE_132: "Ensure cosmosdb does not allow privileged escalation by restricting management plane changes"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisableAccessKeyWrite.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_4

		2 | resource "azurerm_cosmosdb_account" "db" {
		3 |   name     = "tfex-cosmos-db-${random_integer.ri.result}"
		4 |   location = azurerm_resource_group.rg.location
		5 | }


Check: CKV_AZURE_101: "Ensure that Azure Cosmos DB disables public network access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisableAccessKeyWrite.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cosmos-db-disables-public-network-access

		2 | resource "azurerm_cosmosdb_account" "db" {
		3 |   name     = "tfex-cosmos-db-${random_integer.ri.result}"
		4 |   location = azurerm_resource_group.rg.location
		5 | }


Check: CKV_AZURE_100: "Ensure that Cosmos DB accounts have customer-managed keys to encrypt data at rest"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisableAccessKeyWrite.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cosmos-db-accounts-have-customer-managed-keys-to-encrypt-data-at-rest

		2 | resource "azurerm_cosmosdb_account" "db" {
		3 |   name     = "tfex-cosmos-db-${random_integer.ri.result}"
		4 |   location = azurerm_resource_group.rg.location
		5 | }


Check: CKV_AZURE_140: "Ensure that Local Authentication is disabled on CosmosDB"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisableAccessKeyWrite.tf:2-5

		2 | resource "azurerm_cosmosdb_account" "db" {
		3 |   name     = "tfex-cosmos-db-${random_integer.ri.result}"
		4 |   location = azurerm_resource_group.rg.location
		5 | }


Check: CKV_AZURE_99: "Ensure Cosmos DB accounts have restricted access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisablesPublicNetwork.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-cosmos-db-accounts-have-restricted-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_132: "Ensure cosmosdb does not allow privileged escalation by restricting management plane changes"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisablesPublicNetwork.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_4

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_101: "Ensure that Azure Cosmos DB disables public network access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisablesPublicNetwork.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cosmos-db-disables-public-network-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_100: "Ensure that Cosmos DB accounts have customer-managed keys to encrypt data at rest"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisablesPublicNetwork.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cosmos-db-accounts-have-customer-managed-keys-to-encrypt-data-at-rest

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_140: "Ensure that Local Authentication is disabled on CosmosDB"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBDisablesPublicNetwork.tf:2-38

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_99: "Ensure Cosmos DB accounts have restricted access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBHaveCMK.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-cosmos-db-accounts-have-restricted-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_132: "Ensure cosmosdb does not allow privileged escalation by restricting management plane changes"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBHaveCMK.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_4

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_101: "Ensure that Azure Cosmos DB disables public network access"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBHaveCMK.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cosmos-db-disables-public-network-access

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_100: "Ensure that Cosmos DB accounts have customer-managed keys to encrypt data at rest"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBHaveCMK.tf:2-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cosmos-db-accounts-have-customer-managed-keys-to-encrypt-data-at-rest

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_140: "Ensure that Local Authentication is disabled on CosmosDB"
	FAILED for resource: azurerm_cosmosdb_account.db
	File: /terraform\azurerm\cosmosdb\CosmosDBHaveCMK.tf:2-38

		2  | resource "azurerm_cosmosdb_account" "db" {
		3  |   name                = "tfex-cosmos-db-${random_integer.ri.result}"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |   offer_type          = "Standard"
		7  |   kind                = "GlobalDocumentDB"
		8  |
		9  |   enable_automatic_failover = true
		10 |
		11 |   capabilities {
		12 |     name = "EnableAggregationPipeline"
		13 |   }
		14 |
		15 |   capabilities {
		16 |     name = "mongoEnableDocLevelTTL"
		17 |   }
		18 |
		19 |   capabilities {
		20 |     name = "MongoDBv3.4"
		21 |   }
		22 |
		23 |   consistency_policy {
		24 |     consistency_level       = "BoundedStaleness"
		25 |     max_interval_in_seconds = 10
		26 |     max_staleness_prefix    = 200
		27 |   }
		28 |
		29 |   geo_location {
		30 |     location          = var.failover_location
		31 |     failover_priority = 1
		32 |   }
		33 |
		34 |   geo_location {
		35 |     location          = azurerm_resource_group.rg.location
		36 |     failover_priority = 0
		37 |   }
		38 | }


Check: CKV_AZURE_99: "Ensure Cosmos DB accounts have restricted access"
	FAILED for resource: azurerm_cosmosdb_account.positive1
	File: /terraform\azurerm\cosmosdb\cosmosdb_account_ip_range_filter_not_set.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-cosmos-db-accounts-have-restricted-access

		3 | resource "azurerm_cosmosdb_account" "positive1" {
		4 |   name                              = "example"
		5 |   is_virtual_network_filter_enabled = true
		6 | }


Check: CKV_AZURE_132: "Ensure cosmosdb does not allow privileged escalation by restricting management plane changes"
	FAILED for resource: azurerm_cosmosdb_account.positive1
	File: /terraform\azurerm\cosmosdb\cosmosdb_account_ip_range_filter_not_set.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_4

		3 | resource "azurerm_cosmosdb_account" "positive1" {
		4 |   name                              = "example"
		5 |   is_virtual_network_filter_enabled = true
		6 | }


Check: CKV_AZURE_101: "Ensure that Azure Cosmos DB disables public network access"
	FAILED for resource: azurerm_cosmosdb_account.positive1
	File: /terraform\azurerm\cosmosdb\cosmosdb_account_ip_range_filter_not_set.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cosmos-db-disables-public-network-access

		3 | resource "azurerm_cosmosdb_account" "positive1" {
		4 |   name                              = "example"
		5 |   is_virtual_network_filter_enabled = true
		6 | }


Check: CKV_AZURE_100: "Ensure that Cosmos DB accounts have customer-managed keys to encrypt data at rest"
	FAILED for resource: azurerm_cosmosdb_account.positive1
	File: /terraform\azurerm\cosmosdb\cosmosdb_account_ip_range_filter_not_set.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cosmos-db-accounts-have-customer-managed-keys-to-encrypt-data-at-rest

		3 | resource "azurerm_cosmosdb_account" "positive1" {
		4 |   name                              = "example"
		5 |   is_virtual_network_filter_enabled = true
		6 | }


Check: CKV_AZURE_140: "Ensure that Local Authentication is disabled on CosmosDB"
	FAILED for resource: azurerm_cosmosdb_account.positive1
	File: /terraform\azurerm\cosmosdb\cosmosdb_account_ip_range_filter_not_set.tf:3-6

		3 | resource "azurerm_cosmosdb_account" "positive1" {
		4 |   name                              = "example"
		5 |   is_virtual_network_filter_enabled = true
		6 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		3  | resource "azurerm_sql_server" "fail" {
		4  |   name                         = "mssqlserver"
		5  |   resource_group_name          = azurerm_resource_group.example.name
		6  |   location                     = azurerm_resource_group.example.location
		7  |   version                      = "12.0"
		8  |   administrator_login          = "mradministrator"
		9  |   administrator_login_password = "tfsecRocks"
		10 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\enable-ssl-enforcement.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		2 | resource "azurerm_postgresql_server" "fail" {
		3 |   name = "fail"
		4 |
		5 |   public_network_access_enabled    = false
		6 |   ssl_enforcement_enabled          = false
		7 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		8 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\enable-ssl-enforcement.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		2 | resource "azurerm_postgresql_server" "fail" {
		3 |   name = "fail"
		4 |
		5 |   public_network_access_enabled    = false
		6 |   ssl_enforcement_enabled          = false
		7 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		8 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\enable-ssl-enforcement.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		2 | resource "azurerm_postgresql_server" "fail" {
		3 |   name = "fail"
		4 |
		5 |   public_network_access_enabled    = false
		6 |   ssl_enforcement_enabled          = false
		7 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		8 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\enable-ssl-enforcement.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		2 | resource "azurerm_postgresql_server" "fail" {
		3 |   name = "fail"
		4 |
		5 |   public_network_access_enabled    = false
		6 |   ssl_enforcement_enabled          = false
		7 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		8 | }


Check: CKV_AZURE_96: "Ensure that MySQL server enables infrastructure encryption"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption-1

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_94: "Ensure that My SQL server enables geo-redundant backups"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-my-sql-server-enables-geo-redundant-backups

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_53: "Ensure 'public network access enabled' is set to 'False' for mySQL servers"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-public-network-access-enabled-is-set-to-false-for-mysql-servers

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_90: "Ensure that MySQL server disables public network access"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-mysql-server-disables-public-network-access

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_28: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_9

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_127: "Ensure that My SQL server enables Threat detection policy"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-my-sql-server-enables-threat-detection-policy

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\no-public-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		3 | resource "azurerm_postgresql_server" "fail" {
		4 |   name = "fail"
		5 |
		6 |   public_network_access_enabled    = true
		7 |   ssl_enforcement_enabled          = false
		8 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\no-public-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		3 | resource "azurerm_postgresql_server" "fail" {
		4 |   name = "fail"
		5 |
		6 |   public_network_access_enabled    = true
		7 |   ssl_enforcement_enabled          = false
		8 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\no-public-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		3 | resource "azurerm_postgresql_server" "fail" {
		4 |   name = "fail"
		5 |
		6 |   public_network_access_enabled    = true
		7 |   ssl_enforcement_enabled          = false
		8 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\no-public-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		3 | resource "azurerm_postgresql_server" "fail" {
		4 |   name = "fail"
		5 |
		6 |   public_network_access_enabled    = true
		7 |   ssl_enforcement_enabled          = false
		8 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\no-public-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		3 | resource "azurerm_postgresql_server" "fail" {
		4 |   name = "fail"
		5 |
		6 |   public_network_access_enabled    = true
		7 |   ssl_enforcement_enabled          = false
		8 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9 | }


Check: CKV_AZURE_11: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
	FAILED for resource: azurerm_sql_firewall_rule.fail
	File: /terraform\azurerm\database\no-public-firewall-access.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_4

		3 | resource "azurerm_sql_firewall_rule" "fail" {
		4 |   name                = "bad_rule"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   server_name         = azurerm_sql_server.example.name
		7 |   start_ip_address    = "0.0.0.0"
		8 |   end_ip_address      = "255.255.255.255"
		9 | }


Check: CKV_AZURE_11: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
	FAILED for resource: azurerm_postgresql_firewall_rule.fail
	File: /terraform\azurerm\database\no-public-firewall-access.tf:11-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_4

		11 | resource "azurerm_postgresql_firewall_rule" "fail" {
		12 |   name                = "fail"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |   server_name         = azurerm_postgresql_server.example.name
		15 |   start_ip_address    = "0.0.0.0"
		16 |   end_ip_address      = "255.255.255.255"
		17 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-checkpoints.tf:7-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		7  | resource "azurerm_postgresql_server" "example" {
		8  |   name                = "example-psqlserver"
		9  |   location            = azurerm_resource_group.example.location
		10 |   resource_group_name = azurerm_resource_group.example.name
		11 |
		12 |   administrator_login          = "psqladminun"
		13 |   administrator_login_password = "H@Sh1CoR3!"
		14 |
		15 |   sku_name   = "GP_Gen5_4"
		16 |   version    = "9.6"
		17 |   storage_mb = 640000
		18 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-checkpoints.tf:7-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		7  | resource "azurerm_postgresql_server" "example" {
		8  |   name                = "example-psqlserver"
		9  |   location            = azurerm_resource_group.example.location
		10 |   resource_group_name = azurerm_resource_group.example.name
		11 |
		12 |   administrator_login          = "psqladminun"
		13 |   administrator_login_password = "H@Sh1CoR3!"
		14 |
		15 |   sku_name   = "GP_Gen5_4"
		16 |   version    = "9.6"
		17 |   storage_mb = 640000
		18 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-checkpoints.tf:7-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		7  | resource "azurerm_postgresql_server" "example" {
		8  |   name                = "example-psqlserver"
		9  |   location            = azurerm_resource_group.example.location
		10 |   resource_group_name = azurerm_resource_group.example.name
		11 |
		12 |   administrator_login          = "psqladminun"
		13 |   administrator_login_password = "H@Sh1CoR3!"
		14 |
		15 |   sku_name   = "GP_Gen5_4"
		16 |   version    = "9.6"
		17 |   storage_mb = 640000
		18 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-checkpoints.tf:7-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		7  | resource "azurerm_postgresql_server" "example" {
		8  |   name                = "example-psqlserver"
		9  |   location            = azurerm_resource_group.example.location
		10 |   resource_group_name = azurerm_resource_group.example.name
		11 |
		12 |   administrator_login          = "psqladminun"
		13 |   administrator_login_password = "H@Sh1CoR3!"
		14 |
		15 |   sku_name   = "GP_Gen5_4"
		16 |   version    = "9.6"
		17 |   storage_mb = 640000
		18 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-checkpoints.tf:7-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		7  | resource "azurerm_postgresql_server" "example" {
		8  |   name                = "example-psqlserver"
		9  |   location            = azurerm_resource_group.example.location
		10 |   resource_group_name = azurerm_resource_group.example.name
		11 |
		12 |   administrator_login          = "psqladminun"
		13 |   administrator_login_password = "H@Sh1CoR3!"
		14 |
		15 |   sku_name   = "GP_Gen5_4"
		16 |   version    = "9.6"
		17 |   storage_mb = 640000
		18 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connection-throttling.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connection-throttling.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connection-throttling.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connection-throttling.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connection-throttling.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connections.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connections.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connections.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connections.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\database\postgres-configuration-log-connections.tf:8-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		8  | resource "azurerm_postgresql_server" "example" {
		9  |   name                = "example-psqlserver"
		10 |   location            = azurerm_resource_group.example.location
		11 |   resource_group_name = azurerm_resource_group.example.name
		12 |
		13 |   administrator_login          = "psqladminun"
		14 |   administrator_login_password = "H@Sh1CoR3!"
		15 |
		16 |   sku_name   = "GP_Gen5_4"
		17 |   version    = "9.6"
		18 |   storage_mb = 640000
		19 | }


Check: CKV_AZURE_46: "Specifies a retention period of less than 90 days."
	FAILED for resource: azurerm_mssql_database_extended_auditing_policy.fail
	File: /terraform\azurerm\database\retention-period-set.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_12

		3 | resource "azurerm_mssql_database_extended_auditing_policy" "fail" {
		4 |   database_id                             = azurerm_mssql_database.example.id
		5 |   storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		6 |   storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		7 |   storage_account_access_key_is_secondary = false
		8 |   retention_in_days                       = 6
		9 | }


Check: CKV_AZURE_52: "Ensure MSSQL is using the latest version of TLS encryption"
	FAILED for resource: azurerm_mssql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-mssql-is-using-the-latest-version-of-tls-encryption

		2  | resource "azurerm_mssql_server" "fail" {
		3  |   name                         = "mssqlserver"
		4  |   resource_group_name          = azurerm_resource_group.example.name
		5  |   location                     = azurerm_resource_group.example.location
		6  |   version                      = "12.0"
		7  |   administrator_login          = "missadministrator"
		8  |   administrator_login_password = "thisIsKat11"
		9  |   minimum_tls_version          = "1.1"
		10 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_mssql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		2  | resource "azurerm_mssql_server" "fail" {
		3  |   name                         = "mssqlserver"
		4  |   resource_group_name          = azurerm_resource_group.example.name
		5  |   location                     = azurerm_resource_group.example.location
		6  |   version                      = "12.0"
		7  |   administrator_login          = "missadministrator"
		8  |   administrator_login_password = "thisIsKat11"
		9  |   minimum_tls_version          = "1.1"
		10 | }


Check: CKV_AZURE_113: "Ensure that SQL server disables public network access"
	FAILED for resource: azurerm_mssql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-server-disables-public-network-access

		2  | resource "azurerm_mssql_server" "fail" {
		3  |   name                         = "mssqlserver"
		4  |   resource_group_name          = azurerm_resource_group.example.name
		5  |   location                     = azurerm_resource_group.example.location
		6  |   version                      = "12.0"
		7  |   administrator_login          = "missadministrator"
		8  |   administrator_login_password = "thisIsKat11"
		9  |   minimum_tls_version          = "1.1"
		10 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:12-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		12 | resource "azurerm_postgresql_server" "fail" {
		13 |   name = "fail"
		14 |
		15 |   public_network_access_enabled    = true
		16 |   ssl_enforcement_enabled          = false
		17 |   ssl_minimal_tls_version_enforced = "TLS1_1"
		18 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:12-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		12 | resource "azurerm_postgresql_server" "fail" {
		13 |   name = "fail"
		14 |
		15 |   public_network_access_enabled    = true
		16 |   ssl_enforcement_enabled          = false
		17 |   ssl_minimal_tls_version_enforced = "TLS1_1"
		18 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:12-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		12 | resource "azurerm_postgresql_server" "fail" {
		13 |   name = "fail"
		14 |
		15 |   public_network_access_enabled    = true
		16 |   ssl_enforcement_enabled          = false
		17 |   ssl_minimal_tls_version_enforced = "TLS1_1"
		18 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:12-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		12 | resource "azurerm_postgresql_server" "fail" {
		13 |   name = "fail"
		14 |
		15 |   public_network_access_enabled    = true
		16 |   ssl_enforcement_enabled          = false
		17 |   ssl_minimal_tls_version_enforced = "TLS1_1"
		18 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:12-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		12 | resource "azurerm_postgresql_server" "fail" {
		13 |   name = "fail"
		14 |
		15 |   public_network_access_enabled    = true
		16 |   ssl_enforcement_enabled          = false
		17 |   ssl_minimal_tls_version_enforced = "TLS1_1"
		18 | }


Check: CKV_AZURE_104: "Ensure that Azure Data factory public network access is disabled"
	FAILED for resource: azurerm_data_factory.example
	File: /terraform\azurerm\datafactory\DataFactoryNoPublicNetworkAccess.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-public-network-access-is-disabled

		2 | resource "azurerm_data_factory" "example" {
		3 |   name                = "example"
		4 |   location            = "azurerm_resource_group.example.location"
		5 |   resource_group_name = "azurerm_resource_group.example.name"
		6 | }


Check: CKV_AZURE_103: "Ensure that Azure Data Factory uses Git repository for source control"
	FAILED for resource: azurerm_data_factory.example
	File: /terraform\azurerm\datafactory\DataFactoryNoPublicNetworkAccess.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-uses-git-repository-for-source-control

		2 | resource "azurerm_data_factory" "example" {
		3 |   name                = "example"
		4 |   location            = "azurerm_resource_group.example.location"
		5 |   resource_group_name = "azurerm_resource_group.example.name"
		6 | }


Check: CKV_AZURE_104: "Ensure that Azure Data factory public network access is disabled"
	FAILED for resource: azurerm_data_factory.fail
	File: /terraform\azurerm\datafactory\azurerm_data_factory.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-public-network-access-is-disabled

		4 | resource "azurerm_data_factory" "fail" {
		5 |   location            = azurerm_resource_group.example.location
		6 |   name                = "example"
		7 |   resource_group_name = azurerm_resource_group.example.name
		8 | }


Check: CKV_AZURE_103: "Ensure that Azure Data Factory uses Git repository for source control"
	FAILED for resource: azurerm_data_factory.fail
	File: /terraform\azurerm\datafactory\azurerm_data_factory.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-uses-git-repository-for-source-control

		4 | resource "azurerm_data_factory" "fail" {
		5 |   location            = azurerm_resource_group.example.location
		6 |   name                = "example"
		7 |   resource_group_name = azurerm_resource_group.example.name
		8 | }


Check: CKV_AZURE_104: "Ensure that Azure Data factory public network access is disabled"
	FAILED for resource: azurerm_data_factory.fail
	File: /terraform\azurerm\datafactory\data_factory.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-public-network-access-is-disabled

		2 | resource "azurerm_data_factory" "fail" {
		3 |   name                = "example"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 | }


Check: CKV_AZURE_103: "Ensure that Azure Data Factory uses Git repository for source control"
	FAILED for resource: azurerm_data_factory.fail
	File: /terraform\azurerm\datafactory\data_factory.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factory-uses-git-repository-for-source-control

		2 | resource "azurerm_data_factory" "fail" {
		3 |   name                = "example"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 | }


Check: CKV_AZURE_105: "Ensure that Data Lake Store accounts enables encryption"
	FAILED for resource: azurerm_data_lake_store.example
	File: /terraform\azurerm\datalake\DataLakeStoreEncryption.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-data-lake-store-accounts-enables-encryption

		2 | resource "azurerm_data_lake_store" "example" {
		3 |   name                = "consumptiondatalake"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |
		7 |   encryption_state = "Disabled"
		8 | }


Check: CKV_AZURE_105: "Ensure that Data Lake Store accounts enables encryption"
	FAILED for resource: azurerm_data_lake_store.fail
	File: /terraform\azurerm\datalake\enable-at-rest-encryption.tf:2-4
	Guide: https://docs.bridgecrew.io/docs/ensure-that-data-lake-store-accounts-enables-encryption

		2 | resource "azurerm_data_lake_store" "fail" {
		3 |   encryption_state = "Disabled"
		4 | }


Check: CKV_AZURE_106: "Ensure that Azure Event Grid Domain public network access is disabled"
	FAILED for resource: azurerm_eventgrid_domain.example
	File: /terraform\azurerm\eventgrid\EventgridDomainNetworkAccess.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-event-grid-domain-public-network-access-is-disabled

		4 | resource "azurerm_eventgrid_domain" "example" {
		5 |   name                = "example-app-service"
		6 |   location            = azurerm_resource_group.example.location
		7 |   resource_group_name = azurerm_resource_group.example.name
		8 | }


Check: CKV_AZURE_123: "Ensure that Azure Front Door uses WAF in "Detection" or "Prevention" modes"
	FAILED for resource: azurerm_frontdoor_firewall_policy.example
	File: /terraform\azurerm\frontdoor\FrontdoorUseWAFMode.tf:2-85
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-front-door-uses-waf-in-detection-or-prevention-modes

		2  | resource "azurerm_frontdoor_firewall_policy" "example" {
		3  |   name                = "example-wafpolicy"
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   location            = azurerm_resource_group.example.location
		6  |
		7  |   custom_rules {
		8  |     name      = "Rule1"
		9  |     priority  = 1
		10 |     rule_type = "MatchRule"
		11 |
		12 |     match_conditions {
		13 |       match_variables {
		14 |         variable_name = "RemoteAddr"
		15 |       }
		16 |
		17 |       operator           = "IPMatch"
		18 |       negation_condition = false
		19 |       match_values       = ["192.168.1.0/24", "10.0.0.0/24"]
		20 |     }
		21 |
		22 |     action = "Block"
		23 |   }
		24 |
		25 |   custom_rules {
		26 |     name      = "Rule2"
		27 |     priority  = 2
		28 |     rule_type = "MatchRule"
		29 |
		30 |     match_conditions {
		31 |       match_variables {
		32 |         variable_name = "RemoteAddr"
		33 |       }
		34 |
		35 |       operator           = "IPMatch"
		36 |       negation_condition = false
		37 |       match_values       = ["192.168.1.0/24"]
		38 |     }
		39 |
		40 |     match_conditions {
		41 |       match_variables {
		42 |         variable_name = "RequestHeaders"
		43 |         selector      = "UserAgent"
		44 |       }
		45 |
		46 |       operator           = "Contains"
		47 |       negation_condition = false
		48 |       match_values       = ["Windows"]
		49 |     }
		50 |
		51 |     action = "Block"
		52 |   }
		53 |
		54 |   policy_settings {
		55 |     enabled                     = false
		56 |     request_body_check          = true
		57 |     file_upload_limit_in_mb     = 100
		58 |     max_request_body_size_in_kb = 128
		59 |   }
		60 |
		61 |   managed_rules {
		62 |     exclusion {
		63 |       match_variable          = "RequestHeaderNames"
		64 |       selector                = "x-company-secret-header"
		65 |       selector_match_operator = "Equals"
		66 |     }
		67 |     exclusion {
		68 |       match_variable          = "RequestCookieNames"
		69 |       selector                = "too-tasty"
		70 |       selector_match_operator = "EndsWith"
		71 |     }
		72 |
		73 |     managed_rule_set {
		74 |       type    = "OWASP"
		75 |       version = "3.1"
		76 |       rule_group_override {
		77 |         rule_group_name = "REQUEST-920-PROTOCOL-ENFORCEMENT"
		78 |         disabled_rules = [
		79 |           "920300",
		80 |           "920440"
		81 |         ]
		82 |       }
		83 |     }
		84 |   }
		85 | }


Check: CKV_AZURE_133: "Ensure Front Door WAF prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell"
	FAILED for resource: azurerm_frontdoor_firewall_policy.example
	File: /terraform\azurerm\frontdoor\FrontdoorUseWAFMode.tf:2-85
	Guide: https://docs.bridgecrew.io/docs/ensure-front-door-waf-prevents-message-lookup-in-log4j2

		2  | resource "azurerm_frontdoor_firewall_policy" "example" {
		3  |   name                = "example-wafpolicy"
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   location            = azurerm_resource_group.example.location
		6  |
		7  |   custom_rules {
		8  |     name      = "Rule1"
		9  |     priority  = 1
		10 |     rule_type = "MatchRule"
		11 |
		12 |     match_conditions {
		13 |       match_variables {
		14 |         variable_name = "RemoteAddr"
		15 |       }
		16 |
		17 |       operator           = "IPMatch"
		18 |       negation_condition = false
		19 |       match_values       = ["192.168.1.0/24", "10.0.0.0/24"]
		20 |     }
		21 |
		22 |     action = "Block"
		23 |   }
		24 |
		25 |   custom_rules {
		26 |     name      = "Rule2"
		27 |     priority  = 2
		28 |     rule_type = "MatchRule"
		29 |
		30 |     match_conditions {
		31 |       match_variables {
		32 |         variable_name = "RemoteAddr"
		33 |       }
		34 |
		35 |       operator           = "IPMatch"
		36 |       negation_condition = false
		37 |       match_values       = ["192.168.1.0/24"]
		38 |     }
		39 |
		40 |     match_conditions {
		41 |       match_variables {
		42 |         variable_name = "RequestHeaders"
		43 |         selector      = "UserAgent"
		44 |       }
		45 |
		46 |       operator           = "Contains"
		47 |       negation_condition = false
		48 |       match_values       = ["Windows"]
		49 |     }
		50 |
		51 |     action = "Block"
		52 |   }
		53 |
		54 |   policy_settings {
		55 |     enabled                     = false
		56 |     request_body_check          = true
		57 |     file_upload_limit_in_mb     = 100
		58 |     max_request_body_size_in_kb = 128
		59 |   }
		60 |
		61 |   managed_rules {
		62 |     exclusion {
		63 |       match_variable          = "RequestHeaderNames"
		64 |       selector                = "x-company-secret-header"
		65 |       selector_match_operator = "Equals"
		66 |     }
		67 |     exclusion {
		68 |       match_variable          = "RequestCookieNames"
		69 |       selector                = "too-tasty"
		70 |       selector_match_operator = "EndsWith"
		71 |     }
		72 |
		73 |     managed_rule_set {
		74 |       type    = "OWASP"
		75 |       version = "3.1"
		76 |       rule_group_override {
		77 |         rule_group_name = "REQUEST-920-PROTOCOL-ENFORCEMENT"
		78 |         disabled_rules = [
		79 |           "920300",
		80 |           "920440"
		81 |         ]
		82 |       }
		83 |     }
		84 |   }
		85 | }


Check: CKV_AZURE_121: "Ensure that Azure Front Door enables WAF"
	FAILED for resource: azurerm_frontdoor.positive
	File: /terraform\azurerm\frontdoor\azure_front_door_waf_disabled.tf:1-42
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-front-door-enables-waf

		1  | resource "azurerm_frontdoor" "positive" {
		2  |   name                                         = "example-FrontDoor"
		3  |   resource_group_name                          = azurerm_resource_group.example.name
		4  |   enforce_backend_pools_certificate_name_check = false
		5  |
		6  |   routing_rule {
		7  |     name               = "exampleRoutingRule1"
		8  |     accepted_protocols = ["Http", "Https"]
		9  |     patterns_to_match  = ["/*"]
		10 |     frontend_endpoints = ["exampleFrontendEndpoint1"]
		11 |     forwarding_configuration {
		12 |       forwarding_protocol = "MatchRequest"
		13 |       backend_pool_name   = "exampleBackendBing"
		14 |     }
		15 |   }
		16 |
		17 |   backend_pool_load_balancing {
		18 |     name = "exampleLoadBalancingSettings1"
		19 |   }
		20 |
		21 |   backend_pool_health_probe {
		22 |     name = "exampleHealthProbeSetting1"
		23 |   }
		24 |
		25 |   backend_pool {
		26 |     name = "exampleBackendBing"
		27 |     backend {
		28 |       host_header = "www.bing.com"
		29 |       address     = "www.bing.com"
		30 |       http_port   = 80
		31 |       https_port  = 443
		32 |     }
		33 |
		34 |     load_balancing_name = "exampleLoadBalancingSettings1"
		35 |     health_probe_name   = "exampleHealthProbeSetting1"
		36 |   }
		37 |
		38 |   frontend_endpoint {
		39 |     name      = "exampleFrontendEndpoint1"
		40 |     host_name = "example-FrontDoor.azurefd.net"
		41 |   }
		42 | }


Check: CKV_AZURE_121: "Ensure that Azure Front Door enables WAF"
	FAILED for resource: azurerm_frontdoor.example
	File: /terraform\azurerm\frontdoor\frontdoor.tf:2-45
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-front-door-enables-waf

		2  | resource "azurerm_frontdoor" "example" {
		3  |   name                                         = "example-FrontDoor"
		4  |   location                                     = "EastUS2"
		5  |   resource_group_name                          = azurerm_resource_group.example.name
		6  |   enforce_backend_pools_certificate_name_check = false
		7  |
		8  |   routing_rule {
		9  |     name               = "exampleRoutingRule1"
		10 |     accepted_protocols = ["Http", "Https"]
		11 |     patterns_to_match  = ["/*"]
		12 |     frontend_endpoints = ["exampleFrontendEndpoint1"]
		13 |     forwarding_configuration {
		14 |       forwarding_protocol = "MatchRequest"
		15 |       backend_pool_name   = "exampleBackendBing"
		16 |     }
		17 |   }
		18 |
		19 |   backend_pool_load_balancing {
		20 |     name = "exampleLoadBalancingSettings1"
		21 |   }
		22 |
		23 |   backend_pool_health_probe {
		24 |     name = "exampleHealthProbeSetting1"
		25 |   }
		26 |
		27 |   backend_pool {
		28 |     name = "exampleBackendBing"
		29 |     backend {
		30 |       host_header = "www.bing.com"
		31 |       address     = "www.bing.com"
		32 |       http_port   = 80
		33 |       https_port  = 443
		34 |     }
		35 |
		36 |     load_balancing_name = "exampleLoadBalancingSettings1"
		37 |     health_probe_name   = "exampleHealthProbeSetting1"
		38 |   }
		39 |
		40 |   frontend_endpoint {
		41 |     name                              = "exampleFrontendEndpoint1"
		42 |     host_name                         = "example-FrontDoor.azurefd.net"
		43 |     custom_https_provisioning_enabled = false
		44 |   }
		45 | }


Check: CKV_AZURE_62: "Ensure function apps are not accessible from all regions"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppDisallowCORS.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cors-disallows-every-resource-to-access-function-apps

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   site_config {
		10 |     cors {
		11 |       allowed_origins = ["*"]
		12 |     }
		13 |   }
		14 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppDisallowCORS.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   site_config {
		10 |     cors {
		11 |       allowed_origins = ["*"]
		12 |     }
		13 |   }
		14 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppDisallowCORS.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   site_config {
		10 |     cors {
		11 |       allowed_origins = ["*"]
		12 |     }
		13 |   }
		14 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppDisallowCORS.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   site_config {
		10 |     cors {
		11 |       allowed_origins = ["*"]
		12 |     }
		13 |   }
		14 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppHttpVersionLatest.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   os_type                    = "linux"
		10 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppHttpVersionLatest.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   os_type                    = "linux"
		10 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppHttpVersionLatest.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		2  | resource "azurerm_function_app" "example" {
		3  |   name                       = "test-azure-functions"
		4  |   location                   = azurerm_resource_group.example.location
		5  |   resource_group_name        = azurerm_resource_group.example.name
		6  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		7  |   storage_account_name       = azurerm_storage_account.example.name
		8  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		9  |   os_type                    = "linux"
		10 | }


Check: CKV_AZURE_13: "Ensure App Service Authentication is set on Azure App Service"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_2

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_65: "Ensure that App service enables detailed error messages"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/tbdensure-that-app-service-enables-detailed-error-messages

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_80: "Ensure that 'Net Framework' version is the latest, if used as a part of the web app"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-net-framework-version-is-the-latest-if-used-as-a-part-of-the-web-app

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_66: "Ensure that App service enables failed request tracing"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-failed-request-tracing

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_78: "Ensure FTP deployments are disabled"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-ftp-deployments-are-disabled

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_63: "Ensure that App service enables HTTP logging"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-service-enables-http-logging

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_18: "Ensure that 'HTTP Version' is the latest if used to run the web app"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_8

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_14: "Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_5

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_71: "Ensure that Managed identity provider is enabled for app services"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-identity-provider-is-enabled-for-app-services

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_88: "Ensure that app services use Azure Files"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-app-services-use-azure-files

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_17: "Ensure the web app has 'Client Certificates (Incoming client certificates)' set"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_7

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_16: "Ensure that Register with Azure Active Directory is enabled on App Service"
	FAILED for resource: azurerm_app_service.example
	File: /terraform\azurerm\functionapp\FunctionAppsAccessibleOverHttps.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_iam_1

		2 | resource "azurerm_app_service" "example" {
		3 |   name                = "example-app-service"
		4 |   location            = azurerm_resource_group.example.location
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   app_service_plan_id = azurerm_app_service_plan.example.id
		7 |   https_only          = false
		8 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppsEnableAuthentication.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		2 | resource "azurerm_function_app" "example" {
		3 |   name                       = "test-azure-functions"
		4 |   location                   = "azurerm_resource_group.example.location"
		5 |   resource_group_name        = "azurerm_resource_group.example.name"
		6 |   app_service_plan_id        = "azurerm_app_service_plan.example.id"
		7 |   storage_account_name       = "azurerm_storage_account.example.name"
		8 |   storage_account_access_key = "azurerm_storage_account.example.primary_access_key"
		9 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppsEnableAuthentication.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		2 | resource "azurerm_function_app" "example" {
		3 |   name                       = "test-azure-functions"
		4 |   location                   = "azurerm_resource_group.example.location"
		5 |   resource_group_name        = "azurerm_resource_group.example.name"
		6 |   app_service_plan_id        = "azurerm_app_service_plan.example.id"
		7 |   storage_account_name       = "azurerm_storage_account.example.name"
		8 |   storage_account_access_key = "azurerm_storage_account.example.primary_access_key"
		9 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.example
	File: /terraform\azurerm\functionapp\FunctionAppsEnableAuthentication.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		2 | resource "azurerm_function_app" "example" {
		3 |   name                       = "test-azure-functions"
		4 |   location                   = "azurerm_resource_group.example.location"
		5 |   resource_group_name        = "azurerm_resource_group.example.name"
		6 |   app_service_plan_id        = "azurerm_app_service_plan.example.id"
		7 |   storage_account_name       = "azurerm_storage_account.example.name"
		8 |   storage_account_access_key = "azurerm_storage_account.example.primary_access_key"
		9 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\authentication-enabled.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_function_app_plan.example.id
		8 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\authentication-enabled.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_function_app_plan.example.id
		8 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\authentication-enabled.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_function_app_plan.example.id
		8 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enable-http2.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_app_service_plan.example.id
		8 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enable-http2.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_app_service_plan.example.id
		8 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enable-http2.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		3 | resource "azurerm_function_app" "fail" {
		4 |   name                = "example-function-app"
		5 |   location            = azurerm_resource_group.example.location
		6 |   resource_group_name = azurerm_resource_group.example.name
		7 |   app_service_plan_id = azurerm_app_service_plan.example.id
		8 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enforce-https.tf:15-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		15 | resource "azurerm_function_app" "fail" {
		16 |   name                       = "test-azure-functions"
		17 |   location                   = azurerm_resource_group.example.location
		18 |   resource_group_name        = azurerm_resource_group.example.name
		19 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		20 |   storage_account_name       = azurerm_storage_account.example.name
		21 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		22 |   os_type                    = "linux"
		23 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enforce-https.tf:15-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		15 | resource "azurerm_function_app" "fail" {
		16 |   name                       = "test-azure-functions"
		17 |   location                   = azurerm_resource_group.example.location
		18 |   resource_group_name        = azurerm_resource_group.example.name
		19 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		20 |   storage_account_name       = azurerm_storage_account.example.name
		21 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		22 |   os_type                    = "linux"
		23 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.fail
	File: /terraform\azurerm\functionapp\enforce-https.tf:15-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		15 | resource "azurerm_function_app" "fail" {
		16 |   name                       = "test-azure-functions"
		17 |   location                   = azurerm_resource_group.example.location
		18 |   resource_group_name        = azurerm_resource_group.example.name
		19 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		20 |   storage_account_name       = azurerm_storage_account.example.name
		21 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		22 |   os_type                    = "linux"
		23 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_client_certificates_unrequired.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_client_certificates_unrequired.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_client_certificates_unrequired.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_ftps_enforce_disabled.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		1  | resource "azurerm_function_app" "positive1" {
		2  |   name                       = "test-azure-functions"
		3  |   location                   = azurerm_resource_group.example.location
		4  |   resource_group_name        = azurerm_resource_group.example.name
		5  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6  |   storage_account_name       = azurerm_storage_account.example.name
		7  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8  |
		9  |   site_config {
		10 |     http2_enabled = true
		11 |     ftps_state    = "AllAllowed"
		12 |   }
		13 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_ftps_enforce_disabled.tf:1-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		1  | resource "azurerm_function_app" "positive1" {
		2  |   name                       = "test-azure-functions"
		3  |   location                   = azurerm_resource_group.example.location
		4  |   resource_group_name        = azurerm_resource_group.example.name
		5  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6  |   storage_account_name       = azurerm_storage_account.example.name
		7  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8  |
		9  |   site_config {
		10 |     http2_enabled = true
		11 |     ftps_state    = "AllAllowed"
		12 |   }
		13 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_managed_identity_disabled.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_managed_identity_disabled.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_managed_identity_disabled.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		1 | resource "azurerm_function_app" "positive1" {
		2 |   name                       = "test-azure-functions"
		3 |   location                   = azurerm_resource_group.example.location
		4 |   resource_group_name        = azurerm_resource_group.example.name
		5 |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6 |   storage_account_name       = azurerm_storage_account.example.name
		7 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8 | }


Check: CKV_AZURE_67: "Ensure that 'HTTP Version' is the latest, if used to run the Function app"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_not_using_latest_tls_encryption_version.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-http-version-is-the-latest-if-used-to-run-the-function-app

		1  | resource "azurerm_function_app" "positive1" {
		2  |   name                       = "test-azure-functions"
		3  |   location                   = azurerm_resource_group.example.location
		4  |   resource_group_name        = azurerm_resource_group.example.name
		5  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6  |   storage_account_name       = azurerm_storage_account.example.name
		7  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     min_tls_version          = 1.1
		13 |   }
		14 | }


Check: CKV_AZURE_70: "Ensure that Function apps is only accessible over HTTPS"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_not_using_latest_tls_encryption_version.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-is-only-accessible-over-https

		1  | resource "azurerm_function_app" "positive1" {
		2  |   name                       = "test-azure-functions"
		3  |   location                   = azurerm_resource_group.example.location
		4  |   resource_group_name        = azurerm_resource_group.example.name
		5  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6  |   storage_account_name       = azurerm_storage_account.example.name
		7  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     min_tls_version          = 1.1
		13 |   }
		14 | }


Check: CKV_AZURE_56: "Ensure that function apps enables Authentication"
	FAILED for resource: azurerm_function_app.positive1
	File: /terraform\azurerm\functionapp\function_app_not_using_latest_tls_encryption_version.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-function-apps-enables-authentication

		1  | resource "azurerm_function_app" "positive1" {
		2  |   name                       = "test-azure-functions"
		3  |   location                   = azurerm_resource_group.example.location
		4  |   resource_group_name        = azurerm_resource_group.example.name
		5  |   app_service_plan_id        = azurerm_app_service_plan.example.id
		6  |   storage_account_name       = azurerm_storage_account.example.name
		7  |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		8  |
		9  |   site_config {
		10 |     dotnet_framework_version = "v4.0"
		11 |     scm_type                 = "LocalGit"
		12 |     min_tls_version          = 1.1
		13 |   }
		14 | }


Check: CKV_AZURE_39: "Ensure that no custom subscription owner roles are created"
	FAILED for resource: azurerm_role_definition.example
	File: /terraform\azurerm\iam\CustomRoleDefinitionSubscriptionOwner.tf:4-17
	Guide: https://docs.bridgecrew.io/docs/do-not-create-custom-subscription-owner-roles

		4  | resource "azurerm_role_definition" "example" {
		5  |   name        = "my-custom-role"
		6  |   scope       = data.azurerm_subscription.primary.id
		7  |   description = "This is a custom role created via Terraform"
		8  |
		9  |   permissions {
		10 |     actions     = ["*"]
		11 |     not_actions = []
		12 |   }
		13 |
		14 |   assignable_scopes = [
		15 |     data.azurerm_subscription.primary.id
		16 |   ]
		17 | }


Check: CKV_AZURE_39: "Ensure that no custom subscription owner roles are created"
	FAILED for resource: azurerm_role_definition.example
	File: /terraform\azurerm\iam\role_assignment_not_limit_guest_users_permissions.tf:1-14
	Guide: https://docs.bridgecrew.io/docs/do-not-create-custom-subscription-owner-roles

		1  | resource "azurerm_role_definition" "example" {
		2  |   name        = "my-custom-role"
		3  |   scope       = data.azurerm_subscription.primary.id
		4  |   description = "This is a custom role created via Terraform"
		5  |
		6  |   permissions {
		7  |     actions     = ["*"]
		8  |     not_actions = []
		9  |   }
		10 |
		11 |   assignable_scopes = [
		12 |     data.azurerm_subscription.primary.id,
		13 |   ]
		14 | }


Check: CKV_AZURE_108: "Ensure that Azure IoT Hub disables public network access"
	FAILED for resource: azurerm_iothub.example
	File: /terraform\azurerm\iot\IoTNoPublicNetworkAccess.tf:4-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-iot-hub-disables-public-network-access

		4  | resource "azurerm_iothub" "example" {
		5  |   name                          = "Example-IoTHub"
		6  |   resource_group_name           = azurerm_resource_group.example.name
		7  |   location                      = azurerm_resource_group.example.location
		8  |   public_network_access_enabled = true
		9  |
		10 |   sku {
		11 |     name     = "S1"
		12 |     capacity = "1"
		13 |   }
		14 |
		15 |   endpoint {
		16 |     type                       = "AzureIotHub.StorageContainer"
		17 |     connection_string          = azurerm_storage_account.example.primary_blob_connection_string
		18 |     name                       = "export"
		19 |     batch_frequency_in_seconds = 60
		20 |     max_chunk_size_in_bytes    = 10485760
		21 |     container_name             = azurerm_storage_container.example.name
		22 |     encoding                   = "Avro"
		23 |     file_name_format           = "{iothub}/{partition}_{YYYY}_{MM}_{DD}_{HH}_{mm}"
		24 |   }
		25 |
		26 |   endpoint {
		27 |     type              = "AzureIotHub.EventHub"
		28 |     connection_string = azurerm_eventhub_authorization_rule.example.primary_connection_string
		29 |     name              = "export2"
		30 |   }
		31 |
		32 |   route {
		33 |     name           = "export"
		34 |     source         = "DeviceMessages"
		35 |     condition      = "true"
		36 |     endpoint_names = ["export"]
		37 |     enabled        = true
		38 |   }
		39 |
		40 |   route {
		41 |     name           = "export2"
		42 |     source         = "DeviceMessages"
		43 |     condition      = "true"
		44 |     endpoint_names = ["export2"]
		45 |     enabled        = true
		46 |   }
		47 |
		48 |   enrichment {
		49 |     key            = "tenant"
		50 |     value          = "$twin.tags.Tenant"
		51 |     endpoint_names = ["export", "export2"]
		52 |   }
		53 | }


Check: CKV_AZURE_112: "Ensure that key vault key is backed by HSM"
	FAILED for resource: azurerm_key_vault_key.generated
	File: /terraform\azurerm\keyvault\KeyBackedByHSM.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-key-is-backed-by-hsm

		2  | resource "azurerm_key_vault_key" "generated" {
		3  |   name         = "generated-certificate"
		4  |   key_vault_id = azurerm_key_vault.example.id
		5  |   key_type     = "RSA"
		6  |   key_size     = 2048
		7  |
		8  |   key_opts = [
		9  |     "decrypt",
		10 |     "encrypt",
		11 |     "sign",
		12 |     "unwrapKey",
		13 |     "verify",
		14 |     "wrapKey",
		15 |   ]
		16 | }


Check: CKV_AZURE_40: "Ensure that the expiration date is set on all keys"
	FAILED for resource: azurerm_key_vault_key.generated
	File: /terraform\azurerm\keyvault\KeyBackedByHSM.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-keys

		2  | resource "azurerm_key_vault_key" "generated" {
		3  |   name         = "generated-certificate"
		4  |   key_vault_id = azurerm_key_vault.example.id
		5  |   key_type     = "RSA"
		6  |   key_size     = 2048
		7  |
		8  |   key_opts = [
		9  |     "decrypt",
		10 |     "encrypt",
		11 |     "sign",
		12 |     "unwrapKey",
		13 |     "verify",
		14 |     "wrapKey",
		15 |   ]
		16 | }


Check: CKV_AZURE_112: "Ensure that key vault key is backed by HSM"
	FAILED for resource: azurerm_key_vault_key.generated
	File: /terraform\azurerm\keyvault\KeyExpirationDate.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-key-is-backed-by-hsm

		2  | resource "azurerm_key_vault_key" "generated" {
		3  |   name         = "generated-certificate"
		4  |   key_vault_id = azurerm_key_vault.example.id
		5  |   key_type     = "RSA"
		6  |   key_size     = 2048
		7  |
		8  |   key_opts = [
		9  |     "decrypt",
		10 |     "encrypt",
		11 |     "sign",
		12 |     "unwrapKey",
		13 |     "verify",
		14 |     "wrapKey",
		15 |   ]
		16 | }


Check: CKV_AZURE_40: "Ensure that the expiration date is set on all keys"
	FAILED for resource: azurerm_key_vault_key.generated
	File: /terraform\azurerm\keyvault\KeyExpirationDate.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-keys

		2  | resource "azurerm_key_vault_key" "generated" {
		3  |   name         = "generated-certificate"
		4  |   key_vault_id = azurerm_key_vault.example.id
		5  |   key_type     = "RSA"
		6  |   key_size     = 2048
		7  |
		8  |   key_opts = [
		9  |     "decrypt",
		10 |     "encrypt",
		11 |     "sign",
		12 |     "unwrapKey",
		13 |     "verify",
		14 |     "wrapKey",
		15 |   ]
		16 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesFirewallRulesSettings.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |
		11 |   sku_name = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesFirewallRulesSettings.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |
		11 |   sku_name = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesFirewallRulesSettings.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |
		11 |   sku_name = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesPurgeProtection.tf:2-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |
		10 |   sku_name = "standard"
		11 |
		12 |   access_policy {
		13 |     tenant_id = data.azurerm_client_config.current.tenant_id
		14 |     object_id = data.azurerm_client_config.current.object_id
		15 |
		16 |     key_permissions = [
		17 |       "Get",
		18 |     ]
		19 |
		20 |     secret_permissions = [
		21 |       "Get",
		22 |     ]
		23 |
		24 |     storage_permissions = [
		25 |       "Get",
		26 |     ]
		27 |   }
		28 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesPurgeProtection.tf:2-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |
		10 |   sku_name = "standard"
		11 |
		12 |   access_policy {
		13 |     tenant_id = data.azurerm_client_config.current.tenant_id
		14 |     object_id = data.azurerm_client_config.current.object_id
		15 |
		16 |     key_permissions = [
		17 |       "Get",
		18 |     ]
		19 |
		20 |     secret_permissions = [
		21 |       "Get",
		22 |     ]
		23 |
		24 |     storage_permissions = [
		25 |       "Get",
		26 |     ]
		27 |   }
		28 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesPurgeProtection.tf:2-28
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |
		10 |   sku_name = "standard"
		11 |
		12 |   access_policy {
		13 |     tenant_id = data.azurerm_client_config.current.tenant_id
		14 |     object_id = data.azurerm_client_config.current.object_id
		15 |
		16 |     key_permissions = [
		17 |       "Get",
		18 |     ]
		19 |
		20 |     secret_permissions = [
		21 |       "Get",
		22 |     ]
		23 |
		24 |     storage_permissions = [
		25 |       "Get",
		26 |     ]
		27 |   }
		28 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesSoftDelete.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |   soft_delete_enabled         = false
		11 |   sku_name                    = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesSoftDelete.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |   soft_delete_enabled         = false
		11 |   sku_name                    = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_111: "Ensure that key vault enables soft delete"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesSoftDelete.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-soft-delete

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |   soft_delete_enabled         = false
		11 |   sku_name                    = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultEnablesSoftDelete.tf:2-29
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		2  | resource "azurerm_key_vault" "example" {
		3  |   name                        = "examplekeyvault"
		4  |   location                    = azurerm_resource_group.example.location
		5  |   resource_group_name         = azurerm_resource_group.example.name
		6  |   enabled_for_disk_encryption = true
		7  |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8  |   soft_delete_retention_days  = 7
		9  |   purge_protection_enabled    = false
		10 |   soft_delete_enabled         = false
		11 |   sku_name                    = "standard"
		12 |
		13 |   access_policy {
		14 |     tenant_id = data.azurerm_client_config.current.tenant_id
		15 |     object_id = data.azurerm_client_config.current.object_id
		16 |
		17 |     key_permissions = [
		18 |       "Get",
		19 |     ]
		20 |
		21 |     secret_permissions = [
		22 |       "Get",
		23 |     ]
		24 |
		25 |     storage_permissions = [
		26 |       "Get",
		27 |     ]
		28 |   }
		29 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultRecoveryEnabled.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		2 | resource "azurerm_key_vault" "example" {
		3 |   name                        = "testvault"
		4 |   location                    = azurerm_resource_group.example.location
		5 |   resource_group_name         = azurerm_resource_group.example.name
		6 |   enabled_for_disk_encryption = true
		7 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8 |   sku_name                    = "standard"
		9 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultRecoveryEnabled.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		2 | resource "azurerm_key_vault" "example" {
		3 |   name                        = "testvault"
		4 |   location                    = azurerm_resource_group.example.location
		5 |   resource_group_name         = azurerm_resource_group.example.name
		6 |   enabled_for_disk_encryption = true
		7 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8 |   sku_name                    = "standard"
		9 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example
	File: /terraform\azurerm\keyvault\KeyVaultRecoveryEnabled.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		2 | resource "azurerm_key_vault" "example" {
		3 |   name                        = "testvault"
		4 |   location                    = azurerm_resource_group.example.location
		5 |   resource_group_name         = azurerm_resource_group.example.name
		6 |   enabled_for_disk_encryption = true
		7 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		8 |   sku_name                    = "standard"
		9 | }


Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.example
	File: /terraform\azurerm\keyvault\SecretContentType.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-secrets-have-content_type-set

		2  | resource "azurerm_key_vault_secret" "example" {
		3  |   name         = "secret-sauce"
		4  |   value        = "szechuan"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |
		7  |   tags = {
		8  |     environment = "Production"
		9  |   }
		10 | }


Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.example
	File: /terraform\azurerm\keyvault\SecretContentType.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		2  | resource "azurerm_key_vault_secret" "example" {
		3  |   name         = "secret-sauce"
		4  |   value        = "szechuan"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |
		7  |   tags = {
		8  |     environment = "Production"
		9  |   }
		10 | }


Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.example
	File: /terraform\azurerm\keyvault\SecretExpirationDate.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-secrets-have-content_type-set

		2  | resource "azurerm_key_vault_secret" "example" {
		3  |   name         = "secret-sauce"
		4  |   value        = "szechuan"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |
		7  |   tags = {
		8  |     environment = "Production"
		9  |   }
		10 | }


Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.example
	File: /terraform\azurerm\keyvault\SecretExpirationDate.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		2  | resource "azurerm_key_vault_secret" "example" {
		3  |   name         = "secret-sauce"
		4  |   value        = "szechuan"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |
		7  |   tags = {
		8  |     environment = "Production"
		9  |   }
		10 | }


Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.fail
	File: /terraform\azurerm\keyvault\content-type-for-secret.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-secrets-have-content_type-set

		3 | resource "azurerm_key_vault_secret" "fail" {
		4 |   name         = "secret-sauce"
		5 |   value        = "szechuan"
		6 |   key_vault_id = azurerm_key_vault.example.id
		7 | }


Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.fail
	File: /terraform\azurerm\keyvault\content-type-for-secret.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		3 | resource "azurerm_key_vault_secret" "fail" {
		4 |   name         = "secret-sauce"
		5 |   value        = "szechuan"
		6 |   key_vault_id = azurerm_key_vault.example.id
		7 | }


Check: CKV_AZURE_112: "Ensure that key vault key is backed by HSM"
	FAILED for resource: azurerm_key_vault_key.fail
	File: /terraform\azurerm\keyvault\ensure-key-expiry.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-key-is-backed-by-hsm

		3  | resource "azurerm_key_vault_key" "fail" {
		4  |   name         = "generated-certificate"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |   key_type     = "RSA"
		7  |   key_size     = 2048
		8  |
		9  |   key_opts = [
		10 |     "decrypt",
		11 |     "encrypt",
		12 |     "sign",
		13 |     "unwrapKey",
		14 |     "verify",
		15 |     "wrapKey",
		16 |   ]
		17 | }


Check: CKV_AZURE_40: "Ensure that the expiration date is set on all keys"
	FAILED for resource: azurerm_key_vault_key.fail
	File: /terraform\azurerm\keyvault\ensure-key-expiry.tf:3-17
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-keys

		3  | resource "azurerm_key_vault_key" "fail" {
		4  |   name         = "generated-certificate"
		5  |   key_vault_id = azurerm_key_vault.example.id
		6  |   key_type     = "RSA"
		7  |   key_size     = 2048
		8  |
		9  |   key_opts = [
		10 |     "decrypt",
		11 |     "encrypt",
		12 |     "sign",
		13 |     "unwrapKey",
		14 |     "verify",
		15 |     "wrapKey",
		16 |   ]
		17 | }


Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.fail
	File: /terraform\azurerm\keyvault\ensure-secret-expiry.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-secrets-have-content_type-set

		3 | resource "azurerm_key_vault_secret" "fail" {
		4 |   name         = "secret-sauce"
		5 |   value        = "szechuan"
		6 |   key_vault_id = azurerm_key_vault.example.id
		7 | }


Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.fail
	File: /terraform\azurerm\keyvault\ensure-secret-expiry.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		3 | resource "azurerm_key_vault_secret" "fail" {
		4 |   name         = "secret-sauce"
		5 |   value        = "szechuan"
		6 |   key_vault_id = azurerm_key_vault.example.id
		7 | }


Check: CKV_AZURE_112: "Ensure that key vault key is backed by HSM"
	FAILED for resource: azurerm_key_vault_key.positive1
	File: /terraform\azurerm\keyvault\key_expiration_not_set.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-key-is-backed-by-hsm

		1  | resource "azurerm_key_vault_key" "positive1" {
		2  |   name         = "generated-certificate"
		3  |   key_vault_id = azurerm_key_vault.example.id
		4  |   key_type     = "RSA"
		5  |   key_size     = 2048
		6  |
		7  |   key_opts = [
		8  |     "decrypt",
		9  |     "encrypt",
		10 |     "sign",
		11 |     "unwrapKey",
		12 |     "verify",
		13 |     "wrapKey",
		14 |   ]
		15 | }


Check: CKV_AZURE_40: "Ensure that the expiration date is set on all keys"
	FAILED for resource: azurerm_key_vault_key.positive1
	File: /terraform\azurerm\keyvault\key_expiration_not_set.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-keys

		1  | resource "azurerm_key_vault_key" "positive1" {
		2  |   name         = "generated-certificate"
		3  |   key_vault_id = azurerm_key_vault.example.id
		4  |   key_type     = "RSA"
		5  |   key_size     = 2048
		6  |
		7  |   key_opts = [
		8  |     "decrypt",
		9  |     "encrypt",
		10 |     "sign",
		11 |     "unwrapKey",
		12 |     "verify",
		13 |     "wrapKey",
		14 |   ]
		15 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\no-purge.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   purge_protection_enabled    = false
		8 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\no-purge.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   purge_protection_enabled    = false
		8 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\no-purge.tf:3-8
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   purge_protection_enabled    = false
		8 | }


Check: CKV_AZURE_114: "Ensure that key vault secrets have "content_type" set"
	FAILED for resource: azurerm_key_vault_secret.positive1
	File: /terraform\azurerm\keyvault\secret_expiration_not_set.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-secrets-have-content_type-set

		1 | resource "azurerm_key_vault_secret" "positive1" {
		2 |   name         = "secret-sauce"
		3 |   value        = "szechuan"
		4 |   key_vault_id = azurerm_key_vault.example.id
		5 |
		6 |   tags = {
		7 |     environment = "Production"
		8 |   }
		9 | }


Check: CKV_AZURE_41: "Ensure that the expiration date is set on all secrets"
	FAILED for resource: azurerm_key_vault_secret.positive1
	File: /terraform\azurerm\keyvault\secret_expiration_not_set.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		1 | resource "azurerm_key_vault_secret" "positive1" {
		2 |   name         = "secret-sauce"
		3 |   value        = "szechuan"
		4 |   key_vault_id = azurerm_key_vault.example.id
		5 |
		6 |   tags = {
		7 |     environment = "Production"
		8 |   }
		9 | }


Check: CKV_AZURE_109: "Ensure that key vault allows firewall rules settings"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\specify-network-acl.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-allows-firewall-rules-settings

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   soft_delete_retention_days  = 7
		8 |   purge_protection_enabled    = false
		9 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\specify-network-acl.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   soft_delete_retention_days  = 7
		8 |   purge_protection_enabled    = false
		9 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.fail
	File: /terraform\azurerm\keyvault\specify-network-acl.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		3 | resource "azurerm_key_vault" "fail" {
		4 |   name                        = "examplekeyvault"
		5 |   location                    = azurerm_resource_group.fail.location
		6 |   enabled_for_disk_encryption = true
		7 |   soft_delete_retention_days  = 7
		8 |   purge_protection_enabled    = false
		9 | }


Check: CKV_AZURE_110: "Ensure that key vault enables purge protection"
	FAILED for resource: azurerm_key_vault.example1
	File: /terraform\azurerm\keyvault\vault_auditing_disabled.tf:16-53
	Guide: https://docs.bridgecrew.io/docs/ensure-that-key-vault-enables-purge-protection

		16 | resource "azurerm_key_vault" "example1" {
		17 |   name                        = "testvault"
		18 |   location                    = azurerm_resource_group.example.location
		19 |   resource_group_name         = azurerm_resource_group.example.name
		20 |   enabled_for_disk_encryption = true
		21 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		22 |   soft_delete_enabled         = true
		23 |   soft_delete_retention_days  = 7
		24 |   purge_protection_enabled    = false
		25 |
		26 |   sku_name = "standard"
		27 |
		28 |   access_policy {
		29 |     tenant_id = data.azurerm_client_config.current.tenant_id
		30 |     object_id = data.azurerm_client_config.current.object_id
		31 |
		32 |     key_permissions = [
		33 |       "get",
		34 |     ]
		35 |
		36 |     secret_permissions = [
		37 |       "get",
		38 |     ]
		39 |
		40 |     storage_permissions = [
		41 |       "get",
		42 |     ]
		43 |   }
		44 |
		45 |   network_acls {
		46 |     default_action = "Deny"
		47 |     bypass         = "AzureServices"
		48 |   }
		49 |
		50 |   tags = {
		51 |     environment = "Testing"
		52 |   }
		53 | }


Check: CKV_AZURE_42: "Ensure the key vault is recoverable"
	FAILED for resource: azurerm_key_vault.example1
	File: /terraform\azurerm\keyvault\vault_auditing_disabled.tf:16-53
	Guide: https://docs.bridgecrew.io/docs/ensure-the-key-vault-is-recoverable

		16 | resource "azurerm_key_vault" "example1" {
		17 |   name                        = "testvault"
		18 |   location                    = azurerm_resource_group.example.location
		19 |   resource_group_name         = azurerm_resource_group.example.name
		20 |   enabled_for_disk_encryption = true
		21 |   tenant_id                   = data.azurerm_client_config.current.tenant_id
		22 |   soft_delete_enabled         = true
		23 |   soft_delete_retention_days  = 7
		24 |   purge_protection_enabled    = false
		25 |
		26 |   sku_name = "standard"
		27 |
		28 |   access_policy {
		29 |     tenant_id = data.azurerm_client_config.current.tenant_id
		30 |     object_id = data.azurerm_client_config.current.object_id
		31 |
		32 |     key_permissions = [
		33 |       "get",
		34 |     ]
		35 |
		36 |     secret_permissions = [
		37 |       "get",
		38 |     ]
		39 |
		40 |     storage_permissions = [
		41 |       "get",
		42 |     ]
		43 |   }
		44 |
		45 |   network_acls {
		46 |     default_action = "Deny"
		47 |     bypass         = "AzureServices"
		48 |   }
		49 |
		50 |   tags = {
		51 |     environment = "Testing"
		52 |   }
		53 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_8: "Ensure Kubernetes Dashboard is disabled"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_5

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.positive1
	File: /terraform\azurerm\kubernetes_cluster\dashboard_is_enabled.tf:1-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		1  | resource "azurerm_kubernetes_cluster" "positive1" {
		2  |   name                = "example-aks1"
		3  |   location            = azurerm_resource_group.example.location
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   dns_prefix          = "exampleaks1"
		6  |
		7  |   default_node_pool {
		8  |     name       = "default"
		9  |     node_count = 1
		10 |     vm_size    = "Standard_D2_v2"
		11 |   }
		12 |
		13 |   identity {
		14 |     type = "SystemAssigned"
		15 |   }
		16 |
		17 |   tags = {
		18 |     Environment = "Production"
		19 |   }
		20 |
		21 |   addon_profile {
		22 |     kube_dashboard {
		23 |       enabled = true
		24 |     }
		25 |   }
		26 | }


Check: CKV_AZURE_6: "Ensure AKS has an API Server Authorized IP Ranges enabled"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_3

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_115: "Ensure that AKS enables private clusters"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-enables-private-clusters

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_4: "Ensure AKS logging to Azure Monitoring is Configured"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_1

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_7: "Ensure AKS cluster has Network Policy configured"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_4

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_5: "Ensure RBAC is enabled on AKS clusters"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_kubernetes_2

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_116: "Ensure that AKS uses Azure Policies Add-on"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-azure-policies-add-on

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_117: "Ensure that AKS uses disk encryption set"
	FAILED for resource: azurerm_kubernetes_cluster.example
	File: /terraform\azurerm\kubernetes_cluster\kubernetes_cluster.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-aks-uses-disk-encryption-set

		2  | resource "azurerm_kubernetes_cluster" "example" {
		3  |   name                = "example-aks1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   dns_prefix          = "exampleaks1"
		7  |
		8  |   default_node_pool {
		9  |     name       = "default"
		10 |     node_count = 1
		11 |     vm_size    = "Standard_D2_v2"
		12 |   }
		13 |
		14 |   identity {
		15 |     type = "SystemAssigned"
		16 |   }
		17 |
		18 |   tags = {
		19 |     Environment = "Production"
		20 |   }
		21 | }


Check: CKV_AZURE_75: "Ensure that Azure Data Explorer uses double encryption"
	FAILED for resource: azurerm_kusto_cluster.example
	File: /terraform\azurerm\kusto\DataExplorerDoubleEncryptionEnabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-explorer-uses-double-encryption

		2  | resource "azurerm_kusto_cluster" "example" {
		3  |   name                = "kustocluster"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |
		7  |   sku {
		8  |     name     = "Standard_D13_v2"
		9  |     capacity = 2
		10 |   }
		11 |
		12 |   tags = {
		13 |     Environment = "Production"
		14 |   }
		15 | }


Check: CKV_AZURE_74: "Ensure that Azure Data Explorer uses disk encryption"
	FAILED for resource: azurerm_kusto_cluster.example
	File: /terraform\azurerm\kusto\DataExplorerDoubleEncryptionEnabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-explorer-uses-disk-encryption

		2  | resource "azurerm_kusto_cluster" "example" {
		3  |   name                = "kustocluster"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |
		7  |   sku {
		8  |     name     = "Standard_D13_v2"
		9  |     capacity = 2
		10 |   }
		11 |
		12 |   tags = {
		13 |     Environment = "Production"
		14 |   }
		15 | }


Check: CKV_AZURE_75: "Ensure that Azure Data Explorer uses double encryption"
	FAILED for resource: azurerm_kusto_cluster.example
	File: /terraform\azurerm\kusto\DataExplorerUsesDiskEncryption.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-explorer-uses-double-encryption

		2  | resource "azurerm_kusto_cluster" "example" {
		3  |   name                = "kustocluster"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |
		7  |   sku {
		8  |     name     = "Standard_D13_v2"
		9  |     capacity = 2
		10 |   }
		11 |
		12 |   tags = {
		13 |     Environment = "Production"
		14 |   }
		15 | }


Check: CKV_AZURE_74: "Ensure that Azure Data Explorer uses disk encryption"
	FAILED for resource: azurerm_kusto_cluster.example
	File: /terraform\azurerm\kusto\DataExplorerUsesDiskEncryption.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-explorer-uses-disk-encryption

		2  | resource "azurerm_kusto_cluster" "example" {
		3  |   name                = "kustocluster"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |
		7  |   sku {
		8  |     name     = "Standard_D13_v2"
		9  |     capacity = 2
		10 |   }
		11 |
		12 |   tags = {
		13 |     Environment = "Production"
		14 |   }
		15 | }


Check: CKV_AZURE_2: "Ensure Azure managed disk has encryption enabled"
	FAILED for resource: azurerm_managed_disk.example
	File: /terraform\azurerm\managed_disk\ManagedDiscEncryption.tf:6-17
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_1

		6  | resource "azurerm_managed_disk" "example" {
		7  |   name                 = var.disk_name
		8  |   location             = var.location
		9  |   resource_group_name  = var.resource_group_name
		10 |   storage_account_type = var.storage_account_type
		11 |   create_option        = "Empty"
		12 |   disk_size_gb         = var.disk_size_gb
		13 |   encryption_settings {
		14 |     enabled = false
		15 |   }
		16 |   tags = var.common_tags
		17 | }


Check: CKV_AZURE_93: "Ensure that managed disks use a specific set of disk encryption sets for the customer-managed key encryption"
	FAILED for resource: azurerm_managed_disk.example
	File: /terraform\azurerm\managed_disk\ManagedDiscEncryption.tf:6-17
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-disks-use-a-specific-set-of-disk-encryption-sets-for-the-customer-managed-key-encryption

		6  | resource "azurerm_managed_disk" "example" {
		7  |   name                 = var.disk_name
		8  |   location             = var.location
		9  |   resource_group_name  = var.resource_group_name
		10 |   storage_account_type = var.storage_account_type
		11 |   create_option        = "Empty"
		12 |   disk_size_gb         = var.disk_size_gb
		13 |   encryption_settings {
		14 |     enabled = false
		15 |   }
		16 |   tags = var.common_tags
		17 | }


Check: CKV_AZURE_93: "Ensure that managed disks use a specific set of disk encryption sets for the customer-managed key encryption"
	FAILED for resource: azurerm_managed_disk.source
	File: /terraform\azurerm\managed_disk\ManagedDiskEncryptionSet.tf:5-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-managed-disks-use-a-specific-set-of-disk-encryption-sets-for-the-customer-managed-key-encryption

		5  | resource "azurerm_managed_disk" "source" {
		6  |   name                 = "acctestmd1"
		7  |   location             = "West US 2"
		8  |   resource_group_name  = azurerm_resource_group.example.name
		9  |   storage_account_type = "Standard_LRS"
		10 |   create_option        = "Empty"
		11 |   disk_size_gb         = "1"
		12 |
		13 |   tags = {
		14 |     environment = "staging"
		15 |   }
		16 | }


Check: CKV_AZURE_129: "Ensure that MariaDB server enables geo-redundant backups"
	FAILED for resource: azurerm_mariadb_server.example
	File: /terraform\azurerm\maria\azurerm_mariadb_server.tf:5-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-mariadb-server-enables-geo-redundant-backups

		5  | resource "azurerm_mariadb_server" "example" {
		6  |   name                          = var.server_name
		7  |   location                      = var.resource_group.location
		8  |   resource_group_name           = var.resource_group.name
		9  |   administrator_login           = var.admin_login
		10 |   administrator_login_password  = random_string.password.result
		11 |   sku_name                      = "B_Gen5_2"
		12 |   storage_mb                    = 5120
		13 |   version                       = "10.2"
		14 |   auto_grow_enabled             = true
		15 |   backup_retention_days         = 7
		16 |   geo_redundant_backup_enabled  = false
		17 |   public_network_access_enabled = true
		18 |   #test this i guess
		19 |   ssl_enforcement_enabled = false
		20 | }


Check: CKV_AZURE_48: "Ensure 'public network access enabled' is set to 'False' for MariaDB servers"
	FAILED for resource: azurerm_mariadb_server.example
	File: /terraform\azurerm\maria\azurerm_mariadb_server.tf:5-20
	Guide: https://docs.bridgecrew.io/docs/bc_azr_public_1

		5  | resource "azurerm_mariadb_server" "example" {
		6  |   name                          = var.server_name
		7  |   location                      = var.resource_group.location
		8  |   resource_group_name           = var.resource_group.name
		9  |   administrator_login           = var.admin_login
		10 |   administrator_login_password  = random_string.password.result
		11 |   sku_name                      = "B_Gen5_2"
		12 |   storage_mb                    = 5120
		13 |   version                       = "10.2"
		14 |   auto_grow_enabled             = true
		15 |   backup_retention_days         = 7
		16 |   geo_redundant_backup_enabled  = false
		17 |   public_network_access_enabled = true
		18 |   #test this i guess
		19 |   ssl_enforcement_enabled = false
		20 | }


Check: CKV_AZURE_47: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MariaDB servers"
	FAILED for resource: azurerm_mariadb_server.example
	File: /terraform\azurerm\maria\azurerm_mariadb_server.tf:5-20
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_17

		5  | resource "azurerm_mariadb_server" "example" {
		6  |   name                          = var.server_name
		7  |   location                      = var.resource_group.location
		8  |   resource_group_name           = var.resource_group.name
		9  |   administrator_login           = var.admin_login
		10 |   administrator_login_password  = random_string.password.result
		11 |   sku_name                      = "B_Gen5_2"
		12 |   storage_mb                    = 5120
		13 |   version                       = "10.2"
		14 |   auto_grow_enabled             = true
		15 |   backup_retention_days         = 7
		16 |   geo_redundant_backup_enabled  = false
		17 |   public_network_access_enabled = true
		18 |   #test this i guess
		19 |   ssl_enforcement_enabled = false
		20 | }


Check: CKV_AZURE_38: "Ensure audit profile captures all the activities"
	FAILED for resource: azurerm_monitor_log_profile.example
	File: /terraform\azurerm\monitor\MonitorLogProfileCategories.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-audit-profile-captures-all-activities

		2  | resource "azurerm_monitor_log_profile" "example" {
		3  |   name = "default"
		4  |   categories = [
		5  |     "Action"
		6  |   ]
		7  |   locations = [
		8  |     "westus",
		9  |     "global",
		10 |   ]
		11 |   retention_policy {
		12 |     enabled = true
		13 |     days    = 7
		14 |   }
		15 | }


Check: CKV_AZURE_37: "Ensure that Activity Log Retention is set 365 days or greater"
	FAILED for resource: azurerm_monitor_log_profile.example
	File: /terraform\azurerm\monitor\MonitorLogProfileCategories.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/set-activity-log-retention-to-365-days-or-greater

		2  | resource "azurerm_monitor_log_profile" "example" {
		3  |   name = "default"
		4  |   categories = [
		5  |     "Action"
		6  |   ]
		7  |   locations = [
		8  |     "westus",
		9  |     "global",
		10 |   ]
		11 |   retention_policy {
		12 |     enabled = true
		13 |     days    = 7
		14 |   }
		15 | }


Check: CKV_AZURE_38: "Ensure audit profile captures all the activities"
	FAILED for resource: azurerm_monitor_log_profile.fail
	File: /terraform\azurerm\monitor\azurerm_monitor_log_profile.tf:4-11
	Guide: https://docs.bridgecrew.io/docs/ensure-audit-profile-captures-all-activities

		4  | resource "azurerm_monitor_log_profile" "fail" {
		5  |   name = "fail"
		6  |
		7  |   retention_policy {
		8  |     enabled = true
		9  |     days    = 7
		10 |   }
		11 | }


Check: CKV_AZURE_37: "Ensure that Activity Log Retention is set 365 days or greater"
	FAILED for resource: azurerm_monitor_log_profile.fail
	File: /terraform\azurerm\monitor\azurerm_monitor_log_profile.tf:4-11
	Guide: https://docs.bridgecrew.io/docs/set-activity-log-retention-to-365-days-or-greater

		4  | resource "azurerm_monitor_log_profile" "fail" {
		5  |   name = "fail"
		6  |
		7  |   retention_policy {
		8  |     enabled = true
		9  |     days    = 7
		10 |   }
		11 | }


Check: CKV_AZURE_38: "Ensure audit profile captures all the activities"
	FAILED for resource: azurerm_monitor_log_profile.fail
	File: /terraform\azurerm\monitor\capture-all-regions.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/ensure-audit-profile-captures-all-activities

		2  | resource "azurerm_monitor_log_profile" "fail" {
		3  |   name = "fail"
		4  |
		5  |   categories = []
		6  |
		7  |   locations = [
		8  |     "westus",
		9  |     "global",
		10 |   ]
		11 |
		12 |   retention_policy {
		13 |     enabled = true
		14 |     days    = 7
		15 |   }
		16 | }


Check: CKV_AZURE_37: "Ensure that Activity Log Retention is set 365 days or greater"
	FAILED for resource: azurerm_monitor_log_profile.fail
	File: /terraform\azurerm\monitor\capture-all-regions.tf:2-16
	Guide: https://docs.bridgecrew.io/docs/set-activity-log-retention-to-365-days-or-greater

		2  | resource "azurerm_monitor_log_profile" "fail" {
		3  |   name = "fail"
		4  |
		5  |   categories = []
		6  |
		7  |   locations = [
		8  |     "westus",
		9  |     "global",
		10 |   ]
		11 |
		12 |   retention_policy {
		13 |     enabled = true
		14 |     days    = 7
		15 |   }
		16 | }


Check: CKV_AZURE_37: "Ensure that Activity Log Retention is set 365 days or greater"
	FAILED for resource: azurerm_monitor_log_profile.positive1
	File: /terraform\azurerm\monitor\small_activity_log_retention_period.tf:2-23
	Guide: https://docs.bridgecrew.io/docs/set-activity-log-retention-to-365-days-or-greater

		2  | resource "azurerm_monitor_log_profile" "positive1" {
		3  |   name = "default"
		4  |
		5  |   categories = [
		6  |     "Action",
		7  |     "Delete",
		8  |     "Write",
		9  |   ]
		10 |
		11 |   locations = [
		12 |     "westus",
		13 |     "global",
		14 |   ]
		15 |
		16 |   servicebus_rule_id = "${azurerm_eventhub_namespace.example.id}/authorizationrules/RootManageSharedAccessKey"
		17 |   storage_account_id = azurerm_storage_account.example.id
		18 |
		19 |   retention_policy {
		20 |     enabled = true
		21 |     days    = 7
		22 |   }
		23 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_mssql_server.example
	File: /terraform\azurerm\mssql\SQLServerPublicAccessDisabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		2  | resource "azurerm_mssql_server" "example" {
		3  |   name                          = "mssqlserver"
		4  |   resource_group_name           = azurerm_resource_group.example.name
		5  |   location                      = azurerm_resource_group.example.location
		6  |   version                       = "12.0"
		7  |   administrator_login           = "missadministrator"
		8  |   administrator_login_password  = "thisIsKat11"
		9  |   minimum_tls_version           = "1.2"
		10 |   public_network_access_enabled = true
		11 |   azuread_administrator {
		12 |     login_username = "AzureAD Admin"
		13 |     object_id      = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 | }


Check: CKV_AZURE_113: "Ensure that SQL server disables public network access"
	FAILED for resource: azurerm_mssql_server.example
	File: /terraform\azurerm\mssql\SQLServerPublicAccessDisabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-sql-server-disables-public-network-access

		2  | resource "azurerm_mssql_server" "example" {
		3  |   name                          = "mssqlserver"
		4  |   resource_group_name           = azurerm_resource_group.example.name
		5  |   location                      = azurerm_resource_group.example.location
		6  |   version                       = "12.0"
		7  |   administrator_login           = "missadministrator"
		8  |   administrator_login_password  = "thisIsKat11"
		9  |   minimum_tls_version           = "1.2"
		10 |   public_network_access_enabled = true
		11 |   azuread_administrator {
		12 |     login_username = "AzureAD Admin"
		13 |     object_id      = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 | }


Check: CKV_AZURE_46: "Specifies a retention period of less than 90 days."
	FAILED for resource: azurerm_mssql_database_extended_auditing_policy.example
	File: /terraform\azurerm\mssql\azurerm_mssql_database_extended_auditing_policy.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_12

		4  | resource "azurerm_mssql_database_extended_auditing_policy" "example" {
		5  |   database_id                             = azurerm_mssql_database.examplea.id
		6  |   storage_endpoint                        = azurerm_storage_account.examplea.primary_blob_endpoint
		7  |   storage_account_access_key              = azurerm_storage_account.examplea.primary_access_key
		8  |   storage_account_access_key_is_secondary = false
		9  |   retention_in_days                       = 89
		10 | }


Check: CKV_AZURE_26: "Ensure that 'Send Alerts To' is enabled for MSSQL servers"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fauk
	File: /terraform\azurerm\mssql\azurerm_mssql_server_security_alert_policy.tf:5-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_7

		5  | resource "azurerm_mssql_server_security_alert_policy" "fauk" {
		6  |   resource_group_name        = azurerm_resource_group.example.name
		7  |   server_name                = azurerm_sql_server.example.name
		8  |   state                      = "Enabled"
		9  |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		10 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		11 |   disabled_alerts = [
		12 |     "Sql_Injection",
		13 |     "Data_Exfiltration"
		14 |   ]
		15 |   retention_days = 20
		16 | }


Check: CKV_AZURE_27: "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fauk
	File: /terraform\azurerm\mssql\azurerm_mssql_server_security_alert_policy.tf:5-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_8

		5  | resource "azurerm_mssql_server_security_alert_policy" "fauk" {
		6  |   resource_group_name        = azurerm_resource_group.example.name
		7  |   server_name                = azurerm_sql_server.example.name
		8  |   state                      = "Enabled"
		9  |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		10 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		11 |   disabled_alerts = [
		12 |     "Sql_Injection",
		13 |     "Data_Exfiltration"
		14 |   ]
		15 |   retention_days = 20
		16 | }


Check: CKV_AZURE_25: "Ensure that 'Threat Detection types' is set to 'All'"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fauk
	File: /terraform\azurerm\mssql\azurerm_mssql_server_security_alert_policy.tf:5-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_6

		5  | resource "azurerm_mssql_server_security_alert_policy" "fauk" {
		6  |   resource_group_name        = azurerm_resource_group.example.name
		7  |   server_name                = azurerm_sql_server.example.name
		8  |   state                      = "Enabled"
		9  |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		10 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		11 |   disabled_alerts = [
		12 |     "Sql_Injection",
		13 |     "Data_Exfiltration"
		14 |   ]
		15 |   retention_days = 20
		16 | }


Check: CKV_AZURE_26: "Ensure that 'Send Alerts To' is enabled for MSSQL servers"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fail
	File: /terraform\azurerm\mssql\mssql_server_security_alert_policy.tf:6-19
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_7

		6  | resource "azurerm_mssql_server_security_alert_policy" "fail" {
		7  |   resource_group_name        = azurerm_resource_group.example.name
		8  |   server_name                = azurerm_sql_server.example.name
		9  |   state                      = "Enabled"
		10 |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		11 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		12 |   disabled_alerts = [
		13 |     "Sql_Injection",
		14 |     "Data_Exfiltration"
		15 |   ]
		16 |   email_account_admins = false
		17 |   retention_days       = 20
		18 |   email_addresses      = []
		19 | }


Check: CKV_AZURE_27: "Ensure that 'Email service and co-administrators' is 'Enabled' for MSSQL servers"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fail
	File: /terraform\azurerm\mssql\mssql_server_security_alert_policy.tf:6-19
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_8

		6  | resource "azurerm_mssql_server_security_alert_policy" "fail" {
		7  |   resource_group_name        = azurerm_resource_group.example.name
		8  |   server_name                = azurerm_sql_server.example.name
		9  |   state                      = "Enabled"
		10 |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		11 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		12 |   disabled_alerts = [
		13 |     "Sql_Injection",
		14 |     "Data_Exfiltration"
		15 |   ]
		16 |   email_account_admins = false
		17 |   retention_days       = 20
		18 |   email_addresses      = []
		19 | }


Check: CKV_AZURE_25: "Ensure that 'Threat Detection types' is set to 'All'"
	FAILED for resource: azurerm_mssql_server_security_alert_policy.fail
	File: /terraform\azurerm\mssql\mssql_server_security_alert_policy.tf:6-19
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_6

		6  | resource "azurerm_mssql_server_security_alert_policy" "fail" {
		7  |   resource_group_name        = azurerm_resource_group.example.name
		8  |   server_name                = azurerm_sql_server.example.name
		9  |   state                      = "Enabled"
		10 |   storage_endpoint           = azurerm_storage_account.example.primary_blob_endpoint
		11 |   storage_account_access_key = azurerm_storage_account.example.primary_access_key
		12 |   disabled_alerts = [
		13 |     "Sql_Injection",
		14 |     "Data_Exfiltration"
		15 |   ]
		16 |   email_account_admins = false
		17 |   retention_days       = 20
		18 |   email_addresses      = []
		19 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		10 | resource "azurerm_sql_server" "example" {
		11 |   name                         = "mssqlserver"
		12 |   resource_group_name          = azurerm_resource_group.example.name
		13 |   location                     = azurerm_resource_group.example.location
		14 |   version                      = "12.0"
		15 |   administrator_login          = "mradministrator"
		16 |   administrator_login_password = "thisIsDog11"
		17 |   minimum_tls_version          = "1.1"
		18 |
		19 |
		20 |   public_network_access_enabled = true
		21 |   extended_auditing_policy {
		22 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		23 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		24 |     storage_account_access_key_is_secondary = true
		25 |     retention_in_days                       = 6
		26 |   }
		27 |
		28 | }


Check: CKV_AZURE_11: "Ensure no SQL Databases allow ingress from 0.0.0.0/0 (ANY IP)"
	FAILED for resource: azurerm_sql_firewall_rule.fail
	File: /terraform\azurerm\mssql\sql_server_ingress_from_any_ip.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_4

		2 | resource "azurerm_sql_firewall_rule" "fail" {
		3 |   name                = "FirewallRule1"
		4 |   resource_group_name = azurerm_resource_group.example.name
		5 |   server_name         = azurerm_sql_server.example.name
		6 |   start_ip_address    = "0.0.0.0"
		7 |   end_ip_address      = "255.255.255.255"
		8 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		9  | resource "azurerm_sql_server" "positive2" {
		10 |   name                         = "mysqlserver"
		11 |   resource_group_name          = azurerm_resource_group.example.name
		12 |   location                     = azurerm_resource_group.example.location
		13 |   version                      = "12.0"
		14 |   administrator_login          = "4dm1n157r470r"
		15 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		16 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		16 | resource "azurerm_sql_server" "positive3" {
		17 |   name                         = "mssqlserver"
		18 |   resource_group_name          = azurerm_resource_group.example.name
		19 |   location                     = azurerm_resource_group.example.location
		20 |   version                      = "12.0"
		21 |   administrator_login          = ""
		22 |   administrator_login_password = "thisIsDog11"
		23 |
		24 |   extended_auditing_policy {
		25 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		26 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		27 |     storage_account_access_key_is_secondary = true
		28 |     retention_in_days                       = 6
		29 |   }
		30 |
		31 |   tags = {
		32 |     environment = "production"
		33 |   }
		34 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		36 | resource "azurerm_sql_server" "positive4" {
		37 |   name                         = "mssqlserver"
		38 |   resource_group_name          = azurerm_resource_group.example.name
		39 |   location                     = azurerm_resource_group.example.location
		40 |   version                      = "12.0"
		41 |   administrator_login          = "Admin"
		42 |   administrator_login_password = "thisIsDog11"
		43 |
		44 |   extended_auditing_policy {
		45 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		46 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		47 |     storage_account_access_key_is_secondary = true
		48 |     retention_in_days                       = 6
		49 |   }
		50 |
		51 |   tags = {
		52 |     environment = "production"
		53 |   }
		54 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\unrestricted_sql_server_access.tf:6-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		6  | resource "azurerm_sql_server" "positive2" {
		7  |   name                         = "mysqlserver"
		8  |   resource_group_name          = azurerm_resource_group.example.name
		9  |   location                     = "West US"
		10 |   version                      = "12.0"
		11 |   administrator_login          = "4dm1n157r470r"
		12 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		13 | }


Check: CKV_AZURE_96: "Ensure that MySQL server enables infrastructure encryption"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption-1

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_94: "Ensure that My SQL server enables geo-redundant backups"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-my-sql-server-enables-geo-redundant-backups

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_53: "Ensure 'public network access enabled' is set to 'False' for mySQL servers"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-public-network-access-enabled-is-set-to-false-for-mysql-servers

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_54: "Ensure MySQL is using the latest version of TLS encryption"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-mysql-is-using-the-latest-version-of-tls-encryption

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_90: "Ensure that MySQL server disables public network access"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-mysql-server-disables-public-network-access

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_28: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for MySQL Database Server"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_9

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_127: "Ensure that My SQL server enables Threat detection policy"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-my-sql-server-enables-threat-detection-policy

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV_AZURE_77: "Ensure that UDP Services are restricted from the Internet "
	FAILED for resource: azurerm_network_security_group.example_udp
	File: /terraform\azurerm\network\NSGRuleUDPAccessRestricted.tf:2-22
	Guide: https://docs.bridgecrew.io/docs/ensure-that-udp-services-are-restricted-from-the-internet

		2  | resource "azurerm_network_security_group" "example_udp" {
		3  |   name                = "acceptanceTestSecurityGroup1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   security_rule {
		8  |     name                       = "test123"
		9  |     priority                   = 100
		10 |     direction                  = "Inbound"
		11 |     access                     = "Allow"
		12 |     protocol                   = "Udp"
		13 |     source_port_range          = "*"
		14 |     destination_port_range     = "*"
		15 |     source_address_prefix      = "*"
		16 |     destination_address_prefix = "*"
		17 |   }
		18 |
		19 |   tags = {
		20 |     environment = "Production"
		21 |   }
		22 | }


Check: CKV_AZURE_12: "Ensure that Network Security Group Flow Log retention period is 'greater than 90 days'"
	FAILED for resource: azurerm_network_watcher_flow_log.fail
	File: /terraform\azurerm\network\NetworkWatcherFlowLog.tf:3-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_1

		3  | resource "azurerm_network_watcher_flow_log" "fail" {
		4  |   network_watcher_name      = azurerm_network_watcher.test.name
		5  |   resource_group_name       = azurerm_resource_group.test.name
		6  |   network_security_group_id = azurerm_network_security_group.test.id
		7  |   storage_account_id        = azurerm_storage_account.test.id
		8  |   enabled                   = true
		9  |
		10 |   retention_policy {
		11 |     enabled = true
		12 |     days    = 7
		13 |   }
		14 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		21 | resource "azurerm_storage_account" "example" {
		22 |   name                = "storageaccountname"
		23 |   resource_group_name = azurerm_resource_group.example.name
		24 |
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "LRS"
		28 |
		29 |   network_rules {
		30 |     default_action             = "Allow"
		31 |     ip_rules                   = ["100.0.0.1"]
		32 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		33 |   }
		34 |
		35 |   tags = {
		36 |     environment = "staging"
		37 |   }
		38 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		21 | resource "azurerm_storage_account" "example" {
		22 |   name                = "storageaccountname"
		23 |   resource_group_name = azurerm_resource_group.example.name
		24 |
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "LRS"
		28 |
		29 |   network_rules {
		30 |     default_action             = "Allow"
		31 |     ip_rules                   = ["100.0.0.1"]
		32 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		33 |   }
		34 |
		35 |   tags = {
		36 |     environment = "staging"
		37 |   }
		38 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		21 | resource "azurerm_storage_account" "example" {
		22 |   name                = "storageaccountname"
		23 |   resource_group_name = azurerm_resource_group.example.name
		24 |
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "LRS"
		28 |
		29 |   network_rules {
		30 |     default_action             = "Allow"
		31 |     ip_rules                   = ["100.0.0.1"]
		32 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		33 |   }
		34 |
		35 |   tags = {
		36 |     environment = "staging"
		37 |   }
		38 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\network\default_azure_storage_account_network_access_is_too_permissive.tf:21-38
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		21 | resource "azurerm_storage_account" "example" {
		22 |   name                = "storageaccountname"
		23 |   resource_group_name = azurerm_resource_group.example.name
		24 |
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "LRS"
		28 |
		29 |   network_rules {
		30 |     default_action             = "Allow"
		31 |     ip_rules                   = ["100.0.0.1"]
		32 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		33 |   }
		34 |
		35 |   tags = {
		36 |     environment = "staging"
		37 |   }
		38 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.positive5
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:34-42
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		34 | resource "azurerm_storage_account_network_rules" "positive5" {
		35 |   resource_group_name  = azurerm_resource_group.test.name
		36 |   storage_account_name = azurerm_storage_account.test.name
		37 |
		38 |   default_action             = "Allow"
		39 |   ip_rules                   = ["127.0.0.1"]
		40 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		41 |   bypass                     = ["Metrics"]
		42 | }


Check: CKV_AZURE_118: "Ensure that Network Interfaces disable IP forwarding"
	FAILED for resource: azurerm_network_interface.fail
	File: /terraform\azurerm\network\network_interface.tf:3-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-network-interfaces-disable-ip-forwarding

		3  | resource "azurerm_network_interface" "fail" {
		4  |   name                = "example-nic"
		5  |   location            = azurerm_resource_group.example.location
		6  |   resource_group_name = azurerm_resource_group.example.name
		7  |
		8  |   ip_configuration {
		9  |     name                          = "internal"
		10 |     subnet_id                     = azurerm_subnet.example.id
		11 |     private_ip_address_allocation = "Dynamic"
		12 |   }
		13 |
		14 |   enable_ip_forwarding = true
		15 | }


Check: CKV_AZURE_32: "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerConnectionThrottlingEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_13

		2 | resource "azurerm_postgresql_configuration" "example" {
		3 |   name                = "connection_throttling"
		4 |   resource_group_name = data.azurerm_resource_group.example.name
		5 |   server_name         = azurerm_postgresql_server.example.name
		6 |   value               = "off"
		7 | }


Check: CKV_AZURE_30: "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogCheckpointEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_11

		2 | resource "azurerm_postgresql_configuration" "example" {
		3 |   name                = "log_checkpoints"
		4 |   resource_group_name = data.azurerm_resource_group.example.name
		5 |   server_name         = azurerm_postgresql_server.example.name
		6 |   value               = "off"
		7 | }


Check: CKV_AZURE_31: "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_configuration.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerLogConnectionsEnabled.tf:2-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_12

		2 | resource "azurerm_postgresql_configuration" "example" {
		3 |   name                = "log_connections"
		4 |   resource_group_name = data.azurerm_resource_group.example.name
		5 |   server_name         = azurerm_postgresql_server.example.name
		6 |   value               = "off"
		7 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerSSLEnforcementEnabled.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		2  | resource "azurerm_postgresql_server" "example" {
		3  |   name                = "example-psqlserver"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   administrator_login          = "psqladminun"
		8  |   administrator_login_password = "H@Sh1CoR3!"
		9  |
		10 |   sku_name   = "GP_Gen5_4"
		11 |   version    = "9.6"
		12 |   storage_mb = 640000
		13 |
		14 |   backup_retention_days        = 7
		15 |   geo_redundant_backup_enabled = true
		16 |   auto_grow_enabled            = true
		17 |
		18 |   public_network_access_enabled    = false
		19 |   ssl_enforcement_enabled          = false
		20 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		21 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerSSLEnforcementEnabled.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		2  | resource "azurerm_postgresql_server" "example" {
		3  |   name                = "example-psqlserver"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   administrator_login          = "psqladminun"
		8  |   administrator_login_password = "H@Sh1CoR3!"
		9  |
		10 |   sku_name   = "GP_Gen5_4"
		11 |   version    = "9.6"
		12 |   storage_mb = 640000
		13 |
		14 |   backup_retention_days        = 7
		15 |   geo_redundant_backup_enabled = true
		16 |   auto_grow_enabled            = true
		17 |
		18 |   public_network_access_enabled    = false
		19 |   ssl_enforcement_enabled          = false
		20 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		21 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.example
	File: /terraform\azurerm\postgreSQL\PostgreSQLServerSSLEnforcementEnabled.tf:2-21
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		2  | resource "azurerm_postgresql_server" "example" {
		3  |   name                = "example-psqlserver"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   administrator_login          = "psqladminun"
		8  |   administrator_login_password = "H@Sh1CoR3!"
		9  |
		10 |   sku_name   = "GP_Gen5_4"
		11 |   version    = "9.6"
		12 |   storage_mb = 640000
		13 |
		14 |   backup_retention_days        = 7
		15 |   geo_redundant_backup_enabled = true
		16 |   auto_grow_enabled            = true
		17 |
		18 |   public_network_access_enabled    = false
		19 |   ssl_enforcement_enabled          = false
		20 |   ssl_minimal_tls_version_enforced = "TLS1_2"
		21 | }


Check: CKV_AZURE_130: "Ensure that PostgreSQL server enables infrastructure encryption"
	FAILED for resource: azurerm_postgresql_server.fails
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_server.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-infrastructure-encryption

		7  | resource "azurerm_postgresql_server" "fails" {
		8  |   name                = "dbserver"
		9  |   location            = "usgovvirginia"
		10 |   resource_group_name = azurerm_resource_group.jira_rg.name
		11 |
		12 |   sku_name   = "GP_Gen5_4"
		13 |   version    = "9.6"
		14 |   storage_mb = 640000
		15 |
		16 |   backup_retention_days             = var.jira_postgre_data_retention
		17 |   auto_grow_enabled                 = true
		18 |   geo_redundant_backup_enabled      = false
		19 |   administrator_login               = var.mp_db_username
		20 |   administrator_login_password      = azurerm_key_vault_secret.db_pswd.value
		21 |   infrastructure_encryption_enabled = false
		22 |   ssl_enforcement_enabled           = false
		23 |   public_network_access_enabled     = true
		24 |
		25 |   threat_detection_policy {
		26 |     enabled = false
		27 |   }
		28 |
		29 |   tags = local.postgresqlserver_tags
		30 | }


Check: CKV_AZURE_68: "Ensure that PostgreSQL server disables public network access"
	FAILED for resource: azurerm_postgresql_server.fails
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_server.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-disables-public-network-access

		7  | resource "azurerm_postgresql_server" "fails" {
		8  |   name                = "dbserver"
		9  |   location            = "usgovvirginia"
		10 |   resource_group_name = azurerm_resource_group.jira_rg.name
		11 |
		12 |   sku_name   = "GP_Gen5_4"
		13 |   version    = "9.6"
		14 |   storage_mb = 640000
		15 |
		16 |   backup_retention_days             = var.jira_postgre_data_retention
		17 |   auto_grow_enabled                 = true
		18 |   geo_redundant_backup_enabled      = false
		19 |   administrator_login               = var.mp_db_username
		20 |   administrator_login_password      = azurerm_key_vault_secret.db_pswd.value
		21 |   infrastructure_encryption_enabled = false
		22 |   ssl_enforcement_enabled           = false
		23 |   public_network_access_enabled     = true
		24 |
		25 |   threat_detection_policy {
		26 |     enabled = false
		27 |   }
		28 |
		29 |   tags = local.postgresqlserver_tags
		30 | }


Check: CKV_AZURE_29: "Ensure 'Enforce SSL connection' is set to 'ENABLED' for PostgreSQL Database Server"
	FAILED for resource: azurerm_postgresql_server.fails
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_server.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_10

		7  | resource "azurerm_postgresql_server" "fails" {
		8  |   name                = "dbserver"
		9  |   location            = "usgovvirginia"
		10 |   resource_group_name = azurerm_resource_group.jira_rg.name
		11 |
		12 |   sku_name   = "GP_Gen5_4"
		13 |   version    = "9.6"
		14 |   storage_mb = 640000
		15 |
		16 |   backup_retention_days             = var.jira_postgre_data_retention
		17 |   auto_grow_enabled                 = true
		18 |   geo_redundant_backup_enabled      = false
		19 |   administrator_login               = var.mp_db_username
		20 |   administrator_login_password      = azurerm_key_vault_secret.db_pswd.value
		21 |   infrastructure_encryption_enabled = false
		22 |   ssl_enforcement_enabled           = false
		23 |   public_network_access_enabled     = true
		24 |
		25 |   threat_detection_policy {
		26 |     enabled = false
		27 |   }
		28 |
		29 |   tags = local.postgresqlserver_tags
		30 | }


Check: CKV_AZURE_128: "Ensure that PostgreSQL server enables Threat detection policy"
	FAILED for resource: azurerm_postgresql_server.fails
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_server.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-threat-detection-policy

		7  | resource "azurerm_postgresql_server" "fails" {
		8  |   name                = "dbserver"
		9  |   location            = "usgovvirginia"
		10 |   resource_group_name = azurerm_resource_group.jira_rg.name
		11 |
		12 |   sku_name   = "GP_Gen5_4"
		13 |   version    = "9.6"
		14 |   storage_mb = 640000
		15 |
		16 |   backup_retention_days             = var.jira_postgre_data_retention
		17 |   auto_grow_enabled                 = true
		18 |   geo_redundant_backup_enabled      = false
		19 |   administrator_login               = var.mp_db_username
		20 |   administrator_login_password      = azurerm_key_vault_secret.db_pswd.value
		21 |   infrastructure_encryption_enabled = false
		22 |   ssl_enforcement_enabled           = false
		23 |   public_network_access_enabled     = true
		24 |
		25 |   threat_detection_policy {
		26 |     enabled = false
		27 |   }
		28 |
		29 |   tags = local.postgresqlserver_tags
		30 | }


Check: CKV_AZURE_102: "Ensure that PostgreSQL server enables geo-redundant backups"
	FAILED for resource: azurerm_postgresql_server.fails
	File: /terraform\azurerm\postgreSQL\azurerm_postgresql_server.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-postgresql-server-enables-geo-redundant-backups

		7  | resource "azurerm_postgresql_server" "fails" {
		8  |   name                = "dbserver"
		9  |   location            = "usgovvirginia"
		10 |   resource_group_name = azurerm_resource_group.jira_rg.name
		11 |
		12 |   sku_name   = "GP_Gen5_4"
		13 |   version    = "9.6"
		14 |   storage_mb = 640000
		15 |
		16 |   backup_retention_days             = var.jira_postgre_data_retention
		17 |   auto_grow_enabled                 = true
		18 |   geo_redundant_backup_enabled      = false
		19 |   administrator_login               = var.mp_db_username
		20 |   administrator_login_password      = azurerm_key_vault_secret.db_pswd.value
		21 |   infrastructure_encryption_enabled = false
		22 |   ssl_enforcement_enabled           = false
		23 |   public_network_access_enabled     = true
		24 |
		25 |   threat_detection_policy {
		26 |     enabled = false
		27 |   }
		28 |
		29 |   tags = local.postgresqlserver_tags
		30 | }


Check: CKV_AZURE_91: "Ensure that only SSL are enabled for Cache for Redis"
	FAILED for resource: azurerm_redis_cache.example
	File: /terraform\azurerm\redis\RedisCacheEnableNonSSLPort.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-only-ssl-are-enabled-for-cache-for-redis

		2  | resource "azurerm_redis_cache" "example" {
		3  |   name                          = "example-cache"
		4  |   location                      = azurerm_resource_group.example.location
		5  |   resource_group_name           = azurerm_resource_group.example.name
		6  |   capacity                      = 2
		7  |   family                        = "C"
		8  |   sku_name                      = "Standard"
		9  |   enable_non_ssl_port           = true
		10 |   minimum_tls_version           = "1.2"
		11 |   public_network_access_enabled = true
		12 |   redis_configuration {
		13 |   }
		14 | }


Check: CKV_AZURE_89: "Ensure that Azure Cache for Redis disables public network access"
	FAILED for resource: azurerm_redis_cache.example
	File: /terraform\azurerm\redis\RedisCacheEnableNonSSLPort.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cache-for-redis-disables-public-network-access

		2  | resource "azurerm_redis_cache" "example" {
		3  |   name                          = "example-cache"
		4  |   location                      = azurerm_resource_group.example.location
		5  |   resource_group_name           = azurerm_resource_group.example.name
		6  |   capacity                      = 2
		7  |   family                        = "C"
		8  |   sku_name                      = "Standard"
		9  |   enable_non_ssl_port           = true
		10 |   minimum_tls_version           = "1.2"
		11 |   public_network_access_enabled = true
		12 |   redis_configuration {
		13 |   }
		14 | }


Check: CKV_AZURE_89: "Ensure that Azure Cache for Redis disables public network access"
	FAILED for resource: azurerm_redis_cache.example
	File: /terraform\azurerm\redis\RedisCachePublicNetworkAccessEnabled.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cache-for-redis-disables-public-network-access

		2  | resource "azurerm_redis_cache" "example" {
		3  |   name                          = "example-cache"
		4  |   location                      = azurerm_resource_group.example.location
		5  |   resource_group_name           = azurerm_resource_group.example.name
		6  |   capacity                      = 2
		7  |   family                        = "C"
		8  |   sku_name                      = "Standard"
		9  |   enable_non_ssl_port           = false
		10 |   minimum_tls_version           = "1.2"
		11 |   public_network_access_enabled = true
		12 |   redis_configuration {
		13 |   }
		14 | }


Check: CKV_AZURE_89: "Ensure that Azure Cache for Redis disables public network access"
	FAILED for resource: azurerm_redis_cache.positive1
	File: /terraform\azurerm\redis\redis_not_updated_regularly.tf:1-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cache-for-redis-disables-public-network-access

		1  | resource "azurerm_redis_cache" "positive1" {
		2  |   name                = "timeout-redis"
		3  |   location            = "West Europe"
		4  |   resource_group_name = azurerm_resource_group.example_rg.name
		5  |   subnet_id           = azurerm_subnet.example_redis_snet.id
		6  |
		7  |   family      = "P"
		8  |   capacity    = 1
		9  |   sku_name    = "Premium"
		10 |   shard_count = 1
		11 |
		12 |   enable_non_ssl_port = false
		13 |   minimum_tls_version = "1.2"
		14 |
		15 |   redis_configuration {
		16 |     enable_authentication = true
		17 |     maxmemory_policy      = "volatile-lru"
		18 |   }
		19 | }


Check: CKV_AZURE_124: "Ensure that Azure Cognitive Search disables public network access"
	FAILED for resource: azurerm_search_service.example
	File: /terraform\azurerm\search\SearchPublicNetworkAccessDisabled.tf:4-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cognitive-search-disables-public-network-access

		4  | resource "azurerm_search_service" "example" {
		5  |   name                          = "example-search-service"
		6  |   resource_group_name           = azurerm_resource_group.example.name
		7  |   location                      = azurerm_resource_group.example.location
		8  |   sku                           = "standard"
		9  |   public_network_access_enabled = true
		10 | }


Check: CKV_AZURE_124: "Ensure that Azure Cognitive Search disables public network access"
	FAILED for resource: azurerm_search_service.positive1
	File: /terraform\azurerm\search\azure_cognitive_search_public_network_access_enabled.tf:1-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-cognitive-search-disables-public-network-access

		1 | resource "azurerm_search_service" "positive1" {
		2 |   name                          = "example-search-service"
		3 |   resource_group_name           = azurerm_resource_group.example.name
		4 |   location                      = azurerm_resource_group.example.location
		5 |   sku                           = "standard"
		6 |   public_network_access_enabled = true
		7 | }


Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "AppServices"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnAppServices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "AppServices"
		5 | }


Check: CKV_AZURE_86: "Ensure that Azure Defender is set to On for Container Registries"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-container-registries

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "ContainerRegistry"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnContainerRegistry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "ContainerRegistry"
		5 | }


Check: CKV_AZURE_87: "Ensure that Azure Defender is set to On for Key Vault"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-key-vault

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "KeyVaults"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKeyVaults.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "KeyVaults"
		5 | }


Check: CKV_AZURE_85: "Ensure that Azure Defender is set to On for Kubernetes"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-kubernetes

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "KubernetesService"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnKubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "KubernetesService"
		5 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_69: "Ensure that Azure Defender is set to On for Azure SQL database servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-azure-sql-database-servers

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "SqlServers"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "SqlServers"
		5 | }


Check: CKV_AZURE_79: "Ensure that Azure Defender is set to On for SQL servers on machines"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-sql-servers-on-machines

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "SqlServerVirtualMachines"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.example
	File: /terraform\azurerm\security_center\DefenderOnSqlServersVMS.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "example" {
		3 |   tier          = "Free"
		4 |   resource_type = "SqlServerVirtualMachines"
		5 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-appservices.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-container-registry.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-keyvault.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-kubernetes.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "VirtualMachines"
		5 | }


Check: CKV_AZURE_61: "Ensure that Azure Defender is set to On for App Service"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-app-service

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "AppServices"
		5 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-servers.tf:2-5
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		2 | resource "azurerm_security_center_subscription_pricing" "fail" {
		3 |   tier          = "Free"
		4 |   resource_type = "AppServices"
		5 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers-vms.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-sql-servers.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_55: "Ensure that Azure Defender is set to On for Servers"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-servers

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\defender-on-storage.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		3 | resource "azurerm_security_center_subscription_pricing" "fail" {
		4 |   tier          = "Free"
		5 |   resource_type = "VirtualMachines"
		6 | }


Check: CKV_AZURE_21: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	FAILED for resource: azurerm_security_center_contact.positive1
	File: /terraform\azurerm\security_center\email_alerts_disabled.tf:1-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_4

		1 | resource "azurerm_security_center_contact" "positive1" {
		2 |   email               = "contact@example.com"
		3 |   phone               = "+1-555-555-5555"
		4 |   alert_notifications = false
		5 | }


Check: CKV_AZURE_22: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	FAILED for resource: azurerm_security_center_contact.positive1
	File: /terraform\azurerm\security_center\email_alerts_disabled.tf:1-5
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_5

		1 | resource "azurerm_security_center_contact" "positive1" {
		2 |   email               = "contact@example.com"
		3 |   phone               = "+1-555-555-5555"
		4 |   alert_notifications = false
		5 | }


Check: CKV_AZURE_21: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	FAILED for resource: azurerm_security_center_contact.fail
	File: /terraform\azurerm\security_center\security_center_contact.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_4

		7  | resource "azurerm_security_center_contact" "fail" {
		8  |   # email = "fail@example.com"
		9  |   # phone = "+1-555-555-5555"
		10 |
		11 |   alert_notifications = false
		12 |   alerts_to_admins    = false
		13 | }


Check: CKV_AZURE_22: "Ensure that 'Send email notification for high severity alerts' is set to 'On'"
	FAILED for resource: azurerm_security_center_contact.fail
	File: /terraform\azurerm\security_center\security_center_contact.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_5

		7  | resource "azurerm_security_center_contact" "fail" {
		8  |   # email = "fail@example.com"
		9  |   # phone = "+1-555-555-5555"
		10 |
		11 |   alert_notifications = false
		12 |   alerts_to_admins    = false
		13 | }


Check: CKV_AZURE_131: "Ensure that 'Security contact emails' is set"
	FAILED for resource: azurerm_security_center_contact.fail
	File: /terraform\azurerm\security_center\security_center_contact.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-contact-emails-is-set

		7  | resource "azurerm_security_center_contact" "fail" {
		8  |   # email = "fail@example.com"
		9  |   # phone = "+1-555-555-5555"
		10 |
		11 |   alert_notifications = false
		12 |   alerts_to_admins    = false
		13 | }


Check: CKV_AZURE_20: "Ensure that security contact 'Phone number' is set"
	FAILED for resource: azurerm_security_center_contact.fail
	File: /terraform\azurerm\security_center\security_center_contact.tf:7-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_3

		7  | resource "azurerm_security_center_contact" "fail" {
		8  |   # email = "fail@example.com"
		9  |   # phone = "+1-555-555-5555"
		10 |
		11 |   alert_notifications = false
		12 |   alerts_to_admins    = false
		13 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.positive1
	File: /terraform\azurerm\security_center\security_center_pricing_tier_is_not_standard.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		1 | resource "azurerm_security_center_subscription_pricing" "positive1" {
		2 |   tier = "Free"
		3 | }


Check: CKV_AZURE_84: "Ensure that Azure Defender is set to On for Storage"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-defender-is-set-to-on-for-storage

		12 | resource "azurerm_security_center_subscription_pricing" "fail" {
		13 |   tier          = "Free"
		14 |   resource_type = "StorageAccounts"
		15 | }


Check: CKV_AZURE_19: "Ensure that standard pricing tier is selected"
	FAILED for resource: azurerm_security_center_subscription_pricing.fail
	File: /terraform\azurerm\security_center\security_center_subscription_pricing.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-standard-pricing-tier-is-selected

		12 | resource "azurerm_security_center_subscription_pricing" "fail" {
		13 |   tier          = "Free"
		14 |   resource_type = "StorageAccounts"
		15 | }


Check: CKV_AZURE_131: "Ensure that 'Security contact emails' is set"
	FAILED for resource: azurerm_security_center_contact.positive
	File: /terraform\azurerm\security_center\security_contact_email.tf:1-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-contact-emails-is-set

		1 | resource "azurerm_security_center_contact" "positive" {
		2 |   phone = "+1-555-555-5555"
		3 |
		4 |   alert_notifications = true
		5 |   alerts_to_admins    = true
		6 | }


Check: CKV_AZURE_126: "Ensures that Active Directory is used for authentication for Service Fabric"
	FAILED for resource: azurerm_service_fabric_cluster.example
	File: /terraform\azurerm\service_fabric_cluster\ServiceFabricClusterProtectionLevel.tf:5-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-service-fabric-uses-available-three-levels-of-protection-available

		5  | resource "azurerm_service_fabric_cluster" "example" {
		6  |   name                 = "example-servicefabric"
		7  |   resource_group_name  = azurerm_resource_group.example.name
		8  |   location             = azurerm_resource_group.example.location
		9  |   reliability_level    = "Bronze"
		10 |   upgrade_mode         = "Manual"
		11 |   cluster_code_version = "7.1.456.959"
		12 |   vm_image             = "Windows"
		13 |   management_endpoint  = "https://example:80"
		14 |   # fabric_settings {
		15 |   #   name = "Security"
		16 |   #   parameters = {
		17 |   #     name  = "ClusterProtectionLevel"
		18 |   #     value = "EncryptAndSign"
		19 |   #   }
		20 |   # }
		21 |
		22 |
		23 |   node_type {
		24 |     name                 = "first"
		25 |     instance_count       = 3
		26 |     is_primary           = true
		27 |     client_endpoint_port = 2020
		28 |     http_endpoint_port   = 80
		29 |   }
		30 | }


Check: CKV_AZURE_125: "Ensures that Service Fabric use three levels of protection available"
	FAILED for resource: azurerm_service_fabric_cluster.example
	File: /terraform\azurerm\service_fabric_cluster\ServiceFabricClusterProtectionLevel.tf:5-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-active-directory-is-used-for-service-fabric-authentication

		5  | resource "azurerm_service_fabric_cluster" "example" {
		6  |   name                 = "example-servicefabric"
		7  |   resource_group_name  = azurerm_resource_group.example.name
		8  |   location             = azurerm_resource_group.example.location
		9  |   reliability_level    = "Bronze"
		10 |   upgrade_mode         = "Manual"
		11 |   cluster_code_version = "7.1.456.959"
		12 |   vm_image             = "Windows"
		13 |   management_endpoint  = "https://example:80"
		14 |   # fabric_settings {
		15 |   #   name = "Security"
		16 |   #   parameters = {
		17 |   #     name  = "ClusterProtectionLevel"
		18 |   #     value = "EncryptAndSign"
		19 |   #   }
		20 |   # }
		21 |
		22 |
		23 |   node_type {
		24 |     name                 = "first"
		25 |     instance_count       = 3
		26 |     is_primary           = true
		27 |     client_endpoint_port = 2020
		28 |     http_endpoint_port   = 80
		29 |   }
		30 | }


Check: CKV_AZURE_126: "Ensures that Active Directory is used for authentication for Service Fabric"
	FAILED for resource: azurerm_service_fabric_cluster.positive1
	File: /terraform\azurerm\service_fabric_cluster\azure_active_directory_authentication.tf:1-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-service-fabric-uses-available-three-levels-of-protection-available

		1  | resource "azurerm_service_fabric_cluster" "positive1" {
		2  |   name                 = "example-servicefabric"
		3  |   resource_group_name  = azurerm_resource_group.example.name
		4  |   location             = azurerm_resource_group.example.location
		5  |   reliability_level    = "Bronze"
		6  |   upgrade_mode         = "Manual"
		7  |   cluster_code_version = "7.1.456.959"
		8  |   vm_image             = "Windows"
		9  |   management_endpoint  = "https://example:80"
		10 |
		11 |   node_type {
		12 |     name                 = "first"
		13 |     instance_count       = 3
		14 |     is_primary           = true
		15 |     client_endpoint_port = 2020
		16 |     http_endpoint_port   = 80
		17 |   }
		18 |
		19 |   azure_active_directory {
		20 |     cluster_application_id = "id"
		21 |     client_application_id  = "id"
		22 |   }
		23 | }


Check: CKV_AZURE_125: "Ensures that Service Fabric use three levels of protection available"
	FAILED for resource: azurerm_service_fabric_cluster.positive1
	File: /terraform\azurerm\service_fabric_cluster\azure_active_directory_authentication.tf:1-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-active-directory-is-used-for-service-fabric-authentication

		1  | resource "azurerm_service_fabric_cluster" "positive1" {
		2  |   name                 = "example-servicefabric"
		3  |   resource_group_name  = azurerm_resource_group.example.name
		4  |   location             = azurerm_resource_group.example.location
		5  |   reliability_level    = "Bronze"
		6  |   upgrade_mode         = "Manual"
		7  |   cluster_code_version = "7.1.456.959"
		8  |   vm_image             = "Windows"
		9  |   management_endpoint  = "https://example:80"
		10 |
		11 |   node_type {
		12 |     name                 = "first"
		13 |     instance_count       = 3
		14 |     is_primary           = true
		15 |     client_endpoint_port = 2020
		16 |     http_endpoint_port   = 80
		17 |   }
		18 |
		19 |   azure_active_directory {
		20 |     cluster_application_id = "id"
		21 |     client_application_id  = "id"
		22 |   }
		23 | }


Check: CKV_AZURE_126: "Ensures that Active Directory is used for authentication for Service Fabric"
	FAILED for resource: azurerm_service_fabric_cluster.example
	File: /terraform\azurerm\service_fabric_cluster\service_fabric_cluster.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-service-fabric-uses-available-three-levels-of-protection-available

		2  | resource "azurerm_service_fabric_cluster" "example" {
		3  |   name                 = "example-servicefabric"
		4  |   resource_group_name  = azurerm_resource_group.example.name
		5  |   location             = azurerm_resource_group.example.location
		6  |   reliability_level    = "Bronze"
		7  |   upgrade_mode         = "Manual"
		8  |   cluster_code_version = "7.1.456.959"
		9  |   vm_image             = "Windows"
		10 |   management_endpoint  = "https://example:80"
		11 |
		12 |   node_type {
		13 |     name                 = "first"
		14 |     instance_count       = 3
		15 |     is_primary           = true
		16 |     client_endpoint_port = 2020
		17 |     http_endpoint_port   = 80
		18 |   }
		19 | }


Check: CKV_AZURE_125: "Ensures that Service Fabric use three levels of protection available"
	FAILED for resource: azurerm_service_fabric_cluster.example
	File: /terraform\azurerm\service_fabric_cluster\service_fabric_cluster.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-active-directory-is-used-for-service-fabric-authentication

		2  | resource "azurerm_service_fabric_cluster" "example" {
		3  |   name                 = "example-servicefabric"
		4  |   resource_group_name  = azurerm_resource_group.example.name
		5  |   location             = azurerm_resource_group.example.location
		6  |   reliability_level    = "Bronze"
		7  |   upgrade_mode         = "Manual"
		8  |   cluster_code_version = "7.1.456.959"
		9  |   vm_image             = "Windows"
		10 |   management_endpoint  = "https://example:80"
		11 |
		12 |   node_type {
		13 |     name                 = "first"
		14 |     instance_count       = 3
		15 |     is_primary           = true
		16 |     client_endpoint_port = 2020
		17 |     http_endpoint_port   = 80
		18 |   }
		19 | }


Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\StorageAccountAzureServicesAccessEnabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

		2  | resource "azurerm_storage_account_network_rules" "test" {
		3  |   resource_group_name  = azurerm_resource_group.test.name
		4  |   storage_account_name = azurerm_storage_account.test.name
		5  |
		6  |   default_action             = "Deny"
		7  |   ip_rules                   = ["127.0.0.1"]
		8  |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		9  |   bypass                     = ["Metrics"]
		10 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDefaultNetworkAccessDeny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountDisablePublicAccess.tf:2-14
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |   allow_blob_public_access  = true
		10 |
		11 |   tags = {
		12 |     environment = "staging"
		13 |   }
		14 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |
		10 |   tags = {
		11 |     environment = "staging"
		12 |   }
		13 | }


Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |
		10 |   tags = {
		11 |     environment = "staging"
		12 |   }
		13 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |
		10 |   tags = {
		11 |     environment = "staging"
		12 |   }
		13 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |
		10 |   tags = {
		11 |     environment = "staging"
		12 |   }
		13 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountEnablesSecureTransfer.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                      = "storageaccountname"
		4  |   resource_group_name       = azurerm_resource_group.example.name
		5  |   location                  = azurerm_resource_group.example.location
		6  |   account_tier              = "Standard"
		7  |   account_replication_type  = "GRS"
		8  |   enable_https_traffic_only = false
		9  |
		10 |   tags = {
		11 |     environment = "staging"
		12 |   }
		13 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                     = "example"
		4  |   resource_group_name      = data.azurerm_resource_group.example.name
		5  |   location                 = data.azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "GRS"
		8  |   network_rules {
		9  |     default_action             = "Allow"
		10 |     ip_rules                   = ["100.0.0.1"]
		11 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		12 |   }
		13 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                     = "example"
		4  |   resource_group_name      = data.azurerm_resource_group.example.name
		5  |   location                 = data.azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "GRS"
		8  |   network_rules {
		9  |     default_action             = "Allow"
		10 |     ip_rules                   = ["100.0.0.1"]
		11 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		12 |   }
		13 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                     = "example"
		4  |   resource_group_name      = data.azurerm_resource_group.example.name
		5  |   location                 = data.azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "GRS"
		8  |   network_rules {
		9  |     default_action             = "Allow"
		10 |     ip_rules                   = ["100.0.0.1"]
		11 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		12 |   }
		13 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountMinimumTlsVersion.tf:2-13
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2  | resource "azurerm_storage_account" "example" {
		3  |   name                     = "example"
		4  |   resource_group_name      = data.azurerm_resource_group.example.name
		5  |   location                 = data.azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "GRS"
		8  |   network_rules {
		9  |     default_action             = "Allow"
		10 |     ip_rules                   = ["100.0.0.1"]
		11 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		12 |   }
		13 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "this-is-wrong"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "this-is-wrong"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "this-is-wrong"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_43: "Ensure Storage Accounts adhere to the naming rules"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-accounts-adhere-to-the-naming-rules

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "this-is-wrong"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountName.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "this-is-wrong"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV_AZURE_34: "Ensure that 'Public access level' is set to Private for blob containers"
	FAILED for resource: azurerm_storage_container.example
	File: /terraform\azurerm\storage\StorageBlobServiceContainerPrivateAccess.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/set-public-access-level-to-private-for-blob-containers

		2 | resource "azurerm_storage_container" "example" {
		3 |   name                  = "vhds"
		4 |   storage_account_name  = azurerm_storage_account.example.name
		5 |   container_access_type = "blob"
		6 | }


Check: CKV_AZURE_64: "Ensure that Azure File Sync disables public network access"
	FAILED for resource: azurerm_storage_sync.test
	File: /terraform\azurerm\storage\StorageSyncPublicAccessDisabled.tf:2-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-file-sync-disables-public-network-access

		2 | resource "azurerm_storage_sync" "test" {
		3 |   name                = "example-storage-sync"
		4 |   resource_group_name = azurerm_resource_group.test.name
		5 |   location            = azurerm_resource_group.test.location
		6 |   tags = {
		7 |     foo = "bar"
		8 |   }
		9 | }


Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                = "storageaccountname"
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   location                 = azurerm_resource_group.example.location
		8  |   account_tier             = "Standard"
		9  |   account_replication_type = "LRS"
		10 |
		11 |   network_rules {
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = ["100.0.0.1"]
		14 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		15 |     bypass                     = ["Metrics"]
		16 |   }
		17 |
		18 |   tags = {
		19 |     environment = "staging"
		20 |   }
		21 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                = "storageaccountname"
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   location                 = azurerm_resource_group.example.location
		8  |   account_tier             = "Standard"
		9  |   account_replication_type = "LRS"
		10 |
		11 |   network_rules {
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = ["100.0.0.1"]
		14 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		15 |     bypass                     = ["Metrics"]
		16 |   }
		17 |
		18 |   tags = {
		19 |     environment = "staging"
		20 |   }
		21 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                = "storageaccountname"
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   location                 = azurerm_resource_group.example.location
		8  |   account_tier             = "Standard"
		9  |   account_replication_type = "LRS"
		10 |
		11 |   network_rules {
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = ["100.0.0.1"]
		14 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		15 |     bypass                     = ["Metrics"]
		16 |   }
		17 |
		18 |   tags = {
		19 |     environment = "staging"
		20 |   }
		21 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:3-21
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                = "storageaccountname"
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   location                 = azurerm_resource_group.example.location
		8  |   account_tier             = "Standard"
		9  |   account_replication_type = "LRS"
		10 |
		11 |   network_rules {
		12 |     default_action             = "Deny"
		13 |     ip_rules                   = ["100.0.0.1"]
		14 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		15 |     bypass                     = ["Metrics"]
		16 |   }
		17 |
		18 |   tags = {
		19 |     environment = "staging"
		20 |   }
		21 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\allow-microsoft-service-bypass.tf:23-31
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		23 | resource "azurerm_storage_account_network_rules" "test" {
		24 |   resource_group_name  = azurerm_resource_group.test.name
		25 |   storage_account_name = azurerm_storage_account.test.name
		26 |
		27 |   default_action             = "Allow"
		28 |   ip_rules                   = ["127.0.0.1"]
		29 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		30 |   bypass                     = ["Metrics"]
		31 | }


Check: CKV_AZURE_34: "Ensure that 'Public access level' is set to Private for blob containers"
	FAILED for resource: azurerm_storage_container.fail
	File: /terraform\azurerm\storage\container-activity-logs-not-public.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/set-public-access-level-to-private-for-blob-containers

		3 | resource "azurerm_storage_container" "fail" {
		4 |   name                  = "terraform-container-storage"
		5 |   container_access_type = "public"
		6 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.fail
	File: /terraform\azurerm\storage\default-action-deny.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		2 | resource "azurerm_storage_account_network_rules" "fail" {
		3 |
		4 |   default_action             = "Allow"
		5 |   ip_rules                   = ["127.0.0.1"]
		6 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		7 |   bypass                     = ["Metrics"]
		8 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                      = "storageaccountname"
		5  |   resource_group_name       = azurerm_resource_group.example.name
		6  |   location                  = azurerm_resource_group.example.location
		7  |   account_tier              = "Standard"
		8  |   account_replication_type  = "GRS"
		9  |   enable_https_traffic_only = false
		10 | }


Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                      = "storageaccountname"
		5  |   resource_group_name       = azurerm_resource_group.example.name
		6  |   location                  = azurerm_resource_group.example.location
		7  |   account_tier              = "Standard"
		8  |   account_replication_type  = "GRS"
		9  |   enable_https_traffic_only = false
		10 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                      = "storageaccountname"
		5  |   resource_group_name       = azurerm_resource_group.example.name
		6  |   location                  = azurerm_resource_group.example.location
		7  |   account_tier              = "Standard"
		8  |   account_replication_type  = "GRS"
		9  |   enable_https_traffic_only = false
		10 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                      = "storageaccountname"
		5  |   resource_group_name       = azurerm_resource_group.example.name
		6  |   location                  = azurerm_resource_group.example.location
		7  |   account_tier              = "Standard"
		8  |   account_replication_type  = "GRS"
		9  |   enable_https_traffic_only = false
		10 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\enforce-https.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                      = "storageaccountname"
		5  |   resource_group_name       = azurerm_resource_group.example.name
		6  |   location                  = azurerm_resource_group.example.location
		7  |   account_tier              = "Standard"
		8  |   account_replication_type  = "GRS"
		9  |   enable_https_traffic_only = false
		10 | }


Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: azurerm_storage_account_network_rules.test
	File: /terraform\azurerm\storage\netrules.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

		1 | resource "azurerm_storage_account_network_rules" "test" {
		2 |   resource_group_name  = azurerm_resource_group.example.name
		3 |   storage_account_name = azurerm_storage_account.example.name
		4 |
		5 |   default_action             = "Deny"
		6 |   ip_rules                   = ["127.0.0.1"]
		7 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		8 |   bypass                     = ["Metrics"]
		9 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		20 | resource "azurerm_storage_account" "positive2" {
		21 |   name                = "storageaccountname"
		22 |   resource_group_name = azurerm_resource_group.example.name
		23 |
		24 |   location                 = azurerm_resource_group.example.location
		25 |   account_tier             = "Standard"
		26 |   account_replication_type = "LRS"
		27 |
		28 |   network_rules {
		29 |     default_action             = "Allow"
		30 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		31 |   }
		32 |
		33 |   tags = {
		34 |     environment = "staging"
		35 |   }
		36 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		20 | resource "azurerm_storage_account" "positive2" {
		21 |   name                = "storageaccountname"
		22 |   resource_group_name = azurerm_resource_group.example.name
		23 |
		24 |   location                 = azurerm_resource_group.example.location
		25 |   account_tier             = "Standard"
		26 |   account_replication_type = "LRS"
		27 |
		28 |   network_rules {
		29 |     default_action             = "Allow"
		30 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		31 |   }
		32 |
		33 |   tags = {
		34 |     environment = "staging"
		35 |   }
		36 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		20 | resource "azurerm_storage_account" "positive2" {
		21 |   name                = "storageaccountname"
		22 |   resource_group_name = azurerm_resource_group.example.name
		23 |
		24 |   location                 = azurerm_resource_group.example.location
		25 |   account_tier             = "Standard"
		26 |   account_replication_type = "LRS"
		27 |
		28 |   network_rules {
		29 |     default_action             = "Allow"
		30 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		31 |   }
		32 |
		33 |   tags = {
		34 |     environment = "staging"
		35 |   }
		36 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\public_storage_account.tf:20-36
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		20 | resource "azurerm_storage_account" "positive2" {
		21 |   name                = "storageaccountname"
		22 |   resource_group_name = azurerm_resource_group.example.name
		23 |
		24 |   location                 = azurerm_resource_group.example.location
		25 |   account_tier             = "Standard"
		26 |   account_replication_type = "LRS"
		27 |
		28 |   network_rules {
		29 |     default_action             = "Allow"
		30 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		31 |   }
		32 |
		33 |   tags = {
		34 |     environment = "staging"
		35 |   }
		36 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.positive3
	File: /terraform\azurerm\storage\public_storage_account.tf:38-46
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		38 | resource "azurerm_storage_account_network_rules" "positive3" {
		39 |   resource_group_name  = azurerm_resource_group.test.name
		40 |   storage_account_name = azurerm_storage_account.test.name
		41 |
		42 |   default_action             = "Allow"
		43 |   ip_rules                   = ["0.0.0.0/0"]
		44 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		45 |   bypass                     = ["Metrics"]
		46 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.positive4
	File: /terraform\azurerm\storage\public_storage_account.tf:48-55
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		48 | resource "azurerm_storage_account_network_rules" "positive4" {
		49 |   resource_group_name  = azurerm_resource_group.test.name
		50 |   storage_account_name = azurerm_storage_account.test.name
		51 |
		52 |   default_action             = "Allow"
		53 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		54 |   bypass                     = ["Metrics"]
		55 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                     = "example"
		5  |   resource_group_name      = data.azurerm_resource_group.example.name
		6  |   location                 = data.azurerm_resource_group.example.location
		7  |   account_tier             = "Standard"
		8  |   account_replication_type = "GRS"
		9  |   queue_properties {
		10 |   }
		11 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                     = "example"
		5  |   resource_group_name      = data.azurerm_resource_group.example.name
		6  |   location                 = data.azurerm_resource_group.example.location
		7  |   account_tier             = "Standard"
		8  |   account_replication_type = "GRS"
		9  |   queue_properties {
		10 |   }
		11 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                     = "example"
		5  |   resource_group_name      = data.azurerm_resource_group.example.name
		6  |   location                 = data.azurerm_resource_group.example.location
		7  |   account_tier             = "Standard"
		8  |   account_replication_type = "GRS"
		9  |   queue_properties {
		10 |   }
		11 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\queue-services-logging-enabled.tf:3-11
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		3  | resource "azurerm_storage_account" "fail" {
		4  |   name                     = "example"
		5  |   resource_group_name      = data.azurerm_resource_group.example.name
		6  |   location                 = data.azurerm_resource_group.example.location
		7  |   account_tier             = "Standard"
		8  |   account_replication_type = "GRS"
		9  |   queue_properties {
		10 |   }
		11 | }


Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_59: "Ensure that Storage accounts disallow public access"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-disallow-public-access

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		1 | resource "azurerm_storage_account" "positive1" {
		2 |   name                      = "example1"
		3 |   resource_group_name       = data.azurerm_resource_group.example.name
		4 |   location                  = data.azurerm_resource_group.example.location
		5 |   account_tier              = "Standard"
		6 |   account_replication_type  = "GRS"
		7 |   enable_https_traffic_only = false
		8 | }


Check: CKV_AZURE_60: "Ensure that storage account enables secure transfer"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-account-enables-secure-transfer

		1 | resource "azurerm_storage_account" "positive1" {
		2 |   name                      = "example1"
		3 |   resource_group_name       = data.azurerm_resource_group.example.name
		4 |   location                  = data.azurerm_resource_group.example.location
		5 |   account_tier              = "Standard"
		6 |   account_replication_type  = "GRS"
		7 |   enable_https_traffic_only = false
		8 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		1 | resource "azurerm_storage_account" "positive1" {
		2 |   name                      = "example1"
		3 |   resource_group_name       = data.azurerm_resource_group.example.name
		4 |   location                  = data.azurerm_resource_group.example.location
		5 |   account_tier              = "Standard"
		6 |   account_replication_type  = "GRS"
		7 |   enable_https_traffic_only = false
		8 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		1 | resource "azurerm_storage_account" "positive1" {
		2 |   name                      = "example1"
		3 |   resource_group_name       = data.azurerm_resource_group.example.name
		4 |   location                  = data.azurerm_resource_group.example.location
		5 |   account_tier              = "Standard"
		6 |   account_replication_type  = "GRS"
		7 |   enable_https_traffic_only = false
		8 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\storage_account_not_forcing_https.tf:1-8
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		1 | resource "azurerm_storage_account" "positive1" {
		2 |   name                      = "example1"
		3 |   resource_group_name       = data.azurerm_resource_group.example.name
		4 |   location                  = data.azurerm_resource_group.example.location
		5 |   account_tier              = "Standard"
		6 |   account_replication_type  = "GRS"
		7 |   enable_https_traffic_only = false
		8 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account_network_rules.positive1
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		1 | resource "azurerm_storage_account_network_rules" "positive1" {
		2 |   resource_group_name  = azurerm_resource_group.test.name
		3 |   storage_account_name = azurerm_storage_account.test.name
		4 |
		5 |   default_action             = "Allow"
		6 |   ip_rules                   = ["127.0.0.1"]
		7 |   virtual_network_subnet_ids = [azurerm_subnet.test.id]
		8 |   bypass                     = ["Metrics"]
		9 | }


Check: CKV_AZURE_36: "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/enable-trusted-microsoft-services-for-storage-account-access

		11 | resource "azurerm_storage_account" "positive2" {
		12 |   name                = "storageaccountname"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |
		15 |   location                 = azurerm_resource_group.example.location
		16 |   account_tier             = "Standard"
		17 |   account_replication_type = "LRS"
		18 |
		19 |   network_rules {
		20 |     default_action             = "Deny"
		21 |     bypass                     = ["None"]
		22 |     ip_rules                   = ["100.0.0.1"]
		23 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		24 |   }
		25 |
		26 |   tags = {
		27 |     environment = "staging"
		28 |   }
		29 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		11 | resource "azurerm_storage_account" "positive2" {
		12 |   name                = "storageaccountname"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |
		15 |   location                 = azurerm_resource_group.example.location
		16 |   account_tier             = "Standard"
		17 |   account_replication_type = "LRS"
		18 |
		19 |   network_rules {
		20 |     default_action             = "Deny"
		21 |     bypass                     = ["None"]
		22 |     ip_rules                   = ["100.0.0.1"]
		23 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		24 |   }
		25 |
		26 |   tags = {
		27 |     environment = "staging"
		28 |   }
		29 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		11 | resource "azurerm_storage_account" "positive2" {
		12 |   name                = "storageaccountname"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |
		15 |   location                 = azurerm_resource_group.example.location
		16 |   account_tier             = "Standard"
		17 |   account_replication_type = "LRS"
		18 |
		19 |   network_rules {
		20 |     default_action             = "Deny"
		21 |     bypass                     = ["None"]
		22 |     ip_rules                   = ["100.0.0.1"]
		23 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		24 |   }
		25 |
		26 |   tags = {
		27 |     environment = "staging"
		28 |   }
		29 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		11 | resource "azurerm_storage_account" "positive2" {
		12 |   name                = "storageaccountname"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |
		15 |   location                 = azurerm_resource_group.example.location
		16 |   account_tier             = "Standard"
		17 |   account_replication_type = "LRS"
		18 |
		19 |   network_rules {
		20 |     default_action             = "Deny"
		21 |     bypass                     = ["None"]
		22 |     ip_rules                   = ["100.0.0.1"]
		23 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		24 |   }
		25 |
		26 |   tags = {
		27 |     environment = "staging"
		28 |   }
		29 | }


Check: CKV_AZURE_35: "Ensure default network access rule for Storage Accounts is set to deny"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/set-default-network-access-rule-for-storage-accounts-to-deny

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV_AZURE_33: "Ensure Storage logging is enabled for Queue service for read, write and delete requests"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV_AZURE_44: "Ensure Storage Account is using the latest version of TLS encryption"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_azr_storage_2

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV_AZURE_3: "Ensure that 'Secure transfer required' is set to 'Enabled'"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-transfer-required-is-enabled

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV_AZURE_58: "Ensure that Azure Synapse workspaces enables managed virtual networks"
	FAILED for resource: azurerm_synapse_workspace.example
	File: /terraform\azurerm\synapse\SynapseWorkspaceEnablesManagedVirtualNetworks.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-synapse-workspaces-enables-managed-virtual-networks

		2  | resource "azurerm_synapse_workspace" "example" {
		3  |   name                                 = "example"
		4  |   resource_group_name                  = azurerm_resource_group.example.name
		5  |   location                             = azurerm_resource_group.example.location
		6  |   storage_data_lake_gen2_filesystem_id = azurerm_storage_data_lake_gen2_filesystem.example.id
		7  |   sql_administrator_login              = "sqladminuser"
		8  |   sql_administrator_login_password     = "H@Sh1CoR3!"
		9  |   managed_virtual_network_enabled      = false
		10 |   aad_admin {
		11 |     login     = "AzureAD Admin"
		12 |     object_id = "00000000-0000-0000-0000-000000000000"
		13 |     tenant_id = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 |
		16 |   tags = {
		17 |     Env = "production"
		18 |   }
		19 | }


Check: CKV_AZURE_58: "Ensure that Azure Synapse workspaces enables managed virtual networks"
	FAILED for resource: azurerm_synapse_workspace.fail
	File: /terraform\azurerm\synapse\virtual-network-enabled.tf:2-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-synapse-workspaces-enables-managed-virtual-networks

		2  | resource "azurerm_synapse_workspace" "fail" {
		3  |   name                                 = "example"
		4  |   resource_group_name                  = azurerm_resource_group.example.name
		5  |   location                             = azurerm_resource_group.example.location
		6  |   storage_data_lake_gen2_filesystem_id = azurerm_storage_data_lake_gen2_filesystem.example.id
		7  |   sql_administrator_login              = "sqladminuser"
		8  |   sql_administrator_login_password     = "H@Sh1CoR3!"
		9  |
		10 |   aad_admin {
		11 |     login     = "AzureAD Admin"
		12 |     object_id = "00000000-0000-0000-0000-000000000000"
		13 |     tenant_id = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 |
		16 |   tags = {
		17 |     Env = "production"
		18 |   }
		19 | }


Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

		1  | resource "azurerm_virtual_machine" "fail" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = [azurerm_network_interface.main.id]
		6  |   vm_size               = "Standard_DS1_v2"
		7  |   storage_image_reference {
		8  |     publisher = "Canonical"
		9  |     offer     = "UbuntuServer"
		10 |     sku       = "16.04-LTS"
		11 |     version   = "latest"
		12 |   }
		13 |
		14 |   storage_os_disk {
		15 |     name              = "myosdisk1"
		16 |     caching           = "ReadWrite"
		17 |     create_option     = "FromImage"
		18 |     managed_disk_type = "Standard_LRS"
		19 |   }
		20 |   os_profile {
		21 |     computer_name  = "hostname"
		22 |     admin_username = "testadmin"
		23 |     admin_password = "Password1234!"
		24 |   }
		25 |   os_profile_linux_config {
		26 |     disable_password_authentication = false
		27 |   }
		28 | }


Check: CKV_AZURE_49: "Ensure Azure linux scale set does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_linux_virtual_machine_scale_set.example
	File: /terraform\azurerm\vms\ScaleSetPassword.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_13

		2  | resource "azurerm_linux_virtual_machine_scale_set" "example" {
		3  |   name                            = var.scaleset_name
		4  |   resource_group_name             = var.resource_group.name
		5  |   location                        = var.resource_group.location
		6  |   sku                             = var.sku
		7  |   instances                       = var.instance_count
		8  |   admin_username                  = var.admin_username
		9  |   disable_password_authentication = false
		10 |   tags                            = var.common_tags
		11 | }


Check: CKV_AZURE_97: "Ensure that Virtual machine scale sets have encryption at host enabled"
	FAILED for resource: azurerm_linux_virtual_machine_scale_set.example
	File: /terraform\azurerm\vms\ScaleSetPassword.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machine-scale-sets-have-encryption-at-host-enabled

		2  | resource "azurerm_linux_virtual_machine_scale_set" "example" {
		3  |   name                            = var.scaleset_name
		4  |   resource_group_name             = var.resource_group.name
		5  |   location                        = var.resource_group.location
		6  |   sku                             = var.sku
		7  |   instances                       = var.instance_count
		8  |   admin_username                  = var.admin_username
		9  |   disable_password_authentication = false
		10 |   tags                            = var.common_tags
		11 | }


Check: CKV_AZURE_45: "Ensure that no sensitive credentials are exposed in VM custom_data"
	FAILED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets

		2  | resource "azurerm_virtual_machine" "secret" {
		3  |   name = "${var.prefix}-vm"
		4  |
		5  |   os_profile {
		6  |     computer_name = "hostname"
		7  |     custom_data   = <<EOF
		8  | 0000-0000-0000-0000-000000000000
		9  | EOF
		10 |   }
		11 | }


Check: CKV_AZURE_97: "Ensure that Virtual machine scale sets have encryption at host enabled"
	FAILED for resource: azurerm_windows_virtual_machine_scale_set.example
	File: /terraform\azurerm\vms\VMEncryptionAtHostEnabled.tf:2-33
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machine-scale-sets-have-encryption-at-host-enabled

		2  | resource "azurerm_windows_virtual_machine_scale_set" "example" {
		3  |   name                = "example-vmss"
		4  |   resource_group_name = azurerm_resource_group.example.name
		5  |   location            = azurerm_resource_group.example.location
		6  |   sku                 = "Standard_F2"
		7  |   instances           = 1
		8  |   admin_password      = "P@55w0rd1234!"
		9  |   admin_username      = "adminuser"
		10 |
		11 |   source_image_reference {
		12 |     publisher = "MicrosoftWindowsServer"
		13 |     offer     = "WindowsServer"
		14 |     sku       = "2016-Datacenter-Server-Core"
		15 |     version   = "latest"
		16 |   }
		17 |
		18 |   os_disk {
		19 |     storage_account_type = "Standard_LRS"
		20 |     caching              = "ReadWrite"
		21 |   }
		22 |
		23 |   network_interface {
		24 |     name    = "example"
		25 |     primary = true
		26 |
		27 |     ip_configuration {
		28 |       name      = "internal"
		29 |       primary   = true
		30 |       subnet_id = azurerm_subnet.internal.id
		31 |     }
		32 |   }
		33 | }


Check: CKV_AZURE_95: "Ensure that automatic OS image patching is enabled for Virtual Machine Scale Sets"
	FAILED for resource: azurerm_virtual_machine_scale_set.example
	File: /terraform\azurerm\vms\VMScaleSetsAutoOSImagePatchingEnabled.tf:2-77
	Guide: https://docs.bridgecrew.io/docs/ensure-that-automatic-os-image-patching-is-enabled-for-virtual-machine-scale-sets

		2  | resource "azurerm_virtual_machine_scale_set" "example" {
		3  |   name                = "mytestscaleset-1"
		4  |   location            = azurerm_resource_group.example.location
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |
		7  |   # automatic rolling upgrade
		8  |   upgrade_policy_mode = "Rolling"
		9  |
		10 |   rolling_upgrade_policy {
		11 |     max_batch_instance_percent              = 20
		12 |     max_unhealthy_instance_percent          = 20
		13 |     max_unhealthy_upgraded_instance_percent = 5
		14 |     pause_time_between_batches              = "PT0S"
		15 |   }
		16 |
		17 |   # required when using rolling upgrade policy
		18 |   health_probe_id = azurerm_lb_probe.example.id
		19 |
		20 |   sku {
		21 |     name     = "Standard_F2"
		22 |     tier     = "Standard"
		23 |     capacity = 2
		24 |   }
		25 |
		26 |   storage_profile_image_reference {
		27 |     publisher = "Canonical"
		28 |     offer     = "UbuntuServer"
		29 |     sku       = "16.04-LTS"
		30 |     version   = "latest"
		31 |   }
		32 |
		33 |   storage_profile_os_disk {
		34 |     name              = ""
		35 |     caching           = "ReadWrite"
		36 |     create_option     = "FromImage"
		37 |     managed_disk_type = "Standard_LRS"
		38 |   }
		39 |
		40 |   storage_profile_data_disk {
		41 |     lun           = 0
		42 |     caching       = "ReadWrite"
		43 |     create_option = "Empty"
		44 |     disk_size_gb  = 10
		45 |   }
		46 |
		47 |   os_profile {
		48 |     computer_name_prefix = "testvm"
		49 |     admin_username       = "myadmin"
		50 |   }
		51 |
		52 |   os_profile_linux_config {
		53 |     disable_password_authentication = true
		54 |
		55 |     ssh_keys {
		56 |       path     = "/home/myadmin/.ssh/authorized_keys"
		57 |       key_data = file("~/.ssh/demo_key.pub")
		58 |     }
		59 |   }
		60 |
		61 |   network_profile {
		62 |     name    = "terraformnetworkprofile"
		63 |     primary = true
		64 |
		65 |     ip_configuration {
		66 |       name                                   = "TestIPConfiguration"
		67 |       primary                                = true
		68 |       subnet_id                              = azurerm_subnet.example.id
		69 |       load_balancer_backend_address_pool_ids = [azurerm_lb_backend_address_pool.bpepool.id]
		70 |       load_balancer_inbound_nat_rules_ids    = [azurerm_lb_nat_pool.lbnatpool.id]
		71 |     }
		72 |   }
		73 |
		74 |   tags = {
		75 |     environment = "staging"
		76 |   }
		77 | }


Check: CKV_AZURE_50: "Ensure Virtual Machine Extensions are not Installed"
	FAILED for resource: azurerm_linux_virtual_machine.example
	File: /terraform\azurerm\vms\VMStorageOsDisk.tf:2-30
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_14

		2  | resource "azurerm_linux_virtual_machine" "example" {
		3  |   name                  = "${var.prefix}-vm"
		4  |   location              = azurerm_resource_group.main.location
		5  |   resource_group_name   = azurerm_resource_group.main.name
		6  |   network_interface_ids = [azurerm_network_interface.main.id]
		7  |   vm_size               = "Standard_DS1_v2"
		8  |
		9  |   storage_image_reference {
		10 |     publisher = "Canonical"
		11 |     offer     = "UbuntuServer"
		12 |     sku       = "16.04-LTS"
		13 |     version   = "latest"
		14 |   }
		15 |   storage_os_disk {
		16 |     name              = "myosdisk1"
		17 |     caching           = "ReadWrite"
		18 |     create_option     = "FromImage"
		19 |     managed_disk_type = "Standard_LRS"
		20 |     vhd_uri           = "someURI"
		21 |   }
		22 |   os_profile {
		23 |     computer_name  = "hostname"
		24 |     admin_username = "testadmin"
		25 |     admin_password = "Password1234!"
		26 |   }
		27 |   tags = {
		28 |     environment = "staging"
		29 |   }
		30 | }


Check: CKV_AZURE_92: "Ensure that Virtual Machines use managed disks"
	FAILED for resource: azurerm_linux_virtual_machine.example
	File: /terraform\azurerm\vms\VMStorageOsDisk.tf:2-30
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-use-managed-disks

		2  | resource "azurerm_linux_virtual_machine" "example" {
		3  |   name                  = "${var.prefix}-vm"
		4  |   location              = azurerm_resource_group.main.location
		5  |   resource_group_name   = azurerm_resource_group.main.name
		6  |   network_interface_ids = [azurerm_network_interface.main.id]
		7  |   vm_size               = "Standard_DS1_v2"
		8  |
		9  |   storage_image_reference {
		10 |     publisher = "Canonical"
		11 |     offer     = "UbuntuServer"
		12 |     sku       = "16.04-LTS"
		13 |     version   = "latest"
		14 |   }
		15 |   storage_os_disk {
		16 |     name              = "myosdisk1"
		17 |     caching           = "ReadWrite"
		18 |     create_option     = "FromImage"
		19 |     managed_disk_type = "Standard_LRS"
		20 |     vhd_uri           = "someURI"
		21 |   }
		22 |   os_profile {
		23 |     computer_name  = "hostname"
		24 |     admin_username = "testadmin"
		25 |     admin_password = "Password1234!"
		26 |   }
		27 |   tags = {
		28 |     environment = "staging"
		29 |   }
		30 | }


Check: CKV_AZURE_50: "Ensure Virtual Machine Extensions are not Installed"
	FAILED for resource: azurerm_linux_virtual_machine.default
	File: /terraform\azurerm\vms\linux_virtual_machine.tf:4-20
	Guide: https://docs.bridgecrew.io/docs/bc_azr_general_14

		4  | resource "azurerm_linux_virtual_machine" "default" {
		5  |   admin_password      = "admin"
		6  |   admin_username      = "admin123"
		7  |   location            = "azurerm_resource_group.test.location"
		8  |   name                = "linux-vm"
		9  |   resource_group_name = "azurerm_resource_group.test.name"
		10 |   size                = "Standard_F2"
		11 |
		12 |   network_interface_ids = [
		13 |     "azurerm_network_interface.test.id"
		14 |   ]
		15 |
		16 |   os_disk {
		17 |     caching              = "ReadWrite"
		18 |     storage_account_type = "Standard_LRS"
		19 |   }
		20 | }


Check: CKV_AZURE_1: "Ensure Azure Instance does not use basic authentication(Use SSH Key Instead)"
	FAILED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/bc_azr_networking_1

		1  | resource "azurerm_virtual_machine" "positive1" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = []
		6  |   vm_size               = "Standard_DS1_v2"
		7  |
		8  |   os_profile_linux_config {
		9  |     disable_password_authentication = false
		10 |   }
		11 | }


Check: CKV_AZURE_122: "Ensure that Application Gateway uses WAF in "Detection" or "Prevention" modes"
	FAILED for resource: azurerm_web_application_firewall_policy.example
	File: /terraform\azurerm\waf\WAFSpecifiedModeAppGW.tf:3-86
	Guide: https://docs.bridgecrew.io/docs/ensure-that-application-gateway-uses-waf-in-detection-or-prevention-modes

		3  | resource "azurerm_web_application_firewall_policy" "example" {
		4  |   name                = "example-wafpolicy"
		5  |   resource_group_name = azurerm_resource_group.example.name
		6  |   location            = azurerm_resource_group.example.location
		7  |
		8  |   custom_rules {
		9  |     name      = "Rule1"
		10 |     priority  = 1
		11 |     rule_type = "MatchRule"
		12 |
		13 |     match_conditions {
		14 |       match_variables {
		15 |         variable_name = "RemoteAddr"
		16 |       }
		17 |
		18 |       operator           = "IPMatch"
		19 |       negation_condition = false
		20 |       match_values       = ["192.168.1.0/24", "10.0.0.0/24"]
		21 |     }
		22 |
		23 |     action = "Block"
		24 |   }
		25 |
		26 |   custom_rules {
		27 |     name      = "Rule2"
		28 |     priority  = 2
		29 |     rule_type = "MatchRule"
		30 |
		31 |     match_conditions {
		32 |       match_variables {
		33 |         variable_name = "RemoteAddr"
		34 |       }
		35 |
		36 |       operator           = "IPMatch"
		37 |       negation_condition = false
		38 |       match_values       = ["192.168.1.0/24"]
		39 |     }
		40 |
		41 |     match_conditions {
		42 |       match_variables {
		43 |         variable_name = "RequestHeaders"
		44 |         selector      = "UserAgent"
		45 |       }
		46 |
		47 |       operator           = "Contains"
		48 |       negation_condition = false
		49 |       match_values       = ["Windows"]
		50 |     }
		51 |
		52 |     action = "Block"
		53 |   }
		54 |
		55 |   policy_settings {
		56 |     enabled                     = false
		57 |     request_body_check          = true
		58 |     file_upload_limit_in_mb     = 100
		59 |     max_request_body_size_in_kb = 128
		60 |   }
		61 |
		62 |   managed_rules {
		63 |     exclusion {
		64 |       match_variable          = "RequestHeaderNames"
		65 |       selector                = "x-company-secret-header"
		66 |       selector_match_operator = "Equals"
		67 |     }
		68 |     exclusion {
		69 |       match_variable          = "RequestCookieNames"
		70 |       selector                = "too-tasty"
		71 |       selector_match_operator = "EndsWith"
		72 |     }
		73 |
		74 |     managed_rule_set {
		75 |       type    = "OWASP"
		76 |       version = "3.1"
		77 |       rule_group_override {
		78 |         rule_group_name = "REQUEST-920-PROTOCOL-ENFORCEMENT"
		79 |         disabled_rules = [
		80 |           "920300",
		81 |           "920440"
		82 |         ]
		83 |       }
		84 |     }
		85 |   }
		86 | }


Check: CKV_AZURE_120: "Ensure that Application Gateway enables WAF"
	FAILED for resource: azurerm_application_gateway.positive1
	File: /terraform\azurerm\waf\waf_is_disabled_for_azure_application_gateway.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-application-gateway-enables-waf

		1 | resource "azurerm_application_gateway" "positive1" {
		2 |   name                = "example-appgateway"
		3 |   resource_group_name = azurerm_resource_group.example.name
		4 |   location            = azurerm_resource_group.example.location
		5 |
		6 |   waf_configuration {
		7 |     enabled = false
		8 |   }
		9 | }


Check: CKV_AZURE_120: "Ensure that Application Gateway enables WAF"
	FAILED for resource: azurerm_application_gateway.positive2
	File: /terraform\azurerm\waf\waf_is_disabled_for_azure_application_gateway.tf:11-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-application-gateway-enables-waf

		11 | resource "azurerm_application_gateway" "positive2" {
		12 |   name                = "example-appgateway"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |   location            = azurerm_resource_group.example.location
		15 | }


Check: CKV_DIO_4: "Ensure the firewall ingress is not wide open"
	FAILED for resource: digitalocean_firewall.fail
	File: /terraform\digitalocean\compute\no-public-ingress.tf:6-16

		6  | resource "digitalocean_firewall" "fail" {
		7  |   name = "ssh-from-world"
		8  |
		9  |   droplet_ids = [digitalocean_droplet.web.id]
		10 |
		11 |   inbound_rule {
		12 |     protocol         = "http"
		13 |     port_range       = "80"
		14 |     source_addresses = ["0.0.0.0/0", "::/0"]
		15 |   }
		16 | }


Check: CKV_DIO_2: "Ensure the droplet specifies an SSH key"
	FAILED for resource: digitalocean_droplet.fail
	File: /terraform\digitalocean\droplet\use-ssh-keys.tf:6-11

		6  | resource "digitalocean_droplet" "fail" {
		7  |   image  = "ubuntu-18-04-x64"
		8  |   name   = "web-1"
		9  |   region = "nyc2"
		10 |   size   = "s-1vcpu-1gb"
		11 | }


Check: CKV_DIO_3: "Ensure the Spaces bucket is private"
	FAILED for resource: digitalocean_spaces_bucket.fail
	File: /terraform\digitalocean\spaces\spaces_bucket.tf:10-15

		10 | resource "digitalocean_spaces_bucket" "fail" {
		11 |   name          = "public_space"
		12 |   region        = "nyc3"
		13 |   acl           = "public-read"
		14 |   force_destroy = true
		15 | }


Check: CKV_DIO_1: "Ensure the Spaces bucket has versioning enabled"
	FAILED for resource: digitalocean_spaces_bucket.fail
	File: /terraform\digitalocean\spaces\spaces_bucket.tf:10-15

		10 | resource "digitalocean_spaces_bucket" "fail" {
		11 |   name          = "public_space"
		12 |   region        = "nyc3"
		13 |   acl           = "public-read"
		14 |   force_destroy = true
		15 | }


Check: CKV_GIT_1: "Ensure Repository is Private"
	FAILED for resource: github_repository.fail
	File: /terraform\github\repositories\repository.tf:9-21
	Guide: https://docs.bridgecrew.io/docs/ensure-repository-is-private

		9  | resource "github_repository" "fail" {
		10 |   name        = "example"
		11 |   description = "My awesome codebase"
		12 |
		13 |   visibility = "public"
		14 |
		15 |   template {
		16 |     owner      = "github"
		17 |     repository = "terraform-module-template"
		18 |   }
		19 |   vulnerability_alerts = false
		20 |
		21 | }


Check: CKV_GIT_3: "Ensure GitHub repository has vulnerability alerts enabled"
	FAILED for resource: github_repository.fail
	File: /terraform\github\repositories\repository.tf:9-21

		9  | resource "github_repository" "fail" {
		10 |   name        = "example"
		11 |   description = "My awesome codebase"
		12 |
		13 |   visibility = "public"
		14 |
		15 |   template {
		16 |     owner      = "github"
		17 |     repository = "terraform-module-template"
		18 |   }
		19 |   vulnerability_alerts = false
		20 |
		21 | }


Check: CKV_GIT_4: "Ensure Secrets are encrypted"
	FAILED for resource: github_actions_environment_secret.fail
	File: /terraform\github\secrets\secrets.tf:5-9

		5 | resource "github_actions_environment_secret" "fail" {
		6 |   environment     = "example_environment"
		7 |   secret_name     = "example_secret_name"
		8 |   plaintext_value = "INTHECLEAR"
		9 | }


Check: CKV_GIT_4: "Ensure Secrets are encrypted"
	FAILED for resource: github_actions_organization_secret.fail
	File: /terraform\github\secrets\secrets.tf:11-15

		11 | resource "github_actions_organization_secret" "fail" {
		12 |   environment     = "example_environment"
		13 |   secret_name     = "example_secret_name"
		14 |   plaintext_value = "INTHECLEAR"
		15 | }


Check: CKV_GIT_4: "Ensure Secrets are encrypted"
	FAILED for resource: github_actions_secret.fail
	File: /terraform\github\secrets\secrets.tf:17-21

		17 | resource "github_actions_secret" "fail" {
		18 |   environment     = "example_environment"
		19 |   secret_name     = "example_secret_name"
		20 |   plaintext_value = "INTHECLEAR"
		21 | }


Check: CKV_GIT_2: "Ensure Repository Webhook uses secure Ssl"
	FAILED for resource: github_repository_webhook.foo
	File: /terraform\github\webhook\repository_webhook.tf:5-11

		5  | resource "github_repository_webhook" "foo" {
		6  |   repository = github_repository.repo.name
		7  |   name       = "web"
		8  |   configuration {
		9  |     insecure_ssl = true
		10 |   }
		11 | }


Check: CKV_GCP_80: "Ensure Big Query Tables are encrypted with Customer Supplied Encryption Keys (CSEK)"
	FAILED for resource: google_bigquery_table.fail
	File: /terraform\google\bigquery\big_query_table.tf:3-23

		3  | resource "google_bigquery_table" "fail" {
		4  |   dataset_id = google_bigquery_dataset.default.dataset_id
		5  |   table_id   = "sheet"
		6  |
		7  |   external_data_configuration {
		8  |     autodetect    = true
		9  |     source_format = "GOOGLE_SHEETS"
		10 |
		11 |     google_sheets_options {
		12 |       skip_leading_rows = 1
		13 |     }
		14 |
		15 |     source_uris = [
		16 |       "https://docs.google.com/spreadsheets/d/123456789012345",
		17 |     ]
		18 |   }
		19 |
		20 |   # encryption_configuration {
		21 |   #   kms_key_name = var.kms_key_name
		22 |   # }
		23 | }


Check: CKV_GCP_81: "Ensure Big Query Tables are encrypted with Customer Supplied Encryption Keys (CSEK)"
	FAILED for resource: google_bigquery_dataset.fail
	File: /terraform\google\bigquery\bigquery_dataset.tf:7-31

		7  | resource "google_bigquery_dataset" "fail" {
		8  |   dataset_id                  = "example_dataset"
		9  |   friendly_name               = "test"
		10 |   description                 = "This is a test description"
		11 |   location                    = "EU"
		12 |   default_table_expiration_ms = 3600000
		13 |
		14 |   labels = {
		15 |     env = "default"
		16 |   }
		17 |
		18 |   access {
		19 |     role          = "OWNER"
		20 |     special_group = "allAuthenticatedUsers"
		21 |   }
		22 |
		23 |   access {
		24 |     role   = "READER"
		25 |     domain = "hashicorp.com"
		26 |   }
		27 |
		28 |   # default_encryption_configuration {
		29 |   #   kms_key_name=
		30 |   # }
		31 | }


Check: CKV_GCP_15: "Ensure that BigQuery datasets are not anonymously or publicly accessible"
	FAILED for resource: google_bigquery_dataset.fail
	File: /terraform\google\bigquery\bigquery_dataset.tf:7-31
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_3

		7  | resource "google_bigquery_dataset" "fail" {
		8  |   dataset_id                  = "example_dataset"
		9  |   friendly_name               = "test"
		10 |   description                 = "This is a test description"
		11 |   location                    = "EU"
		12 |   default_table_expiration_ms = 3600000
		13 |
		14 |   labels = {
		15 |     env = "default"
		16 |   }
		17 |
		18 |   access {
		19 |     role          = "OWNER"
		20 |     special_group = "allAuthenticatedUsers"
		21 |   }
		22 |
		23 |   access {
		24 |     role   = "READER"
		25 |     domain = "hashicorp.com"
		26 |   }
		27 |
		28 |   # default_encryption_configuration {
		29 |   #   kms_key_name=
		30 |   # }
		31 | }


Check: CKV_GCP_85: "Ensure Big Table Instances are encrypted with Customer Supplied Encryption Keys (CSEK)"
	FAILED for resource: google_bigtable_instance.fail
	File: /terraform\google\bigtable\bigtable_instance.tf:3-16

		3  | resource "google_bigtable_instance" "fail" {
		4  |   name = "tf-instance"
		5  |
		6  |   cluster {
		7  |     cluster_id   = "tf-instance-cluster"
		8  |     num_nodes    = 1
		9  |     storage_type = "HDD"
		10 |     # kms_key_name = "some value"
		11 |   }
		12 |
		13 |   labels = {
		14 |     my-label = "prod-label"
		15 |   }
		16 | }


Check: CKV_GCP_86: "Ensure Cloud build workers are private"
	FAILED for resource: google_cloudbuild_worker_pool.fail
	File: /terraform\google\cloudbuild\cloudbuildworkerpool.tf:3-12

		3  | resource "google_cloudbuild_worker_pool" "fail" {
		4  |   name     = "mylovelypool"
		5  |   project  = "examplea"
		6  |   location = "europe-west1"
		7  |   worker_config {
		8  |     disk_size_gb = 100
		9  |     machine_type = "e2-standard-4"
		10 |     # no_external_ip = false
		11 |   }
		12 | }


Check: CKV_GCP_84: "Ensure Artifact Registry Repositories are encrypted with Customer Supplied Encryption Keys (CSEK)"
	FAILED for resource: google_artifact_registry_repository.fail
	File: /terraform\google\compute\artifact\artifact_registry_repository.tf:4-12

		4  | resource "google_artifact_registry_repository" "fail" {
		5  |   provider = google-beta
		6  |
		7  |   location      = "us-central1"
		8  |   repository_id = "my-repository"
		9  |   description   = "example docker repository with cmek"
		10 |   format        = "DOCKER"
		11 |   #   kms_key_name = "kms-key"
		12 | }


Check: CKV_GCP_77: "Ensure Google compute firewall ingress does not allow on ftp port"
	FAILED for resource: google_compute_firewall.allow_all
	File: /terraform\google\compute\firewall\compute_firewall.tf:12-24

		12 | resource "google_compute_firewall" "allow_all" {
		13 |   name               = "terragoat-${var.environment}-firewall"
		14 |   network            = google_compute_network.vpc.id
		15 |   destination_ranges = ["0.0.0.0/0"]
		16 |   source_ranges      = ["0.0.0.0/0"]
		17 |   allow {
		18 |     protocol = "tcp"
		19 |     ports    = ["0-65535"]
		20 |   }
		21 |   # log_config {
		22 |   #   metadata="EXCLUDE_ALL_METADATA"
		23 |   # }
		24 | }


Check: CKV_GCP_75: "Ensure Google compute firewall ingress does not allow unrestricted FTP access"
	FAILED for resource: google_compute_firewall.allow_all
	File: /terraform\google\compute\firewall\compute_firewall.tf:12-24

		12 | resource "google_compute_firewall" "allow_all" {
		13 |   name               = "terragoat-${var.environment}-firewall"
		14 |   network            = google_compute_network.vpc.id
		15 |   destination_ranges = ["0.0.0.0/0"]
		16 |   source_ranges      = ["0.0.0.0/0"]
		17 |   allow {
		18 |     protocol = "tcp"
		19 |     ports    = ["0-65535"]
		20 |   }
		21 |   # log_config {
		22 |   #   metadata="EXCLUDE_ALL_METADATA"
		23 |   # }
		24 | }


Check: CKV_GCP_2: "Ensure Google compute firewall ingress does not allow unrestricted ssh access"
	FAILED for resource: google_compute_firewall.allow_all
	File: /terraform\google\compute\firewall\compute_firewall.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_1

		12 | resource "google_compute_firewall" "allow_all" {
		13 |   name               = "terragoat-${var.environment}-firewall"
		14 |   network            = google_compute_network.vpc.id
		15 |   destination_ranges = ["0.0.0.0/0"]
		16 |   source_ranges      = ["0.0.0.0/0"]
		17 |   allow {
		18 |     protocol = "tcp"
		19 |     ports    = ["0-65535"]
		20 |   }
		21 |   # log_config {
		22 |   #   metadata="EXCLUDE_ALL_METADATA"
		23 |   # }
		24 | }


Check: CKV_GCP_88: "Ensure Google compute firewall ingress does not allow unrestricted mysql access"
	FAILED for resource: google_compute_firewall.allow_all
	File: /terraform\google\compute\firewall\compute_firewall.tf:12-24

		12 | resource "google_compute_firewall" "allow_all" {
		13 |   name               = "terragoat-${var.environment}-firewall"
		14 |   network            = google_compute_network.vpc.id
		15 |   destination_ranges = ["0.0.0.0/0"]
		16 |   source_ranges      = ["0.0.0.0/0"]
		17 |   allow {
		18 |     protocol = "tcp"
		19 |     ports    = ["0-65535"]
		20 |   }
		21 |   # log_config {
		22 |   #   metadata="EXCLUDE_ALL_METADATA"
		23 |   # }
		24 | }


Check: CKV_GCP_3: "Ensure Google compute firewall ingress does not allow unrestricted rdp access"
	FAILED for resource: google_compute_firewall.allow_all
	File: /terraform\google\compute\firewall\compute_firewall.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_2

		12 | resource "google_compute_firewall" "allow_all" {
		13 |   name               = "terragoat-${var.environment}-firewall"
		14 |   network            = google_compute_network.vpc.id
		15 |   destination_ranges = ["0.0.0.0/0"]
		16 |   source_ranges      = ["0.0.0.0/0"]
		17 |   allow {
		18 |     protocol = "tcp"
		19 |     ports    = ["0-65535"]
		20 |   }
		21 |   # log_config {
		22 |   #   metadata="EXCLUDE_ALL_METADATA"
		23 |   # }
		24 | }


Check: CKV_GCP_32: "Ensure 'Block Project-wide SSH keys' is enabled for VM instances"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_8

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_30: "Ensure that instances are not configured to use the default service account"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_1

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_31: "Ensure that instances are not configured to use the default service account with full access to all Cloud APIs"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_2

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_40: "Ensure that Compute instances do not have public IP addresses"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_public_2

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_34: "Ensure that no instance in the project overrides the project setting for enabling OSLogin(OSLogin needs to be enabled in project metadata for all instances)"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_10

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_36: "Ensure that IP forwarding is not enabled on Instances"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_12

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_35: "Ensure 'Enable connecting to serial ports' is not enabled for VM Instance"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_11

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_39: "Ensure Compute instances are launched with Shielded VM enabled"
	FAILED for resource: google_compute_instance.default
	File: /terraform\google\compute\instance\compute_instance.tf:25-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_y

		25 | resource "google_compute_instance" "default" {
		26 |   name         = "test"
		27 |   machine_type = "n1-standard-1"
		28 |   zone         = "us-central1-a"
		29 |   boot_disk {
		30 |     initialize_params {
		31 |       image = "debian-cloud/debian-9"
		32 |     }
		33 |     disk_encryption_key_raw = "something"
		34 |   }
		35 |
		36 |   service_account {
		37 |     scopes = ["https://www.googleapis.com/auth/cloud-platform", "compute-ro", "storage-ro"]
		38 |   }
		39 |
		40 |   network_interface {
		41 |     network = "default"
		42 |     access_config {
		43 |       network_tier = "STANDARD"
		44 |     }
		45 |   }
		46 |   metadata = {
		47 |     block-project-ssh-keys = false
		48 |     serial-port-enable     = true
		49 |     enable-oslogin         = false
		50 |   }
		51 |
		52 |   can_ip_forward   = true
		53 |   enable_flow_logs = false
		54 |   service_account {
		55 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		56 |     email  = "1234567890-compute@developer.gserviceaccount.com"
		57 |     scopes = ["cloud-platform"]
		58 |   }
		59 |   shielded_instance_config {
		60 |     enable_vtpm                 = false
		61 |     enable_integrity_monitoring = false
		62 |   }
		63 | }


Check: CKV_GCP_73: "Ensure Cloud Armor prevents message lookup in Log4j2. See CVE-2021-44228 aka log4jshell"
	FAILED for resource: google_compute_security_policy.allow
	File: /terraform\google\compute\security\compute_security_policy.tf:4-16
	Guide: https://docs.bridgecrew.io/docs/ensure-cloud-armor-prevents-message-lookup-in-log4j2

		4  | resource "google_compute_security_policy" "allow" {
		5  |   name = "example"
		6  |
		7  |   rule {
		8  |     action   = "allow"
		9  |     priority = 1
		10 |     match {
		11 |       expr {
		12 |         expression = "evaluatePreconfiguredExpr('cve-canary')"
		13 |       }
		14 |     }
		15 |   }
		16 | }


Check: CKV_GCP_4: "Ensure no HTTPS or SSL proxy load balancers permit SSL policies with weak cipher suites"
	FAILED for resource: google_compute_ssl_policy.modern_profile
	File: /terraform\google\compute\security\compute_ssl_policy.tf:6-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_3

		6  | resource "google_compute_ssl_policy" "modern_profile" {
		7  |   name            = "nonprodssl"
		8  |   profile         = "MODERN"
		9  |   min_tls_version = "TLS_1_1"
		10 | }


Check: CKV_GCP_76: "Ensure that Private google access is enabled for IPV6"
	FAILED for resource: google_compute_subnetwork.fail
	File: /terraform\google\compute\subnetwork\compute_subnetwork_ipv6.tf:8-21

		8  | resource "google_compute_subnetwork" "fail" {
		9  |   name             = "log-test-subnetwork"
		10 |   ip_cidr_range    = "10.2.0.0/16"
		11 |   stack_type       = "IPV4_IPV6"
		12 |   ipv6_access_type = "EXTERNAL"
		13 |   region           = "us-central1"
		14 |   network          = google_compute_network.custom-test.id
		15 |   # purpose="INTERNAL_HTTPS_LOAD_BALANCER" if set ignored
		16 |   # log_config {
		17 |   #   metadata="EXCLUDE_ALL_METADATA"
		18 |   # }
		19 |   private_ip_google_access   = false
		20 |   private_ipv6_google_access = false
		21 | }


Check: CKV_GCP_26: "Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network"
	FAILED for resource: google_compute_subnetwork.fail
	File: /terraform\google\compute\subnetwork\compute_subnetwork_ipv6.tf:8-21
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_logging_1

		8  | resource "google_compute_subnetwork" "fail" {
		9  |   name             = "log-test-subnetwork"
		10 |   ip_cidr_range    = "10.2.0.0/16"
		11 |   stack_type       = "IPV4_IPV6"
		12 |   ipv6_access_type = "EXTERNAL"
		13 |   region           = "us-central1"
		14 |   network          = google_compute_network.custom-test.id
		15 |   # purpose="INTERNAL_HTTPS_LOAD_BALANCER" if set ignored
		16 |   # log_config {
		17 |   #   metadata="EXCLUDE_ALL_METADATA"
		18 |   # }
		19 |   private_ip_google_access   = false
		20 |   private_ipv6_google_access = false
		21 | }


Check: CKV_GCP_74: "Ensure that private_ip_google_access is enabled for Subnet"
	FAILED for resource: google_compute_subnetwork.fail
	File: /terraform\google\compute\subnetwork\compute_subnetwork_ipv6.tf:8-21

		8  | resource "google_compute_subnetwork" "fail" {
		9  |   name             = "log-test-subnetwork"
		10 |   ip_cidr_range    = "10.2.0.0/16"
		11 |   stack_type       = "IPV4_IPV6"
		12 |   ipv6_access_type = "EXTERNAL"
		13 |   region           = "us-central1"
		14 |   network          = google_compute_network.custom-test.id
		15 |   # purpose="INTERNAL_HTTPS_LOAD_BALANCER" if set ignored
		16 |   # log_config {
		17 |   #   metadata="EXCLUDE_ALL_METADATA"
		18 |   # }
		19 |   private_ip_google_access   = false
		20 |   private_ipv6_google_access = false
		21 | }


Check: CKV_GCP_23: "Ensure Kubernetes Cluster is created with Alias IP ranges enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_15

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_19: "Ensure GKE basic auth is disabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_11

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_66: "Ensure use of Binary Authorization"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-use-of-binary-authorization

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_13: "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_8

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_1: "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_1

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_7: "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_2

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_71: "Ensure Shielded GKE Nodes are Enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-shielded-gke-nodes-are-enabled

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_61: "Enable VPC Flow Logs and Intranode Visibility"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/enable-vpc-flow-logs-and-intranode-visibility

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_72: "Ensure Integrity Monitoring for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-integrity-monitoring-for-shielded-gke-nodes-is-enabled

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_21: "Ensure Kubernetes Clusters are configured with Labels"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_13

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_65: "Manage Kubernetes RBAC users with Google Groups for GKE"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/manage-kubernetes-rbac-users-with-google-groups-for-gke

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_67: "Ensure legacy Compute Engine instance metadata APIs are Disabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-legacy-compute-engine-instance-metadata-apis-are-disabled

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_20: "Ensure master authorized networks is set to enabled in GKE clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_12

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_69: "Ensure the GKE Metadata Server is Enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-metadata-server-is-enabled

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_8: "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_3

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_12: "Ensure Network Policy is enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_7

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_24: "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_9

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_25: "Ensure Kubernetes Cluster is created with Private cluster enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_6

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_64: "Ensure clusters are created with Private Nodes"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-clusters-are-created-with-private-nodes

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_70: "Ensure the GKE Release Channel is set"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-release-channel-is-set

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_68: "Ensure Secure Boot for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_cluster.fail
	File: /terraform\google\container_cluster\container_cluster.tf:36-63
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-boot-for-shielded-gke-nodes-is-enabled

		36 | resource "google_container_cluster" "fail" {
		37 |   enable_shielded_nodes = false #defaults to true for this
		38 |   node_config {
		39 |     shielded_instance_config {
		40 |       enable_integrity_monitoring = false
		41 |     }
		42 |   }
		43 |   #ip_allocation_policy = {}
		44 |   enable_legacy_abac = true
		45 |   logging_service    = "none"
		46 |   monitoring_service = "none"
		47 |   # master_authorized_networks_config {
		48 |   #   cidr_blocks {
		49 |   #     cidr_block="0.0.0.0/0"
		50 |   #   }
		51 |   # }
		52 |   master_auth {
		53 |     username = "paddy"
		54 |     password = "james"
		55 |     # client_certificate_config {
		56 |     #   issue_client_certificate = true
		57 |     # }
		58 |   }
		59 |   pod_security_policy_config {
		60 |     enabled = "false"
		61 |   }
		62 |
		63 | }


Check: CKV_GCP_23: "Ensure Kubernetes Cluster is created with Alias IP ranges enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_15

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_19: "Ensure GKE basic auth is disabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_11

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_66: "Ensure use of Binary Authorization"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-use-of-binary-authorization

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_13: "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_8

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_1: "Ensure Stackdriver Logging is set to Enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_1

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_7: "Ensure Legacy Authorization is set to Disabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_2

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_71: "Ensure Shielded GKE Nodes are Enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-shielded-gke-nodes-are-enabled

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_61: "Enable VPC Flow Logs and Intranode Visibility"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/enable-vpc-flow-logs-and-intranode-visibility

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_72: "Ensure Integrity Monitoring for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-integrity-monitoring-for-shielded-gke-nodes-is-enabled

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_21: "Ensure Kubernetes Clusters are configured with Labels"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_13

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_65: "Manage Kubernetes RBAC users with Google Groups for GKE"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/manage-kubernetes-rbac-users-with-google-groups-for-gke

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_67: "Ensure legacy Compute Engine instance metadata APIs are Disabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-legacy-compute-engine-instance-metadata-apis-are-disabled

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_69: "Ensure the GKE Metadata Server is Enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-metadata-server-is-enabled

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_8: "Ensure Stackdriver Monitoring is set to Enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_3

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_12: "Ensure Network Policy is enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_7

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_24: "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_9

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_25: "Ensure Kubernetes Cluster is created with Private cluster enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_6

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_64: "Ensure clusters are created with Private Nodes"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-clusters-are-created-with-private-nodes

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_18: "Ensure GKE Control Plane is not public"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_10

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_70: "Ensure the GKE Release Channel is set"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-release-channel-is-set

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_68: "Ensure Secure Boot for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_cluster.fail_public
	File: /terraform\google\container_cluster\container_cluster_public.tf:21-36
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-boot-for-shielded-gke-nodes-is-enabled

		21 | resource "google_container_cluster" "fail_public" {
		22 |   node_config {
		23 |     shielded_instance_config {
		24 |       enable_integrity_monitoring = false
		25 |     }
		26 |   }
		27 |
		28 |   enable_legacy_abac = true
		29 |   logging_service    = "none"
		30 |   monitoring_service = "none"
		31 |   master_authorized_networks_config {
		32 |     cidr_blocks {
		33 |       cidr_block = "0.0.0.0/0"
		34 |     }
		35 |   }
		36 | }


Check: CKV_GCP_72: "Ensure Integrity Monitoring for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/ensure-integrity-monitoring-for-shielded-gke-nodes-is-enabled

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_69: "Ensure the GKE Metadata Server is Enabled"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-metadata-server-is-enabled

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_9: "Ensure 'Automatic node repair' is enabled for Kubernetes Clusters"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_4

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_10: "Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_5

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_68: "Ensure Secure Boot for Shielded GKE Nodes is Enabled"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/ensure-secure-boot-for-shielded-gke-nodes-is-enabled

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_22: "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image"
	FAILED for resource: google_container_node_pool.fail_pool
	File: /terraform\google\container_cluster\container_node_pool.tf:15-41
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_14

		15 | resource "google_container_node_pool" "fail_pool" {
		16 |   name       = "my-node-pool"
		17 |   cluster    = google_container_cluster.primary.id
		18 |   node_count = 1
		19 |
		20 |   node_config {
		21 |     preemptible  = true
		22 |     machine_type = "e2-medium"
		23 |     workload_metadata_config {
		24 |       node_metadata = "EXPOSE"
		25 |     }
		26 |     shielded_instance_config {
		27 |       enable_integrity_monitoring = false
		28 |     }
		29 |
		30 |     # Google recommends custom service accounts that have cloud-platform scope and permissions granted via IAM Roles.
		31 |     service_account = google_service_account.default.email
		32 |     oauth_scopes = [
		33 |       "https://www.googleapis.com/auth/cloud-platform"
		34 |     ]
		35 |     image_type = "UBUNTU_CONTAINERD"
		36 |   }
		37 |   management {
		38 |     auto_repair  = false
		39 |     auto_upgrade = false
		40 |   }
		41 | }


Check: CKV_GCP_19: "Ensure GKE basic auth is disabled"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_11

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_66: "Ensure use of Binary Authorization"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-use-of-binary-authorization

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_13: "Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_8

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_71: "Ensure Shielded GKE Nodes are Enabled"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-shielded-gke-nodes-are-enabled

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_61: "Enable VPC Flow Logs and Intranode Visibility"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/enable-vpc-flow-logs-and-intranode-visibility

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_21: "Ensure Kubernetes Clusters are configured with Labels"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_13

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_65: "Manage Kubernetes RBAC users with Google Groups for GKE"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/manage-kubernetes-rbac-users-with-google-groups-for-gke

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_67: "Ensure legacy Compute Engine instance metadata APIs are Disabled"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-legacy-compute-engine-instance-metadata-apis-are-disabled

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_20: "Ensure master authorized networks is set to enabled in GKE clusters"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_12

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_69: "Ensure the GKE Metadata Server is Enabled"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-metadata-server-is-enabled

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_12: "Ensure Network Policy is enabled on Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_7

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_24: "Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_9

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_25: "Ensure Kubernetes Cluster is created with Private cluster enabled"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_kubernetes_6

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_64: "Ensure clusters are created with Private Nodes"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-clusters-are-created-with-private-nodes

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_70: "Ensure the GKE Release Channel is set"
	FAILED for resource: google_container_cluster.fail1
	File: /terraform\google\container_cluster\legacy.tf:10-25
	Guide: https://docs.bridgecrew.io/docs/ensure-the-gke-release-channel-is-set

		10 | resource "google_container_cluster" "fail1" {
		11 |   name               = var.name
		12 |   location           = var.location
		13 |   initial_node_count = 1
		14 |   project            = data.google_project.project.name
		15 |
		16 |   network    = var.network
		17 |   subnetwork = var.subnetwork
		18 |
		19 |   ip_allocation_policy {
		20 |     cluster_ipv4_cidr_block       = var.ip_allocation_policy["cluster_ipv4_cidr_block"]
		21 |     cluster_secondary_range_name  = var.ip_allocation_policy["cluster_secondary_range_name"]
		22 |     services_ipv4_cidr_block      = var.ip_allocation_policy["services_ipv4_cidr_block"]
		23 |     services_secondary_range_name = var.ip_allocation_policy["services_secondary_range_name"]
		24 |   }
		25 | }


Check: CKV_GCP_87: "Ensure Data fusion instances are private"
	FAILED for resource: google_data_fusion_instance.fail
	File: /terraform\google\data_fusion\instance.tf:5-24

		5  | resource "google_data_fusion_instance" "fail" {
		6  |   project                       = "examplea"
		7  |   provider                      = google-beta
		8  |   name                          = "my-instance"
		9  |   description                   = "My Data Fusion instance"
		10 |   region                        = "us-central1"
		11 |   type                          = "BASIC"
		12 |   enable_stackdriver_logging    = true
		13 |   enable_stackdriver_monitoring = true
		14 |   labels = {
		15 |     example_key = "example_value"
		16 |   }
		17 |   //private_instance = false
		18 |   network_config {
		19 |     network       = "default"
		20 |     ip_allocation = "10.89.48.0/22"
		21 |   }
		22 |   version                  = "6.3.0"
		23 |   dataproc_service_account = data.google_app_engine_default_service_account.default.email
		24 | }


Check: CKV_GCP_17: "Ensure that RSASHA1 is not used for the zone-signing and key-signing keys in Cloud DNS DNSSEC"
	FAILED for resource: google_dns_managed_zone.fail
	File: /terraform\google\dns\dns_managed_zone.tf:7-24
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_6

		7  | resource "google_dns_managed_zone" "fail" {
		8  |   name        = "example-zone"
		9  |   dns_name    = "example-de13he3.com."
		10 |   description = "Example DNS zone"
		11 |   dnssec_config {
		12 |     state = "off"
		13 |     default_key_specs {
		14 |       algorithm  = "rsasha1"
		15 |       key_type   = "zoneSigning"
		16 |       key_length = "1024"
		17 |     }
		18 |     default_key_specs {
		19 |       algorithm  = "rsasha256"
		20 |       key_type   = "keySigning"
		21 |       key_length = 2048
		22 |     }
		23 |   }
		24 | }


Check: CKV_GCP_16: "Ensure that DNSSEC is enabled for Cloud DNS"
	FAILED for resource: google_dns_managed_zone.fail
	File: /terraform\google\dns\dns_managed_zone.tf:7-24
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_5

		7  | resource "google_dns_managed_zone" "fail" {
		8  |   name        = "example-zone"
		9  |   dns_name    = "example-de13he3.com."
		10 |   description = "Example DNS zone"
		11 |   dnssec_config {
		12 |     state = "off"
		13 |     default_key_specs {
		14 |       algorithm  = "rsasha1"
		15 |       key_type   = "zoneSigning"
		16 |       key_length = "1024"
		17 |     }
		18 |     default_key_specs {
		19 |       algorithm  = "rsasha256"
		20 |       key_type   = "keySigning"
		21 |       key_length = 2048
		22 |     }
		23 |   }
		24 | }


Check: CKV_GCP_44: "Ensure no roles that enable to impersonate and manage all service accounts are used at a folder level"
	FAILED for resource: google_folder_iam_binding.fail
	File: /terraform\google\iam\iam_binding\folder_iam_binding.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_5

		9  | resource "google_folder_iam_binding" "fail" {
		10 |   folder = "folders/1234567"
		11 |   role   = "roles/editor"
		12 |
		13 |   members = [
		14 |     "user:jane@example.com",
		15 |     "serviceAccount:test-compute@appspot.gserviceaccount.com",
		16 |   ]
		17 | }


Check: CKV_GCP_48: "Ensure Default Service account is not used at a folder level"
	FAILED for resource: google_folder_iam_binding.fail
	File: /terraform\google\iam\iam_binding\folder_iam_binding.tf:9-17
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_9

		9  | resource "google_folder_iam_binding" "fail" {
		10 |   folder = "folders/1234567"
		11 |   role   = "roles/editor"
		12 |
		13 |   members = [
		14 |     "user:jane@example.com",
		15 |     "serviceAccount:test-compute@appspot.gserviceaccount.com",
		16 |   ]
		17 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_binding.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		2 | resource "google_project_iam_binding" "fail" {
		3 |   members = [
		4 |     "user:test@example.com",
		5 |   ]
		6 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_member.fail
	File: /terraform\google\iam\iam_binding\no-user-granted-permissions.tf:8-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		8  | resource "google_project_iam_member" "fail" {
		9  |   member = "user:test@example.com"
		10 | }


Check: CKV_GCP_45: "Ensure no roles that enable to impersonate and manage all service accounts are used at an organization level"
	FAILED for resource: google_organization_iam_binding.organization_123
	File: /terraform\google\iam\iam_binding\organization_iam_bindin.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_6

		9  | resource "google_organization_iam_binding" "organization_123" {
		10 |   org_id  = "org-123"
		11 |   role    = "roles/iam.serviceAccountUser"
		12 |   members = ["serviceAccount:test-compute@appspot.gserviceaccount.com", ]
		13 | }


Check: CKV_GCP_47: "Ensure default service account is not used at an organization level"
	FAILED for resource: google_organization_iam_binding.organization_123
	File: /terraform\google\iam\iam_binding\organization_iam_bindin.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_8

		9  | resource "google_organization_iam_binding" "organization_123" {
		10 |   org_id  = "org-123"
		11 |   role    = "roles/iam.serviceAccountUser"
		12 |   members = ["serviceAccount:test-compute@appspot.gserviceaccount.com", ]
		13 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_binding.project_123
	File: /terraform\google\iam\iam_binding\project_iam_binding.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		8  | resource "google_project_iam_binding" "project_123" {
		9  |   project = "project-123"
		10 |   role    = "roles/iam.serviceAccountUser"
		11 |   members = ["serviceAccount:test-compute@appspot.gserviceaccount.com", ]
		12 | }


Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	FAILED for resource: google_project_iam_binding.project_123
	File: /terraform\google\iam\iam_binding\project_iam_binding.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

		8  | resource "google_project_iam_binding" "project_123" {
		9  |   project = "project-123"
		10 |   role    = "roles/iam.serviceAccountUser"
		11 |   members = ["serviceAccount:test-compute@appspot.gserviceaccount.com", ]
		12 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_binding.project_123
	File: /terraform\google\iam\iam_binding\project_iam_binding.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		8  | resource "google_project_iam_binding" "project_123" {
		9  |   project = "project-123"
		10 |   role    = "roles/iam.serviceAccountUser"
		11 |   members = ["serviceAccount:test-compute@appspot.gserviceaccount.com", ]
		12 | }


Check: CKV_GCP_48: "Ensure Default Service account is not used at a folder level"
	FAILED for resource: google_folder_iam_member.fail
	File: /terraform\google\iam\iam_member\folder_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_9

		8  | resource "google_folder_iam_member" "fail" {
		9  |   folder = "folder-123"
		10 |   role   = "roles/whatever"
		11 |   member = "123-compute@developer.gserviceaccount.com"
		12 | }


Check: CKV_GCP_45: "Ensure no roles that enable to impersonate and manage all service accounts are used at an organization level"
	FAILED for resource: google_organization_iam_member.org_123
	File: /terraform\google\iam\iam_member\no-org-level-default-service-account-assignment.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_6

		8  | resource "google_organization_iam_member" "org_123" {
		9  |   org_id = "organization-123"
		10 |   role   = "roles/editor"
		11 |   member = "123-compute@developer.gserviceaccount.com"
		12 | }


Check: CKV_GCP_47: "Ensure default service account is not used at an organization level"
	FAILED for resource: google_organization_iam_member.org_123
	File: /terraform\google\iam\iam_member\no-org-level-default-service-account-assignment.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_8

		8  | resource "google_organization_iam_member" "org_123" {
		9  |   org_id = "organization-123"
		10 |   role   = "roles/editor"
		11 |   member = "123-compute@developer.gserviceaccount.com"
		12 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_member.project
	File: /terraform\google\iam\iam_member\no-privileged-service-accounts.tf:10-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		10 | resource "google_project_iam_member" "project" {
		11 |   project = "your-project-id"
		12 |   role    = "roles/iam.serviceAccountUser"
		13 |   member  = "serviceAccount:${google_service_account.test.email}"
		14 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_member.project
	File: /terraform\google\iam\iam_member\no-privileged-service-accounts.tf:10-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		10 | resource "google_project_iam_member" "project" {
		11 |   project = "your-project-id"
		12 |   role    = "roles/iam.serviceAccountUser"
		13 |   member  = "serviceAccount:${google_service_account.test.email}"
		14 | }


Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	FAILED for resource: google_project_iam_member.project_123
	File: /terraform\google\iam\iam_member\no-project-level-default-service-account-assignment.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

		4 | resource "google_project_iam_member" "project_123" {
		5 |   project = "project-123"
		6 |   role    = "roles/whatever"
		7 |   member  = "123-compute@developer.gserviceaccount.com"
		8 | }


Check: CKV_GCP_82: "Ensure KMS keys are protected from deletion"
	FAILED for resource: google_kms_crypto_key.fails
	File: /terraform\google\kms\google_kms_crypto_key.tf:12-20

		12 | resource "google_kms_crypto_key" "fails" {
		13 |   name            = "crypto-key-example"
		14 |   key_ring        = google_kms_key_ring.keyring.id
		15 |   rotation_period = "15552000s"
		16 |
		17 |   lifecycle {
		18 |     prevent_destroy = false
		19 |   }
		20 | }


Check: CKV_GCP_43: "Ensure KMS encryption keys are rotated within a period of 90 days"
	FAILED for resource: google_kms_crypto_key.fails
	File: /terraform\google\kms\google_kms_crypto_key.tf:12-20
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_4

		12 | resource "google_kms_crypto_key" "fails" {
		13 |   name            = "crypto-key-example"
		14 |   key_ring        = google_kms_key_ring.keyring.id
		15 |   rotation_period = "15552000s"
		16 |
		17 |   lifecycle {
		18 |     prevent_destroy = false
		19 |   }
		20 | }


Check: CKV_GCP_45: "Ensure no roles that enable to impersonate and manage all service accounts are used at an organization level"
	FAILED for resource: google_organization_iam_binding.organization
	File: /terraform\google\organisation\organization_iam_binding.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_6

		5  | resource "google_organization_iam_binding" "organization" {
		6  |   org_id = "your-organization-id"
		7  |   role   = "roles/editor"
		8  |
		9  |   members = [
		10 |     "user:jane@example.com",
		11 |     "serviceAccount:test-compute@developer.gserviceaccount.com",
		12 |   ]
		13 | }


Check: CKV_GCP_47: "Ensure default service account is not used at an organization level"
	FAILED for resource: google_organization_iam_binding.organization
	File: /terraform\google\organisation\organization_iam_binding.tf:5-13
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_8

		5  | resource "google_organization_iam_binding" "organization" {
		6  |   org_id = "your-organization-id"
		7  |   role   = "roles/editor"
		8  |
		9  |   members = [
		10 |     "user:jane@example.com",
		11 |     "serviceAccount:test-compute@developer.gserviceaccount.com",
		12 |   ]
		13 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_member.project
	File: /terraform\google\project\RoleServiceAccountUser.tf:7-11
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		7  | resource "google_project_iam_member" "project" {
		8  |   project = "your-project-id"
		9  |   role    = "roles/iam.serviceAccountUser"
		10 |   member  = "user:jane@example.com"
		11 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_member.project
	File: /terraform\google\project\RoleServiceAccountUser.tf:7-11
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		7  | resource "google_project_iam_member" "project" {
		8  |   project = "your-project-id"
		9  |   role    = "roles/iam.serviceAccountUser"
		10 |   member  = "user:jane@example.com"
		11 | }


Check: CKV_GCP_33: "Ensure oslogin is enabled for a Project"
	FAILED for resource: google_compute_project_metadata.default
	File: /terraform\google\project\google_compute_project_metadata.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_9

		4 | resource "google_compute_project_metadata" "default" {
		5 |   metadata = {
		6 |     foo = "bar"
		7 |   }
		8 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_member.fail
	File: /terraform\google\project\google_project_iam_member_service_account_has_admin_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		3 | resource "google_project_iam_member" "fail" {
		4 |   project = "your-project-id"
		5 |   role    = "roles/iam.serviceAccountAdmin"
		6 |   member  = "serviceAccount:my-other-app@appspot.gserviceacccount.com"
		7 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_member.positive1
	File: /terraform\google\project\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		3 | resource "google_project_iam_member" "positive1" {
		4 |   project = "your-project-id"
		5 |   role    = "roles/iam.serviceAccountTokenCreator"
		6 |   member  = "serviceAccount:my-other-app@appspot.gserviceacccount.com"
		7 | }


Check: CKV_GCP_41: "Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level"
	FAILED for resource: google_project_iam_member.positive1
	File: /terraform\google\project\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_3

		3 | resource "google_project_iam_member" "positive1" {
		4 |   project = "your-project-id"
		5 |   role    = "roles/iam.serviceAccountTokenCreator"
		6 |   member  = "serviceAccount:my-other-app@appspot.gserviceacccount.com"
		7 | }


Check: CKV_GCP_27: "Ensure that the default network does not exist in a project"
	FAILED for resource: google_project.fail
	File: /terraform\google\project\project.tf:9-14
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_7

		9  | resource "google_project" "fail" {
		10 |   name                = "My Project"
		11 |   project_id          = "your-project-id"
		12 |   org_id              = "1234567"
		13 |   auto_create_network = true
		14 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_binding.fail_service
	File: /terraform\google\project\project_iam_binding.tf:4-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		4  | resource "google_project_iam_binding" "fail_service" {
		5  |   project = "your-project-id"
		6  |   role    = "roles/editor"
		7  |
		8  |   members = [
		9  |     "user",
		10 |     "serviceAccount:test-compute@developer.gserviceaccount.com",
		11 |   ]
		12 | }


Check: CKV_GCP_46: "Ensure Default Service account is not used at a project level"
	FAILED for resource: google_project_iam_binding.fail_service
	File: /terraform\google\project\project_iam_binding.tf:4-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_7

		4  | resource "google_project_iam_binding" "fail_service" {
		5  |   project = "your-project-id"
		6  |   role    = "roles/editor"
		7  |
		8  |   members = [
		9  |     "user",
		10 |     "serviceAccount:test-compute@developer.gserviceaccount.com",
		11 |   ]
		12 | }


Check: CKV_GCP_42: "Ensure that Service Account has no Admin privileges"
	FAILED for resource: google_project_iam_member.fail
	File: /terraform\google\project\project_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_4

		8  | resource "google_project_iam_member" "fail" {
		9  |   project = "your-project-id"
		10 |   role    = "roles/owner"
		11 |   member  = "user:test@example-project.iam.gserviceaccount.com"
		12 | }


Check: CKV_GCP_49: "Ensure no roles that enable to impersonate and manage all service accounts are used at a project level"
	FAILED for resource: google_project_iam_member.fail
	File: /terraform\google\project\project_iam_member.tf:8-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_iam_10

		8  | resource "google_project_iam_member" "fail" {
		9  |   project = "your-project-id"
		10 |   role    = "roles/owner"
		11 |   member  = "user:test@example-project.iam.gserviceaccount.com"
		12 | }


Check: CKV_GCP_83: "Ensure PubSub Topics are encrypted with Customer Supplied Encryption Keys (CSEK)"
	FAILED for resource: google_pubsub_topic.fail
	File: /terraform\google\pubsub\pubsub.tf:4-7

		4 | resource "google_pubsub_topic" "fail" {
		5 |   name = "example-topic"
		6 |   # kms_key_name = google_kms_crypto_key.crypto_key.id
		7 | }


Check: CKV_GCP_50: "Ensure MySQL database 'local_infile' flag is set to 'off'"
	FAILED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_1

		15 | resource "google_sql_database_instance" "fail" {
		16 |   database_version = "MYSQL_8_0"
		17 |   name             = "mysql81"
		18 |   project          = "gcp-bridgecrew-deployment"
		19 |   region           = "us-central1"
		20 |   settings {
		21 |     ip_configuration {
		22 |       require_ssl  = false
		23 |       ipv4_enabled = true
		24 |       authorized_networks {
		25 |         value = "108.12.12.0/24"
		26 |         name  = "internal"
		27 |       }
		28 |
		29 |       authorized_networks {
		30 |         value = "0.0.0.0/0"
		31 |         name  = "internet"
		32 |       }
		33 |     }
		34 |     activation_policy = "ALWAYS"
		35 |     tier              = "db-custom-1-3840"
		36 |     database_flags {
		37 |       name  = "night"
		38 |       value = "on"
		39 |     }
		40 |     database_flags {
		41 |       name  = "local_infile"
		42 |       value = "on"
		43 |     }
		44 |
		45 |
		46 |     availability_type = "ZONAL"
		47 |   }
		48 | }


Check: CKV_GCP_14: "Ensure all Cloud SQL database instance have backup configuration enabled"
	FAILED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_2

		15 | resource "google_sql_database_instance" "fail" {
		16 |   database_version = "MYSQL_8_0"
		17 |   name             = "mysql81"
		18 |   project          = "gcp-bridgecrew-deployment"
		19 |   region           = "us-central1"
		20 |   settings {
		21 |     ip_configuration {
		22 |       require_ssl  = false
		23 |       ipv4_enabled = true
		24 |       authorized_networks {
		25 |         value = "108.12.12.0/24"
		26 |         name  = "internal"
		27 |       }
		28 |
		29 |       authorized_networks {
		30 |         value = "0.0.0.0/0"
		31 |         name  = "internet"
		32 |       }
		33 |     }
		34 |     activation_policy = "ALWAYS"
		35 |     tier              = "db-custom-1-3840"
		36 |     database_flags {
		37 |       name  = "night"
		38 |       value = "on"
		39 |     }
		40 |     database_flags {
		41 |       name  = "local_infile"
		42 |       value = "on"
		43 |     }
		44 |
		45 |
		46 |     availability_type = "ZONAL"
		47 |   }
		48 | }


Check: CKV_GCP_6: "Ensure all Cloud SQL database instance requires all incoming connections to use SSL"
	FAILED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_1

		15 | resource "google_sql_database_instance" "fail" {
		16 |   database_version = "MYSQL_8_0"
		17 |   name             = "mysql81"
		18 |   project          = "gcp-bridgecrew-deployment"
		19 |   region           = "us-central1"
		20 |   settings {
		21 |     ip_configuration {
		22 |       require_ssl  = false
		23 |       ipv4_enabled = true
		24 |       authorized_networks {
		25 |         value = "108.12.12.0/24"
		26 |         name  = "internal"
		27 |       }
		28 |
		29 |       authorized_networks {
		30 |         value = "0.0.0.0/0"
		31 |         name  = "internet"
		32 |       }
		33 |     }
		34 |     activation_policy = "ALWAYS"
		35 |     tier              = "db-custom-1-3840"
		36 |     database_flags {
		37 |       name  = "night"
		38 |       value = "on"
		39 |     }
		40 |     database_flags {
		41 |       name  = "local_infile"
		42 |       value = "on"
		43 |     }
		44 |
		45 |
		46 |     availability_type = "ZONAL"
		47 |   }
		48 | }


Check: CKV_GCP_60: "Ensure Cloud SQL database does not have public IP"
	FAILED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_11

		15 | resource "google_sql_database_instance" "fail" {
		16 |   database_version = "MYSQL_8_0"
		17 |   name             = "mysql81"
		18 |   project          = "gcp-bridgecrew-deployment"
		19 |   region           = "us-central1"
		20 |   settings {
		21 |     ip_configuration {
		22 |       require_ssl  = false
		23 |       ipv4_enabled = true
		24 |       authorized_networks {
		25 |         value = "108.12.12.0/24"
		26 |         name  = "internal"
		27 |       }
		28 |
		29 |       authorized_networks {
		30 |         value = "0.0.0.0/0"
		31 |         name  = "internet"
		32 |       }
		33 |     }
		34 |     activation_policy = "ALWAYS"
		35 |     tier              = "db-custom-1-3840"
		36 |     database_flags {
		37 |       name  = "night"
		38 |       value = "on"
		39 |     }
		40 |     database_flags {
		41 |       name  = "local_infile"
		42 |       value = "on"
		43 |     }
		44 |
		45 |
		46 |     availability_type = "ZONAL"
		47 |   }
		48 | }


Check: CKV_GCP_79: "Ensure SQL database is using latest Major version"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_51: "Ensure PostgreSQL database 'log_checkpoints' flag is set to 'on'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_2

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_52: "Ensure PostgreSQL database 'log_connections' flag is set to 'on'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_3

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_53: "Ensure PostgreSQL database 'log_disconnections' flag is set to 'on'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_4

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_54: "Ensure PostgreSQL database 'log_lock_waits' flag is set to 'on'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_5

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_57: "Ensure PostgreSQL database 'log_min_duration_statement' flag is set to '-1'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_8

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_55: "Ensure PostgreSQL database 'log_min_messages' flag is set to a valid value"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_6

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_56: "Ensure PostgreSQL database 'log_temp_files flag is set to '0'"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_7

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_14: "Ensure all Cloud SQL database instance have backup configuration enabled"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_2

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_6: "Ensure all Cloud SQL database instance requires all incoming connections to use SSL"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_1

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_60: "Ensure Cloud SQL database does not have public IP"
	FAILED for resource: google_sql_database_instance.fail_all
	File: /terraform\google\sql\CloudPostgreSql.tf:28-86
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_11

		28 | resource "google_sql_database_instance" "fail_all" {
		29 |   database_version = "POSTGRES_12"
		30 |   name             = "general-pos121"
		31 |   project          = "gcp-bridgecrew-deployment"
		32 |   region           = "us-central1"
		33 |
		34 |   settings {
		35 |     ip_configuration {
		36 |       require_ssl  = false
		37 |       ipv4_enabled = true
		38 |       authorized_networks {
		39 |         value = "108.12.12.0/24"
		40 |         name  = "internal"
		41 |       }
		42 |
		43 |       authorized_networks {
		44 |         value = "0.0.0.0/0"
		45 |         name  = "internet"
		46 |       }
		47 |     }
		48 |     backup_configuration {
		49 |       enabled = false
		50 |     }
		51 |     activation_policy = "ALWAYS"
		52 |     availability_type = "ZONAL"
		53 |
		54 |     database_flags {
		55 |       name  = "log_checkpoints"
		56 |       value = "off"
		57 |     }
		58 |     database_flags {
		59 |       name  = "log_connections"
		60 |       value = "off"
		61 |     }
		62 |     database_flags {
		63 |       name  = "log_disconnections"
		64 |       value = "off"
		65 |     }
		66 |     database_flags {
		67 |       name  = "log_min_messages"
		68 |       value = "debug6"
		69 |     }
		70 |     database_flags {
		71 |       name  = "log_lock_waits"
		72 |       value = "off"
		73 |     }
		74 |     database_flags {
		75 |       name  = "log_temp_files"
		76 |       value = "10"
		77 |     }
		78 |     database_flags {
		79 |       name  = "log_min_duration_statement"
		80 |       value = "99"
		81 |     }
		82 |     pricing_plan = "PER_USE"
		83 |
		84 |     tier = "db-custom-1-3840"
		85 |   }
		86 | }


Check: CKV_GCP_79: "Ensure SQL database is using latest Major version"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_14: "Ensure all Cloud SQL database instance have backup configuration enabled"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_2

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_11: "Ensure that Cloud SQL database Instances are not open to the world"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_networking_4

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_6: "Ensure all Cloud SQL database instance requires all incoming connections to use SSL"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_general_1

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_59: "Ensure SQL database 'contained database authentication' flag is set to 'off'"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_10

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_58: "Ensure SQL database 'cross db ownership chaining' flag is set to 'off'"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_9

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_60: "Ensure Cloud SQL database does not have public IP"
	FAILED for resource: google_sql_database_instance.fail_auth
	File: /terraform\google\sql\CloudSqlServer.tf:13-67
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_sql_11

		13 | resource "google_sql_database_instance" "fail_auth" {
		14 |   database_version = "SQLSERVER_2017_STANDARD"
		15 |   name             = "general-sqlserver12"
		16 |   project          = "gcp-bridgecrew-deployment"
		17 |   region           = "us-central1"
		18 |
		19 |   settings {
		20 |     activation_policy = "ALWAYS"
		21 |     availability_type = "ZONAL"
		22 |
		23 |     backup_configuration {
		24 |       binary_log_enabled             = false
		25 |       enabled                        = false
		26 |       location                       = "us"
		27 |       point_in_time_recovery_enabled = false
		28 |       start_time                     = "00:00"
		29 |     }
		30 |
		31 |     database_flags {
		32 |       name  = "cross db ownership chaining"
		33 |       value = "on"
		34 |     }
		35 |     database_flags {
		36 |       name  = "contained database authentication"
		37 |       value = "on"
		38 |     }
		39 |
		40 |
		41 |     disk_autoresize = "true"
		42 |     disk_size       = "20"
		43 |     disk_type       = "PD_SSD"
		44 |
		45 |     ip_configuration {
		46 |       ipv4_enabled    = true
		47 |       private_network = "projects/gcp-bridgecrew-deployment/global/networks/default"
		48 |       require_ssl     = false
		49 |       authorized_networks {
		50 |         name  = "theworld"
		51 |         value = "0.0.0.0/0"
		52 |       }
		53 |     }
		54 |
		55 |     location_preference {
		56 |       zone = "us-central1-a"
		57 |     }
		58 |
		59 |     maintenance_window {
		60 |       day  = "1"
		61 |       hour = "0"
		62 |     }
		63 |
		64 |     pricing_plan = "PER_USE"
		65 |     tier         = "db-custom-1-4096"
		66 |   }
		67 | }


Check: CKV_GCP_62: "Bucket should log access"
	FAILED for resource: google_storage_bucket.static_site
	File: /terraform\google\storage\storage_bucket.tf:9-21
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_logging_2

		9  | resource "google_storage_bucket" "static_site" {
		10 |   name          = "image-store.com"
		11 |   location      = "EU"
		12 |   force_destroy = true
		13 |   # logging {
		14 |   #   log_bucket = "image-store.com"
		15 |   # }
		16 |
		17 |
		18 |   versioning = {
		19 |     enabled = false
		20 |   }
		21 | }


Check: CKV_GCP_78: "Ensure Cloud storage has versioning enabled"
	FAILED for resource: google_storage_bucket.static_site
	File: /terraform\google\storage\storage_bucket.tf:9-21

		9  | resource "google_storage_bucket" "static_site" {
		10 |   name          = "image-store.com"
		11 |   location      = "EU"
		12 |   force_destroy = true
		13 |   # logging {
		14 |   #   log_bucket = "image-store.com"
		15 |   # }
		16 |
		17 |
		18 |   versioning = {
		19 |     enabled = false
		20 |   }
		21 | }


Check: CKV_GCP_29: "Ensure that Cloud Storage buckets have uniform bucket-level access enabled"
	FAILED for resource: google_storage_bucket.static_site
	File: /terraform\google\storage\storage_bucket.tf:9-21
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_gcs_2

		9  | resource "google_storage_bucket" "static_site" {
		10 |   name          = "image-store.com"
		11 |   location      = "EU"
		12 |   force_destroy = true
		13 |   # logging {
		14 |   #   log_bucket = "image-store.com"
		15 |   # }
		16 |
		17 |
		18 |   versioning = {
		19 |     enabled = false
		20 |   }
		21 | }


Check: CKV_GCP_63: "Bucket should not log to itself"
	FAILED for resource: google_storage_bucket.fail_self
	File: /terraform\google\storage\storage_bucket.tf:23-35
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_logging_3

		23 | resource "google_storage_bucket" "fail_self" {
		24 |   name          = "image-store.com"
		25 |   location      = "EU"
		26 |   force_destroy = true
		27 |   logging {
		28 |     log_bucket = "image-store.com"
		29 |   }
		30 |
		31 |
		32 |   versioning = {
		33 |     enabled = false
		34 |   }
		35 | }


Check: CKV_GCP_78: "Ensure Cloud storage has versioning enabled"
	FAILED for resource: google_storage_bucket.fail_self
	File: /terraform\google\storage\storage_bucket.tf:23-35

		23 | resource "google_storage_bucket" "fail_self" {
		24 |   name          = "image-store.com"
		25 |   location      = "EU"
		26 |   force_destroy = true
		27 |   logging {
		28 |     log_bucket = "image-store.com"
		29 |   }
		30 |
		31 |
		32 |   versioning = {
		33 |     enabled = false
		34 |   }
		35 | }


Check: CKV_GCP_29: "Ensure that Cloud Storage buckets have uniform bucket-level access enabled"
	FAILED for resource: google_storage_bucket.fail_self
	File: /terraform\google\storage\storage_bucket.tf:23-35
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_gcs_2

		23 | resource "google_storage_bucket" "fail_self" {
		24 |   name          = "image-store.com"
		25 |   location      = "EU"
		26 |   force_destroy = true
		27 |   logging {
		28 |     log_bucket = "image-store.com"
		29 |   }
		30 |
		31 |
		32 |   versioning = {
		33 |     enabled = false
		34 |   }
		35 | }


Check: CKV_GCP_28: "Ensure that Cloud Storage bucket is not anonymously or publicly accessible"
	FAILED for resource: google_storage_bucket_iam_binding.binding
	File: /terraform\google\storage\storage_bucket_iam_binding.tf:6-12
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_public_1

		6  | resource "google_storage_bucket_iam_binding" "binding" {
		7  |   bucket = google_storage_bucket.static-site-fail.name
		8  |   role   = "roles/storage.admin"
		9  |   members = [
		10 |     "allAuthenticatedUsers",
		11 |   ]
		12 | }


Check: CKV_GCP_28: "Ensure that Cloud Storage bucket is not anonymously or publicly accessible"
	FAILED for resource: google_storage_bucket_iam_member.member
	File: /terraform\google\storage\storage_bucket_iam_member.tf:6-10
	Guide: https://docs.bridgecrew.io/docs/bc_gcp_public_1

		6  | resource "google_storage_bucket_iam_member" "member" {
		7  |   bucket = google_storage_bucket.static-site-fail.name
		8  |   role   = "roles/storage.admin"
		9  |   member = "allUsers"
		10 | }


Check: CKV_LIN_5: "Ensure Inbound Firewall Policy is not set to ACCEPT"
	FAILED for resource: linode_firewall.test
	File: /terraform\linode\firewall.tf:5-8

		5 | resource "linode_firewall" "test" {
		6 |   inbound_policy  = "ACCEPT"
		7 |   outbound_policy = "ACCEPT"
		8 | }


Check: CKV_LIN_6: "Ensure Outbound Firewall Policy is not set to ACCEPT"
	FAILED for resource: linode_firewall.test
	File: /terraform\linode\firewall.tf:5-8

		5 | resource "linode_firewall" "test" {
		6 |   inbound_policy  = "ACCEPT"
		7 |   outbound_policy = "ACCEPT"
		8 | }


Check: CKV_LIN_2: "Ensure SSH key set in authorized_keys"
	FAILED for resource: linode_instance.test
	File: /terraform\linode\instance.tf:4-5

		4 | resource "linode_instance" "test" {
		5 | }


Check: CKV_LIN_3: "Ensure email is set"
	FAILED for resource: linode_user.test
	File: /terraform\linode\user.tf:5-6

		5 | resource "linode_user" "test" {
		6 | }


Check: CKV_LIN_4: "Ensure username is set"
	FAILED for resource: linode_user.test
	File: /terraform\linode\user.tf:5-6

		5 | resource "linode_user" "test" {
		6 | }


Check: CKV_OPENSTACK_4: "Ensure that instance does not use basic credentials"
	FAILED for resource: openstack_compute_instance_v2.fail
	File: /terraform\openstack\compute\compute_instance_v2.tf:6-17

		6  | resource "openstack_compute_instance_v2" "fail" {
		7  |   name            = "basic"
		8  |   image_id        = "ad091b52-742f-469e-8f3c-fd81cadf0743"
		9  |   flavor_id       = "3"
		10 |   admin_pass      = "N0tSoS3cretP4ssw0rd"
		11 |   security_groups = ["default"]
		12 |   user_data       = "#cloud-config\nhostname: instance_1.example.com\nfqdn: instance_1.example.com"
		13 |
		14 |   network {
		15 |     name = "my_network"
		16 |   }
		17 | }


Check: CKV_OPENSTACK_5: "Ensure firewall rule set a destination IP"
	FAILED for resource: openstack_fw_rule_v1.fail
	File: /terraform\openstack\fw\fw_rule_v1.tf:8-16

		8  | resource "openstack_fw_rule_v1" "fail" {
		9  |   name             = "my_rule"
		10 |   description      = "let anyone in"
		11 |   action           = "allow"
		12 |   protocol         = "tcp"
		13 |   destination_port = "22"
		14 |   enabled          = "true"
		15 |   # destination_ip_address = "10.0.0.1"
		16 | }


Check: CKV_OPENSTACK_2: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22 (tcp / udp)"
	FAILED for resource: openstack_compute_secgroup_v2.fail
	File: /terraform\openstack\security_group\compute_secgroup_v2.tf:5-43
	Guide: https://docs.bridgecrew.io/docs/bc_openstack_networking_1

		5  | resource "openstack_compute_secgroup_v2" "fail" {
		6  |   name        = "my_secgroup"
		7  |   description = "my security group"
		8  |
		9  |   rule {
		10 |     from_port   = 80
		11 |     to_port     = 80
		12 |     ip_protocol = "tcp"
		13 |     cidr        = "0.0.0.0/0"
		14 |   }
		15 |
		16 |   rule {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     ip_protocol = "tcp"
		20 |     cidr        = "192.168.0.0/16"
		21 |   }
		22 |
		23 |   rule {
		24 |     from_port   = 22
		25 |     to_port     = 22
		26 |     ip_protocol = "tcp"
		27 |     cidr        = "0.0.0.0/0"
		28 |   }
		29 |
		30 |   rule {
		31 |     from_port   = 3389
		32 |     to_port     = 3389
		33 |     ip_protocol = "tcp"
		34 |     cidr        = "192.168.0.0/16"
		35 |   }
		36 |
		37 |   rule {
		38 |     from_port   = 3389
		39 |     to_port     = 3389
		40 |     ip_protocol = "tcp"
		41 |     cidr        = "0.0.0.0/0"
		42 |   }
		43 | }


Check: CKV_OPENSTACK_3: "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389 (tcp / udp)"
	FAILED for resource: openstack_compute_secgroup_v2.fail
	File: /terraform\openstack\security_group\compute_secgroup_v2.tf:5-43
	Guide: https://docs.bridgecrew.io/docs/bc_openstack_networking_2

		5  | resource "openstack_compute_secgroup_v2" "fail" {
		6  |   name        = "my_secgroup"
		7  |   description = "my security group"
		8  |
		9  |   rule {
		10 |     from_port   = 80
		11 |     to_port     = 80
		12 |     ip_protocol = "tcp"
		13 |     cidr        = "0.0.0.0/0"
		14 |   }
		15 |
		16 |   rule {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     ip_protocol = "tcp"
		20 |     cidr        = "192.168.0.0/16"
		21 |   }
		22 |
		23 |   rule {
		24 |     from_port   = 22
		25 |     to_port     = 22
		26 |     ip_protocol = "tcp"
		27 |     cidr        = "0.0.0.0/0"
		28 |   }
		29 |
		30 |   rule {
		31 |     from_port   = 3389
		32 |     to_port     = 3389
		33 |     ip_protocol = "tcp"
		34 |     cidr        = "192.168.0.0/16"
		35 |   }
		36 |
		37 |   rule {
		38 |     from_port   = 3389
		39 |     to_port     = 3389
		40 |     ip_protocol = "tcp"
		41 |     cidr        = "0.0.0.0/0"
		42 |   }
		43 | }


Check: CKV_OCI_18: "OCI IAM password policy for local (non-federated) users has a minimum length of 14 characters"
	FAILED for resource: oci_identity_authentication_policy.fail
	File: /terraform\oracle\IAM\identity_authentication_policy.tf:8-20
	Guide: https://docs.bridgecrew.io/docs/bc_oci_iam_5

		8  | resource "oci_identity_authentication_policy" "fail" {
		9  |
		10 |   compartment_id = var.tenancy_id
		11 |
		12 |   password_policy {
		13 |     is_lowercase_characters_required = false
		14 |     is_numeric_characters_required   = false
		15 |     is_special_characters_required   = false
		16 |     is_uppercase_characters_required = false
		17 |     is_username_containment_allowed  = false
		18 |     minimum_password_length          = 13
		19 |   }
		20 | }


Check: CKV_OCI_11: "OCI IAM password policy - must contain lower case"
	FAILED for resource: oci_identity_authentication_policy.fail
	File: /terraform\oracle\IAM\identity_authentication_policy.tf:8-20
	Guide: https://docs.bridgecrew.io/docs/bc_oci_iam_1

		8  | resource "oci_identity_authentication_policy" "fail" {
		9  |
		10 |   compartment_id = var.tenancy_id
		11 |
		12 |   password_policy {
		13 |     is_lowercase_characters_required = false
		14 |     is_numeric_characters_required   = false
		15 |     is_special_characters_required   = false
		16 |     is_uppercase_characters_required = false
		17 |     is_username_containment_allowed  = false
		18 |     minimum_password_length          = 13
		19 |   }
		20 | }


Check: CKV_OCI_12: "OCI IAM password policy - must contain Numeric characters"
	FAILED for resource: oci_identity_authentication_policy.fail
	File: /terraform\oracle\IAM\identity_authentication_policy.tf:8-20
	Guide: https://docs.bridgecrew.io/docs/bc_oci_iam_2

		8  | resource "oci_identity_authentication_policy" "fail" {
		9  |
		10 |   compartment_id = var.tenancy_id
		11 |
		12 |   password_policy {
		13 |     is_lowercase_characters_required = false
		14 |     is_numeric_characters_required   = false
		15 |     is_special_characters_required   = false
		16 |     is_uppercase_characters_required = false
		17 |     is_username_containment_allowed  = false
		18 |     minimum_password_length          = 13
		19 |   }
		20 | }


Check: CKV_OCI_13: "OCI IAM password policy - must contain Special characters"
	FAILED for resource: oci_identity_authentication_policy.fail
	File: /terraform\oracle\IAM\identity_authentication_policy.tf:8-20
	Guide: https://docs.bridgecrew.io/docs/bc_oci_iam_3

		8  | resource "oci_identity_authentication_policy" "fail" {
		9  |
		10 |   compartment_id = var.tenancy_id
		11 |
		12 |   password_policy {
		13 |     is_lowercase_characters_required = false
		14 |     is_numeric_characters_required   = false
		15 |     is_special_characters_required   = false
		16 |     is_uppercase_characters_required = false
		17 |     is_username_containment_allowed  = false
		18 |     minimum_password_length          = 13
		19 |   }
		20 | }


Check: CKV_OCI_14: "OCI IAM password policy - must contain Uppercase characters"
	FAILED for resource: oci_identity_authentication_policy.fail
	File: /terraform\oracle\IAM\identity_authentication_policy.tf:8-20
	Guide: https://docs.bridgecrew.io/docs/bc_oci_iam_4

		8  | resource "oci_identity_authentication_policy" "fail" {
		9  |
		10 |   compartment_id = var.tenancy_id
		11 |
		12 |   password_policy {
		13 |     is_lowercase_characters_required = false
		14 |     is_numeric_characters_required   = false
		15 |     is_special_characters_required   = false
		16 |     is_uppercase_characters_required = false
		17 |     is_username_containment_allowed  = false
		18 |     minimum_password_length          = 13
		19 |   }
		20 | }


Check: CKV_OCI_4: "Ensure OCI Compute Instance boot volume has in-transit data encryption enabled"
	FAILED for resource: oci_core_instance.fail
	File: /terraform\oracle\core_instance\core_instance.tf:5-83
	Guide: https://docs.bridgecrew.io/docs/bc_oci_compute_1

		5  | resource "oci_core_instance" "fail" {
		6  |   availability_domain = var.instance_availability_domain
		7  |   compartment_id      = var.compartment_id
		8  |   shape               = var.instance_shape
		9  |
		10 |   agent_config {
		11 |     is_monitoring_disabled = true
		12 |   }
		13 |
		14 |   create_vnic_details {
		15 |     assign_private_dns_record = var.instance_create_vnic_details_assign_private_dns_record
		16 |     assign_public_ip          = var.instance_create_vnic_details_assign_public_ip
		17 |     defined_tags              = { "Operations.CostCenter" = "42" }
		18 |     display_name              = var.instance_create_vnic_details_display_name
		19 |     freeform_tags             = { "Department" = "Finance" }
		20 |     hostname_label            = var.instance_create_vnic_details_hostname_label
		21 |     nsg_ids                   = var.instance_create_vnic_details_nsg_ids
		22 |     private_ip                = var.instance_create_vnic_details_private_ip
		23 |     skip_source_dest_check    = var.instance_create_vnic_details_skip_source_dest_check
		24 |     subnet_id                 = oci_core_subnet.test_subnet.id
		25 |     vlan_id                   = oci_core_vlan.test_vlan.id
		26 |   }
		27 |
		28 |   dedicated_vm_host_id = oci_core_dedicated_vm_host.test_dedicated_vm_host.id
		29 |   defined_tags         = { "Operations.CostCenter" = "42" }
		30 |   display_name         = var.instance_display_name
		31 |   extended_metadata = {
		32 |     some_string   = "stringA"
		33 |     nested_object = "{\"some_string\": \"stringB\", \"object\": {\"some_string\": \"stringC\"}}"
		34 |   }
		35 |
		36 |   fault_domain  = var.instance_fault_domain
		37 |   freeform_tags = { "Department" = "Finance" }
		38 |
		39 |   instance_options {
		40 |     are_legacy_imds_endpoints_disabled = false
		41 |   }
		42 |
		43 |   ipxe_script                         = var.instance_ipxe_script
		44 |   is_pv_encryption_in_transit_enabled = var.instance_is_pv_encryption_in_transit_enabled
		45 |
		46 |   launch_options {
		47 |     boot_volume_type                    = var.instance_launch_options_boot_volume_type
		48 |     firmware                            = var.instance_launch_options_firmware
		49 |     is_consistent_volume_naming_enabled = var.instance_launch_options_is_consistent_volume_naming_enabled
		50 |     network_type                        = var.instance_launch_options_network_type
		51 |     remote_data_volume_type             = var.instance_launch_options_remote_data_volume_type
		52 |   }
		53 |   metadata = var.instance_metadata
		54 |
		55 |   platform_config {
		56 |     type                               = var.instance_platform_config_type
		57 |     is_measured_boot_enabled           = var.instance_platform_config_is_measured_boot_enabled
		58 |     is_secure_boot_enabled             = var.instance_platform_config_is_secure_boot_enabled
		59 |     is_trusted_platform_module_enabled = var.instance_platform_config_is_trusted_platform_module_enabled
		60 |     numa_nodes_per_socket              = var.instance_platform_config_numa_nodes_per_socket
		61 |   }
		62 |
		63 |   preemptible_instance_config {
		64 |     preemption_action {
		65 |       type                 = var.instance_preemptible_instance_config_preemption_action_type
		66 |       preserve_boot_volume = var.instance_preemptible_instance_config_preemption_action_preserve_boot_volume
		67 |     }
		68 |   }
		69 |
		70 |   shape_config {
		71 |     baseline_ocpu_utilization = var.instance_shape_config_baseline_ocpu_utilization
		72 |     memory_in_gbs             = var.instance_shape_config_memory_in_gbs
		73 |     ocpus                     = var.instance_shape_config_ocpus
		74 |   }
		75 |
		76 |   source_details {
		77 |     source_id               = oci_core_image.test_image.id
		78 |     source_type             = "image"
		79 |     boot_volume_size_in_gbs = var.instance_source_details_boot_volume_size_in_gbs
		80 |     kms_key_id              = oci_kms_key.test_key.id
		81 |   }
		82 |   preserve_boot_volume = false
		83 | }


Check: CKV_OCI_5: "Ensure OCI Compute Instance has Legacy MetaData service endpoint disabled"
	FAILED for resource: oci_core_instance.fail
	File: /terraform\oracle\core_instance\core_instance.tf:5-83
	Guide: https://docs.bridgecrew.io/docs/bc_oci_compute_2

		5  | resource "oci_core_instance" "fail" {
		6  |   availability_domain = var.instance_availability_domain
		7  |   compartment_id      = var.compartment_id
		8  |   shape               = var.instance_shape
		9  |
		10 |   agent_config {
		11 |     is_monitoring_disabled = true
		12 |   }
		13 |
		14 |   create_vnic_details {
		15 |     assign_private_dns_record = var.instance_create_vnic_details_assign_private_dns_record
		16 |     assign_public_ip          = var.instance_create_vnic_details_assign_public_ip
		17 |     defined_tags              = { "Operations.CostCenter" = "42" }
		18 |     display_name              = var.instance_create_vnic_details_display_name
		19 |     freeform_tags             = { "Department" = "Finance" }
		20 |     hostname_label            = var.instance_create_vnic_details_hostname_label
		21 |     nsg_ids                   = var.instance_create_vnic_details_nsg_ids
		22 |     private_ip                = var.instance_create_vnic_details_private_ip
		23 |     skip_source_dest_check    = var.instance_create_vnic_details_skip_source_dest_check
		24 |     subnet_id                 = oci_core_subnet.test_subnet.id
		25 |     vlan_id                   = oci_core_vlan.test_vlan.id
		26 |   }
		27 |
		28 |   dedicated_vm_host_id = oci_core_dedicated_vm_host.test_dedicated_vm_host.id
		29 |   defined_tags         = { "Operations.CostCenter" = "42" }
		30 |   display_name         = var.instance_display_name
		31 |   extended_metadata = {
		32 |     some_string   = "stringA"
		33 |     nested_object = "{\"some_string\": \"stringB\", \"object\": {\"some_string\": \"stringC\"}}"
		34 |   }
		35 |
		36 |   fault_domain  = var.instance_fault_domain
		37 |   freeform_tags = { "Department" = "Finance" }
		38 |
		39 |   instance_options {
		40 |     are_legacy_imds_endpoints_disabled = false
		41 |   }
		42 |
		43 |   ipxe_script                         = var.instance_ipxe_script
		44 |   is_pv_encryption_in_transit_enabled = var.instance_is_pv_encryption_in_transit_enabled
		45 |
		46 |   launch_options {
		47 |     boot_volume_type                    = var.instance_launch_options_boot_volume_type
		48 |     firmware                            = var.instance_launch_options_firmware
		49 |     is_consistent_volume_naming_enabled = var.instance_launch_options_is_consistent_volume_naming_enabled
		50 |     network_type                        = var.instance_launch_options_network_type
		51 |     remote_data_volume_type             = var.instance_launch_options_remote_data_volume_type
		52 |   }
		53 |   metadata = var.instance_metadata
		54 |
		55 |   platform_config {
		56 |     type                               = var.instance_platform_config_type
		57 |     is_measured_boot_enabled           = var.instance_platform_config_is_measured_boot_enabled
		58 |     is_secure_boot_enabled             = var.instance_platform_config_is_secure_boot_enabled
		59 |     is_trusted_platform_module_enabled = var.instance_platform_config_is_trusted_platform_module_enabled
		60 |     numa_nodes_per_socket              = var.instance_platform_config_numa_nodes_per_socket
		61 |   }
		62 |
		63 |   preemptible_instance_config {
		64 |     preemption_action {
		65 |       type                 = var.instance_preemptible_instance_config_preemption_action_type
		66 |       preserve_boot_volume = var.instance_preemptible_instance_config_preemption_action_preserve_boot_volume
		67 |     }
		68 |   }
		69 |
		70 |   shape_config {
		71 |     baseline_ocpu_utilization = var.instance_shape_config_baseline_ocpu_utilization
		72 |     memory_in_gbs             = var.instance_shape_config_memory_in_gbs
		73 |     ocpus                     = var.instance_shape_config_ocpus
		74 |   }
		75 |
		76 |   source_details {
		77 |     source_id               = oci_core_image.test_image.id
		78 |     source_type             = "image"
		79 |     boot_volume_size_in_gbs = var.instance_source_details_boot_volume_size_in_gbs
		80 |     kms_key_id              = oci_kms_key.test_key.id
		81 |   }
		82 |   preserve_boot_volume = false
		83 | }


Check: CKV_OCI_6: "Ensure OCI Compute Instance has monitoring enabled"
	FAILED for resource: oci_core_instance.fail
	File: /terraform\oracle\core_instance\core_instance.tf:5-83
	Guide: https://docs.bridgecrew.io/docs/bc_oci_logging_1

		5  | resource "oci_core_instance" "fail" {
		6  |   availability_domain = var.instance_availability_domain
		7  |   compartment_id      = var.compartment_id
		8  |   shape               = var.instance_shape
		9  |
		10 |   agent_config {
		11 |     is_monitoring_disabled = true
		12 |   }
		13 |
		14 |   create_vnic_details {
		15 |     assign_private_dns_record = var.instance_create_vnic_details_assign_private_dns_record
		16 |     assign_public_ip          = var.instance_create_vnic_details_assign_public_ip
		17 |     defined_tags              = { "Operations.CostCenter" = "42" }
		18 |     display_name              = var.instance_create_vnic_details_display_name
		19 |     freeform_tags             = { "Department" = "Finance" }
		20 |     hostname_label            = var.instance_create_vnic_details_hostname_label
		21 |     nsg_ids                   = var.instance_create_vnic_details_nsg_ids
		22 |     private_ip                = var.instance_create_vnic_details_private_ip
		23 |     skip_source_dest_check    = var.instance_create_vnic_details_skip_source_dest_check
		24 |     subnet_id                 = oci_core_subnet.test_subnet.id
		25 |     vlan_id                   = oci_core_vlan.test_vlan.id
		26 |   }
		27 |
		28 |   dedicated_vm_host_id = oci_core_dedicated_vm_host.test_dedicated_vm_host.id
		29 |   defined_tags         = { "Operations.CostCenter" = "42" }
		30 |   display_name         = var.instance_display_name
		31 |   extended_metadata = {
		32 |     some_string   = "stringA"
		33 |     nested_object = "{\"some_string\": \"stringB\", \"object\": {\"some_string\": \"stringC\"}}"
		34 |   }
		35 |
		36 |   fault_domain  = var.instance_fault_domain
		37 |   freeform_tags = { "Department" = "Finance" }
		38 |
		39 |   instance_options {
		40 |     are_legacy_imds_endpoints_disabled = false
		41 |   }
		42 |
		43 |   ipxe_script                         = var.instance_ipxe_script
		44 |   is_pv_encryption_in_transit_enabled = var.instance_is_pv_encryption_in_transit_enabled
		45 |
		46 |   launch_options {
		47 |     boot_volume_type                    = var.instance_launch_options_boot_volume_type
		48 |     firmware                            = var.instance_launch_options_firmware
		49 |     is_consistent_volume_naming_enabled = var.instance_launch_options_is_consistent_volume_naming_enabled
		50 |     network_type                        = var.instance_launch_options_network_type
		51 |     remote_data_volume_type             = var.instance_launch_options_remote_data_volume_type
		52 |   }
		53 |   metadata = var.instance_metadata
		54 |
		55 |   platform_config {
		56 |     type                               = var.instance_platform_config_type
		57 |     is_measured_boot_enabled           = var.instance_platform_config_is_measured_boot_enabled
		58 |     is_secure_boot_enabled             = var.instance_platform_config_is_secure_boot_enabled
		59 |     is_trusted_platform_module_enabled = var.instance_platform_config_is_trusted_platform_module_enabled
		60 |     numa_nodes_per_socket              = var.instance_platform_config_numa_nodes_per_socket
		61 |   }
		62 |
		63 |   preemptible_instance_config {
		64 |     preemption_action {
		65 |       type                 = var.instance_preemptible_instance_config_preemption_action_type
		66 |       preserve_boot_volume = var.instance_preemptible_instance_config_preemption_action_preserve_boot_volume
		67 |     }
		68 |   }
		69 |
		70 |   shape_config {
		71 |     baseline_ocpu_utilization = var.instance_shape_config_baseline_ocpu_utilization
		72 |     memory_in_gbs             = var.instance_shape_config_memory_in_gbs
		73 |     ocpus                     = var.instance_shape_config_ocpus
		74 |   }
		75 |
		76 |   source_details {
		77 |     source_id               = oci_core_image.test_image.id
		78 |     source_type             = "image"
		79 |     boot_volume_size_in_gbs = var.instance_source_details_boot_volume_size_in_gbs
		80 |     kms_key_id              = oci_kms_key.test_key.id
		81 |   }
		82 |   preserve_boot_volume = false
		83 | }


Check: CKV_OCI_16: "Ensure VCN has an inbound security list"
	FAILED for resource: oci_core_security_list.fail
	File: /terraform\oracle\core_security_list\core_security_list.tf:1-4
	Guide: https://docs.bridgecrew.io/docs/bc_oci_networking_1

		1 | resource "oci_core_security_list" "fail" {
		2 |   compartment_id = oci_identity_compartment.tf-compartment.id
		3 |   vcn_id         = oci_core_vcn.test_vcn.id
		4 | }


Check: CKV_OCI_17: "Ensure VCN inbound security lists are stateless"
	FAILED for resource: oci_core_security_list.fail2
	File: /terraform\oracle\core_security_list\stateless.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_oci_networking_1

		2  | resource "oci_core_security_list" "fail2" {
		3  |   compartment_id = oci_identity_compartment.tf-compartment.id
		4  |   vcn_id         = oci_core_vcn.test_vcn.id
		5  |   ingress_security_rules {
		6  |     protocol  = "all"
		7  |     source    = "192.168.1.0/24"
		8  |     stateless = false
		9  |   }
		10 | }


Check: CKV_OCI_2: "Ensure OCI Block Storage Block Volume has backup enabled"
	FAILED for resource: oci_core_volume.fail
	File: /terraform\oracle\core_volume\core_volume.tf:1-22
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_1

		1  | resource "oci_core_volume" "fail" {
		2  |   compartment_id      = var.compartment_id
		3  |   availability_domain = var.volume_availability_domain
		4  |
		5  |   block_volume_replicas {
		6  |     availability_domain = var.volume_block_volume_replicas_availability_domain
		7  |     display_name        = var.volume_block_volume_replicas_display_name
		8  |   }
		9  |   defined_tags         = { "Operations.CostCenter" = "42" }
		10 |   display_name         = var.volume_display_name
		11 |   freeform_tags        = { "Department" = "Finance" }
		12 |   is_auto_tune_enabled = var.volume_is_auto_tune_enabled
		13 |   size_in_gbs          = var.volume_size_in_gbs
		14 |   size_in_mbs          = var.volume_size_in_mbs
		15 |
		16 |   source_details {
		17 |     id   = var.volume_source_details_id
		18 |     type = var.volume_source_details_type
		19 |   }
		20 |   vpus_per_gb                    = var.volume_vpus_per_gb
		21 |   block_volume_replicas_deletion = true
		22 | }


Check: CKV_OCI_3: "OCI Block Storage Block Volumes are not encrypted with a Customer Managed Key (CMK)"
	FAILED for resource: oci_core_volume.fail
	File: /terraform\oracle\core_volume\core_volume.tf:1-22
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_2

		1  | resource "oci_core_volume" "fail" {
		2  |   compartment_id      = var.compartment_id
		3  |   availability_domain = var.volume_availability_domain
		4  |
		5  |   block_volume_replicas {
		6  |     availability_domain = var.volume_block_volume_replicas_availability_domain
		7  |     display_name        = var.volume_block_volume_replicas_display_name
		8  |   }
		9  |   defined_tags         = { "Operations.CostCenter" = "42" }
		10 |   display_name         = var.volume_display_name
		11 |   freeform_tags        = { "Department" = "Finance" }
		12 |   is_auto_tune_enabled = var.volume_is_auto_tune_enabled
		13 |   size_in_gbs          = var.volume_size_in_gbs
		14 |   size_in_mbs          = var.volume_size_in_mbs
		15 |
		16 |   source_details {
		17 |     id   = var.volume_source_details_id
		18 |     type = var.volume_source_details_type
		19 |   }
		20 |   vpus_per_gb                    = var.volume_vpus_per_gb
		21 |   block_volume_replicas_deletion = true
		22 | }


Check: CKV_OCI_15: "Ensure OCI File System is Encrypted with a customer Managed Key"
	FAILED for resource: oci_file_storage_file_system.fail
	File: /terraform\oracle\file_storage_file_system\file_storage_file_system.tf:4-12
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_7

		4  | resource "oci_file_storage_file_system" "fail" {
		5  |   availability_domain = var.file_system_availability_domain
		6  |   compartment_id      = var.compartment_id
		7  |
		8  |   defined_tags       = { "Operations.CostCenter" = "42" }
		9  |   display_name       = var.file_system_display_name
		10 |   freeform_tags      = { "Department" = "Finance" }
		11 |   source_snapshot_id = oci_file_storage_snapshot.test_snapshot.id
		12 | }


Check: CKV_OCI_7: "Ensure OCI Object Storage bucket can emit object events"
	FAILED for resource: oci_objectstorage_bucket.fail
	File: /terraform\oracle\objectstorage_bucket\objectstorage_bucket.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_3

		7  | resource "oci_objectstorage_bucket" "fail" {
		8  |   compartment_id = var.compartment_id
		9  |   name           = var.bucket_name
		10 |   namespace      = var.namespace
		11 |
		12 |   access_type           = "ObjectReadWithoutList"
		13 |   defined_tags          = var.defined_tags
		14 |   freeform_tags         = var.freeform_tags
		15 |   metadata              = var.metadata
		16 |   storage_tier          = var.bucket_storage_tier
		17 |   object_events_enabled = false
		18 |
		19 |   retention_rules {
		20 |     display_name = var.retention_rule_display_name
		21 |
		22 |     duration {
		23 |       time_amount = var.retention_rule_duration_time_amount
		24 |       time_unit   = var.retention_rule_duration_time_unit
		25 |     }
		26 |     time_rule_locked = var.retention_rule_time_rule_locked
		27 |   }
		28 |
		29 |   versioning = "Disabled"
		30 | }


Check: CKV_OCI_9: "Ensure OCI Object Storage is encrypted with Customer Managed Key"
	FAILED for resource: oci_objectstorage_bucket.fail
	File: /terraform\oracle\objectstorage_bucket\objectstorage_bucket.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_5

		7  | resource "oci_objectstorage_bucket" "fail" {
		8  |   compartment_id = var.compartment_id
		9  |   name           = var.bucket_name
		10 |   namespace      = var.namespace
		11 |
		12 |   access_type           = "ObjectReadWithoutList"
		13 |   defined_tags          = var.defined_tags
		14 |   freeform_tags         = var.freeform_tags
		15 |   metadata              = var.metadata
		16 |   storage_tier          = var.bucket_storage_tier
		17 |   object_events_enabled = false
		18 |
		19 |   retention_rules {
		20 |     display_name = var.retention_rule_display_name
		21 |
		22 |     duration {
		23 |       time_amount = var.retention_rule_duration_time_amount
		24 |       time_unit   = var.retention_rule_duration_time_unit
		25 |     }
		26 |     time_rule_locked = var.retention_rule_time_rule_locked
		27 |   }
		28 |
		29 |   versioning = "Disabled"
		30 | }


Check: CKV_OCI_10: "Ensure OCI Object Storage is not Public"
	FAILED for resource: oci_objectstorage_bucket.fail
	File: /terraform\oracle\objectstorage_bucket\objectstorage_bucket.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_6

		7  | resource "oci_objectstorage_bucket" "fail" {
		8  |   compartment_id = var.compartment_id
		9  |   name           = var.bucket_name
		10 |   namespace      = var.namespace
		11 |
		12 |   access_type           = "ObjectReadWithoutList"
		13 |   defined_tags          = var.defined_tags
		14 |   freeform_tags         = var.freeform_tags
		15 |   metadata              = var.metadata
		16 |   storage_tier          = var.bucket_storage_tier
		17 |   object_events_enabled = false
		18 |
		19 |   retention_rules {
		20 |     display_name = var.retention_rule_display_name
		21 |
		22 |     duration {
		23 |       time_amount = var.retention_rule_duration_time_amount
		24 |       time_unit   = var.retention_rule_duration_time_unit
		25 |     }
		26 |     time_rule_locked = var.retention_rule_time_rule_locked
		27 |   }
		28 |
		29 |   versioning = "Disabled"
		30 | }


Check: CKV_OCI_8: "Ensure OCI Object Storage has versioning enabled"
	FAILED for resource: oci_objectstorage_bucket.fail
	File: /terraform\oracle\objectstorage_bucket\objectstorage_bucket.tf:7-30
	Guide: https://docs.bridgecrew.io/docs/bc_oci_storage_4

		7  | resource "oci_objectstorage_bucket" "fail" {
		8  |   compartment_id = var.compartment_id
		9  |   name           = var.bucket_name
		10 |   namespace      = var.namespace
		11 |
		12 |   access_type           = "ObjectReadWithoutList"
		13 |   defined_tags          = var.defined_tags
		14 |   freeform_tags         = var.freeform_tags
		15 |   metadata              = var.metadata
		16 |   storage_tier          = var.bucket_storage_tier
		17 |   object_events_enabled = false
		18 |
		19 |   retention_rules {
		20 |     display_name = var.retention_rule_display_name
		21 |
		22 |     duration {
		23 |       time_amount = var.retention_rule_duration_time_amount
		24 |       time_unit   = var.retention_rule_duration_time_unit
		25 |     }
		26 |     time_rule_locked = var.retention_rule_time_rule_locked
		27 |   }
		28 |
		29 |   versioning = "Disabled"
		30 | }


Check: CKV_AWS_41: "Ensure no hard coded AWS access key and secret key exists in provider"
	FAILED for resource: aws.default
	File: /terraform\secrets\BC_GIT_2.tf:1-4
	Guide: https://docs.bridgecrew.io/docs/bc_aws_secrets_5

		1 | provider "aws" {
		2 |   access_key = "AKIAIOSFODNN7EXAMPLE"
		3 |   secret_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
		4 | }


Check: CKV2_AWS_20: "Ensure that ALB redirects HTTP requests into HTTPS ones"
	FAILED for resource: aws_lb.lb_bad_1
	File: /terraform\aws\lb\redirect.tf:9-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones

		9  | resource "aws_lb" "lb_bad_1" {
		10 | }


Check: CKV2_AWS_33: "Ensure AppSync is protected by WAF"
	FAILED for resource: aws_appsync_graphql_api.default
	File: /terraform\aws\appsync\appsync.tf:5-8

		5 | resource "aws_appsync_graphql_api" "default" {
		6 |   authentication_type = "API_KEY"
		7 |   name                = "example"
		8 | }


Check: CKV2_AWS_32: "Ensure CloudFront distribution has a strict security headers policy attached"
	FAILED for resource: aws_cloudfront_distribution.positive4
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:98-142
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65

		98  | resource "aws_cloudfront_distribution" "positive4" {
		99  |   origin {
		100 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		101 |     origin_id   = local.s3_origin_id
		102 |
		103 |     s3_origin_config {
		104 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		105 |     }
		106 |   }
		107 |
		108 |   enabled             = true
		109 |   is_ipv6_enabled     = true
		110 |   comment             = "Some comment"
		111 |   default_root_object = "index.html"
		112 |
		113 |   default_cache_behavior {
		114 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		115 |     cached_methods   = ["GET", "HEAD"]
		116 |     target_origin_id = local.s3_origin_id
		117 |
		118 |     forwarded_values {
		119 |       query_string = false
		120 |
		121 |       cookies {
		122 |         forward = "none"
		123 |       }
		124 |     }
		125 |
		126 |     viewer_protocol_policy = "allow-all"
		127 |     min_ttl                = 0
		128 |     default_ttl            = 3600
		129 |     max_ttl                = 86400
		130 |   }
		131 |
		132 |   restrictions {
		133 |     geo_restriction {
		134 |       restriction_type = "whitelist"
		135 |       locations        = ["US", "CA", "GB", "DE"]
		136 |     }
		137 |   }
		138 |
		139 |   viewer_certificate {
		140 |     acm_certificate_arn = aws_acm_certificate_validation.cert.certificate_arn
		141 |   }
		142 | }


Check: CKV2_AWS_32: "Ensure CloudFront distribution has a strict security headers policy attached"
	FAILED for resource: aws_cloudfront_distribution.positive3
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:52-96
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65

		52 | resource "aws_cloudfront_distribution" "positive3" {
		53 |   origin {
		54 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		55 |     origin_id   = local.s3_origin_id
		56 |
		57 |     s3_origin_config {
		58 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		59 |     }
		60 |   }
		61 |
		62 |   enabled             = true
		63 |   is_ipv6_enabled     = true
		64 |   comment             = "Some comment"
		65 |   default_root_object = "index.html"
		66 |
		67 |   default_cache_behavior {
		68 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		69 |     cached_methods   = ["GET", "HEAD"]
		70 |     target_origin_id = local.s3_origin_id
		71 |
		72 |     forwarded_values {
		73 |       query_string = false
		74 |
		75 |       cookies {
		76 |         forward = "none"
		77 |       }
		78 |     }
		79 |
		80 |     viewer_protocol_policy = "allow-all"
		81 |     min_ttl                = 0
		82 |     default_ttl            = 3600
		83 |     max_ttl                = 86400
		84 |   }
		85 |
		86 |   restrictions {
		87 |     geo_restriction {
		88 |       restriction_type = "whitelist"
		89 |       locations        = ["US", "CA", "GB", "DE"]
		90 |     }
		91 |   }
		92 |
		93 |   viewer_certificate {
		94 |     cloudfront_default_certificate = true
		95 |   }
		96 | }


Check: CKV2_AWS_32: "Ensure CloudFront distribution has a strict security headers policy attached"
	FAILED for resource: aws_cloudfront_distribution.positive2
	File: /terraform\aws\cloudfront\cloudfront_vulnerable_default_ssl_certificate.tf:10-50
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65

		10 | resource "aws_cloudfront_distribution" "positive2" {
		11 |   origin {
		12 |     domain_name = aws_s3_bucket.positive1.bucket_regional_domain_name
		13 |     origin_id   = local.s3_origin_id
		14 |
		15 |     s3_origin_config {
		16 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		17 |     }
		18 |   }
		19 |
		20 |   enabled             = true
		21 |   is_ipv6_enabled     = true
		22 |   comment             = "Some comment"
		23 |   default_root_object = "index.html"
		24 |
		25 |   default_cache_behavior {
		26 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		27 |     cached_methods   = ["GET", "HEAD"]
		28 |     target_origin_id = local.s3_origin_id
		29 |
		30 |     forwarded_values {
		31 |       query_string = false
		32 |
		33 |       cookies {
		34 |         forward = "none"
		35 |       }
		36 |     }
		37 |
		38 |     viewer_protocol_policy = "allow-all"
		39 |     min_ttl                = 0
		40 |     default_ttl            = 3600
		41 |     max_ttl                = 86400
		42 |   }
		43 |
		44 |   restrictions {
		45 |     geo_restriction {
		46 |       restriction_type = "whitelist"
		47 |       locations        = ["US", "CA", "GB", "DE"]
		48 |     }
		49 |   }
		50 | }


Check: CKV2_AWS_32: "Ensure CloudFront distribution has a strict security headers policy attached"
	FAILED for resource: aws_cloudfront_distribution.s3_distribution
	File: /terraform\aws\cloudfront\cloudfront.tf:13-88
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65

		13 | resource "aws_cloudfront_distribution" "s3_distribution" {
		14 |   dynamic "origin" {
		15 |     for_each = local.origins
		16 |     content {
		17 |       domain_name = origin.value["domain_name"]
		18 |       origin_id   = origin.value["origin_id"]
		19 |
		20 |       s3_origin_config {
		21 |         origin_access_identity = origin.value["origin_access_identity"]
		22 |       }
		23 |     }
		24 |   }
		25 |
		26 |   enabled             = true
		27 |   is_ipv6_enabled     = true
		28 |   default_root_object = "index.html"
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = var.default_behaviour.allowed_methods
		32 |     cached_methods   = var.default_behaviour.cached_methods
		33 |     target_origin_id = var.default_behaviour.origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = var.default_behaviour.query_string
		37 |
		38 |       cookies {
		39 |         forward = var.default_behaviour.forward
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = var.default_behaviour.min_ttl
		45 |     default_ttl            = var.default_behaviour.default_ttl
		46 |     max_ttl                = var.default_behaviour.max_ttl
		47 |   }
		48 |
		49 |   dynamic "ordered_cache_behavior" {
		50 |     for_each = var.behaviours
		51 |     content {
		52 |       path_pattern     = ordered_cache_behavior.value["path_pattern"]
		53 |       allowed_methods  = ordered_cache_behavior.value["allowed_methods"]
		54 |       cached_methods   = ordered_cache_behavior.value["cached_methods"]
		55 |       target_origin_id = ordered_cache_behavior.value["origin_id"]
		56 |       forwarded_values {
		57 |         headers      = ordered_cache_behavior.value["headers"]
		58 |         query_string = ordered_cache_behavior.value["query_string"]
		59 |         cookies {
		60 |           forward = ordered_cache_behavior.value["forward"]
		61 |         }
		62 |       }
		63 |       min_ttl                = ordered_cache_behavior.value["min_ttl"]
		64 |       default_ttl            = ordered_cache_behavior.value["default_ttl"]
		65 |       max_ttl                = ordered_cache_behavior.value["max_ttl"]
		66 |       compress               = ordered_cache_behavior.value["compress"]
		67 |       viewer_protocol_policy = "allow-all"
		68 |     }
		69 |   }
		70 |
		71 |   price_class = "PriceClass_200"
		72 |
		73 |   restrictions {
		74 |     geo_restriction {
		75 |       restriction_type = var.geo_restrictions["restriction_type"]
		76 |       locations        = var.geo_restrictions["locations"]
		77 |     }
		78 |   }
		79 |
		80 |   viewer_certificate {
		81 |     cloudfront_default_certificate = var.viewer_certificate["cloudfront_default_certificate"]
		82 |     minimum_protocol_version       = var.viewer_certificate["minimum_protocol_version"]
		83 |   }
		84 |
		85 |   lifecycle {
		86 |     ignore_changes = [tags]
		87 |   }
		88 | }


Check: CKV2_AWS_32: "Ensure CloudFront distribution has a strict security headers policy attached"
	FAILED for resource: aws_cloudfront_distribution.fail
	File: /terraform\aws\cloudfront\cloudfront_configuration_is_missing.tf:7-65
	Guide: https://docs.bridgecrew.io/docs/bc_aws_networking_65

		7  | resource "aws_cloudfront_distribution" "fail" {
		8  |   origin {
		9  |     domain_name = aws_s3_bucket.b.bucket_regional_domain_name
		10 |     origin_id   = local.s3_origin_id
		11 |
		12 |     s3_origin_config {
		13 |       origin_access_identity = "origin-access-identity/cloudfront/ABCDEFG1234567"
		14 |     }
		15 |   }
		16 |
		17 |   enabled             = false
		18 |   is_ipv6_enabled     = true
		19 |   comment             = "Some comment"
		20 |   default_root_object = "index.html"
		21 |
		22 |   logging_config {
		23 |     include_cookies = false
		24 |     bucket          = "mylogs.s3.amazonaws.com"
		25 |     prefix          = "myprefix"
		26 |   }
		27 |
		28 |   aliases = ["mysite.example.com", "yoursite.example.com"]
		29 |
		30 |   default_cache_behavior {
		31 |     allowed_methods  = ["DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT"]
		32 |     cached_methods   = ["GET", "HEAD"]
		33 |     target_origin_id = local.s3_origin_id
		34 |
		35 |     forwarded_values {
		36 |       query_string = false
		37 |
		38 |       cookies {
		39 |         forward = "none"
		40 |       }
		41 |     }
		42 |
		43 |     viewer_protocol_policy = "allow-all"
		44 |     min_ttl                = 0
		45 |     default_ttl            = 3600
		46 |     max_ttl                = 86400
		47 |   }
		48 |
		49 |   price_class = "PriceClass_200"
		50 |
		51 |   restrictions {
		52 |     geo_restriction {
		53 |       restriction_type = "whitelist"
		54 |       locations        = ["US", "CA", "GB", "DE"]
		55 |     }
		56 |   }
		57 |
		58 |   tags = {
		59 |     Environment = "production"
		60 |   }
		61 |
		62 |   viewer_certificate {
		63 |     cloudfront_default_certificate = true
		64 |   }
		65 | }


Check: CKV2_AWS_9: "Ensure that EBS are added in the backup plans of AWS Backup"
	FAILED for resource: aws_ebs_volume.fail
	File: /terraform\aws\ebs\ebs_volume.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-ebs-are-added-in-the-backup-plans-of-aws-backup

		12 | resource "aws_ebs_volume" "fail" {
		13 |   availability_zone = "eu-west-1a"
		14 |   size              = 1
		15 | }


Check: CKV2_AWS_18: "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup"
	FAILED for resource: aws_efs_file_system.ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:38-44
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup

		38 | resource "aws_efs_file_system" "ok_efs" {
		39 |   creation_token = "my-product"
		40 |
		41 |   tags = {
		42 |     Name = "MyProduct"
		43 |   }
		44 | }


Check: CKV2_AWS_18: "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup"
	FAILED for resource: aws_efs_file_system.not_secure
	File: /terraform\aws\efs\efs_with_vulnerable_policy.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup

		8  | resource "aws_efs_file_system" "not_secure" {
		9  |   creation_token = "efs-not-secure"
		10 |
		11 |   tags = {
		12 |     Name = "NotSecure"
		13 |   }
		14 | }


Check: CKV2_AWS_18: "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup"
	FAILED for resource: aws_efs_file_system.sharedstore
	File: /terraform\aws\efs\efs.tf:8-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup

		8  | resource "aws_efs_file_system" "sharedstore" {
		9  |
		10 |   creation_token = var.efs["creation_token"]
		11 |
		12 |   lifecycle_policy {
		13 |     transition_to_ia = var.efs["transition_to_ia"]
		14 |   }
		15 |
		16 |   kms_key_id                      = ""
		17 |   encrypted                       = false
		18 |   performance_mode                = var.efs["performance_mode"]
		19 |   provisioned_throughput_in_mibps = var.efs["provisioned_throughput_in_mibps"]
		20 |   throughput_mode                 = var.efs["throughput_mode"]
		21 |   tags                            = var.common_tags
		22 |
		23 | }


Check: CKV2_AWS_18: "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup"
	FAILED for resource: aws_efs_file_system.not_ok_efs
	File: /terraform\aws\backup_vault\backup_selection.tf:46-52
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup

		46 | resource "aws_efs_file_system" "not_ok_efs" {
		47 |   creation_token = "my-product"
		48 |
		49 |   tags = {
		50 |     Name = "MyProduct"
		51 |   }
		52 | }


Check: CKV2_AWS_18: "Ensure that Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup"
	FAILED for resource: aws_efs_file_system.fs
	File: /terraform\aws\ecs\ecs_task_definition.tf:38-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-elastic-file-system-amazon-efs-file-systems-are-added-in-the-backup-plans-of-aws-backup

		38 | resource "aws_efs_file_system" "fs" {}


Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	FAILED for resource: aws_iam_user.example
	File: /terraform\aws\iam\iam_user_with_access_to_console.tf:1-5
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

		1 | resource "aws_iam_user" "example" {
		2 |   name          = "example"
		3 |   path          = "/"
		4 |   force_destroy = true
		5 | }


Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	FAILED for resource: aws_iam_user.fail_console
	File: /terraform\aws\iam\userconsole.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

		3 | resource "aws_iam_user" "fail_console" {
		4 |   name = "human-user"
		5 | }


Check: CKV2_AWS_22: "Ensure an IAM User does not have access to the console"
	FAILED for resource: aws_iam_user.mfa
	File: /terraform\aws\iam\iam_authentication_without_mfa.tf:5-8
	Guide: https://docs.bridgecrew.io/docs/ensure-an-iam-user-does-not-have-access-to-the-console-group

		5 | resource "aws_iam_user" "mfa" {
		6 |   name = "aws-foundations-benchmark-1-4-0-terraform-user"
		7 |   path = "/"
		8 | }


Check: CKV2_AWS_21: "Ensure that all IAM users are members of at least one IAM group."
	FAILED for resource: aws_iam_group_membership.team3
	File: /terraform\aws\iam\group\iam_group_without_users.tf:24-31
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group

		24 | resource "aws_iam_group_membership" "team3" {
		25 |   name = "tf-testing-group-membership"
		26 |
		27 |   users = [
		28 |   ]
		29 |
		30 |   group = aws_iam_group.group3.name
		31 | }


Check: CKV2_AWS_21: "Ensure that all IAM users are members of at least one IAM group."
	FAILED for resource: aws_iam_group_membership.bad_group
	File: /terraform\aws\iam\group\iam_group.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group

		4 | resource "aws_iam_group_membership" "bad_group" {
		5 |   name = "tf-testing-group-membership"
		6 |
		7 |
		8 |   group = aws_iam_group.bad_group.name
		9 | }


Check: CKV2_AWS_21: "Ensure that all IAM users are members of at least one IAM group."
	FAILED for resource: aws_iam_group_membership.team2
	File: /terraform\aws\iam\group\iam_group_without_users.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-iam-users-are-members-of-at-least-one-iam-group

		1  | resource "aws_iam_group_membership" "team2" {
		2  |   name = "tf-testing-group-membership"
		3  |
		4  |   users = [
		5  |     aws_iam_user.user_one2.name,
		6  |     aws_iam_user.user_two2.name,
		7  |   ]
		8  |
		9  |   group = aws_iam_group.group222.name
		10 | }


Check: CKV2_AWS_30: "Ensure Postgres RDS as aws_db_instance has Query Logging enabled"
	FAILED for resource: aws_db_instance.fail
	File: /terraform\aws\rds\db_instance.tf:15-20
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_32

		15 | resource "aws_db_instance" "fail" {
		16 |   //storage_encrypted  = true
		17 |   publicly_accessible     = true
		18 |   backup_retention_period = 0
		19 |   engine                  = "postgres"
		20 | }


Check: CKV2_AWS_8: "Ensure that RDS clusters has backup plan of AWS Backup"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-has-backup-plan-of-aws-backup

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV2_AWS_8: "Ensure that RDS clusters has backup plan of AWS Backup"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-has-backup-plan-of-aws-backup

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV2_AWS_13: "Ensure that Redshift clusters has backup plan of AWS Backup"
	FAILED for resource: aws_redshift_cluster.fail
	File: /terraform\aws\redshift\redshift_cluster.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-has-backup-plan-of-aws-backup

		16 | resource "aws_redshift_cluster" "fail" {
		17 |   cluster_identifier                  = "examplea"
		18 |   availability_zone                   = data.aws_availability_zones.available.names[0]
		19 |   database_name                       = "mydb"
		20 |   master_username                     = "foo_test"
		21 |   master_password                     = "Mustbe8characters"
		22 |   node_type                           = "dc2.large"
		23 |   automated_snapshot_retention_period = 0
		24 |   allow_version_upgrade               = false
		25 |   skip_final_snapshot                 = true
		26 |   kms_key_id                          = ""
		27 |   cluster_subnet_group_name           = ""
		28 | }


Check: CKV2_AWS_13: "Ensure that Redshift clusters has backup plan of AWS Backup"
	FAILED for resource: aws_redshift_cluster.positive1
	File: /terraform\aws\redshift\redshift_using_default_port.tf:1-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-has-backup-plan-of-aws-backup

		1 | resource "aws_redshift_cluster" "positive1" {
		2 |   cluster_identifier  = "tf-redshift-cluster"
		3 |   database_name       = "mydb"
		4 |   master_username     = "foo"
		5 |   master_password     = "Mustbe8characters"
		6 |   node_type           = "dc1.large"
		7 |   cluster_type        = "single-node"
		8 |   publicly_accessible = false
		9 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive1
	File: /terraform\aws\security_groups\securiity_group_unknown_port_exposed_to_internet.tf:1-24
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		1  | resource "aws_security_group" "positive1" {
		2  |   name        = "allow_tls"
		3  |   description = "Allow TLS inbound traffic"
		4  |   vpc_id      = aws_vpc.main.id
		5  |
		6  |   ingress {
		7  |     description = "TLS from VPC"
		8  |     from_port   = 44
		9  |     to_port     = 443
		10 |     protocol    = "tcp"
		11 |     cidr_blocks = ["0.0.0.0/0"]
		12 |   }
		13 |
		14 |   egress {
		15 |     from_port   = 0
		16 |     to_port     = 0
		17 |     protocol    = "-1"
		18 |     cidr_blocks = ["0.0.0.0/0"]
		19 |   }
		20 |
		21 |   tags = {
		22 |     Name = "allow_tls"
		23 |   }
		24 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive7
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:91-103
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		91  | resource "aws_security_group" "positive7" {
		92  |   name        = "allow_tls7"
		93  |   description = "Allow TLS inbound traffic"
		94  |   vpc_id      = aws_vpc.main.id
		95  |
		96  |   ingress {
		97  |     description = "TLS from VPC"
		98  |     from_port   = 2383
		99  |     to_port     = 2383
		100 |     protocol    = "udp"
		101 |     cidr_blocks = ["/0", "1.2.3.4/12"]
		102 |   }
		103 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive2
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:16-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		16 | resource "aws_security_group" "positive2" {
		17 |   name        = "allow_tls2"
		18 |   description = "Allow TLS inbound traffic"
		19 |   vpc_id      = aws_vpc.main.id
		20 |
		21 |   ingress {
		22 |     description = "TLS from VPC"
		23 |     from_port   = 20
		24 |     to_port     = 60
		25 |     protocol    = "tcp"
		26 |     cidr_blocks = ["/0"]
		27 |   }
		28 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive5
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:61-73
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		61 | resource "aws_security_group" "positive5" {
		62 |   name        = "allow_tls5"
		63 |   description = "Allow TLS inbound traffic"
		64 |   vpc_id      = aws_vpc.main.id
		65 |
		66 |   ingress {
		67 |     description = "TLS from VPC"
		68 |     from_port   = 445
		69 |     to_port     = 500
		70 |     protocol    = "udp"
		71 |     cidr_blocks = ["1.1.1.1/1", "0.0.0.0/0", "2.2.3.4/12"]
		72 |   }
		73 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive6
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:76-88
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		76 | resource "aws_security_group" "positive6" {
		77 |   name        = "allow_tls6"
		78 |   description = "Allow TLS inbound traffic"
		79 |   vpc_id      = aws_vpc.main.id
		80 |
		81 |   ingress {
		82 |     description = "TLS from VPC"
		83 |     from_port   = 135
		84 |     to_port     = 170
		85 |     protocol    = "udp"
		86 |     cidr_blocks = ["10.68.0.0", "0.0.0.0/0"]
		87 |   }
		88 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive8
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:106-118
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		106 | resource "aws_security_group" "positive8" {
		107 |   name        = "allow_tls8"
		108 |   description = "Allow TLS inbound traffic"
		109 |   vpc_id      = aws_vpc.main.id
		110 |
		111 |   ingress {
		112 |     description = "TLS from VPC"
		113 |     from_port   = 0
		114 |     to_port     = 0
		115 |     protocol    = "-1"
		116 |     cidr_blocks = ["/0"]
		117 |   }
		118 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.bad_example
	File: /terraform\aws\security_groups\security_group.tf:15-38
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		15 | resource "aws_security_group" "bad_example" {
		16 |   ingress {
		17 |     from_port   = 22
		18 |     to_port     = 22
		19 |     cidr_blocks = ["0.0.0.0/0"]
		20 |   }
		21 |
		22 |   ingress {
		23 |     from_port   = 3389
		24 |     to_port     = 3389
		25 |     cidr_blocks = ["0.0.0.0/0"]
		26 |   }
		27 |
		28 |   egress {
		29 |     from_port   = 22
		30 |     to_port     = 22
		31 |     cidr_blocks = ["0.0.0.0/0"]
		32 |   }
		33 |   egress {
		34 |     from_port   = 3389
		35 |     to_port     = 3389
		36 |     cidr_blocks = ["0.0.0.0/0"]
		37 |   }
		38 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.allow_tls
	File: /terraform\aws\security_groups\security_groups_not_used.tf:8-33
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		8  | resource "aws_security_group" "allow_tls" {
		9  |   name        = "allow_tls"
		10 |   description = "Allow TLS inbound traffic"
		11 |   vpc_id      = aws_vpc.main.id
		12 |
		13 |   ingress {
		14 |     description      = "TLS from VPC"
		15 |     from_port        = 443
		16 |     to_port          = 443
		17 |     protocol         = "tcp"
		18 |     cidr_blocks      = [aws_vpc.main.cidr_block]
		19 |     ipv6_cidr_blocks = [aws_vpc.main.ipv6_cidr_block]
		20 |   }
		21 |
		22 |   egress {
		23 |     from_port        = 0
		24 |     to_port          = 0
		25 |     protocol         = "-1"
		26 |     cidr_blocks      = ["0.0.0.0/0"]
		27 |     ipv6_cidr_blocks = ["::/0"]
		28 |   }
		29 |
		30 |   tags = {
		31 |     Name = "allow_tls"
		32 |   }
		33 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive4
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:46-58
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		46 | resource "aws_security_group" "positive4" {
		47 |   name        = "allow_tls4"
		48 |   description = "Allow TLS inbound traffic"
		49 |   vpc_id      = aws_vpc.main.id
		50 |
		51 |   ingress {
		52 |     description = "TLS from VPC"
		53 |     from_port   = 20
		54 |     to_port     = 22
		55 |     protocol    = "tcp"
		56 |     cidr_blocks = ["/0"]
		57 |   }
		58 | }


Check: CKV2_AWS_5: "Ensure that Security Groups are attached to another resource"
	FAILED for resource: aws_security_group.positive3
	File: /terraform\aws\security_groups\sensitive_port_is_exposed_to_entire_network.tf:31-43
	Guide: https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis

		31 | resource "aws_security_group" "positive3" {
		32 |   name        = "allow_tls3"
		33 |   description = "Allow TLS inbound traffic"
		34 |   vpc_id      = aws_vpc.main.id
		35 |
		36 |   ingress {
		37 |     description = "TLS from VPC"
		38 |     from_port   = 5000
		39 |     to_port     = 6000
		40 |     protocol    = "-1"
		41 |     cidr_blocks = ["0.0.0.0/0"]
		42 |   }
		43 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.vpc1
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:41-48
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		41 | resource "aws_vpc" "vpc1" {
		42 |   cidr_block = var.vpc_1_cidr_block
		43 |
		44 |   tags = {
		45 |     Name    = "tf-test-vpc-1"
		46 |     Project = "CIS Certification"
		47 |   }
		48 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.bad_vpc
	File: /terraform\aws\vpc\nacl.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		5 | resource "aws_vpc" "bad_vpc" {
		6 |   cidr_block = "10.0.0.0/16"
		7 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.main
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:11-14
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		11 | resource "aws_vpc" "main" {
		12 |   cidr_block         = "192.168.100.0/24"
		13 |   enable_dns_support = true
		14 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.eks_vpc
	File: /terraform\aws\vpc\vpc.tf:5-9
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		5 | resource "aws_vpc" "eks_vpc" {
		6 |   cidr_block           = "10.10.0.0/16"
		7 |   enable_dns_hostnames = true
		8 |   enable_dns_support   = true
		9 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.positive
	File: /terraform\aws\vpc\vpc_without_network_firewall.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		4 | resource "aws_vpc" "positive" {
		5 |   cidr_block = "10.0.0.0/16"
		6 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.vpc2
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:72-79
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		72 | resource "aws_vpc" "vpc2" {
		73 |   cidr_block = var.vpc_2_cidr_block
		74 |
		75 |   tags = {
		76 |     Name    = "tf-test-vpc-2"
		77 |     Project = "CIS Certification"
		78 |   }
		79 | }


Check: CKV2_AWS_11: "Ensure VPC flow logging is enabled in all VPCs"
	FAILED for resource: aws_vpc.mainvpc
	File: /terraform\aws\security_groups\vpc_default_security_group_accepts_all_traffic.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging

		1 | resource "aws_vpc" "mainvpc" {
		2 |   cidr_block = "10.1.0.0/16"
		3 | }


Check: CKV2_AWS_2: "Ensure that only encrypted EBS volumes are attached to EC2 instances"
	FAILED for resource: aws_ebs_volume.fail
	File: /terraform\aws\ebs\ebs_volume.tf:12-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-only-encrypted-ebs-volumes-are-attached-to-ec2-instances

		12 | resource "aws_ebs_volume" "fail" {
		13 |   availability_zone = "eu-west-1a"
		14 |   size              = 1
		15 | }


Check: CKV2_AWS_31: "Ensure WAF2 has a Logging Configuration"
	FAILED for resource: aws_wafv2_web_acl.no_rule
	File: /terraform\aws\waf\waf2.tf:5-19
	Guide: https://docs.bridgecrew.io/docs/bc_aws_logging_33

		5  | resource "aws_wafv2_web_acl" "no_rule" {
		6  |   name        = "managed-rule-example-fail"
		7  |   description = "Example of a managed rule."
		8  |   scope       = "REGIONAL"
		9  |
		10 |   default_action {
		11 |     allow {}
		12 |   }
		13 |
		14 |   visibility_config {
		15 |     cloudwatch_metrics_enabled = false
		16 |     metric_name                = "friendly-metric-name"
		17 |     sampled_requests_enabled   = false
		18 |   }
		19 | }


Check: CKV2_AWS_4: "Ensure API Gateway stage have logging level defined as appropriate"
	FAILED for resource: aws_api_gateway_stage.api_gw_stage
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:75-79
	Guide: https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate

		75 | resource "aws_api_gateway_stage" "api_gw_stage" {
		76 |   stage_name    = "prod"
		77 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		78 |   deployment_id = aws_api_gateway_deployment.api_gw_deploy.id
		79 | }


Check: CKV2_AWS_4: "Ensure API Gateway stage have logging level defined as appropriate"
	FAILED for resource: aws_api_gateway_stage.fail
	File: /terraform\aws\api-gateway\api-gateway-stage\api_gateway_stage.fail.tf:13-18
	Guide: https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate

		13 | resource "aws_api_gateway_stage" "fail" {
		14 |   deployment_id        = aws_api_gateway_deployment.example.id
		15 |   rest_api_id          = aws_api_gateway_rest_api.fail.id
		16 |   stage_name           = "example"
		17 |   xray_tracing_enabled = false
		18 | }


Check: CKV2_AWS_4: "Ensure API Gateway stage have logging level defined as appropriate"
	FAILED for resource: aws_api_gateway_stage.fail_waf
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate

		9  | resource "aws_api_gateway_stage" "fail_waf" {
		10 |   deployment_id = aws_api_gateway_deployment.example.id
		11 |   stage_name    = "fail-waf"
		12 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		13 | }


Check: CKV2_AWS_4: "Ensure API Gateway stage have logging level defined as appropriate"
	FAILED for resource: aws_api_gateway_stage.no_assoc
	File: /terraform\aws\api-gateway\api-gateway-rest-api\aws_api_gateway_rest_api_no_waf.tf:17-21
	Guide: https://docs.bridgecrew.io/docs/ensure-api-gateway-stage-have-logging-level-defined-as-appropiate

		17 | resource "aws_api_gateway_stage" "no_assoc" {
		18 |   deployment_id = aws_api_gateway_deployment.example.id
		19 |   rest_api_id   = aws_api_gateway_rest_api.no_assoc.id
		20 |   stage_name    = "example"
		21 | }


Check: CKV2_AZURE_7: "Ensure that Azure Active Directory Admin is configured"
	FAILED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-active-directory-admin-is-configured

		36 | resource "azurerm_sql_server" "positive4" {
		37 |   name                         = "mssqlserver"
		38 |   resource_group_name          = azurerm_resource_group.example.name
		39 |   location                     = azurerm_resource_group.example.location
		40 |   version                      = "12.0"
		41 |   administrator_login          = "Admin"
		42 |   administrator_login_password = "thisIsDog11"
		43 |
		44 |   extended_auditing_policy {
		45 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		46 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		47 |     storage_account_access_key_is_secondary = true
		48 |     retention_in_days                       = 6
		49 |   }
		50 |
		51 |   tags = {
		52 |     environment = "production"
		53 |   }
		54 | }


Check: CKV2_AZURE_7: "Ensure that Azure Active Directory Admin is configured"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-active-directory-admin-is-configured

		9  | resource "azurerm_sql_server" "positive2" {
		10 |   name                         = "mysqlserver"
		11 |   resource_group_name          = azurerm_resource_group.example.name
		12 |   location                     = azurerm_resource_group.example.location
		13 |   version                      = "12.0"
		14 |   administrator_login          = "4dm1n157r470r"
		15 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		16 | }


Check: CKV2_AZURE_7: "Ensure that Azure Active Directory Admin is configured"
	FAILED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-active-directory-admin-is-configured

		16 | resource "azurerm_sql_server" "positive3" {
		17 |   name                         = "mssqlserver"
		18 |   resource_group_name          = azurerm_resource_group.example.name
		19 |   location                     = azurerm_resource_group.example.location
		20 |   version                      = "12.0"
		21 |   administrator_login          = ""
		22 |   administrator_login_password = "thisIsDog11"
		23 |
		24 |   extended_auditing_policy {
		25 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		26 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		27 |     storage_account_access_key_is_secondary = true
		28 |     retention_in_days                       = 6
		29 |   }
		30 |
		31 |   tags = {
		32 |     environment = "production"
		33 |   }
		34 | }


Check: CKV2_AZURE_7: "Ensure that Azure Active Directory Admin is configured"
	FAILED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-active-directory-admin-is-configured

		3  | resource "azurerm_sql_server" "fail" {
		4  |   name                         = "mssqlserver"
		5  |   resource_group_name          = azurerm_resource_group.example.name
		6  |   location                     = azurerm_resource_group.example.location
		7  |   version                      = "12.0"
		8  |   administrator_login          = "mradministrator"
		9  |   administrator_login_password = "tfsecRocks"
		10 | }


Check: CKV2_AZURE_10: "Ensure that Microsoft Antimalware is configured to automatically updates for Virtual Machines"
	FAILED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-microsoft-antimalware-is-configured-to-automatically-updates-for-virtual-machines

		1  | resource "azurerm_virtual_machine" "fail" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = [azurerm_network_interface.main.id]
		6  |   vm_size               = "Standard_DS1_v2"
		7  |   storage_image_reference {
		8  |     publisher = "Canonical"
		9  |     offer     = "UbuntuServer"
		10 |     sku       = "16.04-LTS"
		11 |     version   = "latest"
		12 |   }
		13 |
		14 |   storage_os_disk {
		15 |     name              = "myosdisk1"
		16 |     caching           = "ReadWrite"
		17 |     create_option     = "FromImage"
		18 |     managed_disk_type = "Standard_LRS"
		19 |   }
		20 |   os_profile {
		21 |     computer_name  = "hostname"
		22 |     admin_username = "testadmin"
		23 |     admin_password = "Password1234!"
		24 |   }
		25 |   os_profile_linux_config {
		26 |     disable_password_authentication = false
		27 |   }
		28 | }


Check: CKV2_AZURE_10: "Ensure that Microsoft Antimalware is configured to automatically updates for Virtual Machines"
	FAILED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-microsoft-antimalware-is-configured-to-automatically-updates-for-virtual-machines

		1  | resource "azurerm_virtual_machine" "positive1" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = []
		6  |   vm_size               = "Standard_DS1_v2"
		7  |
		8  |   os_profile_linux_config {
		9  |     disable_password_authentication = false
		10 |   }
		11 | }


Check: CKV2_AZURE_10: "Ensure that Microsoft Antimalware is configured to automatically updates for Virtual Machines"
	FAILED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-microsoft-antimalware-is-configured-to-automatically-updates-for-virtual-machines

		2  | resource "azurerm_virtual_machine" "secret" {
		3  |   name = "${var.prefix}-vm"
		4  |
		5  |   os_profile {
		6  |     computer_name = "hostname"
		7  |     custom_data   = <<EOF
		8  | 0000-0000-0000-0000-000000000000
		9  | EOF
		10 |   }
		11 | }


Check: CKV2_AZURE_15: "Ensure that Azure data factories are encrypted with a customer-managed key"
	FAILED for resource: azurerm_data_factory.fail
	File: /terraform\azurerm\datafactory\azurerm_data_factory.tf:4-8
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factories-are-encrypted-with-a-customer-managed-key

		4 | resource "azurerm_data_factory" "fail" {
		5 |   location            = azurerm_resource_group.example.location
		6 |   name                = "example"
		7 |   resource_group_name = azurerm_resource_group.example.name
		8 | }


Check: CKV2_AZURE_15: "Ensure that Azure data factories are encrypted with a customer-managed key"
	FAILED for resource: azurerm_data_factory.example
	File: /terraform\azurerm\datafactory\DataFactoryNoPublicNetworkAccess.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-factories-are-encrypted-with-a-customer-managed-key

		2 | resource "azurerm_data_factory" "example" {
		3 |   name                = "example"
		4 |   location            = "azurerm_resource_group.example.location"
		5 |   resource_group_name = "azurerm_resource_group.example.name"
		6 | }


Check: CKV2_AWS_10: "Ensure CloudTrail trails are integrated with CloudWatch Logs"
	FAILED for resource: aws_cloudtrail.fail
	File: /terraform\aws\cloudtrail\cloudtrail.tf:18-24
	Guide: https://docs.bridgecrew.io/docs/ensure-cloudtrail-trails-are-integrated-with-cloudwatch-logs

		18 | resource "aws_cloudtrail" "fail" {
		19 |   name                          = "TRAIL"
		20 |   s3_bucket_name                = aws_s3_bucket.test.id
		21 |   include_global_service_events = true
		22 |   enable_logging                = false
		23 |   is_multi_region_trail         = false
		24 | }


Check: CKV2_AWS_27: "Ensure Postgres RDS as aws_rds_cluster has Query Logging enabled"
	FAILED for resource: aws_rds_cluster.fail
	File: /terraform\aws\rds\querylogging.tf:9-19
	Guide: https://docs.bridgecrew.io/docs/ensure-postgres-rds-has-query-logging-enabled

		9  | resource "aws_rds_cluster" "fail" {
		10 |   cluster_identifier              = "aurora-cluster-demo"
		11 |   engine                          = "aurora-postgresql"
		12 |   availability_zones              = ["us-west-2a", "us-west-2b", "us-west-2c"]
		13 |   database_name                   = "mydb"
		14 |   master_username                 = "foo"
		15 |   master_password                 = "bar"
		16 |   backup_retention_period         = 0
		17 |   preferred_backup_window         = "07:00-09:00"
		18 |   db_cluster_parameter_group_name = aws_rds_cluster_parameter_group.fail.name
		19 | }


Check: CKV2_AWS_27: "Ensure Postgres RDS as aws_rds_cluster has Query Logging enabled"
	FAILED for resource: aws_rds_cluster.fail2
	File: /terraform\aws\rds\rds_cluster.tf:17-23
	Guide: https://docs.bridgecrew.io/docs/ensure-postgres-rds-has-query-logging-enabled

		17 | resource "aws_rds_cluster" "fail2" {
		18 |   engine                  = "aurora-postgresql"
		19 |   backup_retention_period = 0
		20 |   db_subnet_group_name    = aws_db_subnet_group.default.name
		21 |   master_username         = "james"
		22 |   master_password         = "password12345"
		23 | }


Check: CKV2_AWS_23: "Route53 A Record has Attached Resource"
	FAILED for resource: aws_route53_record.fail
	File: /terraform\aws\route53\route53.tf:3-9
	Guide: https://docs.bridgecrew.io/docs/ensure-route53-a-record-has-an-attached-resource

		3 | resource "aws_route53_record" "fail" {
		4 |   zone_id = data.aws_route53_zone.primary.zone_id
		5 |   name    = "dns.freebeer.site"
		6 |   type    = "A"
		7 |   ttl     = "300"
		8 |   records = ["1.1.1.1"]
		9 | }


Check: CKV2_AZURE_18: "Ensure that Storage Accounts use customer-managed key for encryption"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-use-customer-managed-key-for-encryption

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV2_AZURE_18: "Ensure that Storage Accounts use customer-managed key for encryption"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-use-customer-managed-key-for-encryption

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV2_AZURE_18: "Ensure that Storage Accounts use customer-managed key for encryption"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-use-customer-managed-key-for-encryption

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV2_AZURE_18: "Ensure that Storage Accounts use customer-managed key for encryption"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-use-customer-managed-key-for-encryption

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV2_AZURE_18: "Ensure that Storage Accounts use customer-managed key for encryption"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-storage-accounts-use-customer-managed-key-for-encryption

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV2_AWS_3: "Ensure GuardDuty is enabled to specific org/region"
	FAILED for resource: aws_guardduty_detector.positive1
	File: /terraform\aws\guardduty\guarddutydetectordisabled.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-guardduty-is-enabled-to-specific-orgregion

		3 | resource "aws_guardduty_detector" "positive1" {
		4 |   enable = false
		5 | }


Check: CKV2_AWS_3: "Ensure GuardDuty is enabled to specific org/region"
	FAILED for resource: aws_guardduty_detector.not_ok_false
	File: /terraform\aws\guardduty\guardduty.tf:3-5
	Guide: https://docs.bridgecrew.io/docs/ensure-guardduty-is-enabled-to-specific-orgregion

		3 | resource "aws_guardduty_detector" "not_ok_false" {
		4 |   enable = true
		5 | }


Check: CKV2_AWS_14: "Ensure that IAM groups includes at least one IAM user"
	FAILED for resource: aws_iam_group_membership.bad_group
	File: /terraform\aws\iam\group\iam_group.tf:4-9
	Guide: https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user

		4 | resource "aws_iam_group_membership" "bad_group" {
		5 |   name = "tf-testing-group-membership"
		6 |
		7 |
		8 |   group = aws_iam_group.bad_group.name
		9 | }


Check: CKV2_AWS_14: "Ensure that IAM groups includes at least one IAM user"
	FAILED for resource: aws_iam_group_membership.team2
	File: /terraform\aws\iam\group\iam_group_without_users.tf:1-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user

		1  | resource "aws_iam_group_membership" "team2" {
		2  |   name = "tf-testing-group-membership"
		3  |
		4  |   users = [
		5  |     aws_iam_user.user_one2.name,
		6  |     aws_iam_user.user_two2.name,
		7  |   ]
		8  |
		9  |   group = aws_iam_group.group222.name
		10 | }


Check: CKV2_AWS_14: "Ensure that IAM groups includes at least one IAM user"
	FAILED for resource: aws_iam_group_membership.team3
	File: /terraform\aws\iam\group\iam_group_without_users.tf:24-31
	Guide: https://docs.bridgecrew.io/docs/ensure-that-iam-groups-include-at-least-one-iam-user

		24 | resource "aws_iam_group_membership" "team3" {
		25 |   name = "tf-testing-group-membership"
		26 |
		27 |   users = [
		28 |   ]
		29 |
		30 |   group = aws_iam_group.group3.name
		31 | }


Check: CKV2_AZURE_11: "Ensure that Azure Data Explorer encryption at rest uses a customer-managed key"
	FAILED for resource: azurerm_kusto_cluster.example
	File: /terraform\azurerm\kusto\DataExplorerUsesDiskEncryption.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/ensure-that-azure-data-explorer-encryption-at-rest-uses-a-customer-managed-key

		2  | resource "azurerm_kusto_cluster" "example" {
		3  |   name                = "kustocluster"
		4  |   location            = azurerm_resource_group.rg.location
		5  |   resource_group_name = azurerm_resource_group.rg.name
		6  |
		7  |   sku {
		8  |     name     = "Standard_D13_v2"
		9  |     capacity = 2
		10 |   }
		11 |
		12 |   tags = {
		13 |     Environment = "Production"
		14 |   }
		15 | }


Check: CKV2_AZURE_16: "Ensure that MySQL server enables customer-managed key for encryption"
	FAILED for resource: azurerm_mysql_server.example
	File: /terraform\azurerm\mysql\MySQLTreatDetectionEnabled.tf:9-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-mysql-server-enables-customer-managed-key-for-encryption

		9  | resource "azurerm_mysql_server" "example" {
		10 |   name                = "example-mysqlserver"
		11 |   location            = azurerm_resource_group.example.location
		12 |   resource_group_name = azurerm_resource_group.example.name
		13 |
		14 |   administrator_login          = "mysqladminun"
		15 |   administrator_login_password = "H@Sh1CoR3!"
		16 |
		17 |   sku_name   = "B_Gen5_2"
		18 |   storage_mb = 5120
		19 |   version    = "5.7"
		20 |
		21 |   auto_grow_enabled                 = true
		22 |   backup_retention_days             = 7
		23 |   geo_redundant_backup_enabled      = false
		24 |   infrastructure_encryption_enabled = false
		25 |   public_network_access_enabled     = true
		26 |   ssl_enforcement_enabled           = false
		27 |   ssl_minimal_tls_version_enforced  = "TLS1_1"
		28 |
		29 |   threat_detection_policy {
		30 |     enabled = false
		31 |   }
		32 | }


Check: CKV2_AZURE_16: "Ensure that MySQL server enables customer-managed key for encryption"
	FAILED for resource: azurerm_mysql_server.fail
	File: /terraform\azurerm\database\mysql-threat-detection-enabled.tf:3-13
	Guide: https://docs.bridgecrew.io/docs/ensure-that-mysql-server-enables-customer-managed-key-for-encryption

		3  | resource "azurerm_mysql_server" "fail" {
		4  |   name = "fail"
		5  |
		6  |   public_network_access_enabled    = true
		7  |   ssl_enforcement_enabled          = false
		8  |   ssl_minimal_tls_version_enforced = "TLS1_2"
		9  |
		10 |   threat_detection_policy {
		11 |     enabled = false
		12 |   }
		13 | }


Check: CKV2_AWS_1: "Ensure that all NACL are attached to subnets"
	FAILED for resource: aws_network_acl.positive1
	File: /terraform\aws\vpc\network_acl_with_unrestricted_access_to_rdp.tf:17-45
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets

		17 | resource "aws_network_acl" "positive1" {
		18 |   vpc_id = aws_vpc.main.id
		19 |
		20 |   egress = [
		21 |     {
		22 |       protocol   = "tcp"
		23 |       rule_no    = 200
		24 |       action     = "allow"
		25 |       cidr_block = "10.3.0.0/18"
		26 |       from_port  = 443
		27 |       to_port    = 443
		28 |     }
		29 |   ]
		30 |
		31 |   ingress = [
		32 |     {
		33 |       protocol   = "tcp"
		34 |       rule_no    = 100
		35 |       action     = "allow"
		36 |       cidr_block = "0.0.0.0/0"
		37 |       from_port  = 3389
		38 |       to_port    = 3389
		39 |     }
		40 |   ]
		41 |
		42 |   tags = {
		43 |     Name = "main"
		44 |   }
		45 | }


Check: CKV2_AWS_1: "Ensure that all NACL are attached to subnets"
	FAILED for resource: aws_network_acl.acl_bad_a
	File: /terraform\aws\vpc\nacl.tf:10-12
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-nacl-are-attached-to-subnets

		10 | resource "aws_network_acl" "acl_bad_a" {
		11 |   vpc_id = aws_vpc.bad_vpc.id
		12 | }


Check: CKV2_AZURE_8: "Ensure the storage container storing the activity logs is not publicly accessible"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\StorageAccountLoggingQueueServiceEnabled.tf:2-8
	Guide: https://docs.bridgecrew.io/docs/ensure-the-storage-container-storing-the-activity-logs-is-not-publicly-accessible

		2 | resource "azurerm_storage_account" "example" {
		3 |   name                     = "example"
		4 |   resource_group_name      = data.azurerm_resource_group.example.name
		5 |   location                 = data.azurerm_resource_group.example.location
		6 |   account_tier             = "Standard"
		7 |   account_replication_type = "GRS"
		8 | }


Check: CKV2_AZURE_8: "Ensure the storage container storing the activity logs is not publicly accessible"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-the-storage-container-storing-the-activity-logs-is-not-publicly-accessible

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV2_AZURE_8: "Ensure the storage container storing the activity logs is not publicly accessible"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\storage\trusted_microsoft_services_not_enabled.tf:11-29
	Guide: https://docs.bridgecrew.io/docs/ensure-the-storage-container-storing-the-activity-logs-is-not-publicly-accessible

		11 | resource "azurerm_storage_account" "positive2" {
		12 |   name                = "storageaccountname"
		13 |   resource_group_name = azurerm_resource_group.example.name
		14 |
		15 |   location                 = azurerm_resource_group.example.location
		16 |   account_tier             = "Standard"
		17 |   account_replication_type = "LRS"
		18 |
		19 |   network_rules {
		20 |     default_action             = "Deny"
		21 |     bypass                     = ["None"]
		22 |     ip_rules                   = ["100.0.0.1"]
		23 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		24 |   }
		25 |
		26 |   tags = {
		27 |     environment = "staging"
		28 |   }
		29 | }


Check: CKV2_AZURE_8: "Ensure the storage container storing the activity logs is not publicly accessible"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-the-storage-container-storing-the-activity-logs-is-not-publicly-accessible

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV2_AZURE_8: "Ensure the storage container storing the activity logs is not publicly accessible"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-the-storage-container-storing-the-activity-logs-is-not-publicly-accessible

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.example
	File: /terraform\azurerm\storage\storage.tf:1-15
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key

		1  | resource "azurerm_storage_account" "example" {
		2  |   name                      = "stor"
		3  |   resource_group_name       = azurerm_resource_group.example.name
		4  |   location                  = azurerm_resource_group.example.location
		5  |   account_tier              = "Standard"
		6  |   account_replication_type  = "GRS"
		7  |   enable_https_traffic_only = false
		8  |   allow_blob_public_access  = true
		9  |
		10 |   //to fail CKV_AZURE_35 && CKV_AZURE_36
		11 |   network_rules {
		12 |     default_action = "Deny"
		13 |     bypass         = ["Metrics"]
		14 |   }
		15 | }


Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:8-14
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key

		8  | resource "azurerm_storage_account" "positive2" {
		9  |   name                     = "examplesa"
		10 |   resource_group_name      = azurerm_resource_group.example.name
		11 |   location                 = azurerm_resource_group.example.location
		12 |   account_tier             = "Standard"
		13 |   account_replication_type = "LRS"
		14 | }


Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.fail
	File: /terraform\azurerm\storage\use-secure-tls-policy.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key

		3 | resource "azurerm_storage_account" "fail" {
		4 |   name                = "storageaccountname"
		5 |   resource_group_name = azurerm_resource_group.example.name
		6 |   location            = azurerm_resource_group.example.location
		7 | }


Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.positive1
	File: /terraform\azurerm\storage\public_storage_account.tf:1-18
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key

		1  | resource "azurerm_storage_account" "positive1" {
		2  |   name                = "storageaccountname"
		3  |   resource_group_name = azurerm_resource_group.example.name
		4  |
		5  |   location                 = azurerm_resource_group.example.location
		6  |   account_tier             = "Standard"
		7  |   account_replication_type = "LRS"
		8  |
		9  |   network_rules {
		10 |     default_action             = "Deny"
		11 |     ip_rules                   = ["0.0.0.0/0"]
		12 |     virtual_network_subnet_ids = [azurerm_subnet.example.id]
		13 |   }
		14 |
		15 |   tags = {
		16 |     environment = "staging"
		17 |   }
		18 | }


Check: CKV2_AZURE_1: "Ensure storage for critical data are encrypted with Customer Managed Key"
	FAILED for resource: azurerm_storage_account.positive4
	File: /terraform\azurerm\network\default_network_access_is_allowed.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-for-critical-data-are-encrypted-with-customer-managed-key

		22 | resource "azurerm_storage_account" "positive4" {
		23 |   name                     = "storageaccountname"
		24 |   resource_group_name      = azurerm_resource_group.example.name
		25 |   location                 = azurerm_resource_group.example.location
		26 |   account_tier             = "Standard"
		27 |   account_replication_type = "GRS"
		28 |
		29 |   tags = {
		30 |     environment = "staging"
		31 |   }
		32 | }


Check: CKV2_AZURE_20: "Ensure Storage logging is enabled for Table service for read requests"
	FAILED for resource: azurerm_storage_table.table_resource
	File: /terraform\azurerm\storage\storage_table_allows_all_acl_permissions.tf:1-12
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-logging-is-enabled-for-table-service-for-read-requests

		1  | resource "azurerm_storage_table" "table_resource" {
		2  |   name                 = "my_table_name"
		3  |   storage_account_name = "mystoragexxx"
		4  |   acl {
		5  |     id = "someid-1XXXXXXXXX"
		6  |     access_policy {
		7  |       expiry      = "2022-10-03T05:05:00.0000000Z"
		8  |       permissions = "rwdl"
		9  |       start       = "2021-05-28T04:05:00.0000000Z"
		10 |     }
		11 |   }
		12 | }


Check: CKV2_AWS_16: "Ensure that Auto Scaling is enabled on your DynamoDB tables"
	FAILED for resource: aws_dynamodb_table.basic_dynamodb_table
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:93-110
	Guide: https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-is-enabled-on-your-dynamodb-tables

		93  | resource "aws_dynamodb_table" "basic_dynamodb_table" {
		94  |   name           = "GameScores"
		95  |   billing_mode   = "PROVISIONED"
		96  |   read_capacity  = 5
		97  |   write_capacity = 5
		98  |   hash_key       = "UserId"
		99  |   range_key      = "GameTitle"
		100 |
		101 |   attribute {
		102 |     name = "UserId"
		103 |     type = "S"
		104 |   }
		105 |
		106 |   attribute {
		107 |     name = "GameTitle"
		108 |     type = "S"
		109 |   }
		110 | }


Check: CKV2_AWS_16: "Ensure that Auto Scaling is enabled on your DynamoDB tables"
	FAILED for resource: aws_dynamodb_table.default
	File: /terraform\aws\dynamodb\dynamodb_table.tf:10-35
	Guide: https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-is-enabled-on-your-dynamodb-tables

		10 | resource "aws_dynamodb_table" "default" {
		11 |   name           = "GameScores"
		12 |   billing_mode   = "PROVISIONED"
		13 |   read_capacity  = 20
		14 |   write_capacity = 20
		15 |   hash_key       = "UserId"
		16 |   range_key      = "UserId"
		17 |
		18 |   attribute {
		19 |     name = "UserId"
		20 |     type = "S"
		21 |   }
		22 |
		23 |   replica {
		24 |     region_name = "us-east-2"
		25 |   }
		26 |
		27 |   replica {
		28 |     region_name = "us-west-2"
		29 |   }
		30 |
		31 |   # server_side_encryption {
		32 |   # 	enabled     = true
		33 |   # 	kms_key_arn = aws_kms_key.dynamo_db_kms.key_id
		34 |   # }
		35 | }


Check: CKV2_AZURE_21: "Ensure Storage logging is enabled for Blob service for read requests"
	FAILED for resource: azurerm_storage_container.fail
	File: /terraform\azurerm\storage\container-activity-logs-not-public.tf:3-6
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-logging-is-enabled-for-blob-service-for-read-requests

		3 | resource "azurerm_storage_container" "fail" {
		4 |   name                  = "terraform-container-storage"
		5 |   container_access_type = "public"
		6 | }


Check: CKV2_AZURE_21: "Ensure Storage logging is enabled for Blob service for read requests"
	FAILED for resource: azurerm_storage_container.example
	File: /terraform\azurerm\storage\StorageBlobServiceContainerPrivateAccess.tf:2-6
	Guide: https://docs.bridgecrew.io/docs/ensure-storage-logging-is-enabled-for-blob-service-for-read-requests

		2 | resource "azurerm_storage_container" "example" {
		3 |   name                  = "vhds"
		4 |   storage_account_name  = azurerm_storage_account.example.name
		5 |   container_access_type = "blob"
		6 | }


Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	FAILED for resource: aws_s3_bucket.fail
	File: /terraform\aws\s3\s3.tf:11-43
	Guide: https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		11 | resource "aws_s3_bucket" "fail" {
		12 |   acl    = "public-read-write"
		13 |   bucket = "superfail"
		14 |
		15 |   versioning {
		16 |     enabled    = false
		17 |     mfa_delete = false
		18 |   }
		19 |
		20 |   object_lock_configuration {
		21 |     object_lock_enabled = false
		22 |   }
		23 |
		24 |   policy = <<POLICY
		25 | {
		26 |   "Version": "2012-10-17",
		27 |   "Statement": [
		28 |     {
		29 |       "Principal": {
		30 |         "AWS": "*"
		31 |       },
		32 |       "Effect": "Deny",
		33 |       "Action": [
		34 |         "s3:*"
		35 |       ],
		36 |       "Resource": [
		37 |         "*"
		38 |       ]
		39 |     }
		40 |   ]
		41 | }
		42 | POLICY
		43 | }


Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	FAILED for resource: aws_s3_bucket.positive1
	File: /terraform\aws\s3\s3_static_website_host_enabled.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		2  | resource "aws_s3_bucket" "positive1" {
		3  |   bucket = "s3-website-test.hashicorp.com"
		4  |   acl    = "public-read"
		5  |
		6  |   website {
		7  |     index_document = "index.html"
		8  |     error_document = "error.html"
		9  |   }
		10 | }


Check: CKV2_AWS_6: "Ensure that S3 bucket has a Public Access block"
	FAILED for resource: aws_s3_bucket.b
	File: /terraform\aws\s3\s3_bucket_policy_accepts_http_requests.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached

		1 | resource "aws_s3_bucket" "b" {
		2 |   bucket = "my-tf-test-bucket"
		3 | }


Check: CKV2_AWS_7: "Ensure that Amazon EMR clusters' security groups are not open to the world"
	FAILED for resource: aws_emr_cluster.cluster_connected_to_wrong_group
	File: /terraform\aws\emr\emr_cluster.tf:22-32
	Guide: https://docs.bridgecrew.io/docs/ensure-that-amazon-emr-clusters-security-groups-are-not-open-to-the-world

		22 | resource "aws_emr_cluster" "cluster_connected_to_wrong_group" {
		23 |   name          = "emr-test-arn"
		24 |   release_label = "emr-4.6.0"
		25 |   applications  = ["Spark"]
		26 |
		27 |   ec2_attributes {
		28 |     emr_managed_master_security_group = aws_security_group.block_access_not_ok.id
		29 |     emr_managed_slave_security_group  = aws_security_group.block_access_not_ok.id
		30 |     instance_profile                  = "connected_to_aws_iam_instance_profile"
		31 |   }
		32 | }


Check: CKV2_AWS_7: "Ensure that Amazon EMR clusters' security groups are not open to the world"
	FAILED for resource: aws_emr_cluster.fail
	File: /terraform\aws\emr\emr_without_vpc.tf:3-7
	Guide: https://docs.bridgecrew.io/docs/ensure-that-amazon-emr-clusters-security-groups-are-not-open-to-the-world

		3 | resource "aws_emr_cluster" "fail" {
		4 |   name          = "emr-test-arn"
		5 |   release_label = "emr-4.6.0"
		6 |
		7 | }


Check: CKV2_AWS_7: "Ensure that Amazon EMR clusters' security groups are not open to the world"
	FAILED for resource: aws_emr_cluster.test
	File: /terraform\aws\emr\emr_cluster.tf:9-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-amazon-emr-clusters-security-groups-are-not-open-to-the-world

		9  | resource "aws_emr_cluster" "test" {
		10 |   name          = "emr-test-arn"
		11 |   release_label = "emr-4.6.0"
		12 |   applications  = ["Spark"]
		13 |
		14 |   termination_protection            = false
		15 |   keep_job_flow_alive_when_no_steps = true
		16 |
		17 |   kerberos_attributes {
		18 |     kdc_admin_password = "somePassword"
		19 |   }
		20 | }


Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	FAILED for resource: aws_lb.lb_bad_1
	File: /terraform\aws\lb\redirect.tf:9-10
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

		9  | resource "aws_lb" "lb_bad_1" {
		10 | }


Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	FAILED for resource: aws_alb.disabled
	File: /terraform\aws\lb\lb.tf:14-20
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

		14 | resource "aws_alb" "disabled" {
		15 |   internal                         = false
		16 |   load_balancer_type               = "application"
		17 |   name                             = "alb"
		18 |   subnets                          = var.public_subnet_ids
		19 |   enable_cross_zone_load_balancing = false
		20 | }


Check: CKV2_AWS_28: "Ensure public facing ALB are protected by WAF"
	FAILED for resource: aws_alb.fail
	File: /terraform\aws\elb\alb.tf:12-24
	Guide: https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf

		12 | resource "aws_alb" "fail" {
		13 |   name               = "bad_alb"
		14 |   internal           = false
		15 |   load_balancer_type = "application"
		16 |
		17 |   # access_logs {
		18 |   #   bucket  = aws_s3_bucket.lb_logs.bucket
		19 |   #   prefix  = "test-lb"
		20 |   #   enabled = true
		21 |   # }
		22 |
		23 |   drop_invalid_header_fields = false
		24 | }


Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	FAILED for resource: azurerm_mssql_server.example
	File: /terraform\azurerm\mssql\SQLServerPublicAccessDisabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

		2  | resource "azurerm_mssql_server" "example" {
		3  |   name                          = "mssqlserver"
		4  |   resource_group_name           = azurerm_resource_group.example.name
		5  |   location                      = azurerm_resource_group.example.location
		6  |   version                       = "12.0"
		7  |   administrator_login           = "missadministrator"
		8  |   administrator_login_password  = "thisIsKat11"
		9  |   minimum_tls_version           = "1.2"
		10 |   public_network_access_enabled = true
		11 |   azuread_administrator {
		12 |     login_username = "AzureAD Admin"
		13 |     object_id      = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 | }


Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

		9  | resource "azurerm_sql_server" "positive2" {
		10 |   name                         = "mysqlserver"
		11 |   resource_group_name          = azurerm_resource_group.example.name
		12 |   location                     = azurerm_resource_group.example.location
		13 |   version                      = "12.0"
		14 |   administrator_login          = "4dm1n157r470r"
		15 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		16 | }


Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	FAILED for resource: azurerm_mssql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

		2  | resource "azurerm_mssql_server" "fail" {
		3  |   name                         = "mssqlserver"
		4  |   resource_group_name          = azurerm_resource_group.example.name
		5  |   location                     = azurerm_resource_group.example.location
		6  |   version                      = "12.0"
		7  |   administrator_login          = "missadministrator"
		8  |   administrator_login_password = "thisIsKat11"
		9  |   minimum_tls_version          = "1.1"
		10 | }


Check: CKV_AZURE_23: "Ensure that 'Auditing' is set to 'On' for SQL servers"
	FAILED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_2

		3  | resource "azurerm_sql_server" "fail" {
		4  |   name                         = "mssqlserver"
		5  |   resource_group_name          = azurerm_resource_group.example.name
		6  |   location                     = azurerm_resource_group.example.location
		7  |   version                      = "12.0"
		8  |   administrator_login          = "mradministrator"
		9  |   administrator_login_password = "tfsecRocks"
		10 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		36 | resource "azurerm_sql_server" "positive4" {
		37 |   name                         = "mssqlserver"
		38 |   resource_group_name          = azurerm_resource_group.example.name
		39 |   location                     = azurerm_resource_group.example.location
		40 |   version                      = "12.0"
		41 |   administrator_login          = "Admin"
		42 |   administrator_login_password = "thisIsDog11"
		43 |
		44 |   extended_auditing_policy {
		45 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		46 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		47 |     storage_account_access_key_is_secondary = true
		48 |     retention_in_days                       = 6
		49 |   }
		50 |
		51 |   tags = {
		52 |     environment = "production"
		53 |   }
		54 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		10 | resource "azurerm_sql_server" "example" {
		11 |   name                         = "mssqlserver"
		12 |   resource_group_name          = azurerm_resource_group.example.name
		13 |   location                     = azurerm_resource_group.example.location
		14 |   version                      = "12.0"
		15 |   administrator_login          = "mradministrator"
		16 |   administrator_login_password = "thisIsDog11"
		17 |   minimum_tls_version          = "1.1"
		18 |
		19 |
		20 |   public_network_access_enabled = true
		21 |   extended_auditing_policy {
		22 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		23 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		24 |     storage_account_access_key_is_secondary = true
		25 |     retention_in_days                       = 6
		26 |   }
		27 |
		28 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_mssql_server.example
	File: /terraform\azurerm\mssql\SQLServerPublicAccessDisabled.tf:2-15
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		2  | resource "azurerm_mssql_server" "example" {
		3  |   name                          = "mssqlserver"
		4  |   resource_group_name           = azurerm_resource_group.example.name
		5  |   location                      = azurerm_resource_group.example.location
		6  |   version                       = "12.0"
		7  |   administrator_login           = "missadministrator"
		8  |   administrator_login_password  = "thisIsKat11"
		9  |   minimum_tls_version           = "1.2"
		10 |   public_network_access_enabled = true
		11 |   azuread_administrator {
		12 |     login_username = "AzureAD Admin"
		13 |     object_id      = "00000000-0000-0000-0000-000000000000"
		14 |   }
		15 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		9  | resource "azurerm_sql_server" "positive2" {
		10 |   name                         = "mysqlserver"
		11 |   resource_group_name          = azurerm_resource_group.example.name
		12 |   location                     = azurerm_resource_group.example.location
		13 |   version                      = "12.0"
		14 |   administrator_login          = "4dm1n157r470r"
		15 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		16 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_mssql_server.fail
	File: /terraform\azurerm\database\secure-tls-policy.tf:2-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		2  | resource "azurerm_mssql_server" "fail" {
		3  |   name                         = "mssqlserver"
		4  |   resource_group_name          = azurerm_resource_group.example.name
		5  |   location                     = azurerm_resource_group.example.location
		6  |   version                      = "12.0"
		7  |   administrator_login          = "missadministrator"
		8  |   administrator_login_password = "thisIsKat11"
		9  |   minimum_tls_version          = "1.1"
		10 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		16 | resource "azurerm_sql_server" "positive3" {
		17 |   name                         = "mssqlserver"
		18 |   resource_group_name          = azurerm_resource_group.example.name
		19 |   location                     = azurerm_resource_group.example.location
		20 |   version                      = "12.0"
		21 |   administrator_login          = ""
		22 |   administrator_login_password = "thisIsDog11"
		23 |
		24 |   extended_auditing_policy {
		25 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		26 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		27 |     storage_account_access_key_is_secondary = true
		28 |     retention_in_days                       = 6
		29 |   }
		30 |
		31 |   tags = {
		32 |     environment = "production"
		33 |   }
		34 | }


Check: CKV_AZURE_24: "Ensure that 'Auditing' Retention is 'greater than 90 days' for SQL servers"
	FAILED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/bc_azr_logging_3

		3  | resource "azurerm_sql_server" "fail" {
		4  |   name                         = "mssqlserver"
		5  |   resource_group_name          = azurerm_resource_group.example.name
		6  |   location                     = azurerm_resource_group.example.location
		7  |   version                      = "12.0"
		8  |   administrator_login          = "mradministrator"
		9  |   administrator_login_password = "tfsecRocks"
		10 | }


Check: CKV2_AZURE_9: "Ensure Virtual Machines are utilizing Managed Disks"
	FAILED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\compute\virtual_machine.tf:12-35
	Guide: https://docs.bridgecrew.io/docs/ensure-virtual-machines-are-utilizing-managed-disks

		12 | resource "azurerm_virtual_machine" "fail" {
		13 |   name                  = "fail"
		14 |   location              = "uksouth"
		15 |   network_interface_ids = ["azurerm_network_interface.main.id"]
		16 |   vm_size               = ""
		17 |   resource_group_name   = azurerm_resource_group.example.name
		18 |
		19 |   os_profile_linux_config {
		20 |     disable_password_authentication = false
		21 |
		22 |   }
		23 |
		24 |   os_profile {
		25 |     computer_name  = "HAL"
		26 |     admin_username = "DAVE"
		27 |     custom_data    = <<EOF
		28 | export DATABASE_PASSWORD=\"SomeSortOfPassword\"
		29 | EOF
		30 |   }
		31 |   storage_os_disk {
		32 |     name          = "toxic"
		33 |     create_option = "empty"
		34 |   }
		35 | }


Check: CKV2_AZURE_9: "Ensure Virtual Machines are utilizing Managed Disks"
	FAILED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/ensure-virtual-machines-are-utilizing-managed-disks

		2  | resource "azurerm_virtual_machine" "secret" {
		3  |   name = "${var.prefix}-vm"
		4  |
		5  |   os_profile {
		6  |     computer_name = "hostname"
		7  |     custom_data   = <<EOF
		8  | 0000-0000-0000-0000-000000000000
		9  | EOF
		10 |   }
		11 | }


Check: CKV2_AZURE_9: "Ensure Virtual Machines are utilizing Managed Disks"
	FAILED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/ensure-virtual-machines-are-utilizing-managed-disks

		1  | resource "azurerm_virtual_machine" "positive1" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = []
		6  |   vm_size               = "Standard_DS1_v2"
		7  |
		8  |   os_profile_linux_config {
		9  |     disable_password_authentication = false
		10 |   }
		11 | }


Check: CKV2_AZURE_12: "Ensure that virtual machines are backed up using Azure Backup"
	FAILED for resource: azurerm_virtual_machine.fail
	File: /terraform\azurerm\vms\InstancePassword.tf:1-28
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-are-backed-up-using-azure-backup

		1  | resource "azurerm_virtual_machine" "fail" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = [azurerm_network_interface.main.id]
		6  |   vm_size               = "Standard_DS1_v2"
		7  |   storage_image_reference {
		8  |     publisher = "Canonical"
		9  |     offer     = "UbuntuServer"
		10 |     sku       = "16.04-LTS"
		11 |     version   = "latest"
		12 |   }
		13 |
		14 |   storage_os_disk {
		15 |     name              = "myosdisk1"
		16 |     caching           = "ReadWrite"
		17 |     create_option     = "FromImage"
		18 |     managed_disk_type = "Standard_LRS"
		19 |   }
		20 |   os_profile {
		21 |     computer_name  = "hostname"
		22 |     admin_username = "testadmin"
		23 |     admin_password = "Password1234!"
		24 |   }
		25 |   os_profile_linux_config {
		26 |     disable_password_authentication = false
		27 |   }
		28 | }


Check: CKV2_AZURE_12: "Ensure that virtual machines are backed up using Azure Backup"
	FAILED for resource: azurerm_virtual_machine.positive1
	File: /terraform\azurerm\vms\vm_not_attached_to_network.tf:1-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-are-backed-up-using-azure-backup

		1  | resource "azurerm_virtual_machine" "positive1" {
		2  |   name                  = "${var.prefix}-vm"
		3  |   location              = azurerm_resource_group.main.location
		4  |   resource_group_name   = azurerm_resource_group.main.name
		5  |   network_interface_ids = []
		6  |   vm_size               = "Standard_DS1_v2"
		7  |
		8  |   os_profile_linux_config {
		9  |     disable_password_authentication = false
		10 |   }
		11 | }


Check: CKV2_AZURE_12: "Ensure that virtual machines are backed up using Azure Backup"
	FAILED for resource: azurerm_virtual_machine.secret
	File: /terraform\azurerm\vms\VMCredsInCustomData.tf:2-11
	Guide: https://docs.bridgecrew.io/docs/ensure-that-virtual-machines-are-backed-up-using-azure-backup

		2  | resource "azurerm_virtual_machine" "secret" {
		3  |   name = "${var.prefix}-vm"
		4  |
		5  |   os_profile {
		6  |     computer_name = "hostname"
		7  |     custom_data   = <<EOF
		8  | 0000-0000-0000-0000-000000000000
		9  | EOF
		10 |   }
		11 | }


Check: CKV2_AWS_15: "Ensure that auto Scaling groups that are associated with a load balancer, are using Elastic Load Balancing health checks."
	FAILED for resource: aws_autoscaling_attachment.test_bad_attachment
	File: /terraform\aws\autoscaling\ELB.tf:23-26
	Guide: https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-groups-that-are-associated-with-a-load-balancer-are-using-elastic-load-balancing-health-checks

		23 | resource "aws_autoscaling_attachment" "test_bad_attachment" {
		24 |   autoscaling_group_name = aws_autoscaling_group.autoscalling_bad.id
		25 |   elb                    = aws_elb.test_bad.id
		26 | }


Check: CKV2_AZURE_2: "Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account"
	FAILED for resource: azurerm_sql_server.positive4
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:36-54
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vulnerability-assessment-va-is-enabled-on-a-sql-server-by-setting-a-storage-account

		36 | resource "azurerm_sql_server" "positive4" {
		37 |   name                         = "mssqlserver"
		38 |   resource_group_name          = azurerm_resource_group.example.name
		39 |   location                     = azurerm_resource_group.example.location
		40 |   version                      = "12.0"
		41 |   administrator_login          = "Admin"
		42 |   administrator_login_password = "thisIsDog11"
		43 |
		44 |   extended_auditing_policy {
		45 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		46 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		47 |     storage_account_access_key_is_secondary = true
		48 |     retention_in_days                       = 6
		49 |   }
		50 |
		51 |   tags = {
		52 |     environment = "production"
		53 |   }
		54 | }


Check: CKV2_AZURE_2: "Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account"
	FAILED for resource: azurerm_sql_server.positive2
	File: /terraform\azurerm\mssql\sql_server_predictable_active_directory_admin_account_name.tf:9-16
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vulnerability-assessment-va-is-enabled-on-a-sql-server-by-setting-a-storage-account

		9  | resource "azurerm_sql_server" "positive2" {
		10 |   name                         = "mysqlserver"
		11 |   resource_group_name          = azurerm_resource_group.example.name
		12 |   location                     = azurerm_resource_group.example.location
		13 |   version                      = "12.0"
		14 |   administrator_login          = "4dm1n157r470r"
		15 |   administrator_login_password = "4-v3ry-53cr37-p455w0rd"
		16 | }


Check: CKV2_AZURE_2: "Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account"
	FAILED for resource: azurerm_sql_server.positive3
	File: /terraform\azurerm\mssql\sql_server_predictable_admin_account_name.tf:16-34
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vulnerability-assessment-va-is-enabled-on-a-sql-server-by-setting-a-storage-account

		16 | resource "azurerm_sql_server" "positive3" {
		17 |   name                         = "mssqlserver"
		18 |   resource_group_name          = azurerm_resource_group.example.name
		19 |   location                     = azurerm_resource_group.example.location
		20 |   version                      = "12.0"
		21 |   administrator_login          = ""
		22 |   administrator_login_password = "thisIsDog11"
		23 |
		24 |   extended_auditing_policy {
		25 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		26 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		27 |     storage_account_access_key_is_secondary = true
		28 |     retention_in_days                       = 6
		29 |   }
		30 |
		31 |   tags = {
		32 |     environment = "production"
		33 |   }
		34 | }


Check: CKV2_AZURE_2: "Ensure that Vulnerability Assessment (VA) is enabled on a SQL server by setting a Storage Account"
	FAILED for resource: azurerm_sql_server.fail
	File: /terraform\azurerm\database\enable-audit.tf:3-10
	Guide: https://docs.bridgecrew.io/docs/ensure-that-vulnerability-assessment-va-is-enabled-on-a-sql-server-by-setting-a-storage-account

		3  | resource "azurerm_sql_server" "fail" {
		4  |   name                         = "mssqlserver"
		5  |   resource_group_name          = azurerm_resource_group.example.name
		6  |   location                     = azurerm_resource_group.example.location
		7  |   version                      = "12.0"
		8  |   administrator_login          = "mradministrator"
		9  |   administrator_login_password = "tfsecRocks"
		10 | }


Check: CKV2_GCP_7: "Ensure that a MySQL database instance does not allow anyone to connect with administrative privileges"
	FAILED for resource: google_sql_database_instance.fail
	File: /terraform\google\sql\CloudMySql.tf:15-48
	Guide: https://docs.bridgecrew.io/docs/ensure-that-a-mysql-database-instance-does-not-allow-anyone-to-connect-with-administrative-privileges

		15 | resource "google_sql_database_instance" "fail" {
		16 |   database_version = "MYSQL_8_0"
		17 |   name             = "mysql81"
		18 |   project          = "gcp-bridgecrew-deployment"
		19 |   region           = "us-central1"
		20 |   settings {
		21 |     ip_configuration {
		22 |       require_ssl  = false
		23 |       ipv4_enabled = true
		24 |       authorized_networks {
		25 |         value = "108.12.12.0/24"
		26 |         name  = "internal"
		27 |       }
		28 |
		29 |       authorized_networks {
		30 |         value = "0.0.0.0/0"
		31 |         name  = "internet"
		32 |       }
		33 |     }
		34 |     activation_policy = "ALWAYS"
		35 |     tier              = "db-custom-1-3840"
		36 |     database_flags {
		37 |       name  = "night"
		38 |       value = "on"
		39 |     }
		40 |     database_flags {
		41 |       name  = "local_infile"
		42 |       value = "on"
		43 |     }
		44 |
		45 |
		46 |     availability_type = "ZONAL"
		47 |   }
		48 | }


Check: CKV2_AWS_19: "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances"
	FAILED for resource: aws_eip.solo
	File: /terraform\aws\eip\eip.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-eip-addresses-allocated-to-a-vpc-are-attached-to-ec2-instances

		4 | resource "aws_eip" "solo" {
		5 |   vpc = true
		6 | }


Check: CKV2_AWS_19: "Ensure that all EIP addresses allocated to a VPC are attached to EC2 instances"
	FAILED for resource: aws_eip.nat
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:90-90
	Guide: https://docs.bridgecrew.io/docs/ensure-that-all-eip-addresses-allocated-to-a-vpc-are-attached-to-ec2-instances

		90 | resource "aws_eip" "nat" {}


Check: CKV2_AWS_29: "Ensure public API gateway are protected by WAF"
	FAILED for resource: aws_api_gateway_stage.api_gw_stage
	File: /terraform\aws\api-gateway\api-gateway-rest-api-policy\rest_api_with_vulnerable_policy.tf:75-79
	Guide: https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf

		75 | resource "aws_api_gateway_stage" "api_gw_stage" {
		76 |   stage_name    = "prod"
		77 |   rest_api_id   = aws_api_gateway_rest_api.api_gw.id
		78 |   deployment_id = aws_api_gateway_deployment.api_gw_deploy.id
		79 | }


Check: CKV2_AWS_29: "Ensure public API gateway are protected by WAF"
	FAILED for resource: aws_api_gateway_stage.fail_waf
	File: /terraform\aws\api-gateway\api-gateway-rest-api\api_gateway_rest_api.tf:9-13
	Guide: https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf

		9  | resource "aws_api_gateway_stage" "fail_waf" {
		10 |   deployment_id = aws_api_gateway_deployment.example.id
		11 |   stage_name    = "fail-waf"
		12 |   rest_api_id   = aws_api_gateway_rest_api.fail.id
		13 | }


Check: CKV2_AWS_29: "Ensure public API gateway are protected by WAF"
	FAILED for resource: aws_api_gateway_stage.no_assoc
	File: /terraform\aws\api-gateway\api-gateway-rest-api\aws_api_gateway_rest_api_no_waf.tf:17-21
	Guide: https://docs.bridgecrew.io/docs/ensure-public-api-gateway-are-protected-by-waf

		17 | resource "aws_api_gateway_stage" "no_assoc" {
		18 |   deployment_id = aws_api_gateway_deployment.example.id
		19 |   rest_api_id   = aws_api_gateway_rest_api.no_assoc.id
		20 |   stage_name    = "example"
		21 | }


Check: CKV2_GCP_2: "Ensure legacy networks do not exist for a project"
	FAILED for resource: google_project.fail
	File: /terraform\google\project\project.tf:9-14
	Guide: https://docs.bridgecrew.io/docs/ensure-legacy-networks-do-not-exist-for-a-project

		9  | resource "google_project" "fail" {
		10 |   name                = "My Project"
		11 |   project_id          = "your-project-id"
		12 |   org_id              = "1234567"
		13 |   auto_create_network = true
		14 | }


Check: CKV2_GCP_5: "Ensure that Cloud Audit Logging is configured properly across all services and all users from a project"
	FAILED for resource: google_project.fail
	File: /terraform\google\project\project.tf:9-14
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cloud-audit-logging-is-configured-properly-across-all-services-and-all-users-from-a-project

		9  | resource "google_project" "fail" {
		10 |   name                = "My Project"
		11 |   project_id          = "your-project-id"
		12 |   org_id              = "1234567"
		13 |   auto_create_network = true
		14 | }


Check: CKV2_GCP_6: "Ensure that Cloud KMS cryptokeys are not anonymously or publicly accessible"
	FAILED for resource: google_kms_crypto_key.fails
	File: /terraform\google\kms\google_kms_crypto_key.tf:12-20
	Guide: https://docs.bridgecrew.io/docs/ensure-that-cloud-kms-cryptokeys-are-not-anonymously-or-publicly-accessible

		12 | resource "google_kms_crypto_key" "fails" {
		13 |   name            = "crypto-key-example"
		14 |   key_ring        = google_kms_key_ring.keyring.id
		15 |   rotation_period = "15552000s"
		16 |
		17 |   lifecycle {
		18 |     prevent_destroy = false
		19 |   }
		20 | }


Check: CKV2_AZURE_6: "Ensure 'Allow access to Azure services' for PostgreSQL Database Server is disabled"
	FAILED for resource: azurerm_sql_server.example
	File: /terraform\azurerm\mssql\sql_server.tf:10-28
	Guide: https://docs.bridgecrew.io/docs/ensure-allow-access-to-azure-services-for-postgresql-database-server-is-disabled

		10 | resource "azurerm_sql_server" "example" {
		11 |   name                         = "mssqlserver"
		12 |   resource_group_name          = azurerm_resource_group.example.name
		13 |   location                     = azurerm_resource_group.example.location
		14 |   version                      = "12.0"
		15 |   administrator_login          = "mradministrator"
		16 |   administrator_login_password = "thisIsDog11"
		17 |   minimum_tls_version          = "1.1"
		18 |
		19 |
		20 |   public_network_access_enabled = true
		21 |   extended_auditing_policy {
		22 |     storage_endpoint                        = azurerm_storage_account.example.primary_blob_endpoint
		23 |     storage_account_access_key              = azurerm_storage_account.example.primary_access_key
		24 |     storage_account_access_key_is_secondary = true
		25 |     retention_in_days                       = 6
		26 |   }
		27 |
		28 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.mainvpc
	File: /terraform\aws\security_groups\vpc_default_security_group_accepts_all_traffic.tf:1-3
	Guide: https://docs.bridgecrew.io/docs/networking_4

		1 | resource "aws_vpc" "mainvpc" {
		2 |   cidr_block = "10.1.0.0/16"
		3 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.vpc1
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:41-48
	Guide: https://docs.bridgecrew.io/docs/networking_4

		41 | resource "aws_vpc" "vpc1" {
		42 |   cidr_block = var.vpc_1_cidr_block
		43 |
		44 |   tags = {
		45 |     Name    = "tf-test-vpc-1"
		46 |     Project = "CIS Certification"
		47 |   }
		48 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.bad_vpc
	File: /terraform\aws\vpc\nacl.tf:5-7
	Guide: https://docs.bridgecrew.io/docs/networking_4

		5 | resource "aws_vpc" "bad_vpc" {
		6 |   cidr_block = "10.0.0.0/16"
		7 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.main
	File: /terraform\aws\dynamodb\dynamodb_vpc_endpoint_wihout_route_table_association.tf:11-14
	Guide: https://docs.bridgecrew.io/docs/networking_4

		11 | resource "aws_vpc" "main" {
		12 |   cidr_block         = "192.168.100.0/24"
		13 |   enable_dns_support = true
		14 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.eks_vpc
	File: /terraform\aws\vpc\vpc.tf:5-9
	Guide: https://docs.bridgecrew.io/docs/networking_4

		5 | resource "aws_vpc" "eks_vpc" {
		6 |   cidr_block           = "10.10.0.0/16"
		7 |   enable_dns_hostnames = true
		8 |   enable_dns_support   = true
		9 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.positive
	File: /terraform\aws\vpc\vpc_without_network_firewall.tf:4-6
	Guide: https://docs.bridgecrew.io/docs/networking_4

		4 | resource "aws_vpc" "positive" {
		5 |   cidr_block = "10.0.0.0/16"
		6 | }


Check: CKV2_AWS_12: "Ensure the default security group of every VPC restricts all traffic"
	FAILED for resource: aws_vpc.vpc2
	File: /terraform\aws\vpc\vpc_peering_route_table_with_unrestricted_cidr.tf:72-79
	Guide: https://docs.bridgecrew.io/docs/networking_4

		72 | resource "aws_vpc" "vpc2" {
		73 |   cidr_block = var.vpc_2_cidr_block
		74 |
		75 |   tags = {
		76 |     Name    = "tf-test-vpc-2"
		77 |     Project = "CIS Certification"
		78 |   }
		79 | }

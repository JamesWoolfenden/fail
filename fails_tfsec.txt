{
	"results": [
		{
			"rule_id": "aws-mq-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure MQ Broker is not publicly exposed",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Publicly accessible MQ Broker may be vulnerable to compromise",
			"resolution": "Disable public access when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#publicly_accessible"
			],
			"description": "Resource 'aws_mq_broker.example' does not have publicly_accessible set to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker.tf",
				"start_line": 16,
				"end_line": 16
			},
			"resource": "aws_mq_broker.example"
		},
		{
			"rule_id": "aws-msk-enable-in-transit-encryption",
			"legacy_rule_id": "AWS022",
			"rule_description": "A MSK cluster allows unencrypted data in transit.",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/msk/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info-argument-reference",
				"https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html"
			],
			"description": "Resource 'aws_msk_cluster.name' defines a MSK cluster that allows plaintext as well as TLS encrypted data in transit.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 16,
				"end_line": 16
			},
			"resource": "aws_msk_cluster.name"
		},
		{
			"rule_id": "aws-sqs-enable-queue-encryption",
			"legacy_rule_id": "AWS015",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/enable-queue-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse",
				"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html"
			],
			"description": "Resource 'aws_sqs_queue.fail' defines an unencrypted SQS queue.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue.tf",
				"start_line": 9,
				"end_line": 22
			},
			"resource": "aws_sqs_queue.fail"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_node_pool.fail' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 80,
				"end_line": 108
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-documentdb-enable-log-export",
			"legacy_rule_id": "",
			"rule_description": "DocumentDB logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Limited visibility of audit trail for changes to the DocumentDB",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/enable-log-export",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports"
			],
			"description": "Resource 'aws_docdb_cluster.examplea' does not have enabled_cloudwatch_logs_exports set to one of [audit profiler]",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 30,
				"end_line": 30
			},
			"resource": "aws_docdb_cluster.examplea"
		},
		{
			"rule_id": "aws-ecr-repository-customer-key",
			"legacy_rule_id": "AWS093",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/repository-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration",
				"https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html"
			],
			"description": "Resource 'aws_ecr_repository.name' does not have CMK encryption configured",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr.tf",
				"start_line": 10,
				"end_line": 13
			},
			"resource": "aws_ecr_repository.name"
		},
		{
			"rule_id": "aws-eks-enable-control-plane-logging",
			"legacy_rule_id": "AWS067",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/enable-control-plane-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types",
				"https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
			],
			"description": "Resource 'aws_eks_cluster.fail' missing the enabled_cluster_log_types attribute to enable control plane logging",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			},
			"resource": "aws_eks_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 1,
				"end_line": 78
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html"
			],
			"description": "Resource 'google_sql_database_instance.instance1-fail' has a public ipv4 address explicitly assigned",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\sql_database_instance.tf",
				"start_line": 7,
				"end_line": 7
			},
			"resource": "google_sql_database_instance.instance1-fail"
		},
		{
			"rule_id": "google-compute-use-secure-tls-policy",
			"legacy_rule_id": "",
			"rule_description": "SSL policies should enforce secure versions of TLS",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Data in transit is not sufficiently secured",
			"resolution": "Enforce a minimum TLS version of 1.2",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/use-secure-tls-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_ssl_policy#min_tls_version"
			],
			"description": "Resource 'google_compute_ssl_policy.modern-profile' does not have min_tls_version set to TLS_1_2",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_ssl_policy.tf",
				"start_line": 7,
				"end_line": 7
			},
			"resource": "google_compute_ssl_policy.modern-profile"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html"
			],
			"description": "Resource 'google_sql_database_instance.db' has a public ipv4 address assigned by default",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\SQL-no-cross-db-ownership-chaining.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-dynamodb-enable-at-rest-encryption",
			"legacy_rule_id": "AWS081",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption",
				"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html",
				"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dax-cluster.html"
			],
			"description": "DAX cluster 'aws_dax_cluster.name' does not have server side encryption configured. By default it is disabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			},
			"resource": "aws_dax_cluster.name"
		},
		{
			"rule_id": "google-compute-disk-encryption-customer-keys",
			"legacy_rule_id": "GCP001",
			"rule_description": "Encrypted compute disk with unmanaged keys.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Encryption of disk using unmanaged keys.",
			"resolution": "Enable encryption using a customer-managed key.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/disk-encryption-customer-keys",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk",
				"https://cloud.google.com/compute/docs/disks/customer-supplied-encryption"
			],
			"description": "Resource 'google_compute_disk.default' defines a disk encrypted with an auto-generated key.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_disk.tf",
				"start_line": 4,
				"end_line": 10
			},
			"resource": "google_compute_disk.default"
		},
		{
			"rule_id": "google-compute-no-project-wide-ssh-keys",
			"legacy_rule_id": "",
			"rule_description": "Disable project-wide SSH keys for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Compromise of a single key pair compromises all instances",
			"resolution": "Disable project-wide SSH keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-project-wide-ssh-keys",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Resource'\u0026{%!s(*hcl.Block=\u0026{resource [google_compute_instance default] 0xc0000a5080 {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 45 891}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 9 855}} [{F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 10 856} {13 35 881}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 36 882} {13 45 891}}]}) %!s(*block.Context=\u0026{0xc000839608 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0000d8ea0 0xc000825e30 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d8f70 0xc000825e40 \u003cnil\u003e false 0 [] [0xc000222f20]}) %!s(*block.HCLBlock=\u0026{0xc0000d9040 0xc000825e50 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d9110 0xc000825e80 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc0006d6640 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d66e0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6780 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6460 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6500 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d65a0 0xc000825e20})]}' explicitly allows the use of project-wide SSH keys by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 27,
				"end_line": 31
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not define the node config and does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.db' does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\mysql-no-local-infile.tf",
				"start_line": 3,
				"end_line": 13
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-dynamodb-table-customer-key",
			"legacy_rule_id": "AWS092",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/table-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption",
				"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/EncryptionAtRest.html"
			],
			"description": "Resource 'aws_dynamodb_table.default' is not using KMS CMK for encryption",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 35
			},
			"resource": "aws_dynamodb_table.default"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\no-public-control-plane.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' does not have node_config.image_type set to COS_CONTAINERD",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\GKEUseCosImage.tf",
				"start_line": 23,
				"end_line": 23
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-iam-no-org-level-default-service-account-assignment",
			"legacy_rule_id": "",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-org-level-default-service-account-assignment",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam",
				""
			],
			"description": "Resource 'google_organization_iam_binding.organization' assigns a role to a default service account.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\organisation\\organization_iam_binding.tf",
				"start_line": 9,
				"end_line": 12
			},
			"resource": "google_organization_iam_binding.organization"
		},
		{
			"rule_id": "google-sql-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html"
			],
			"description": "Resource 'google_sql_database_instance.db' has a public ipv4 address assigned by default",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\mysql-no-local-infile.tf",
				"start_line": 3,
				"end_line": 13
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-documentdb-enable-storage-encryption",
			"legacy_rule_id": "",
			"rule_description": "DocumentDB storage must be encrypted",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable storage encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/enable-storage-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted"
			],
			"description": "Resource 'aws_docdb_cluster.examplea' uses default value for storage_encrypted",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 13,
				"end_line": 31
			},
			"resource": "aws_docdb_cluster.examplea"
		},
		{
			"rule_id": "aws-ecs-no-plaintext-secrets",
			"legacy_rule_id": "AWS013",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/no-plaintext-secrets",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition",
				"https://docs.aws.amazon.com/systems-manager/latest/userguide/integration-ps-secretsmanager.html",
				"https://www.vaultproject.io/"
			],
			"description": "Resource 'aws_ecs_task_definition.fail' includes a potentially sensitive environment variable 'DATABASE_PASSWORD' in the container definition.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 8,
				"end_line": 20
			},
			"resource": "aws_ecs_task_definition.fail"
		},
		{
			"rule_id": "aws-elastic-search-enable-domain-logging",
			"legacy_rule_id": "AWS057",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-domain-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type",
				"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' does not configure logging at rest on the domain.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 17,
				"end_line": 41
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-logging.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-sql-enable-backup",
			"legacy_rule_id": "",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-backup",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true",
				"https://cloud.google.com/sql/docs/mysql/backup-recovery/backups"
			],
			"description": "Resource 'google_sql_database_instance.fail' does not have backups enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySqlLocalInfileOff.tf",
				"start_line": 15,
				"end_line": 34
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-storage-enable-ubla",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/storage/enable-ubla",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access",
				"https://cloud.google.com/storage/docs/uniform-bucket-level-access",
				"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b"
			],
			"description": "Resource 'google_storage_bucket.logging' has uniform_bucket_level_access explicitly disabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket.tf",
				"start_line": 8,
				"end_line": 8
			},
			"resource": "google_storage_bucket.logging"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.fail' does not have management.auto_upgrade set to true",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-auto-upgrade.tf",
				"start_line": 18,
				"end_line": 18
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_node_pool.tf",
				"start_line": 9,
				"end_line": 27
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-autoscaling-enable-at-rest-encryption",
			"legacy_rule_id": "AWS014",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html"
			],
			"description": "Resource 'aws_launch_configuration.as_conf' uses an unencrypted root EBS block device. Consider adding \u003cblue\u003eroot_block_device{ encrypted = true }\u003c/blue\u003e",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 9,
				"end_line": 16
			},
			"resource": "aws_launch_configuration.as_conf"
		},
		{
			"rule_id": "aws-ec2-enforce-http-token-imds",
			"legacy_rule_id": "AWS079",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/enforce-http-token-imds",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options",
				"https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service"
			],
			"description": "Resource 'aws_instance.fail' is missing `metadata_options` block - it is required with `http_tokens` set to `required` to make Instance Metadata Service more secure.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 14,
				"end_line": 32
			},
			"resource": "aws_instance.fail"
		},
		{
			"rule_id": "google-compute-no-public-ingress",
			"legacy_rule_id": "GCP003",
			"rule_description": "An inbound firewall rule allows traffic from /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-public-ingress",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges",
				"https://cloud.google.com/vpc/docs/using-firewalls",
				"https://www.terraform.io/docs/providers/google/r/compute_firewall.html"
			],
			"description": "Resource 'google_compute_firewall.allow_all' defines a fully open inbound firewall rule.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_firewall.tf",
				"start_line": 11,
				"end_line": 11
			},
			"resource": "google_compute_firewall.allow_all"
		},
		{
			"rule_id": "aws-ecs-enable-in-transit-encryption",
			"legacy_rule_id": "AWS096",
			"rule_description": "ECS Task Definitions with EFS volumes should use in-transit encryption",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Intercepted traffic to and from EFS may lead to data loss",
			"resolution": "Enable in transit encryption when using efs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption",
				"https://docs.aws.amazon.com/AmazonECS/latest/userguide/efs-volumes.html",
				"https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html"
			],
			"description": "Resource 'aws_ecs_task_definition.fail' has efs configuration with in transit encryption implicitly disabled",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 7,
				"end_line": 34
			},
			"resource": "aws_ecs_task_definition.fail"
		},
		{
			"rule_id": "aws-iam-set-max-password-age",
			"legacy_rule_id": "AWS038",
			"rule_description": "IAM Password policy should have expiry less than or equal to 90 days.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Long life password increase the likelihood of a password eventually being compromised",
			"resolution": "Limit the password duration with an expiry in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/set-max-password-age",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not have a max password age set.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-ip-aliasing.tf",
				"start_line": 4,
				"end_line": 20
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail1' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ShieldedNodes.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-iam-no-user-granted-permissions",
			"legacy_rule_id": "GCP011",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-user-granted-permissions",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members",
				"https://cloud.google.com/iam/docs/overview#permissions",
				"https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy"
			],
			"description": "'google_project_iam_binding.fail' grants IAM to a user object. It is recommended to manage user permissions with groups.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\no-user-granted-permissions.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "google_project_iam_binding.fail"
		},
		{
			"rule_id": "aws-codebuild-enable-encryption",
			"legacy_rule_id": "AWS080",
			"rule_description": "CodeBuild Project artifacts encryption should not be disabled",
			"rule_provider": "aws",
			"rule_service": "codebuild",
			"impact": "CodeBuild project artifacts are unencrypted",
			"resolution": "Enable encryption for CodeBuild project artifacts",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/codebuild/enable-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project#encryption_disabled",
				"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html",
				"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codebuild-project.html"
			],
			"description": "CodeBuild project 'aws_codebuild_project.default' does not encrypt produced artifacts",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\codebuild\\codebuild.tf",
				"start_line": 14,
				"end_line": 14
			},
			"resource": "aws_codebuild_project.default"
		},
		{
			"rule_id": "aws-ecs-enable-container-insight",
			"legacy_rule_id": "AWS090",
			"rule_description": "ECS clusters should have container insights enabled",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Not all metrics and logs may be gathered for containers when Container Insights isn't enabled",
			"resolution": "Enable Container Insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecs/enable-container-insight",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting",
				"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html"
			],
			"description": "Resource 'aws_ecs_cluster.my_cluster' does not have containerInsights enabled",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_cluster.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "aws_ecs_cluster.my_cluster"
		},
		{
			"rule_id": "aws-vpc-no-public-ingress",
			"legacy_rule_id": "AWS049",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block",
				"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
			],
			"description": "Resource 'aws_network_acl_rule.fail' defines a Network ACL rule that allows specific ingress ports from anywhere.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\no-public-ingress.tf",
				"start_line": 2,
				"end_line": 9
			},
			"resource": "aws_network_acl_rule.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute-value",
			"legacy_rule_id": "GEN005",
			"rule_description": "The attribute has potentially sensitive data, passwords, tokens or keys in it",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive credentials may be compromised",
			"resolution": "Check the code for vulnerabilities and move to variables",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute-value",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'aws_launch_configuration.as_conf' includes potentially sensitive data. Password literal text",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 13,
				"end_line": 15
			},
			"resource": "aws_launch_configuration.as_conf"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-storage-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Public exposure of sensitive data.",
			"resolution": "Restrict public access to the bucket.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/storage/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members",
				"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b"
			],
			"description": "Resource 'google_storage_bucket_iam_member.member' allows public access via member attribute.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket_iam_member.tf",
				"start_line": 8,
				"end_line": 8
			},
			"resource": "google_storage_bucket_iam_member.member"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\use-cluster-labels copy.tf",
				"start_line": 9,
				"end_line": 25
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-metadata-security.tf",
				"start_line": 3,
				"end_line": 9
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-master-networks.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-lambda-restrict-source-arn",
			"legacy_rule_id": "AWS058",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/restrict-source-arn",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission",
				"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html"
			],
			"description": "Resource 'aws_lambda_permission.fail' missing source ARN but has *.amazonaws.com Principal.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			},
			"resource": "aws_lambda_permission.fail"
		},
		{
			"rule_id": "aws-s3-enable-bucket-logging",
			"legacy_rule_id": "AWS002",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
				"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
			],
			"description": "Resource 'aws_s3_bucket.fail' does not have logging enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 10,
				"end_line": 38
			},
			"resource": "aws_s3_bucket.fail"
		},
		{
			"rule_id": "aws-vpc-add-description-to-security-group",
			"legacy_rule_id": "AWS018",
			"rule_description": "Missing description for security group/security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups and rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule",
				"https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html"
			],
			"description": "Resource 'aws_security_group_rule.fail' should include a description for auditing purposes.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group_rule.tf",
				"start_line": 9,
				"end_line": 17
			},
			"resource": "aws_security_group_rule.fail"
		},
		{
			"rule_id": "openstack-compute-no-plaintext-password",
			"legacy_rule_id": "",
			"rule_description": "No plaintext password for compute instance",
			"rule_provider": "openstack",
			"rule_service": "compute",
			"impact": "Including a plaintext password could lead to compromised instance",
			"resolution": "Do not use plaintext passwords in terraform files",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/openstack/compute/no-plaintext-password",
				"https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/compute_instance_v2#admin_pass"
			],
			"description": "Resource 'openstack_compute_instance_v2.fail' specifies a plain text password",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\openstack\\compute\\compute_instance_v2.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "openstack_compute_instance_v2.fail"
		},
		{
			"rule_id": "aws-misc-no-exposing-plaintext-credentials",
			"legacy_rule_id": "AWS044",
			"rule_description": "AWS provider has access credentials specified.",
			"rule_provider": "aws",
			"rule_service": "misc",
			"impact": "Exposing the credentials in the Terraform provider increases the risk of secret leakage",
			"resolution": "Don't include access credentials in plain text",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/misc/no-exposing-plaintext-credentials",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#argument-reference",
				"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html"
			],
			"description": "Provider 'provider.aws' has an access key specified.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_2.tf",
				"start_line": 2,
				"end_line": 2
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "google-bigquery-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "BigQuery datasets should only be accessible within the organisation",
			"rule_provider": "google",
			"rule_service": "bigquery",
			"impact": "Exposure of sensitive data to the public iniernet",
			"resolution": "Configure access permissions with higher granularity",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/bigquery/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/bigquery_dataset#special_group"
			],
			"description": "Resource 'google_bigquery_dataset.fail' has access.special_group set to allAuthenticatedUsers",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\bigquery\\bigquery_dataset.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "google_bigquery_dataset.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-master-networks.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-rbac-permissions",
			"legacy_rule_id": "GCP005",
			"rule_description": "Legacy ABAC permissions are enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "ABAC permissions are less secure than RBAC permissions",
			"resolution": "Switch to using RBAC permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-rbac-permissions",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with ABAC enabled. Disable and rely on RBAC instead. ",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "kubernetes-network-no-public-egress",
			"legacy_rule_id": "",
			"rule_description": "Public egress should not be allowed via network policies",
			"rule_provider": "kubernetes",
			"rule_service": "network",
			"impact": "Exfiltration of data to the public internet",
			"resolution": "Remove public access except where explicitly required",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/kubernetes/network/no-public-egress",
				"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr"
			],
			"description": "Resource 'kubernetes_network_policy.fail' allows egress traffic to the internet",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\kubernetes\\network\\kubernetes_network_policy.tf",
				"start_line": 57,
				"end_line": 57
			},
			"resource": "kubernetes_network_policy.fail"
		},
		{
			"rule_id": "aws-athena-enable-at-rest-encryption",
			"legacy_rule_id": "AWS059",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration",
				"https://docs.aws.amazon.com/athena/latest/ug/encryption.html"
			],
			"description": "Resource 'aws_athena_workgroup.fail' missing encryption configuration block.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\no-encryption-override.tf",
				"start_line": 7,
				"end_line": 25
			},
			"resource": "aws_athena_workgroup.fail"
		},
		{
			"rule_id": "aws-rds-no-classic-resources",
			"legacy_rule_id": "AWS003",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
			],
			"description": "Resource 'aws_elasticache_security_group.bar' uses EC2 Classic. Use a VPC instead.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_security_group.tf",
				"start_line": 7,
				"end_line": 10
			},
			"resource": "aws_elasticache_security_group.bar"
		},
		{
			"rule_id": "google-compute-no-default-service-account",
			"legacy_rule_id": "",
			"rule_description": "Instances should not use the default service account",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Instance has full access to the project",
			"resolution": "Remove use of default service account",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-default-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_compute_instance default] 0xc0000a5080 {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 45 891}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 9 855}} [{F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 10 856} {13 35 881}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 36 882} {13 45 891}}]}) %!s(*block.Context=\u0026{0xc000839608 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0000d8ea0 0xc000825e30 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d8f70 0xc000825e40 \u003cnil\u003e false 0 [] [0xc000222f20]}) %!s(*block.HCLBlock=\u0026{0xc0000d9040 0xc000825e50 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d9110 0xc000825e80 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc000665860 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006654a0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc000665540 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006655e0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc000665720 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006657c0 0xc000825e20})]}' uses the default service account.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 13,
				"end_line": 40
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 2,
				"end_line": 75
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\no-public-control-plane.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' does not have node_config.image_type set to COS_CONTAINERD",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-pool-uses-cos.tf",
				"start_line": 22,
				"end_line": 22
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-eks-encrypt-secrets",
			"legacy_rule_id": "AWS066",
			"rule_description": "EKS should have the encryption of secrets enabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS secrets could be read if compromised",
			"resolution": "Enable encryption of EKS secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/encrypt-secrets",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
				"https://aws.amazon.com/about-aws/whats-new/2020/03/amazon-eks-adds-envelope-encryption-for-secrets-with-aws-kms/"
			],
			"description": "Resource 'aws_eks_cluster.fail' has no encryptionConfigBlock block",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			},
			"resource": "aws_eks_cluster.fail"
		},
		{
			"rule_id": "aws-elbv2-alb-not-public",
			"legacy_rule_id": "AWS005",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elbv2",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elbv2/alb-not-public",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Resource 'aws_alb.disabled' is exposed publicly.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "aws_alb.disabled"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-rbac-permissions",
			"legacy_rule_id": "GCP005",
			"rule_description": "Legacy ABAC permissions are enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "ABAC permissions are less secure than RBAC permissions",
			"resolution": "Switch to using RBAC permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-rbac-permissions",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#leave_abac_disabled_default_for_110"
			],
			"description": "Resource 'google_container_cluster.fail-public' defines a cluster with ABAC enabled. Disable and rely on RBAC instead. ",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-iam-no-project-level-default-service-account-assignment",
			"legacy_rule_id": "",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-project-level-default-service-account-assignment",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam",
				""
			],
			"description": "Resource 'google_project_iam_binding.project' assigns a role to a default service account.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\ProjectImpersonationRoles.tf",
				"start_line": 6,
				"end_line": 9
			},
			"resource": "google_project_iam_binding.project"
		},
		{
			"rule_id": "aws-ec2-no-secrets-in-user-data",
			"legacy_rule_id": "AWS062",
			"rule_description": "User data for EC2 instances must not contain sensitive AWS keys",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "User data is visible through the AWS Management console",
			"resolution": "Remove sensitive data from the EC2 instance user-data",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ec2/no-secrets-in-user-data",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html"
			],
			"description": "Resource 'aws_instance.fail' has userdata with access key id defined.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			},
			"resource": "aws_instance.fail"
		},
		{
			"rule_id": "google-compute-disk-encryption-customer-key",
			"legacy_rule_id": "",
			"rule_description": "Disks should be encrypted with Customer Supplied Encryption Keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper management",
			"resolution": "Use managed keys ",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/disk-encryption-customer-key",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link"
			],
			"description": "Resource 'google_compute_disk.default' uses default value for disk_encryption_key.kms_key_self_link",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_disk.tf",
				"start_line": 4,
				"end_line": 10
			},
			"resource": "google_compute_disk.default"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-metadata-security.tf",
				"start_line": 3,
				"end_line": 9
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "github-repositories-vulnerability-alerts",
			"legacy_rule_id": "",
			"rule_description": "Github vulnerability alerts should be enabled.",
			"rule_provider": "github",
			"rule_service": "repositories",
			"impact": "Insecure vulnerabilities might be used in the codebase.",
			"resolution": "Enable vulnerability alerts for all repositories.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/github/repositories/vulnerability-alerts",
				"https://registry.terraform.io/providers/hashicorp/github/latest/docs/resources/repository#vulnerability_alerts",
				"https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies/about-alerts-for-vulnerable-dependencies"
			],
			"description": "Resource 'github_repository.fail' does not have vulnerability_alerts set to true",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\repositories\\repository.tf",
				"start_line": 19,
				"end_line": 19
			},
			"resource": "github_repository.fail"
		},
		{
			"rule_id": "google-sql-no-contained-db-auth",
			"legacy_rule_id": "",
			"rule_description": "Contained database authentication should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Access can be granted without knowledge of the database administrator",
			"resolution": "Disable contained database authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-contained-db-auth",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.fail' has contained database authentication enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerContainedDBAuthentication.tf",
				"start_line": 2,
				"end_line": 53
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "digitalocean-compute-no-public-ingress",
			"legacy_rule_id": "DIG001",
			"rule_description": "The firewall has an inbound rule with open access",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "Your port is exposed to the internet",
			"resolution": "Set a more restrictive CIRDR range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/compute/no-public-ingress",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall",
				"https://docs.digitalocean.com/products/networking/firewalls/how-to/configure-rules/"
			],
			"description": "Resource 'digitalocean_firewall.fail' defines a fully open inbound_rule.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\compute\\no-public-ingress.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "digitalocean_firewall.fail"
		},
		{
			"rule_id": "digitalocean-spaces-versioning-enabled",
			"legacy_rule_id": "DIG006",
			"rule_description": "Spaces buckets should have versioning enabled",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental or malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/versioning-enabled",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html"
			],
			"description": "Resource 'digitalocean_spaces_bucket.fail' does not have versioning block specified",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\acl-no-public-read.tf",
				"start_line": 1,
				"end_line": 5
			},
			"resource": "digitalocean_spaces_bucket.fail"
		},
		{
			"rule_id": "github-repositories-require-signed-commits",
			"legacy_rule_id": "",
			"rule_description": "Require signed commits should be enabled.",
			"rule_provider": "github",
			"rule_service": "repositories",
			"impact": "You cannot guarantee the source of unsigned commits.",
			"resolution": "Require signed commits for all protected branches.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/github/repositories/require-signed-commits",
				"https://registry.terraform.io/providers/hashicorp/github/latest/docs/resources/branch_protection#require_signed_commits",
				"https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification"
			],
			"description": "Resource 'github_branch_protection.fail' does not have require_signed_commits set to true",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\repositories\\branch_protection.tf",
				"start_line": 12,
				"end_line": 12
			},
			"resource": "github_branch_protection.fail"
		},
		{
			"rule_id": "aws-rds-encrypt-cluster-storage-data",
			"legacy_rule_id": "AWS051",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-cluster-storage-data",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"
			],
			"description": "Resource 'aws_rds_cluster.fail2' defines a enabled RDS Cluster encryption but not the required encrypted_storage.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 17,
				"end_line": 23
			},
			"resource": "aws_rds_cluster.fail2"
		},
		{
			"rule_id": "aws-sns-enable-topic-encryption",
			"legacy_rule_id": "AWS016",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sns/enable-topic-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse",
				"https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
			],
			"description": "Resource 'aws_sns_topic.fail' defines an unencrypted SNS topic.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sns\\sns_topic.tf",
				"start_line": 7,
				"end_line": 8
			},
			"resource": "aws_sns_topic.fail"
		},
		{
			"rule_id": "google-compute-no-ip-forwarding",
			"legacy_rule_id": "",
			"rule_description": "Instances should not have IP forwarding enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Instance can send/receive packets without the explicit instance address",
			"resolution": "Disable IP forwarding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-ip-forwarding",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#can_ip_forward"
			],
			"description": "Resource 'google_compute_instance.default' has can_ip_forward set to true",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 33,
				"end_line": 33
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail-public' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 29,
				"end_line": 29
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "aws-elastic-search-encrypt-replication-group",
			"legacy_rule_id": "AWS035",
			"rule_description": "Unencrypted Elasticache Replication Group.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data in the replication group could be readable if compromised",
			"resolution": "Enable encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/encrypt-replication-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled",
				"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html"
			],
			"description": "Resource 'aws_elasticache_replication_group.fail' defines an unencrypted Elasticache Replication Group (at_rest_encryption_enabled set to false).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 14,
				"end_line": 14
			},
			"resource": "aws_elasticache_replication_group.fail"
		},
		{
			"rule_id": "aws-elastic-search-encrypt-replication-group",
			"legacy_rule_id": "AWS035",
			"rule_description": "Unencrypted Elasticache Replication Group.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data in the replication group could be readable if compromised",
			"resolution": "Enable encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/encrypt-replication-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled",
				"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html"
			],
			"description": "Resource 'aws_elasticache_replication_group.fail' defines an unencrypted Elasticache Replication Group (missing at_rest_encryption_enabled attribute).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 22
			},
			"resource": "aws_elasticache_replication_group.fail"
		},
		{
			"rule_id": "aws-elasticache-add-description-for-security-group",
			"legacy_rule_id": "",
			"rule_description": "Missing description for security group/security group rule.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups and rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/add-description-for-security-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_security_group#description"
			],
			"description": "Resource 'aws_elasticache_security_group.bar' uses default value for description",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_security_group.tf",
				"start_line": 7,
				"end_line": 10
			},
			"resource": "aws_elasticache_security_group.bar"
		},
		{
			"rule_id": "digitalocean-droplet-use-ssh-keys",
			"legacy_rule_id": "DIG003",
			"rule_description": "SSH Keys are the preferred way to connect to your droplet, no keys are supplied",
			"rule_provider": "digitalocean",
			"rule_service": "droplet",
			"impact": "Logging in with username and password is easier to compromise",
			"resolution": "Use ssh keys for login",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/droplet/use-ssh-keys",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/droplet#ssh_keys",
				"https://www.digitalocean.com/community/tutorials/understanding-the-ssh-encryption-and-connection-process"
			],
			"description": "Resource 'digitalocean_droplet.good_example' does not define ssh_keys",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\droplet\\use-ssh-keys.tf",
				"start_line": 1,
				"end_line": 6
			},
			"resource": "digitalocean_droplet.good_example"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 80,
				"end_line": 108
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail-public' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 30,
				"end_line": 30
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not define the node config and does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-cloudtrail-enable-all-regions",
			"legacy_rule_id": "AWS063",
			"rule_description": "Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Activity could be happening in your account in a different region",
			"resolution": "Enable Cloudtrail in all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-all-regions",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail",
				"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html"
			],
			"description": "Resource 'aws_cloudtrail.fail' does not set multi region trail config.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 12,
				"end_line": 16
			},
			"resource": "aws_cloudtrail.fail"
		},
		{
			"rule_id": "google-dns-enable-dnssec",
			"legacy_rule_id": "",
			"rule_description": "Cloud DNS should use DNSSEC",
			"rule_provider": "google",
			"rule_service": "dns",
			"impact": "Unverified DNS responses could lead to man-in-the-middle attacks",
			"resolution": "Enable DNSSEC",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/dns/enable-dnssec",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#state"
			],
			"description": "Resource 'google_dns_managed_zone.fail' does not have dnssec_config.state set to on",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\dns\\CloudDNSKeySpecsRSASHA1.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "google_dns_managed_zone.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-ip-aliasing.tf",
				"start_line": 4,
				"end_line": 20
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-sql-pg-log-lock-waits",
			"legacy_rule_id": "",
			"rule_description": "Ensure that logging of lock waits is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Issues leading to denial of service may not be identified.",
			"resolution": "Enable lock wait logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/pg-log-lock-waits",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-LOCK-WAITS"
			],
			"description": "Resource 'google_sql_database_instance.fail' is not configured to log lock waits",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-mq-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure MQ Broker is not publicly exposed",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Publicly accessible MQ Broker may be vulnerable to compromise",
			"resolution": "Disable public access when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#publicly_accessible"
			],
			"description": "Resource 'aws_mq_broker.fail' does not have publicly_accessible set to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\enable-general-logging.tf",
				"start_line": 16,
				"end_line": 16
			},
			"resource": "aws_mq_broker.fail"
		},
		{
			"rule_id": "github-repositories-private",
			"legacy_rule_id": "GIT001",
			"rule_description": "Github repository shouldn't be public.",
			"rule_provider": "github",
			"rule_service": "repositories",
			"impact": "Anyone can read the contents of the GitHub repository and leak IP",
			"resolution": "Make sensitive or commercially important repositories private",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/github/repositories/private",
				"https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository",
				"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility",
				"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-repository-visibility#about-internal-repositories"
			],
			"description": "Resource 'github_repository.fail' has visibility set to public - visibility should be set to `private` or `internal` to make repository private",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\repositories\\repository.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "github_repository.fail"
		},
		{
			"rule_id": "google-gke-enable-ip-aliasing",
			"legacy_rule_id": "",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-ip-aliasing",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Resource 'google_container_cluster.fail' has IP aliasing disabled.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail1' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail-public' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-iam-no-user-granted-permissions",
			"legacy_rule_id": "GCP011",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-user-granted-permissions",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members",
				"https://cloud.google.com/iam/docs/overview#permissions",
				"https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy"
			],
			"description": "'google_project_iam_member.fail' grants IAM to a user object. It is recommended to manage user permissions with groups.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project_iam_member.tf",
				"start_line": 8,
				"end_line": 12
			},
			"resource": "google_project_iam_member.fail"
		},
		{
			"rule_id": "google-sql-no-contained-db-auth",
			"legacy_rule_id": "",
			"rule_description": "Contained database authentication should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Access can be granted without knowledge of the database administrator",
			"resolution": "Disable contained database authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-contained-db-auth",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.fail' has contained database authentication enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerCrossDBOwnershipChaining.tf",
				"start_line": 2,
				"end_line": 53
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-api-gateway-enable-tracing",
			"legacy_rule_id": "",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-tracing",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "Resource 'aws_api_gateway_stage.fail' does not have xray_tracing_enabled set to true",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_stage.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "aws_api_gateway_stage.fail"
		},
		{
			"rule_id": "aws-elbv2-alb-not-public",
			"legacy_rule_id": "AWS005",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elbv2",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elbv2/alb-not-public",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Resource 'aws_alb.fail' is exposed publicly.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 14,
				"end_line": 14
			},
			"resource": "aws_alb.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-private-cluster.tf",
				"start_line": 2,
				"end_line": 18
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_node_pool.fail' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-metadata-security.tf",
				"start_line": 3,
				"end_line": 9
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-elastic-search-use-secure-tls-policy",
			"legacy_rule_id": "AWS034",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/use-secure-tls-policy",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy",
				"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' defines an Elasticsearch domain with an outdated TLS policy (set to Policy-Min-TLS-1-0-2019-07).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 21,
				"end_line": 21
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute-value",
			"legacy_rule_id": "GEN005",
			"rule_description": "The attribute has potentially sensitive data, passwords, tokens or keys in it",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive credentials may be compromised",
			"resolution": "Check the code for vulnerabilities and move to variables",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute-value",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'provider.aws' includes potentially sensitive data. Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_2.tf",
				"start_line": 2,
				"end_line": 2
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "google-compute-no-serial-port",
			"legacy_rule_id": "",
			"rule_description": "Disable serial port connectivity for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Unrestricted network access to the serial console of the instance",
			"resolution": "Disable serial port access",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-serial-port",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Resource'\u0026{%!s(*hcl.Block=\u0026{resource [google_compute_instance default] 0xc0000a5080 {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 45 891}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 9 855}} [{F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 10 856} {13 35 881}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 36 882} {13 45 891}}]}) %!s(*block.Context=\u0026{0xc000839608 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0000d8ea0 0xc000825e30 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d8f70 0xc000825e40 \u003cnil\u003e false 0 [] [0xc000222f20]}) %!s(*block.HCLBlock=\u0026{0xc0000d9040 0xc000825e50 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d9110 0xc000825e80 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc0006d6820 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d68c0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6960 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6a00 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6aa0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6b40 0xc000825e20})]}' explicitly enables serial port",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 27,
				"end_line": 31
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "aws-workspace-enable-disk-encryption",
			"legacy_rule_id": "AWS084",
			"rule_description": "Root and user volumes on Workspaces should be encrypted",
			"rule_provider": "aws",
			"rule_service": "workspace",
			"impact": "Data can be freely read if compromised",
			"resolution": "Root and user volume encryption should be enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/workspace/enable-disk-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled",
				"https://docs.aws.amazon.com/workspaces/latest/adminguide/encrypt-workspaces.html"
			],
			"description": "Resource 'aws_workspaces_workspace.fail' should have root volume encryption enabled",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\workspace\\workspace_workspace.tf",
				"start_line": 8,
				"end_line": 22
			},
			"resource": "aws_workspaces_workspace.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-ip-aliasing.tf",
				"start_line": 4,
				"end_line": 20
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-auto-upgrade.tf",
				"start_line": 2,
				"end_line": 20
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail1' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 2,
				"end_line": 75
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-api-gateway-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "No public access to API Gateway methods",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "API gateway methods can be unauthorized accessed",
			"resolution": "Use and authorization method or require API Key",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization"
			],
			"description": "Resource 'aws_api_gateway_method.fail' has authorization set to NONE",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_method.tf",
				"start_line": 8,
				"end_line": 8
			},
			"resource": "aws_api_gateway_method.fail"
		},
		{
			"rule_id": "aws-mq-enable-general-logging",
			"legacy_rule_id": "",
			"rule_description": "MQ Broker should have general logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable general logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-general-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general"
			],
			"description": "Resource 'aws_mq_broker.example' uses default value for logs.general",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker.tf",
				"start_line": 10,
				"end_line": 22
			},
			"resource": "aws_mq_broker.example"
		},
		{
			"rule_id": "aws-vpc-add-description-to-security-group",
			"legacy_rule_id": "AWS018",
			"rule_description": "Missing description for security group/security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups and rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule",
				"https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html"
			],
			"description": "Resource 'aws_security_group_rule.fail' should include a description for auditing purposes.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 41,
				"end_line": 45
			},
			"resource": "aws_security_group_rule.fail"
		},
		{
			"rule_id": "google-compute-vm-disk-encryption-customer-key",
			"legacy_rule_id": "",
			"rule_description": "VM disks should be encrypted with Customer Supplied Encryption Keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper management",
			"resolution": "Use managed keys ",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/vm-disk-encryption-customer-key",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#kms_key_self_link"
			],
			"description": "Resource 'google_compute_instance.default' uses default value for boot_disk.kms_key_self_link",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 13,
				"end_line": 40
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-monitoring.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail-flowlogs' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\EnableVPCFlowLogs.tf",
				"start_line": 11,
				"end_line": 89
			},
			"resource": "google_container_cluster.fail-flowlogs"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-enable-pg-temp-file-logging",
			"legacy_rule_id": "",
			"rule_description": "Temporary file logging should be enabled for all temporary files.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Use of temporary files will not be logged",
			"resolution": "Enable temporary file logging for all files",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-pg-temp-file-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://postgresqlco.nf/doc/en/param/log_temp_files/"
			],
			"description": "Resource 'google_sql_database_instance.instance1-fail' has temporary file logging disabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\sql_database_instance.tf",
				"start_line": 1,
				"end_line": 24
			},
			"resource": "google_sql_database_instance.instance1-fail"
		},
		{
			"rule_id": "aws-ecr-enable-image-scans",
			"legacy_rule_id": "AWS023",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enable-image-scans",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration",
				"https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"
			],
			"description": "Resource 'aws_ecr_repository.name' defines a disabled ECR image scan.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr.tf",
				"start_line": 10,
				"end_line": 13
			},
			"resource": "aws_ecr_repository.name"
		},
		{
			"rule_id": "aws-elasticache-enable-in-transit-encryption",
			"legacy_rule_id": "AWS036",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled",
				"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html"
			],
			"description": "Resource 'aws_elasticache_replication_group.fail' defines an unencrypted Elasticache Replication Group (transit_encryption_enabled set to false).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 21,
				"end_line": 21
			},
			"resource": "aws_elasticache_replication_group.fail"
		},
		{
			"rule_id": "aws-rds-no-public-db-access",
			"legacy_rule_id": "AWS011",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Resource 'aws_dms_replication_instance.public' is exposed publicly.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dms\\dms.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "aws_dms_replication_instance.public"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 1,
				"end_line": 78
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-no-cross-db-ownership-chaining",
			"legacy_rule_id": "",
			"rule_description": "Cross-database ownership chaining should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Unintended access to sensitive data",
			"resolution": "Disable cross database ownership chaining",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-cross-db-ownership-chaining",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.tfer--general-002D-sqlserver12' has cross-database ownership chaining explicitly enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerNoPublicIP.tf",
				"start_line": 24,
				"end_line": 24
			},
			"resource": "google_sql_database_instance.tfer--general-002D-sqlserver12"
		},
		{
			"rule_id": "kubernetes-network-no-public-ingress",
			"legacy_rule_id": "",
			"rule_description": "Public ingress should not be allowed via network policies",
			"rule_provider": "kubernetes",
			"rule_service": "network",
			"impact": "Exposure of infrastructure to the public internet",
			"resolution": "Remove public access except where explicitly required",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/kubernetes/network/no-public-ingress",
				"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr"
			],
			"description": "Resource 'kubernetes_network_policy.fail' allows ingress traffic from the internet",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\kubernetes\\network\\kubernetes_network_policy.tf",
				"start_line": 36,
				"end_line": 36
			},
			"resource": "kubernetes_network_policy.fail"
		},
		{
			"rule_id": "aws-ecr-enforce-immutable-repository",
			"legacy_rule_id": "AWS078",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ecr/enforce-immutable-repository",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository",
				"https://sysdig.com/blog/toctou-tag-mutability/"
			],
			"description": "Resource 'aws_ecr_repository.name' has `image_tag_mutability` attribute  not set to `IMMUTABLE`",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr.tf",
				"start_line": 12,
				"end_line": 12
			},
			"resource": "aws_ecr_repository.name"
		},
		{
			"rule_id": "digitalocean-spaces-disable-force-destroy",
			"legacy_rule_id": "DIG007",
			"rule_description": "Force destroy is enabled on Spaces bucket which is dangerous",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Accidental deletion of bucket objects",
			"resolution": "Don't use force destroy on bucket configuration",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/disable-force-destroy",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#force_destroy"
			],
			"description": "Resource 'digitalocean_spaces_bucket.fail' has versioning specified, but it isn't enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\disable-force-destroy.tf",
				"start_line": 5,
				"end_line": 5
			},
			"resource": "digitalocean_spaces_bucket.fail"
		},
		{
			"rule_id": "google-gke-node-metadata-security",
			"legacy_rule_id": "GCP006",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-metadata-security",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#create-concealed"
			],
			"description": "Resource 'google_container_node_pool.fail' defines a cluster with node metadata exposed. node_metadata set to EXPOSE or UNSPECIFIED disables metadata concealment. ",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-metadata-security.tf",
				"start_line": 3,
				"end_line": 9
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail1' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-sql-enable-backup",
			"legacy_rule_id": "",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-backup",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true",
				"https://cloud.google.com/sql/docs/mysql/backup-recovery/backups"
			],
			"description": "Resource 'google_sql_database_instance.fail' has backups explicitly disabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-sql-no-cross-db-ownership-chaining",
			"legacy_rule_id": "",
			"rule_description": "Cross-database ownership chaining should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Unintended access to sensitive data",
			"resolution": "Disable cross database ownership chaining",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-cross-db-ownership-chaining",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.fail' has cross-database ownership chaining enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerCrossDBOwnershipChaining.tf",
				"start_line": 2,
				"end_line": 53
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-storage-enable-ubla",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/storage/enable-ubla",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access",
				"https://cloud.google.com/storage/docs/uniform-bucket-level-access",
				"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b"
			],
			"description": "Resource 'google_storage_bucket.static-site' has uniform_bucket_level_access explicitly disabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\enable-ubla.tf",
				"start_line": 7,
				"end_line": 7
			},
			"resource": "google_storage_bucket.static-site"
		},
		{
			"rule_id": "aws-mq-enable-general-logging",
			"legacy_rule_id": "",
			"rule_description": "MQ Broker should have general logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable general logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-general-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general"
			],
			"description": "Resource 'aws_mq_broker.fail' does not have logs.general set to true",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\enable-general-logging.tf",
				"start_line": 27,
				"end_line": 27
			},
			"resource": "aws_mq_broker.fail"
		},
		{
			"rule_id": "aws-vpc-no-public-ingress-sg",
			"legacy_rule_id": "AWS008",
			"rule_description": "An inline ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sg",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Resource 'aws_security_group.bad_example' defines a fully open ingress security group.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 26,
				"end_line": 26
			},
			"resource": "aws_security_group.bad_example"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 80,
				"end_line": 108
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail] 0xc0002fb810 {F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf {2 1 1} {2 43 43}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf {2 1 1} {2 9 9}} [{F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf {2 10 10} {2 36 36}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf {2 37 37} {2 43 43}}]}) %!s(*block.Context=\u0026{0xc0008398c0 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0004a1930 0xc0000a60f0 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc00085c500 0xc0000a60d0}) %!s(*block.HCLAttribute=\u0026{0xc00085c5a0 0xc0000a60d0}) %!s(*block.HCLAttribute=\u0026{0xc00085c640 0xc0000a60d0}) %!s(*block.HCLAttribute=\u0026{0xc00085c6e0 0xc0000a60d0}) %!s(*block.HCLAttribute=\u0026{0xc00085c780 0xc0000a60d0}) %!s(*block.HCLAttribute=\u0026{0xc00085c460 0xc0000a60d0})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-monitoring.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "aws-mq-enable-audit-logging",
			"legacy_rule_id": "",
			"rule_description": "MQ Broker should have audit logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without audit logging it is difficult to trace activity in the MQ broker",
			"resolution": "Enable audit logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-audit-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit"
			],
			"description": "Resource 'aws_mq_broker.example' uses default value for logs.audit",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker.tf",
				"start_line": 10,
				"end_line": 22
			},
			"resource": "aws_mq_broker.example"
		},
		{
			"rule_id": "google-compute-enable-vpc-flow-logs",
			"legacy_rule_id": "",
			"rule_description": "VPC flow logs should be enabled for all subnets",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Limited auditing capability and awareness",
			"resolution": "Enable VPC flow logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/enable-vpc-flow-logs",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#enable_flow_logs"
			],
			"description": "Resource 'google_compute_subnetwork.without_logging' uses default value for enable_flow_logs",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\SubnetworkLoggingEnabled.tf",
				"start_line": 3,
				"end_line": 8
			},
			"resource": "google_compute_subnetwork.without_logging"
		},
		{
			"rule_id": "google-compute-no-oslogin-override",
			"legacy_rule_id": "",
			"rule_description": "Instances should not override the project setting for OS Login",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Access via SSH key cannot be revoked automatically when an IAM user is removed.",
			"resolution": "Enable OS Login at project level and remove instance-level overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-oslogin-override",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Resource'\u0026{%!s(*hcl.Block=\u0026{resource [google_compute_instance default] 0xc0000a5080 {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 45 891}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 1 847} {13 9 855}} [{F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 10 856} {13 35 881}} {F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf {13 36 882} {13 45 891}}]}) %!s(*block.Context=\u0026{0xc000839608 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0000d8ea0 0xc000825e30 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d8f70 0xc000825e40 \u003cnil\u003e false 0 [] [0xc000222f20]}) %!s(*block.HCLBlock=\u0026{0xc0000d9040 0xc000825e50 \u003cnil\u003e false 0 [] []}) %!s(*block.HCLBlock=\u0026{0xc0000d9110 0xc000825e80 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc0006d60a0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6140 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d61e0 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6280 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d6320 0xc000825e20}) %!s(*block.HCLAttribute=\u0026{0xc0006d63c0 0xc000825e20})]}' has OS Login disabled at instance-level",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_instance.tf",
				"start_line": 27,
				"end_line": 31
			},
			"resource": "google_compute_instance.default"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-mysql-no-local-infile",
			"legacy_rule_id": "",
			"rule_description": "Disable local_infile setting in MySQL",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Arbitrary files read by attackers when combined with a SQL injection vulnerability.",
			"resolution": "Disable the local infile setting",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/mysql-no-local-infile",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html"
			],
			"description": "Resource 'google_sql_database_instance.db' has local file read access enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\mysql-no-local-infile.tf",
				"start_line": 3,
				"end_line": 13
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "google-sql-pg-log-checkpoints",
			"legacy_rule_id": "",
			"rule_description": "Ensure that logging of checkpoints is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable checkpoints logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/pg-log-checkpoints",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CHECKPOINTS"
			],
			"description": "Resource 'google_sql_database_instance.fail' is not configured to log checkpoints",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-api-gateway-enable-access-logging",
			"legacy_rule_id": "AWS061",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-access-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings",
				"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html"
			],
			"description": "Resource 'aws_api_gateway_stage.fail' is missing access log settings block.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_rest_api.tf",
				"start_line": 13,
				"end_line": 15
			},
			"resource": "aws_api_gateway_stage.fail"
		},
		{
			"rule_id": "aws-misc-no-exposing-plaintext-credentials",
			"legacy_rule_id": "AWS044",
			"rule_description": "AWS provider has access credentials specified.",
			"rule_provider": "aws",
			"rule_service": "misc",
			"impact": "Exposing the credentials in the Terraform provider increases the risk of secret leakage",
			"resolution": "Don't include access credentials in plain text",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/misc/no-exposing-plaintext-credentials",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs#argument-reference",
				"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html"
			],
			"description": "Provider 'provider.aws' has an access key specified.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "aws-rds-encrypt-instance-storage-data",
			"legacy_rule_id": "AWS052",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"
			],
			"description": "Resource 'aws_db_instance.default' has storage encrypted set to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 32,
				"end_line": 32
			},
			"resource": "aws_db_instance.default"
		},
		{
			"rule_id": "google-sql-pg-log-disconnections",
			"legacy_rule_id": "",
			"rule_description": "Ensure that logging of disconnections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable disconnection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/pg-log-disconnections",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-DISCONNECTIONS"
			],
			"description": "Resource 'google_sql_database_instance.fail' is not configured to log disconnections",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-elb-drop-invalid-headers",
			"legacy_rule_id": "AWS083",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields",
				"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html"
			],
			"description": "Resource 'aws_alb.disabled' does not drop invalid header fields",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 12,
				"end_line": 17
			},
			"resource": "aws_alb.disabled"
		},
		{
			"rule_id": "digitalocean-spaces-versioning-enabled",
			"legacy_rule_id": "DIG006",
			"rule_description": "Spaces buckets should have versioning enabled",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental or malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/versioning-enabled",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html"
			],
			"description": "Resource 'digitalocean_spaces_bucket.fail' does not have versioning block specified",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\versioning-enabled.tf",
				"start_line": 2,
				"end_line": 5
			},
			"resource": "digitalocean_spaces_bucket.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'azuread_user.james_woolfenden' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_6.tf",
				"start_line": 7,
				"end_line": 7
			},
			"resource": "azuread_user.james_woolfenden"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\shielded.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-athena-enable-at-rest-encryption",
			"legacy_rule_id": "AWS059",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration",
				"https://docs.aws.amazon.com/athena/latest/ug/encryption.html"
			],
			"description": "Resource 'aws_athena_workgroup.fail' missing encryption configuration block.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 9,
				"end_line": 20
			},
			"resource": "aws_athena_workgroup.fail"
		},
		{
			"rule_id": "aws-cloudtrail-enable-at-rest-encryption",
			"legacy_rule_id": "AWS065",
			"rule_description": "Cloudtrail should be encrypted at rest to secure access to sensitive trail data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id",
				"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html"
			],
			"description": "Resource 'aws_cloudtrail.fail' does not have a kms_key_id set.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 12,
				"end_line": 16
			},
			"resource": "aws_cloudtrail.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-logging.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute-value",
			"legacy_rule_id": "GEN005",
			"rule_description": "The attribute has potentially sensitive data, passwords, tokens or keys in it",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive credentials may be compromised",
			"resolution": "Check the code for vulnerabilities and move to variables",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute-value",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'provider.aws' includes potentially sensitive data. Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail1' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-elastic-search-enable-in-transit-encryption",
			"legacy_rule_id": "AWS032",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest",
				"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' defines an Elasticsearch domain with plaintext traffic (enabled attribute set to false).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 33,
				"end_line": 33
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "aws-iam-no-password-reuse",
			"legacy_rule_id": "AWS037",
			"rule_description": "IAM Password policy should prevent password reuse.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Password reuse increase the risk of compromised passwords being abused",
			"resolution": "Prevent password reuse in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/no-password-reuse",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not have a password reuse prevention count set.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "aws-s3-ignore-public-acls",
			"legacy_rule_id": "AWS073",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/ignore-public-acls",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html"
			],
			"description": "Resource 'aws_s3_bucket_public_access_block.fail' does not specify ignore_public_acls, defaults to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "aws_s3_bucket_public_access_block.fail"
		},
		{
			"rule_id": "google-compute-no-public-egress",
			"legacy_rule_id": "GCP004",
			"rule_description": "An outbound firewall rule allows traffic to /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for egress to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/compute/no-public-egress",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall",
				"https://cloud.google.com/vpc/docs/using-firewalls"
			],
			"description": "Resource 'google_compute_firewall.allow_all' defines a fully open outbound firewall rule.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\compute_firewall.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "google_compute_firewall.allow_all"
		},
		{
			"rule_id": "aws-autoscaling-enable-at-rest-encryption",
			"legacy_rule_id": "AWS014",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html"
			],
			"description": "Resource 'aws_launch_configuration.fail' uses an unencrypted root EBS block device.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\launch_configuration.tf",
				"start_line": 10,
				"end_line": 10
			},
			"resource": "aws_launch_configuration.fail"
		},
		{
			"rule_id": "aws-vpc-disallow-mixed-sgr",
			"legacy_rule_id": "",
			"rule_description": "Ensures that usage of security groups with inline rules and security group rule resources are not mixed.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Security group rules will be overwritten and will result in unintended blocking of network traffic",
			"resolution": "Either define all of a security group's rules inline, or none of the security group's rules inline",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/disallow-mixed-sgr",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#resource-aws_security_group",
				"https://github.com/hashicorp/terraform/issues/11011#issuecomment-283076580"
			],
			"description": "Mixed usage between 'aws_security_group_rule.fail' and 'aws_security_group.bad_example'",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 41,
				"end_line": 45
			},
			"resource": "aws_security_group_rule.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'aws_opsworks_rds_db_instance.my_instance' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\opsworks\\opsworks_rds_db_instance.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "aws_opsworks_rds_db_instance.my_instance"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ShieldedNodes.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "aws-autoscaling-no-public-ip",
			"legacy_rule_id": "AWS012",
			"rule_description": "A resource has a public IP address.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The instance or configuration is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html"
			],
			"description": "Resource 'aws_instance.fail' has a public IP address associated.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "aws_instance.fail"
		},
		{
			"rule_id": "aws-neptune-enable-storage-encryption",
			"legacy_rule_id": "",
			"rule_description": "Neptune storage must be encrypted at rest",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of Neptune storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/neptune/enable-storage-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Resource 'aws_neptune_cluster.default' does not have storage_encrypted set to true",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 18,
				"end_line": 18
			},
			"resource": "aws_neptune_cluster.default"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute-value",
			"legacy_rule_id": "GEN005",
			"rule_description": "The attribute has potentially sensitive data, passwords, tokens or keys in it",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive credentials may be compromised",
			"resolution": "Check the code for vulnerabilities and move to variables",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute-value",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'aws_instance.fail' includes potentially sensitive data. Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			},
			"resource": "aws_instance.fail"
		},
		{
			"rule_id": "aws-rds-backup-retention-specified",
			"legacy_rule_id": "AWS091",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/backup-retention-specified",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention"
			],
			"description": "Resource 'aws_db_instance.fail' has backup retention period set to a low value",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "aws_db_instance.fail"
		},
		{
			"rule_id": "aws-redshift-encryption-customer-key",
			"legacy_rule_id": "AWS094",
			"rule_description": "Redshift clusters should use at rest encryption",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Data may be leaked if infrastructure is compromised",
			"resolution": "Enable encryption using CMK",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/encryption-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted",
				"https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html"
			],
			"description": "Resource 'aws_redshift_cluster.fail' does not have encryption enabled",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 16,
				"end_line": 28
			},
			"resource": "aws_redshift_cluster.fail"
		},
		{
			"rule_id": "digitalocean-spaces-acl-no-public-read",
			"legacy_rule_id": "DIG005",
			"rule_description": "Spaces bucket or bucket object has public read acl set",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "The contents of the space can be accessed publicly",
			"resolution": "Apply a more restrictive ACL",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/acl-no-public-read",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl",
				"https://docs.digitalocean.com/reference/api/spaces-api/#access-control-lists-acls"
			],
			"description": "Resource 'digitalocean_spaces_bucket.fail' has a publicly readable acl.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\acl-no-public-read.tf",
				"start_line": 4,
				"end_line": 4
			},
			"resource": "digitalocean_spaces_bucket.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 1,
				"end_line": 78
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 80,
				"end_line": 108
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-api-gateway-enable-access-logging",
			"legacy_rule_id": "AWS061",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-access-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings",
				"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html"
			],
			"description": "Resource 'aws_api_gateway_stage.fail' is missing access log settings block.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_stage.tf",
				"start_line": 13,
				"end_line": 18
			},
			"resource": "aws_api_gateway_stage.fail"
		},
		{
			"rule_id": "aws-launch-no-sensitive-info",
			"legacy_rule_id": "",
			"rule_description": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
			"rule_provider": "aws",
			"rule_service": "launch",
			"impact": "Sensitive credentials in user data can be leaked",
			"resolution": "Don't use sensitive data in user data",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/launch/no-sensitive-info",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64"
			],
			"description": "Resource 'aws_launch_configuration.as_conf' has user_data with sensitive data.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 13,
				"end_line": 15
			},
			"resource": "aws_launch_configuration.as_conf"
		},
		{
			"rule_id": "aws-rds-backup-retention-specified",
			"legacy_rule_id": "AWS091",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/backup-retention-specified",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention"
			],
			"description": "Resource 'aws_rds_cluster.fail2' has backup retention period set to a low value",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 19,
				"end_line": 19
			},
			"resource": "aws_rds_cluster.fail2"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-sqs-no-wildcards-in-policy-documents",
			"legacy_rule_id": "AWS047",
			"rule_description": "AWS SQS policy document has wildcard action statement.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "SQS policies with wildcard actions allow more that is required",
			"resolution": "Keep policy scope to the minimum that is required to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/sqs/no-wildcards-in-policy-documents",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy",
				"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-security-best-practices.html"
			],
			"description": "SQS policy 'aws_sqs_queue_policy.fail' has a wildcard action specified.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue_policy.fail.tf",
				"start_line": 8,
				"end_line": 18
			},
			"resource": "aws_sqs_queue_policy.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail1' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ShieldedNodes.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail] 0xc0002fb4a0 {F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf {2 1 1} {2 43 43}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf {2 1 1} {2 9 9}} [{F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf {2 10 10} {2 36 36}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf {2 37 37} {2 43 43}}]}) %!s(*block.Context=\u0026{0xc000839890 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0004a1790 0xc0000a60c0 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc0008290e0 0xc0000a60b0}) %!s(*block.HCLAttribute=\u0026{0xc000829180 0xc0000a60b0}) %!s(*block.HCLAttribute=\u0026{0xc000829220 0xc0000a60b0}) %!s(*block.HCLAttribute=\u0026{0xc0008292c0 0xc0000a60b0}) %!s(*block.HCLAttribute=\u0026{0xc000828fa0 0xc0000a60b0}) %!s(*block.HCLAttribute=\u0026{0xc000829040 0xc0000a60b0})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-enable-backup",
			"legacy_rule_id": "",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-backup",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true",
				"https://cloud.google.com/sql/docs/mysql/backup-recovery/backups"
			],
			"description": "Resource 'google_sql_database_instance.instance1-fail' does not have backups enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\sql_database_instance.tf",
				"start_line": 1,
				"end_line": 24
			},
			"resource": "google_sql_database_instance.instance1-fail"
		},
		{
			"rule_id": "aws-cloudfront-enforce-https",
			"legacy_rule_id": "AWS020",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enforce-https",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy",
				"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-s3-origin.html"
			],
			"description": "Resource 'aws_cloudfront_distribution.s3_distribution' defines a CloudFront distribution that allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 42,
				"end_line": 42
			},
			"resource": "aws_cloudfront_distribution.s3_distribution"
		},
		{
			"rule_id": "aws-lambda-enable-tracing",
			"legacy_rule_id": "",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Without full tracing enabled, it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/lambda/enable-tracing",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Resource 'aws_lambda_function.morefail' uses default value for tracing_config.mode",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda.tf",
				"start_line": 13,
				"end_line": 24
			},
			"resource": "aws_lambda_function.morefail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'aws_rds_cluster.fail2' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 22,
				"end_line": 22
			},
			"resource": "aws_rds_cluster.fail2"
		},
		{
			"rule_id": "aws-s3-enable-versioning",
			"legacy_rule_id": "AWS077",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-versioning",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html"
			],
			"description": "Resource 'aws_s3_bucket.fail' has versioning block but is disabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 10,
				"end_line": 38
			},
			"resource": "aws_s3_bucket.fail"
		},
		{
			"rule_id": "aws-cloudfront-enable-logging",
			"legacy_rule_id": "AWS071",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config",
				"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html"
			],
			"description": "Resource 'aws_cloudfront_distribution.s3_distribution' does not have Access Logging configured",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 12,
				"end_line": 87
			},
			"resource": "aws_cloudfront_distribution.s3_distribution"
		},
		{
			"rule_id": "aws-iam-require-symbols-in-passwords",
			"legacy_rule_id": "AWS040",
			"rule_description": "IAM Password policy should have requirement for at least one symbol in the password.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/require-symbols-in-passwords",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not require a symbol in the password.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "aws-iam-require-uppercase-in-passwords",
			"legacy_rule_id": "AWS043",
			"rule_description": "IAM Password policy should have requirement for at least one uppercase character.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/require-uppercase-in-passwords",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not require an uppercase character in the password.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\use-cluster-labels copy.tf",
				"start_line": 9,
				"end_line": 25
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-sql-enable-pg-temp-file-logging",
			"legacy_rule_id": "",
			"rule_description": "Temporary file logging should be enabled for all temporary files.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Use of temporary files will not be logged",
			"resolution": "Enable temporary file logging for all files",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-pg-temp-file-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://postgresqlco.nf/doc/en/param/log_temp_files/"
			],
			"description": "Resource 'google_sql_database_instance.fail' has temporary file logging disabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-elasticache-enable-backup-retention",
			"legacy_rule_id": "AWS088",
			"rule_description": "Redis cluster should have backup retention turned on",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Without backups of the redis cluster recovery is made difficult",
			"resolution": "Configure snapshot retention for redis cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-backup-retention",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit",
				"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-automatic.html"
			],
			"description": "Resource 'aws_elasticache_cluster.default' should have snapshot retention specified",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_cluster.tf",
				"start_line": 6,
				"end_line": 12
			},
			"resource": "aws_elasticache_cluster.default"
		},
		{
			"rule_id": "digitalocean-spaces-versioning-enabled",
			"legacy_rule_id": "DIG006",
			"rule_description": "Spaces buckets should have versioning enabled",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental or malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/versioning-enabled",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/Versioning.html"
			],
			"description": "Resource 'digitalocean_spaces_bucket.fail' does not have versioning block specified",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\disable-force-destroy.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "digitalocean_spaces_bucket.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute-value",
			"legacy_rule_id": "GEN005",
			"rule_description": "The attribute has potentially sensitive data, passwords, tokens or keys in it",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive credentials may be compromised",
			"resolution": "Check the code for vulnerabilities and move to variables",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute-value",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'cloudstack_instance.web' includes potentially sensitive data. Password literal text",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\cloudstack\\compute\\cloudstack_instance.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "cloudstack_instance.web"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail-public' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail1' does not define the node config and does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail-flowlogs' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\EnableVPCFlowLogs.tf",
				"start_line": 11,
				"end_line": 89
			},
			"resource": "google_container_cluster.fail-flowlogs"
		},
		{
			"rule_id": "google-sql-no-cross-db-ownership-chaining",
			"legacy_rule_id": "",
			"rule_description": "Cross-database ownership chaining should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Unintended access to sensitive data",
			"resolution": "Disable cross database ownership chaining",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-cross-db-ownership-chaining",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.db' has cross-database ownership chaining enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\SQL-no-cross-db-ownership-chaining.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-cloudfront-use-secure-tls-policy",
			"legacy_rule_id": "AWS021",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/use-secure-tls-policy",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version",
				"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html"
			],
			"description": "Resource 'aws_cloudfront_distribution.s3_distribution' defines outdated SSL/TLS policies (not using TLSv1.2_2021)",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 81,
				"end_line": 81
			},
			"resource": "aws_cloudfront_distribution.s3_distribution"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ShieldedNodes.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "aws-ebs-enable-volume-encryption",
			"legacy_rule_id": "",
			"rule_description": "EBS volumes must be encrypted",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of EBS volumes",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ebs/enable-volume-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
			],
			"description": "Resource 'aws_ebs_volume.fail' uses default value for encrypted",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 15
			},
			"resource": "aws_ebs_volume.fail"
		},
		{
			"rule_id": "google-project-no-default-network",
			"legacy_rule_id": "",
			"rule_description": "Default network should not be created at project level",
			"rule_provider": "google",
			"rule_service": "project",
			"impact": "Exposure of internal infrastructure/services to public internet",
			"resolution": "Disable automatic default network creation",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/project/no-default-network",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project#auto_create_network"
			],
			"description": "Resource 'google_project.fail' does not have auto_create_network set to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project.tf",
				"start_line": 11,
				"end_line": 11
			},
			"resource": "google_project.fail"
		},
		{
			"rule_id": "aws-rds-encrypt-instance-storage-data",
			"legacy_rule_id": "AWS052",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/encrypt-instance-storage-data",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"
			],
			"description": "Resource 'aws_db_instance.fail' has no storage encryption defined.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 14,
				"end_line": 18
			},
			"resource": "aws_db_instance.fail"
		},
		{
			"rule_id": "aws-rds-no-public-db-access",
			"legacy_rule_id": "AWS011",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Resource 'aws_db_instance.fail' is exposed publicly.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 16,
				"end_line": 16
			},
			"resource": "aws_db_instance.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'provider.aws' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_2.tf",
				"start_line": 3,
				"end_line": 3
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-pool-uses-cos.tf",
				"start_line": 8,
				"end_line": 24
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-ip-aliasing",
			"legacy_rule_id": "",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-ip-aliasing",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Resource 'google_container_cluster.fail' has IP aliasing disabled.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-athena-no-encryption-override",
			"legacy_rule_id": "AWS060",
			"rule_description": "Athena workgroups should enforce configuration to prevent client disabling encryption",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Clients can ignore encryption requirements",
			"resolution": "Enforce the configuration to prevent client overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/no-encryption-override",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration",
				"https://docs.aws.amazon.com/athena/latest/ug/manage-queries-control-costs-with-workgroups.html"
			],
			"description": "Resource 'aws_athena_workgroup.fail' has enforce_workgroup_configuration set to false.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "aws_athena_workgroup.fail"
		},
		{
			"rule_id": "aws-config-aggregate-all-regions",
			"legacy_rule_id": "AWS085",
			"rule_description": "Config configuration aggregator should be using all regions for source",
			"rule_provider": "aws",
			"rule_service": "config",
			"impact": "Sources that aren't covered by the aggregator are not include in the configuration",
			"resolution": "Set the aggregator to cover all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/config/aggregate-all-regions",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions",
				"https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html"
			],
			"description": "Resource 'aws_config_configuration_aggregator.organization' should have account aggregation sources to all regions",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\config\\config_configuration_aggregator.tf",
				"start_line": 7,
				"end_line": 15
			},
			"resource": "aws_config_configuration_aggregator.organization"
		},
		{
			"rule_id": "aws-kms-auto-rotate-keys",
			"legacy_rule_id": "AWS019",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kms/auto-rotate-keys",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation",
				"https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html"
			],
			"description": "Resource 'aws_kms_key.fail_0' does not have KMS Key auto-rotation enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms.tf",
				"start_line": 7,
				"end_line": 32
			},
			"resource": "aws_kms_key.fail_0"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not define the node config and does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail1] 0xc000400210 {F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf {2 1 1} {2 44 44}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf {2 1 1} {2 9 9}} [{F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf {2 10 10} {2 36 36}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf {2 37 37} {2 44 44}}]}) %!s(*block.Context=\u0026{0xc0008398f0 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc0004a1ad0 0xc0000a6110 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc0006ad7c0 0xc0000a6100}) %!s(*block.HCLAttribute=\u0026{0xc0006ad860 0xc0000a6100}) %!s(*block.HCLAttribute=\u0026{0xc0006ad900 0xc0000a6100}) %!s(*block.HCLAttribute=\u0026{0xc0006ad9a0 0xc0000a6100}) %!s(*block.HCLAttribute=\u0026{0xc0006ada40 0xc0000a6100}) %!s(*block.HCLAttribute=\u0026{0xc0006ad720 0xc0000a6100})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail-public' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-logging.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-iam-require-lowercase-in-passwords",
			"legacy_rule_id": "AWS042",
			"rule_description": "IAM Password policy should have requirement for at least one lowercase character.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/require-lowercase-in-passwords",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not require a lowercase character in the password.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'aws_redshift_cluster.fail' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 21,
				"end_line": 21
			},
			"resource": "aws_redshift_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-master-networks.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-api-gateway-use-secure-tls-policy",
			"legacy_rule_id": "AWS025",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/use-secure-tls-policy",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy",
				"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html"
			],
			"description": "Resource 'aws_api_gateway_domain_name.fail' defines outdated SSL/TLS policies (not using TLS_1_2).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_domain_name.tf",
				"start_line": 6,
				"end_line": 6
			},
			"resource": "aws_api_gateway_domain_name.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\no-public-control-plane.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail-public' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "aws-api-gateway-enable-access-logging",
			"legacy_rule_id": "AWS061",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-access-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings",
				"https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html"
			],
			"description": "Resource 'aws_apigatewayv2_stage.fail' is missing access log settings block.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\apigatewayv2_stage.tf",
				"start_line": 7,
				"end_line": 10
			},
			"resource": "aws_apigatewayv2_stage.fail"
		},
		{
			"rule_id": "aws-athena-no-encryption-override",
			"legacy_rule_id": "AWS060",
			"rule_description": "Athena workgroups should enforce configuration to prevent client disabling encryption",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Clients can ignore encryption requirements",
			"resolution": "Enforce the configuration to prevent client overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/no-encryption-override",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration",
				"https://docs.aws.amazon.com/athena/latest/ug/manage-queries-control-costs-with-workgroups.html"
			],
			"description": "Resource 'aws_athena_workgroup.fail' has enforce_workgroup_configuration set to false.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\no-encryption-override.tf",
				"start_line": 12,
				"end_line": 12
			},
			"resource": "aws_athena_workgroup.fail"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail1' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "aws-ssm-secret-use-customer-key",
			"legacy_rule_id": "AWS095",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ssm/secret-use-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id",
				"https://docs.aws.amazon.com/kms/latest/developerguide/services-secrets-manager.html#asm-encrypt"
			],
			"description": "Resource 'aws_secretsmanager_secret.fail' does not use CMK",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\secret_mamager\\secretsmanager_secret.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "aws_secretsmanager_secret.fail"
		},
		{
			"rule_id": "general-secrets-sensitive-in-attribute",
			"legacy_rule_id": "GEN003",
			"rule_description": "Potentially sensitive data stored in block attribute.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Block attribute could be leaking secrets",
			"resolution": "Don't include sensitive data in blocks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/general/secrets/sensitive-in-attribute",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Block 'provider.aws' includes a potentially sensitive attribute which is defined within the project.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 11,
				"end_line": 11
			},
			"resource": "provider.aws"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail-flowlogs' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\EnableVPCFlowLogs.tf",
				"start_line": 11,
				"end_line": 89
			},
			"resource": "google_container_cluster.fail-flowlogs"
		},
		{
			"rule_id": "aws-msk-enable-logging",
			"legacy_rule_id": "",
			"rule_description": "Ensure MSK Cluster logging is enabled",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/msk/enable-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#"
			],
			"description": "Resource 'aws_msk_cluster.name' does not have any broker logging enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 11,
				"end_line": 20
			},
			"resource": "aws_msk_cluster.name"
		},
		{
			"rule_id": "aws-rds-no-public-db-access",
			"legacy_rule_id": "AWS011",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Resource 'aws_db_instance.default' is exposed publicly.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 35,
				"end_line": 35
			},
			"resource": "aws_db_instance.default"
		},
		{
			"rule_id": "aws-s3-enable-bucket-encryption",
			"legacy_rule_id": "AWS017",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/enable-bucket-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-encryption.html"
			],
			"description": "Resource 'aws_s3_bucket.fail' defines an unencrypted S3 bucket (missing server_side_encryption_configuration block).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 10,
				"end_line": 38
			},
			"resource": "aws_s3_bucket.fail"
		},
		{
			"rule_id": "aws-redshift-add-description-to-security-group",
			"legacy_rule_id": "",
			"rule_description": "Missing description for security group/security group rule.",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups and rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/redshift/add-description-to-security-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule",
				"https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html"
			],
			"description": "Resource 'aws_redshift_security_group.fail' should include a description for auditing purposes.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_security_group.tf",
				"start_line": 8,
				"end_line": 18
			},
			"resource": "aws_redshift_security_group.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\IntegrityMonitoring.tf",
				"start_line": 1,
				"end_line": 78
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-private-cluster.tf",
				"start_line": 2,
				"end_line": 18
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "aws-api-gateway-enable-cache-encryption",
			"legacy_rule_id": "",
			"rule_description": "API Gateway must have cache enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Data stored in the cache that is unencrypted may be vulnerable to compromise",
			"resolution": "Enable cache encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-cache-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted"
			],
			"description": "Resource 'aws_api_gateway_method_settings.fail' does not have settings.cache_data_encrypted set to true",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_method_settings.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "aws_api_gateway_method_settings.fail"
		},
		{
			"rule_id": "aws-efs-enable-at-rest-encryption",
			"legacy_rule_id": "AWS048",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/efs/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system",
				"https://docs.aws.amazon.com/efs/latest/ug/encryption.html"
			],
			"description": "Resource 'aws_efs_file_system.sharedstore' actively does not have encryption applied.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\efs\\efs.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "aws_efs_file_system.sharedstore"
		},
		{
			"rule_id": "aws-elbv2-http-not-used",
			"legacy_rule_id": "AWS004",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elbv2",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elbv2/http-not-used",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener",
				"https://www.cloudflare.com/en-gb/learning/ssl/why-is-http-not-secure/"
			],
			"description": "Resource 'aws_alb_listener.fail' uses plain HTTP instead of HTTPS.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb_listener.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "aws_alb_listener.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-kms-rotate-kms-keys",
			"legacy_rule_id": "",
			"rule_description": "KMS keys should be rotated at least every 90 days",
			"rule_provider": "google",
			"rule_service": "kms",
			"impact": "Exposure is greater if the same keys are used over a long period",
			"resolution": "Set key rotation period to 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/kms/rotate-kms-keys",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/kms_crypto_key#rotation_period"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_kms_crypto_key fails] 0xc00062f130 {F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf {10 1 282} {10 41 322}} {F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf {10 1 282} {10 9 290}} [{F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf {10 10 291} {10 33 314}} {F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf {10 34 315} {10 41 322}}]}) %!s(*block.Context=\u0026{0xc00073a6d8 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc00053af70 0xc0000a7400 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc000688960 0xc0000a73d0}) %!s(*block.HCLAttribute=\u0026{0xc000688820 0xc0000a73d0}) %!s(*block.HCLAttribute=\u0026{0xc0006888c0 0xc0000a73d0})]}' has a key rotation of greater than 90 days.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf",
				"start_line": 10,
				"end_line": 18
			},
			"resource": "google_kms_crypto_key.fails"
		},
		{
			"rule_id": "oracle-compute-no-public-ip",
			"legacy_rule_id": "OCI001",
			"rule_description": "Compute instance requests an IP reservation from a public pool",
			"rule_provider": "oracle",
			"rule_service": "compute",
			"impact": "The compute instance has the ability to be reached from outside",
			"resolution": "Reconsider the use of an public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/oracle/compute/no-public-ip",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance"
			],
			"description": "Resource 'opc_compute_ip_address_reservation.fail' is using an IP from a public IP pool",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\oracle\\compute\\compute_ip_address_reservation.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "opc_compute_ip_address_reservation.fail"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail' does not define the node config and does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-pool-uses-cos.tf",
				"start_line": 8,
				"end_line": 24
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\node-metadata-security.tf",
				"start_line": 3,
				"end_line": 9
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 31,
				"end_line": 31
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-neptune-enable-log-export",
			"legacy_rule_id": "",
			"rule_description": "Nepture logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Limited visibility of audit trail for changes to Neptune",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/neptune/enable-log-export",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports"
			],
			"description": "Resource 'aws_neptune_cluster.default' uses default value for enable_cloudwatch_logs_exports",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 10,
				"end_line": 20
			},
			"resource": "aws_neptune_cluster.default"
		},
		{
			"rule_id": "aws-vpc-no-public-egress-sg",
			"legacy_rule_id": "AWS009",
			"rule_description": "An inline egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The port is exposed for egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sg",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Resource 'aws_security_group.bad_example' defines a fully open egress security group.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 37,
				"end_line": 37
			},
			"resource": "aws_security_group.bad_example"
		},
		{
			"rule_id": "aws-vpc-no-public-egress-sg",
			"legacy_rule_id": "AWS009",
			"rule_description": "An inline egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The port is exposed for egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-egress-sg",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Resource 'aws_security_group.bad_example' defines a fully open egress security group.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 32,
				"end_line": 32
			},
			"resource": "aws_security_group.bad_example"
		},
		{
			"rule_id": "google-iam-no-user-granted-permissions",
			"legacy_rule_id": "GCP011",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-user-granted-permissions",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members",
				"https://cloud.google.com/iam/docs/overview#permissions",
				"https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy"
			],
			"description": "'google_project_iam_member.project' grants IAM to a user object. It is recommended to manage user permissions with groups.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\RoleServiceAccountUser.tf",
				"start_line": 7,
				"end_line": 11
			},
			"resource": "google_project_iam_member.project"
		},
		{
			"rule_id": "google-sql-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html"
			],
			"description": "Resource 'google_sql_database_instance.fail' authorizes access from the public internet",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 35,
				"end_line": 35
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-sql-pg-log-connections",
			"legacy_rule_id": "",
			"rule_description": "Ensure that logging of connections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable connection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/pg-log-connections",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.postgresql.org/docs/13/runtime-config-logging.html#GUC-LOG-CONNECTIONS"
			],
			"description": "Resource 'google_sql_database_instance.fail' is not configured to log connections",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 19,
				"end_line": 77
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "cloudstack-compute-no-sensitive-info",
			"legacy_rule_id": "",
			"rule_description": "No sensitive data stored in user_data",
			"rule_provider": "cloudstack",
			"rule_service": "compute",
			"impact": "Sensitive credentials in the user data can be leaked",
			"resolution": "Don't use sensitive data in the user data section",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/cloudstack/compute/no-sensitive-info",
				"https://registry.terraform.io/providers/hashicorp/cloudstack/latest/docs/resources/instance#"
			],
			"description": "Resource 'cloudstack_instance.web' has user_data_base64 with sensitive data.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\cloudstack\\compute\\cloudstack_instance.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "cloudstack_instance.web"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-stackdriver-monitoring.tf",
				"start_line": 3,
				"end_line": 19
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "aws-api-gateway-enable-tracing",
			"legacy_rule_id": "",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/api-gateway/enable-tracing",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "Resource 'aws_api_gateway_stage.fail' uses default value for xray_tracing_enabled",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api_gateway_rest_api.tf",
				"start_line": 13,
				"end_line": 15
			},
			"resource": "aws_api_gateway_stage.fail"
		},
		{
			"rule_id": "aws-autoscaling-no-public-ip",
			"legacy_rule_id": "AWS012",
			"rule_description": "A resource has a public IP address.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The instance or configuration is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/autoscaling/no-public-ip",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html"
			],
			"description": "Resource 'aws_launch_configuration.fail' has a public IP address associated.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\launch_configuration.tf",
				"start_line": 12,
				"end_line": 12
			},
			"resource": "aws_launch_configuration.fail"
		},
		{
			"rule_id": "aws-eks-no-public-cluster-access-to-cidr",
			"legacy_rule_id": "AWS068",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/no-public-cluster-access-to-cidr",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config",
				"https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html"
			],
			"description": "Resource 'aws_eks_cluster.fail' has public access cidr explicitly set to wide open",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 18,
				"end_line": 18
			},
			"resource": "aws_eks_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail1' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\shielded.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.fail' explicitly does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerCrossDBOwnershipChaining.tf",
				"start_line": 37,
				"end_line": 37
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-storage-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Public exposure of sensitive data.",
			"resolution": "Restrict public access to the bucket.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/storage/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members",
				"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b"
			],
			"description": "Resource 'google_storage_bucket_iam_binding.binding' allows public access via members attribute.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket_iam_binding.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "google_storage_bucket_iam_binding.binding"
		},
		{
			"rule_id": "aws-dynamodb-enable-recovery",
			"legacy_rule_id": "AWS086",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/dynamodb/enable-recovery",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery",
				"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/PointInTimeRecovery.html"
			],
			"description": "Resource 'aws_dynamodb_table.default' doesn't have point in time recovery",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 35
			},
			"resource": "aws_dynamodb_table.default"
		},
		{
			"rule_id": "aws-s3-block-public-acls",
			"legacy_rule_id": "AWS074",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-acls",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls",
				"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html"
			],
			"description": "Resource 'aws_s3_bucket_public_access_block.fail' does not specify block_public_acls, defaults to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "aws_s3_bucket_public_access_block.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\shielded.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "aws-rds-no-public-db-access",
			"legacy_rule_id": "AWS011",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-public-db-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Resource 'aws_rds_cluster_instance.fail' is exposed publicly.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster_instance.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "aws_rds_cluster_instance.fail"
		},
		{
			"rule_id": "google-gke-enforce-pod-security-policy",
			"legacy_rule_id": "GCP009",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enforce-pod-security-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-enable-backup",
			"legacy_rule_id": "",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-backup",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true",
				"https://cloud.google.com/sql/docs/mysql/backup-recovery/backups"
			],
			"description": "Resource 'google_sql_database_instance.db' does not have backups enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\mysql-no-local-infile.tf",
				"start_line": 3,
				"end_line": 13
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "digitalocean-loadbalancing-enforce-https",
			"legacy_rule_id": "DIG004",
			"rule_description": "The load balancer forwarding rule is using an insecure protocol as an entrypoint",
			"rule_provider": "digitalocean",
			"rule_service": "loadbalancing",
			"impact": "Your inbound traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/loadbalancing/enforce-https",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/loadbalancer",
				"https://docs.digitalocean.com/products/networking/load-balancers/"
			],
			"description": "Resource 'digitalocean_loadbalancer.fail' uses plain HTTP instead of HTTPS.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\loadbalancing\\enforce-https.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "digitalocean_loadbalancer.fail"
		},
		{
			"rule_id": "google-gke-enable-ip-aliasing",
			"legacy_rule_id": "",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-ip-aliasing",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Resource 'google_container_cluster.fail-public' has IP aliasing disabled.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail] 0xc000491a20 {F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf {23 1 1486} {23 43 1528}} {F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf {23 1 1486} {23 9 1494}} [{F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf {23 10 1495} {23 36 1521}} {F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf {23 37 1522} {23 43 1528}}]}) %!s(*block.Context=\u0026{0xc00073a348 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc000345040 0xc0000a6e90 \u003cnil\u003e false 0 [0xc0000c0de0] []})] [%!s(*block.HCLAttribute=\u0026{0xc0004406e0 0xc0000a6e00}) %!s(*block.HCLAttribute=\u0026{0xc000440780 0xc0000a6e00}) %!s(*block.HCLAttribute=\u0026{0xc000440820 0xc0000a6e00})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-iam-set-minimum-password-length",
			"legacy_rule_id": "AWS039",
			"rule_description": "IAM Password policy should have minimum password length of 14 or more characters.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/set-minimum-password-length",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not have a minimum password length set.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "aws-rds-no-classic-resources",
			"legacy_rule_id": "AWS003",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
			],
			"description": "Resource 'aws_db_security_group.fail' uses EC2 Classic. Use a VPC instead.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_security_group.tf",
				"start_line": 8,
				"end_line": 9
			},
			"resource": "aws_db_security_group.fail"
		},
		{
			"rule_id": "aws-documentdb-encryption-customer-key",
			"legacy_rule_id": "",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/documentdb/encryption-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Resource 'aws_docdb_cluster.examplea' does not use CMK",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 13,
				"end_line": 31
			},
			"resource": "aws_docdb_cluster.examplea"
		},
		{
			"rule_id": "aws-eks-no-public-cluster-access",
			"legacy_rule_id": "AWS069",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/eks/no-public-cluster-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access",
				"https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
			],
			"description": "Resource 'aws_eks_cluster.fail' has public access is explicitly set to enabled",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 17,
				"end_line": 17
			},
			"resource": "aws_eks_cluster.fail"
		},
		{
			"rule_id": "aws-elastic-service-enable-domain-encryption",
			"legacy_rule_id": "AWS031",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-service",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-service/enable-domain-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest",
				"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' defines an unencrypted Elasticsearch domain (enabled attribute set to false).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 29,
				"end_line": 29
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_node_pool.tf",
				"start_line": 9,
				"end_line": 27
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "google-sql-no-contained-db-auth",
			"legacy_rule_id": "",
			"rule_description": "Contained database authentication should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Access can be granted without knowledge of the database administrator",
			"resolution": "Disable contained database authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-contained-db-auth",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.db' has contained database authentication enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\SQL-no-cross-db-ownership-chaining.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-cloudwatch-log-group-customer-key",
			"legacy_rule_id": "AWS089",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudwatch/log-group-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id",
				"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html"
			],
			"description": "Resource 'aws_cloudwatch_log_group.logs' is only using default encryption",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudwatch\\cloudwatch.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "aws_cloudwatch_log_group.logs"
		},
		{
			"rule_id": "aws-s3-block-public-policy",
			"legacy_rule_id": "AWS076",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/block-public-policy",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy",
				"https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html"
			],
			"description": "Resource 'aws_s3_bucket_public_access_block.fail' does not specify block_public_policy, defaults to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "aws_s3_bucket_public_access_block.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.fail' does not have management.auto_repair set to true",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_node_pool.tf",
				"start_line": 25,
				"end_line": 25
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-ebs-encryption-customer-key",
			"legacy_rule_id": "",
			"rule_description": "EBS volume encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/ebs/encryption-customer-key",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
			],
			"description": "Resource 'aws_ebs_volume.fail' does not use CMK",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 15
			},
			"resource": "aws_ebs_volume.fail"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-sql-no-contained-db-auth",
			"legacy_rule_id": "",
			"rule_description": "Contained database authentication should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Access can be granted without knowledge of the database administrator",
			"resolution": "Disable contained database authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-contained-db-auth",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/contained-database-authentication-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.tfer--general-002D-sqlserver12' has contained database authentication explicitly enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerNoPublicIP.tf",
				"start_line": 29,
				"end_line": 29
			},
			"resource": "google_sql_database_instance.tfer--general-002D-sqlserver12"
		},
		{
			"rule_id": "aws-cloudtrail-enable-log-validation",
			"legacy_rule_id": "AWS064",
			"rule_description": "Cloudtrail log validation should be enabled to prevent tampering of log data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Illicit activity could be removed from the logs",
			"resolution": "Turn on log validation for Cloudtrail",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudtrail/enable-log-validation",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation",
				"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-log-file-validation-intro.html"
			],
			"description": "Resource 'aws_cloudtrail.fail' does not enable log file validation.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 12,
				"end_line": 16
			},
			"resource": "aws_cloudtrail.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-pool-uses-cos",
			"legacy_rule_id": "",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS_CONTAINERD is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS_CONTAINERD image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-pool-uses-cos",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#image_type",
				"https://cloud.google.com/kubernetes-engine/docs/concepts/node-images"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for node_config.image_type",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\use-cluster-labels copy.tf",
				"start_line": 9,
				"end_line": 25
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-iam-no-user-granted-permissions",
			"legacy_rule_id": "GCP011",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-user-granted-permissions",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members",
				"https://cloud.google.com/iam/docs/overview#permissions",
				"https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy"
			],
			"description": "'google_project_iam_member.fail' grants IAM to a user object. It is recommended to manage user permissions with groups.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\no-user-granted-permissions.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "google_project_iam_member.fail"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.fail' does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySqlLocalInfileOff.tf",
				"start_line": 15,
				"end_line": 34
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-storage-enable-ubla",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/storage/enable-ubla",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access",
				"https://cloud.google.com/storage/docs/uniform-bucket-level-access",
				"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b"
			],
			"description": "Resource 'google_storage_bucket.static-site' does not have uniform_bucket_level_access enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\CloudStorageSelfLogging.tf",
				"start_line": 2,
				"end_line": 9
			},
			"resource": "google_storage_bucket.static-site"
		},
		{
			"rule_id": "openstack-fw-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "A firewall rule allows traffic from/to the public internet",
			"rule_provider": "openstack",
			"rule_service": "fw",
			"impact": "Exposure of infrastructure to the public internet",
			"resolution": "Employ more restrictive firewall rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/openstack/fw/no-public-access",
				"https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [openstack_fw_rule_v1 fail] 0xc0006b3970 {F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf {7 1 84} {7 39 122}} {F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf {7 1 84} {7 9 92}} [{F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf {7 10 93} {7 32 115}} {F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf {7 33 116} {7 39 122}}]}) %!s(*block.Context=\u0026{0xc00073ae28 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [] [%!s(*block.HCLAttribute=\u0026{0xc0003c3a40 0xc0000a7e10}) %!s(*block.HCLAttribute=\u0026{0xc0003c2e60 0xc0000a7e10}) %!s(*block.HCLAttribute=\u0026{0xc0003c2fa0 0xc0000a7e10}) %!s(*block.HCLAttribute=\u0026{0xc0003c3040 0xc0000a7e10}) %!s(*block.HCLAttribute=\u0026{0xc0003c37c0 0xc0000a7e10}) %!s(*block.HCLAttribute=\u0026{0xc0003c3860 0xc0000a7e10})]}' defines a firewall rule with no restriction on destination IP",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf",
				"start_line": 7,
				"end_line": 14
			},
			"resource": "openstack_fw_rule_v1.fail"
		},
		{
			"rule_id": "aws-mq-enable-audit-logging",
			"legacy_rule_id": "",
			"rule_description": "MQ Broker should have audit logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without audit logging it is difficult to trace activity in the MQ broker",
			"resolution": "Enable audit logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/mq/enable-audit-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit"
			],
			"description": "Resource 'aws_mq_broker.fail' does not have logs.audit set to true",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\enable-general-logging.tf",
				"start_line": 28,
				"end_line": 28
			},
			"resource": "aws_mq_broker.fail"
		},
		{
			"rule_id": "digitalocean-spaces-acl-no-public-read",
			"legacy_rule_id": "DIG005",
			"rule_description": "Spaces bucket or bucket object has public read acl set",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "The contents of the space can be accessed publicly",
			"resolution": "Apply a more restrictive ACL",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/digitalocean/spaces/acl-no-public-read",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl",
				"https://docs.digitalocean.com/reference/api/spaces-api/#access-control-lists-acls"
			],
			"description": "Resource 'digitalocean_spaces_bucket_object.index' has a publicly readable acl.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\acl-no-public-read.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "digitalocean_spaces_bucket_object.index"
		},
		{
			"rule_id": "google-gke-enable-network-policy",
			"legacy_rule_id": "",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-network-policy",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for network_policy.enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\ReleaseChannel.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "aws-kinesis-enable-in-transit-encryption",
			"legacy_rule_id": "AWS024",
			"rule_description": "Kinesis stream is unencrypted.",
			"rule_provider": "aws",
			"rule_service": "kinesis",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/kinesis/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream#encryption_type",
				"https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html"
			],
			"description": "Resource 'aws_kinesis_stream.fail' defines an unencrypted Kinesis Stream.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kinesis\\kinesis_stream.tf",
				"start_line": 8,
				"end_line": 11
			},
			"resource": "aws_kinesis_stream.fail"
		},
		{
			"rule_id": "google-gke-enable-auto-upgrade",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-upgrade",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Resource 'google_container_node_pool.primary_preemptible_nodes' uses default value for management.auto_upgrade",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-private-cluster.tf",
				"start_line": 2,
				"end_line": 18
			},
			"resource": "google_container_node_pool.primary_preemptible_nodes"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail-public' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-gke-use-cluster-labels",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-cluster-labels",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Resource 'google_container_cluster.fail' does not use resource_labels",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 23,
				"end_line": 38
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-no-cross-db-ownership-chaining",
			"legacy_rule_id": "",
			"rule_description": "Cross-database ownership chaining should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Unintended access to sensitive data",
			"resolution": "Disable cross database ownership chaining",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-cross-db-ownership-chaining",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://docs.microsoft.com/en-us/sql/database-engine/configure-windows/cross-db-ownership-chaining-server-configuration-option?view=sql-server-ver15"
			],
			"description": "Resource 'google_sql_database_instance.fail' has cross-database ownership chaining enabled by default",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerContainedDBAuthentication.tf",
				"start_line": 2,
				"end_line": 53
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-sql-no-public-access",
			"legacy_rule_id": "",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/no-public-access",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://www.cloudconformity.com/knowledge-base/gcp/CloudSQL/publicly-accessible-cloud-sql-instances.html"
			],
			"description": "Resource 'google_sql_database_instance.fail' has a public ipv4 address assigned by default",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySqlLocalInfileOff.tf",
				"start_line": 15,
				"end_line": 34
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "oracle-compute-no-public-ip",
			"legacy_rule_id": "OCI001",
			"rule_description": "Compute instance requests an IP reservation from a public pool",
			"rule_provider": "oracle",
			"rule_service": "compute",
			"impact": "The compute instance has the ability to be reached from outside",
			"resolution": "Reconsider the use of an public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/oracle/compute/no-public-ip",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance"
			],
			"description": "Resource 'opc_compute_ip_address_reservation.fail' is using an IP from a public IP pool",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\oracle\\compute\\opc_compute_ip_address_reservation.tf",
				"start_line": 3,
				"end_line": 3
			},
			"resource": "opc_compute_ip_address_reservation.fail"
		},
		{
			"rule_id": "aws-elastic-search-enforce-https",
			"legacy_rule_id": "AWS033",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enforce-https",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https",
				"https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' defines an Elasticsearch domain with plaintext traffic (enabled attribute set to false).",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 17,
				"end_line": 41
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "aws-s3-no-public-access-with-acl",
			"legacy_rule_id": "AWS001",
			"rule_description": "S3 Bucket has an ACL defined which allows public access.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The contents of the bucket can be accessed publicly",
			"resolution": "Apply a more restrictive bucket ACL",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-access-with-acl",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket",
				"https://aws.amazon.com/premiumsupport/knowledge-center/secure-s3-resources/"
			],
			"description": "Resource 'aws_s3_bucket.fail' has an ACL which allows public access.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 11
			},
			"resource": "aws_s3_bucket.fail"
		},
		{
			"rule_id": "aws-vpc-add-description-to-security-group",
			"legacy_rule_id": "AWS018",
			"rule_description": "Missing description for security group/security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups and rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/add-description-to-security-group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule",
				"https://www.cloudconformity.com/knowledge-base/aws/EC2/security-group-rules-description.html"
			],
			"description": "Resource 'aws_security_group.bad_example' should include a description for auditing purposes.",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 16,
				"end_line": 39
			},
			"resource": "aws_security_group.bad_example"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-logging",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-logging",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Resource 'google_container_cluster.fail1' does not have logging_service set to logging.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 2,
				"end_line": 75
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-enable-stackdriver-monitoring",
			"legacy_rule_id": "",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-stackdriver-monitoring",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Resource 'google_container_cluster.fail' does not have monitoring_service set to monitoring.googleapis.com/kubernetes",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster.tf",
				"start_line": 32,
				"end_line": 32
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail1' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail1' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\shielded.tf",
				"start_line": 2,
				"end_line": 74
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "google-sql-enable-backup",
			"legacy_rule_id": "",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/enable-backup",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true",
				"https://cloud.google.com/sql/docs/mysql/backup-recovery/backups"
			],
			"description": "Resource 'google_sql_database_instance.db' does not have backups enabled.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\SQL-no-cross-db-ownership-chaining.tf",
				"start_line": 2,
				"end_line": 6
			},
			"resource": "google_sql_database_instance.db"
		},
		{
			"rule_id": "aws-athena-enable-at-rest-encryption",
			"legacy_rule_id": "AWS059",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/athena/enable-at-rest-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration",
				"https://docs.aws.amazon.com/athena/latest/ug/encryption.html"
			],
			"description": "Resource 'aws_athena_database.fail' missing encryption configuration block.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-database.tf",
				"start_line": 7,
				"end_line": 9
			},
			"resource": "aws_athena_database.fail"
		},
		{
			"rule_id": "aws-rds-backup-retention-specified",
			"legacy_rule_id": "AWS091",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/backup-retention-specified",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period",
				"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupRetention"
			],
			"description": "Resource 'aws_db_instance.default' has backup retention period set to a low value",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 31,
				"end_line": 31
			},
			"resource": "aws_db_instance.default"
		},
		{
			"rule_id": "google-gke-enable-auto-repair",
			"legacy_rule_id": "",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-auto-repair",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Resource 'google_container_node_pool.fail' uses default value for management.auto_repair",
			"severity": "LOW",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\enable-auto-upgrade.tf",
				"start_line": 2,
				"end_line": 20
			},
			"resource": "google_container_node_pool.fail"
		},
		{
			"rule_id": "aws-vpc-no-default-vpc",
			"legacy_rule_id": "AWS082",
			"rule_description": "AWS best practice to not use the default VPC for workflows",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The default VPC does not have critical security features applied",
			"resolution": "Create a non-default vpc for resources to be created in",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-default-vpc",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc",
				"https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html"
			],
			"description": "Resource 'aws_default_vpc.default' should not exist",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\default_vpc.tf",
				"start_line": 8,
				"end_line": 12
			},
			"resource": "aws_default_vpc.default"
		},
		{
			"rule_id": "google-gke-use-service-account",
			"legacy_rule_id": "GCP012",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/use-service-account",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa"
			],
			"description": "Resource 'google_container_cluster.fail1' does not override the default service account. It is recommended to use a minimally privileged service account to run your GKE cluster.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 2,
				"end_line": 75
			},
			"resource": "google_container_cluster.fail1"
		},
		{
			"rule_id": "aws-elb-drop-invalid-headers",
			"legacy_rule_id": "AWS083",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elb/drop-invalid-headers",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields",
				"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html"
			],
			"description": "Resource 'aws_alb.fail' sets the drop_invalid_header_fields to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 23,
				"end_line": 23
			},
			"resource": "aws_alb.fail"
		},
		{
			"rule_id": "aws-iam-require-numbers-in-passwords",
			"legacy_rule_id": "AWS041",
			"rule_description": "IAM Password policy should have requirement for at least one number in the password.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/iam/require-numbers-in-passwords",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy",
				"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details"
			],
			"description": "Resource 'aws_iam_account_password_policy.fail' does not require a number in the password.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\aws_iam_account_password_policy.tf",
				"start_line": 11,
				"end_line": 12
			},
			"resource": "aws_iam_account_password_policy.fail"
		},
		{
			"rule_id": "aws-s3-no-public-buckets",
			"legacy_rule_id": "AWS075",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/s3/no-public-buckets",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡",
				"https://docs.aws.amazon.com/AmazonS3/latest/dev-retired/access-control-block-public-access.html"
			],
			"description": "Resource 'aws_s3_bucket_public_access_block.fail' does not specify restrict_public_buckets, defaults to false",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			},
			"resource": "aws_s3_bucket_public_access_block.fail"
		},
		{
			"rule_id": "google-gke-enable-private-cluster",
			"legacy_rule_id": "",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-private-cluster",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Resource 'google_container_cluster.fail' uses default value for private_cluster_config.enable_private_nodes",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\RBAC.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail-flowlogs' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\EnableVPCFlowLogs.tf",
				"start_line": 11,
				"end_line": 89
			},
			"resource": "google_container_cluster.fail-flowlogs"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.tfer--general-002D-sqlserver12' explicitly does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerNoPublicIP.tf",
				"start_line": 39,
				"end_line": 39
			},
			"resource": "google_sql_database_instance.tfer--general-002D-sqlserver12"
		},
		{
			"rule_id": "aws-elastic-search-enable-logging",
			"legacy_rule_id": "AWS070",
			"rule_description": "AWS ES Domain should have logging enabled",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elastic-search/enable-logging",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_publishing_options"
			],
			"description": "Resource 'aws_elasticsearch_domain.node_to_node_encryption_disabled' is missing 'AUDIT_LOGS` in one of the `log_publishing_options`-`log_type` attributes so audit log is not enabled",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 17,
				"end_line": 41
			},
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled"
		},
		{
			"rule_id": "aws-vpc-no-excessive-port-access",
			"legacy_rule_id": "AWS050",
			"rule_description": "An ingress Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "All ports exposed for egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-excessive-port-access",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port",
				"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
			],
			"description": "Resource 'aws_network_acl_rule.fail' defines a fully open ingress Network ACL rule with ALL ports open.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\network_acl_rule.tf",
				"start_line": 13,
				"end_line": 13
			},
			"resource": "aws_network_acl_rule.fail"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail] 0xc0002fb130 {F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf {2 1 1} {2 43 43}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf {2 1 1} {2 9 9}} [{F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf {2 10 10} {2 36 36}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf {2 37 37} {2 43 43}}]}) %!s(*block.Context=\u0026{0xc000839d58 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [] [%!s(*block.HCLAttribute=\u0026{0xc0009fca00 0xc0000a6600}) %!s(*block.HCLAttribute=\u0026{0xc0009fcaa0 0xc0000a6600}) %!s(*block.HCLAttribute=\u0026{0xc0009fcd20 0xc0000a6600}) %!s(*block.HCLAttribute=\u0026{0xc0009fc1e0 0xc0000a6600}) %!s(*block.HCLAttribute=\u0026{0xc0009fc640 0xc0000a6600}) %!s(*block.HCLAttribute=\u0026{0xc0009fc8c0 0xc0000a6600})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\PrivateNodes.tf",
				"start_line": 2,
				"end_line": 10
			},
			"resource": "google_container_cluster.fail"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.fail' explicitly does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServerContainedDBAuthentication.tf",
				"start_line": 37,
				"end_line": 37
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.fail' explicitly does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 27,
				"end_line": 27
			},
			"resource": "google_sql_database_instance.fail"
		},
		{
			"rule_id": "aws-cloudfront-enable-waf",
			"legacy_rule_id": "AWS045",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/cloudfront/enable-waf",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id",
				"https://docs.aws.amazon.com/waf/latest/developerguide/cloudfront-features.html"
			],
			"description": "Resource 'aws_cloudfront_distribution.s3_distribution' does not have a WAF in front of it.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 12,
				"end_line": 87
			},
			"resource": "aws_cloudfront_distribution.s3_distribution"
		},
		{
			"rule_id": "aws-vpc-no-public-ingress-sg",
			"legacy_rule_id": "AWS008",
			"rule_description": "An inline ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/vpc/no-public-ingress-sg",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Resource 'aws_security_group.bad_example' defines a fully open ingress security group.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\security_group.tf",
				"start_line": 20,
				"end_line": 20
			},
			"resource": "aws_security_group.bad_example"
		},
		{
			"rule_id": "google-iam-no-project-level-service-account-impersonation",
			"legacy_rule_id": "",
			"rule_description": "Users should not be granted service account access at the project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of project-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-project-level-service-account-impersonation",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam",
				"https://cloud.google.com/iam/docs/impersonating-service-accounts"
			],
			"description": "Resource 'google_project_iam_member.project' grants service account access to a user at project level.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\RoleServiceAccountUser.tf",
				"start_line": 9,
				"end_line": 9
			},
			"resource": "google_project_iam_member.project"
		},
		{
			"rule_id": "google-gke-node-shielding-enabled",
			"legacy_rule_id": "GCP010",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/node-shielding-enabled",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes",
				"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes"
			],
			"description": "Resource 'google_container_cluster.fail-public' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\gke\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			},
			"resource": "google_container_cluster.fail-public"
		},
		{
			"rule_id": "google-iam-no-project-level-default-service-account-assignment",
			"legacy_rule_id": "",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/iam/no-project-level-default-service-account-assignment",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam",
				""
			],
			"description": "Resource 'google_project_iam_binding.fail-service' assigns a role to a default service account.",
			"severity": "MEDIUM",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project_iam_binding.tf",
				"start_line": 8,
				"end_line": 11
			},
			"resource": "google_project_iam_binding.fail-service"
		},
		{
			"rule_id": "google-sql-encrypt-in-transit-data",
			"legacy_rule_id": "",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/sql/encrypt-in-transit-data",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"
			],
			"description": "Resource 'google_sql_database_instance.instance1-fail' does not require SSL for all connections",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\sql_database_instance.tf",
				"start_line": 1,
				"end_line": 24
			},
			"resource": "google_sql_database_instance.instance1-fail"
		},
		{
			"rule_id": "aws-elasticache-enable-in-transit-encryption",
			"legacy_rule_id": "AWS036",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/elasticache/enable-in-transit-encryption",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled",
				"https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html"
			],
			"description": "Resource 'aws_elasticache_replication_group.fail' defines an unencrypted Elasticache Replication Group (missing transit_encryption_enabled attribute).",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 15
			},
			"resource": "aws_elasticache_replication_group.fail"
		},
		{
			"rule_id": "aws-rds-no-classic-resources",
			"legacy_rule_id": "AWS003",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/aws/rds/no-classic-resources",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group",
				"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
			],
			"description": "Resource 'aws_redshift_security_group.fail' uses EC2 Classic. Use a VPC instead.",
			"severity": "CRITICAL",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_security_group.tf",
				"start_line": 8,
				"end_line": 18
			},
			"resource": "aws_redshift_security_group.fail"
		},
		{
			"rule_id": "google-gke-enable-master-networks",
			"legacy_rule_id": "",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/latest/checks/google/gke/enable-master-networks",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Resource '\u0026{%!s(*hcl.Block=\u0026{resource [google_container_cluster fail] 0xc000400420 {F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf {2 1 1} {2 43 43}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf {2 1 1} {2 9 9}} [{F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf {2 10 10} {2 36 36}} {F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf {2 37 37} {2 43 43}}]}) %!s(*block.Context=\u0026{0xc00073a228 0xc0000b3ca0}) \u003cnil\u003e %!s(bool=false) %!s(int=0) [%!s(*block.HCLBlock=\u0026{0xc000635860 0xc0000a6c90 \u003cnil\u003e false 0 [] []})] [%!s(*block.HCLAttribute=\u0026{0xc000828b40 0xc0000a6c50}) %!s(*block.HCLAttribute=\u0026{0xc000828be0 0xc0000a6c50}) %!s(*block.HCLAttribute=\u0026{0xc0008288c0 0xc0000a6c50}) %!s(*block.HCLAttribute=\u0026{0xc000828960 0xc0000a6c50}) %!s(*block.HCLAttribute=\u0026{0xc000828a00 0xc0000a6c50}) %!s(*block.HCLAttribute=\u0026{0xc000828aa0 0xc0000a6c50})]}' does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": "failed",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\metadata_enabled.tf",
				"start_line": 2,
				"end_line": 17
			},
			"resource": "google_container_cluster.fail"
		}
	]
}

{
	"results": [
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_apigatewayv2_stage.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-stage\\apigatewayv2_stage.tf",
				"start_line": 11,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_without_ssl_certificate.tf",
				"start_line": 8,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.fail.tf",
				"start_line": 13,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.no_assoc",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api\\aws_api_gateway_rest_api_no_waf.tf",
				"start_line": 17,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail_waf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api\\api_gateway_rest_api.tf",
				"start_line": 9,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.api_gw_stage",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
				"start_line": 75,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-AWS-0001",
			"long_id": "aws-api-gateway-enable-access-logging",
			"rule_description": "API Gateway stages for V1 and V2 should have access logging enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for API Gateway stages",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-access-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/apigatewayv2_stage#access_log_settings"
			],
			"description": "Access logging is not configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-deployment\\api_gateway_deployment_without_access_log_setting.tf",
				"start_line": 11,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0002",
			"long_id": "aws-api-gateway-enable-cache-encryption",
			"rule_description": "API Gateway must have cache enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Data stored in the cache that is unencrypted may be vulnerable to compromise",
			"resolution": "Enable cache encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-cache-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted"
			],
			"description": "Cache data is not encrypted.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_api_gateway_rest_api.no_assoc",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api\\aws_api_gateway_rest_api_no_waf.tf",
				"start_line": 7,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0002",
			"long_id": "aws-api-gateway-enable-cache-encryption",
			"rule_description": "API Gateway must have cache enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Data stored in the cache that is unencrypted may be vulnerable to compromise",
			"resolution": "Enable cache encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-cache-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted"
			],
			"description": "Cache data is not encrypted.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "settings.cache_data_encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-method-settings\\api_gateway_method_settings.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0002",
			"long_id": "aws-api-gateway-enable-cache-encryption",
			"rule_description": "API Gateway must have cache enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Data stored in the cache that is unencrypted may be vulnerable to compromise",
			"resolution": "Enable cache encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-cache-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted"
			],
			"description": "Cache data is not encrypted.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "settings.cache_data_encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-method-settings\\api_gateway_method_settings.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0002",
			"long_id": "aws-api-gateway-enable-cache-encryption",
			"rule_description": "API Gateway must have cache enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Data stored in the cache that is unencrypted may be vulnerable to compromise",
			"resolution": "Enable cache encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-cache-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method_settings#cache_data_encrypted"
			],
			"description": "Cache data is not encrypted.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "settings.cache_data_encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-method-settings\\api_gateway_method_settings.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_without_ssl_certificate.tf",
				"start_line": 8,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail.xray_tracing_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-stage\\api_gateway_stage.fail.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_stage.no_assoc",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api\\aws_api_gateway_rest_api_no_waf.tf",
				"start_line": 17,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_stage.fail_waf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api\\api_gateway_rest_api.tf",
				"start_line": 9,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_stage.api_gw_stage",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
				"start_line": 75,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-AWS-0004",
			"long_id": "aws-api-gateway-no-public-access",
			"rule_description": "No unauthorized access to API Gateway methods",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "API gateway methods can be accessed without authorization.",
			"resolution": "Use and authorization method or require API Key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization"
			],
			"description": "Authorization is not enabled for this method.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_method.api_gw_method.authorization",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-rest-api-policy\\rest_api_with_vulnerable_policy.tf",
				"start_line": 57,
				"end_line": 57
			}
		},
		{
			"rule_id": "AVD-AWS-0004",
			"long_id": "aws-api-gateway-no-public-access",
			"rule_description": "No unauthorized access to API Gateway methods",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "API gateway methods can be accessed without authorization.",
			"resolution": "Use and authorization method or require API Key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization"
			],
			"description": "Authorization is not enabled for this method.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_api_gateway_method.fail.authorization",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-method\\api_gateway_method.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0005",
			"long_id": "aws-api-gateway-use-secure-tls-policy",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy"
			],
			"description": "Domain name is configured with an outdated TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_api_gateway_domain_name.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\certificate_rsa_key_bytes_lower_than_256.tf",
				"start_line": 2,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0005",
			"long_id": "aws-api-gateway-use-secure-tls-policy",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy"
			],
			"description": "Domain name is configured with an outdated TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_api_gateway_domain_name.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\certhasexpired.tf",
				"start_line": 2,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0005",
			"long_id": "aws-api-gateway-use-secure-tls-policy",
			"rule_description": "API Gateway domain name uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/api-gateway/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_domain_name#security_policy"
			],
			"description": "Domain name is configured with an outdated TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_api_gateway_domain_name.fail.security_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\api-gateway\\api-gateway-domain-name\\api_gateway_domain_name.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0006",
			"long_id": "aws-athena-enable-at-rest-encryption",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/athena/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration"
			],
			"description": "Workgroup does not have encryption configured.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_athena_workgroup.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 9,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0006",
			"long_id": "aws-athena-enable-at-rest-encryption",
			"rule_description": "Athena databases and workgroup configurations are created unencrypted at rest by default, they should be encrypted",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Data can be read if the Athena Database is compromised",
			"resolution": "Enable encryption at rest for Athena databases and workgroup configurations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/athena/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#encryption_configuration",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_database#encryption_configuration"
			],
			"description": "Database does not have encryption configured.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_athena_database.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-database.tf",
				"start_line": 7,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0007",
			"long_id": "aws-athena-no-encryption-override",
			"rule_description": "Athena workgroups should enforce configuration to prevent client disabling encryption",
			"rule_provider": "aws",
			"rule_service": "athena",
			"impact": "Clients can ignore encryption requirements",
			"resolution": "Enforce the configuration to prevent client overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/athena/no-encryption-override/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/athena_workgroup#configuration"
			],
			"description": "The workgroup configuration is not enforced.",
			"severity": "HIGH",
			"status": 0,
			"resource": "configuration.enforce_workgroup_configuration",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\athena\\athena-workgroup.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_shell_script_is_encoded.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "root_block_device.encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0008",
			"long_id": "aws-autoscaling-enable-at-rest-encryption",
			"rule_description": "Launch configuration with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 9,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_shell_script_is_encoded.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 8,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch configuration does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 9,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0130",
			"long_id": "aws-autoscaling-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Launch template does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_template.foobar",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\autoscaling_without_lb.tf",
				"start_line": 15,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0009",
			"long_id": "aws-autoscaling-no-public-ip",
			"rule_description": "Launch configuration should not have a public IP address.",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "The instance or configuration is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#associate_public_ip_address",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address"
			],
			"description": "Launch configuration associates public IP address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.fail.associate_public_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration2.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0122",
			"long_id": "aws-autoscaling-no-sensitive-info",
			"rule_description": "Ensure all data stored in the launch configuration EBS is securely encrypted",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Sensitive credentials in user data can be leaked",
			"resolution": "Don't use sensitive data in user data",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/no-sensitive-info/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64"
			],
			"description": "Sensitive data found in user data: Check for Private Asymetric Key",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.positive1.user_data_base64",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\user_data_contains_encoded_private_key.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0122",
			"long_id": "aws-autoscaling-no-sensitive-info",
			"rule_description": "Ensure all data stored in the launch configuration EBS is securely encrypted",
			"rule_provider": "aws",
			"rule_service": "autoscaling",
			"impact": "Sensitive credentials in user data can be leaked",
			"resolution": "Don't use sensitive data in user data",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/autoscaling/no-sensitive-info/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/launch_configuration#user_data,user_data_base64"
			],
			"description": "Sensitive data found in user data: Password literal text",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf.user_data",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 13,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 98,
				"end_line": 142
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 52,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 10,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-AWS-0010",
			"long_id": "aws-cloudfront-enable-logging",
			"rule_description": "Cloudfront distribution should have Access Logging configured",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for CloudFront distributions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#logging_config"
			],
			"description": "Distribution does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 13,
				"end_line": 88
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 98,
				"end_line": 142
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 52,
				"end_line": 96
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 10,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 7,
				"end_line": 65
			}
		},
		{
			"rule_id": "AVD-AWS-0011",
			"long_id": "aws-cloudfront-enable-waf",
			"rule_description": "CloudFront distribution does not have a WAF in front.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Complex web application attacks can more easily be performed without a WAF",
			"resolution": "Enable WAF for the CloudFront distribution",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enable-waf/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#web_acl_id"
			],
			"description": "Distribution does not utilise a WAF.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.s3_distribution",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 13,
				"end_line": 88
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "default_cache_behavior.viewer_protocol_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 80,
				"end_line": 80
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "default_cache_behavior.viewer_protocol_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 38,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "default_cache_behavior.viewer_protocol_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 126,
				"end_line": 126
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "default_cache_behavior.viewer_protocol_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 43,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0012",
			"long_id": "aws-cloudfront-enforce-https",
			"rule_description": "CloudFront distribution allows unencrypted (HTTP) communications.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "CloudFront is available through an unencrypted connection",
			"resolution": "Only allow HTTPS for CloudFront distribution communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#viewer_protocol_policy"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "default_cache_behavior.viewer_protocol_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 43,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "viewer_certificate",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 93,
				"end_line": 95
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "viewer_certificate",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 139,
				"end_line": 141
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudfront_distribution.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 10,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "viewer_certificate",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 62,
				"end_line": 64
			}
		},
		{
			"rule_id": "AVD-AWS-0013",
			"long_id": "aws-cloudfront-use-secure-tls-policy",
			"rule_description": "CloudFront distribution uses outdated SSL/TLS protocols.",
			"rule_provider": "aws",
			"rule_service": "cloudfront",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudfront/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudfront_distribution#minimum_protocol_version"
			],
			"description": "Distribution allows unencrypted communications.",
			"severity": "HIGH",
			"status": 0,
			"resource": "viewer_certificate.minimum_protocol_version",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront.tf",
				"start_line": 82,
				"end_line": 82
			}
		},
		{
			"rule_id": "AVD-AWS-0014",
			"long_id": "aws-cloudtrail-enable-all-regions",
			"rule_description": "Cloudtrail should be enabled in all regions regardless of where your AWS resources are generally homed",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Activity could be happening in your account in a different region",
			"resolution": "Enable Cloudtrail in all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudtrail/enable-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#is_multi_region_trail"
			],
			"description": "Trail is not enabled across all regions.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_cloudtrail.fail.is_multi_region_trail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0015",
			"long_id": "aws-cloudtrail-enable-at-rest-encryption",
			"rule_description": "Cloudtrail should be encrypted at rest to secure access to sensitive trail data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudtrail/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#kms_key_id"
			],
			"description": "Trail is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudtrail.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 18,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0016",
			"long_id": "aws-cloudtrail-enable-log-validation",
			"rule_description": "Cloudtrail log validation should be enabled to prevent tampering of log data",
			"rule_provider": "aws",
			"rule_service": "cloudtrail",
			"impact": "Illicit activity could be removed from the logs",
			"resolution": "Turn on log validation for Cloudtrail",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudtrail/enable-log-validation/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudtrail#enable_log_file_validation"
			],
			"description": "Trail does not have log validation enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_cloudtrail.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudtrail\\cloudtrail.tf",
				"start_line": 18,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_cloudwatch_log_group.logs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudwatch\\cloudwatch.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0018",
			"long_id": "aws-codebuild-enable-encryption",
			"rule_description": "CodeBuild Project artifacts encryption should not be disabled",
			"rule_provider": "aws",
			"rule_service": "codebuild",
			"impact": "CodeBuild project artifacts are unencrypted",
			"resolution": "Enable encryption for CodeBuild project artifacts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/codebuild/enable-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/codebuild_project#encryption_disabled"
			],
			"description": "Encryption is not enabled for project artifacts.",
			"severity": "HIGH",
			"status": 0,
			"resource": "artifacts",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\codebuild\\codebuild.tf",
				"start_line": 12,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0019",
			"long_id": "aws-config-aggregate-all-regions",
			"rule_description": "Config configuration aggregator should be using all regions for source",
			"rule_provider": "aws",
			"rule_service": "config",
			"impact": "Sources that aren't covered by the aggregator are not include in the configuration",
			"resolution": "Set the aggregator to cover all regions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/config/aggregate-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/config_configuration_aggregator#all_regions"
			],
			"description": "Configuration aggregation is not set to source from all regions.",
			"severity": "HIGH",
			"status": 0,
			"resource": "account_aggregation_source",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\config\\config_configuration_aggregator.tf",
				"start_line": 11,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0020",
			"long_id": "aws-documentdb-enable-log-export",
			"rule_description": "DocumentDB logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Limited visibility of audit trail for changes to the DocumentDB",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/documentdb/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#enabled_cloudwatch_logs_exports"
			],
			"description": "Neither CloudWatch audit nor profiler log exports are enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0021",
			"long_id": "aws-documentdb-enable-storage-encryption",
			"rule_description": "DocumentDB storage must be encrypted",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable storage encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/documentdb/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#storage_encrypted"
			],
			"description": "Cluster storage does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0022",
			"long_id": "aws-documentdb-encryption-customer-key",
			"rule_description": "DocumentDB encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "documentdb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/documentdb/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/docdb_cluster#kms_key_id"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_docdb_cluster.examplea",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\documentdb\\docdb_cluster.tf",
				"start_line": 14,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 93,
				"end_line": 110
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0023",
			"long_id": "aws-dynamodb-enable-at-rest-encryption",
			"rule_description": "DAX Cluster should always encrypt data at rest",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Data can be freely read if compromised",
			"resolution": "Enable encryption at rest for DAX Cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dax_cluster#server_side_encryption"
			],
			"description": "Cluster encryption is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 93,
				"end_line": 110
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0024",
			"long_id": "aws-dynamodb-enable-recovery",
			"rule_description": "Point in time recovery should be enabled to protect DynamoDB table",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Accidental or malicious writes and deletes can't be rolled back",
			"resolution": "Enable point in time recovery",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/enable-recovery/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#point_in_time_recovery"
			],
			"description": "Point-in-time recovery is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dynamodb_table.basic_dynamodb_table",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 93,
				"end_line": 110
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dynamodb_table.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_table.tf",
				"start_line": 10,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0025",
			"long_id": "aws-dynamodb-table-customer-key",
			"rule_description": "DynamoDB tables should use at rest encryption with a Customer Managed Key",
			"rule_provider": "aws",
			"rule_service": "dynamodb",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable server side encryption with a customer managed key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/dynamodb/table-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/dynamodb_table#server_side_encryption"
			],
			"description": "Cluster encryption does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_dax_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dax\\dax_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0026",
			"long_id": "aws-ebs-enable-volume-encryption",
			"rule_description": "EBS volumes must be encrypted",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of EBS volumes",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ebs/enable-volume-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#encrypted"
			],
			"description": "EBS volume is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ebs_volume.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0027",
			"long_id": "aws-ebs-encryption-customer-key",
			"rule_description": "EBS volume encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "ebs",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ebs/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ebs_volume#kms_key_id"
			],
			"description": "EBS volume does not use a customer-managed KMS key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ebs_volume.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ebs\\ebs_volume.tf",
				"start_line": 12,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test_ec2_instance",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 87,
				"end_line": 92
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance_with_no_vpc.tf",
				"start_line": 1,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 14,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.web",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
				"start_line": 17,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.monitoring_positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
				"start_line": 17,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0131",
			"long_id": "aws-ec2-enable-at-rest-encryption",
			"rule_description": "Instance with unencrypted block device.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The block device could be compromised and read from",
			"resolution": "Turn on encryption for all block devices",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs-ephemeral-and-root-block-devices"
			],
			"description": "Root block device is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 86,
				"end_line": 91
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test_ec2_instance",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 87,
				"end_line": 92
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance_with_no_vpc.tf",
				"start_line": 1,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 14,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.web",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_not_ebs_optimized.tf",
				"start_line": 17,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_using_default_security_group.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.monitoring_positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\ec2_instance_monitoring_disabled.tf",
				"start_line": 17,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0028",
			"long_id": "aws-ec2-enforce-http-token-imds",
			"rule_description": "aws_instance should activate session tokens for Instance Metadata Service.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Instance metadata service can be interacted with freely",
			"resolution": "Enable HTTP token requirement for IMDS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/enforce-http-token-imds/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#metadata-options"
			],
			"description": "Instance does not require IMDS access to require a token",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_instance.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 86,
				"end_line": 91
			}
		},
		{
			"rule_id": "AVD-AWS-0029",
			"long_id": "aws-ec2-no-secrets-in-user-data",
			"rule_description": "User data for EC2 instances must not contain sensitive AWS keys",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "User data is visible through the AWS Management console",
			"resolution": "Remove sensitive data from the EC2 instance user-data",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ec2/no-secrets-in-user-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#user_data"
			],
			"description": "Sensitive data found in instance user data: Check for AWS Access Key Id",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_instance.fail.user_data",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0030",
			"long_id": "aws-ecr-enable-image-scans",
			"rule_description": "ECR repository has image scans disabled.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "The ability to scan images is not being used and vulnerabilities will not be highlighted",
			"resolution": "Enable ECR image scanning",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enable-image-scans/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#image_scanning_configuration"
			],
			"description": "Image scanning is not enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 10,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository.name.image_tag_mutability",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0032",
			"long_id": "aws-ecr-no-public-access",
			"rule_description": "ECR repository policy must block public access",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Risk of potential data leakage of sensitive artifacts",
			"resolution": "Do not allow public access in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository_policy#policy"
			],
			"description": "Policy provides public access to the ECR repository.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_ecr_repository_policy.positive2.policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 11,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.foo",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_without_policy.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository_is_publicly_accessible.tf",
				"start_line": 4,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecr_repository.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecr\\ecr_repository.tf",
				"start_line": 10,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0034",
			"long_id": "aws-ecs-enable-container-insight",
			"rule_description": "ECS clusters should have container insights enabled",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Not all metrics and logs may be gathered for containers when Container Insights isn't enabled",
			"resolution": "Enable Container Insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecs/enable-container-insight/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_cluster#setting"
			],
			"description": "Cluster does not have container insights enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_ecs_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_cluster.tf",
				"start_line": 11,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0035",
			"long_id": "aws-ecs-enable-in-transit-encryption",
			"rule_description": "ECS Task Definitions with EFS volumes should use in-transit encryption",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Intercepted traffic to and from EFS may lead to data loss",
			"resolution": "Enable in transit encryption when using efs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecs/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition#transit_encryption"
			],
			"description": "Task definition includes a volume which does not have in-transit-encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "efs_volume_configuration",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 26,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'password': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.fail_password.container_definitions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition_with_plaintext_password.tf",
				"start_line": 4,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'password': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.positive1.container_definitions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition_network_mode_not_recommended.tf",
				"start_line": 17,
				"end_line": 57
			}
		},
		{
			"rule_id": "AVD-AWS-0036",
			"long_id": "aws-ecs-no-plaintext-secrets",
			"rule_description": "Task definition defines sensitive environment variable(s).",
			"rule_provider": "aws",
			"rule_service": "ecs",
			"impact": "Sensitive data could be exposed in the AWS Management Console",
			"resolution": "Use secrets for the task definition",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ecs/no-plaintext-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecs_task_definition"
			],
			"description": "Container definition contains a potentially sensitive environment variable 'DATABASE_PASSWORD': ",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_ecs_task_definition.fail.container_definitions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 9,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.not_secure",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\efs\\efs_with_vulnerable_policy.tf",
				"start_line": 8,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.sharedstore.encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\efs\\efs.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.fs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\ecs\\ecs_task_definition.tf",
				"start_line": 38,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.not_ok_efs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\backup_vault\\backup_selection.tf",
				"start_line": 46,
				"end_line": 52
			}
		},
		{
			"rule_id": "AVD-AWS-0037",
			"long_id": "aws-efs-enable-at-rest-encryption",
			"rule_description": "EFS Encryption has not been enabled",
			"rule_provider": "aws",
			"rule_service": "efs",
			"impact": "Data can be read from the EFS if compromised",
			"resolution": "Enable encryption for EFS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/efs/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/efs_file_system"
			],
			"description": "File system is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_efs_file_system.ok_efs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\backup_vault\\backup_selection.tf",
				"start_line": 38,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane scheduler logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane API logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane controller manager logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane authenticator logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0039",
			"long_id": "aws-eks-encrypt-secrets",
			"rule_description": "EKS should have the encryption of secrets enabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS secrets could be read if compromised",
			"resolution": "Enable encryption of EKS secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/encrypt-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config"
			],
			"description": "Cluster does not have secret encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_eks_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 13,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0040",
			"long_id": "aws-eks-no-public-cluster-access",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/no-public-cluster-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access"
			],
			"description": "Public cluster access is enabled.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "vpc_config.endpoint_public_access",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0041",
			"long_id": "aws-eks-no-public-cluster-access-to-cidr",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be accessed from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/eks/no-public-cluster-access-to-cidr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config"
			],
			"description": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "vpc_config.public_access_cidrs",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\eks\\eks_cluster.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "encrypt_at_rest.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0048",
			"long_id": "aws-elastic-search-enable-domain-encryption",
			"rule_description": "Elasticsearch domain isn't encrypted at rest.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Data will be readable if compromised",
			"resolution": "Enable ElasticSearch domain encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.node_to_node_encryption_disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 17,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0042",
			"long_id": "aws-elastic-search-enable-domain-logging",
			"rule_description": "Domain logging should be enabled for Elastic Search domains",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Logging provides vital information about access and usage",
			"resolution": "Enable logging for ElasticSearch domains",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-domain-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#log_type"
			],
			"description": "Domain audit logging is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "node_to_node_encryption.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0043",
			"long_id": "aws-elastic-search-enable-in-transit-encryption",
			"rule_description": "Elasticsearch domain uses plaintext traffic for node to node communication.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "In transit data between nodes could be read if intercepted",
			"resolution": "Enable encrypted node to node communication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#encrypt_at_rest"
			],
			"description": "Domain does not have in-transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "domain_endpoint_options.enforce_https",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 20,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0046",
			"long_id": "aws-elastic-search-enforce-https",
			"rule_description": "Elasticsearch doesn't enforce HTTPS traffic.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "HTTP traffic can be intercepted and the contents read",
			"resolution": "Enforce the use of HTTPS for ElasticSearch",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#enforce_https"
			],
			"description": "Domain does not enforce HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "domain_endpoint_options.tls_security_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elastisearch_domain.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_slow_logs.tf",
				"start_line": 3,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.no_iam",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_without_iam_authentication.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0126",
			"long_id": "aws-elastic-search-use-secure-tls-policy",
			"rule_description": "Elasticsearch domain endpoint is using outdated TLS policy.",
			"rule_provider": "aws",
			"rule_service": "elastic-search",
			"impact": "Outdated SSL policies increase exposure to known vulnerabilities",
			"resolution": "Use the most modern TLS/SSL policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elastic-search/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticsearch_domain#tls_security_policy"
			],
			"description": "Domain does not have a secure TLS policy.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticsearch_domain.es_not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticsearch_domain_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0045",
			"long_id": "aws-elasticache-enable-at-rest-encryption",
			"rule_description": "Elasticache Replication Group stores unencrypted data at-rest.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "At-rest data in the Replication Group could be compromised if accessed.",
			"resolution": "Enable at-rest encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled"
			],
			"description": "Replication group does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail.at_rest_encryption_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0045",
			"long_id": "aws-elasticache-enable-at-rest-encryption",
			"rule_description": "Elasticache Replication Group stores unencrypted data at-rest.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "At-rest data in the Replication Group could be compromised if accessed.",
			"resolution": "Enable at-rest encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#at_rest_encryption_enabled"
			],
			"description": "Replication group does not have at-rest encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0050",
			"long_id": "aws-elasticache-enable-backup-retention",
			"rule_description": "Redis cluster should have backup retention turned on",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Without backups of the redis cluster recovery is made difficult",
			"resolution": "Configure snapshot retention for redis cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit"
			],
			"description": "Cluster snapshot retention is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticache_cluster.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\redis_not_compliant.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0050",
			"long_id": "aws-elasticache-enable-backup-retention",
			"rule_description": "Redis cluster should have backup retention turned on",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "Without backups of the redis cluster recovery is made difficult",
			"resolution": "Configure snapshot retention for redis cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_cluster#snapshot_retention_limit"
			],
			"description": "Cluster snapshot retention is not enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_elasticache_cluster.fail_redis",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_cluster.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0051",
			"long_id": "aws-elasticache-enable-in-transit-encryption",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled"
			],
			"description": "Replication group does not have transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticsearch\\elasticache_replication_group.tf",
				"start_line": 10,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0051",
			"long_id": "aws-elasticache-enable-in-transit-encryption",
			"rule_description": "Elasticache Replication Group uses unencrypted traffic.",
			"rule_provider": "aws",
			"rule_service": "elasticache",
			"impact": "In transit data in the Replication Group could be read if intercepted",
			"resolution": "Enable in transit encryption for replication group",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elasticache/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/elasticache_replication_group#transit_encryption_enabled"
			],
			"description": "Replication group does not have transit encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elasticache_replication_group.fail.transit_encryption_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_replication_group.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.lb_bad_1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 9,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.default.internal",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.disabled.internal",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.wu_tang",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
				"start_line": 4,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb_using_weak_ciphers.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.fail.internal",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test_bad",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\ELB.tf",
				"start_line": 28,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 1,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_lb.lb_bad_1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 9,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.disabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\lb.tf",
				"start_line": 14,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.wu_tang",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\load_balancer_policy_using_insecure_protocols.tf",
				"start_line": 4,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb_using_weak_ciphers.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\elb.tf",
				"start_line": 5,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_alb.fail.drop_invalid_header_fields",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_elb.test_bad",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\autoscaling\\ELB.tf",
				"start_line": 28,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-AWS-0054",
			"long_id": "aws-elb-http-not-used",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/http-not-used/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener"
			],
			"description": "Listener for application load balancer does not use HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lb_listener.listener_bad_1.protocol",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lb\\redirect.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0054",
			"long_id": "aws-elb-http-not-used",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/elb/http-not-used/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener"
			],
			"description": "Listener for application load balancer does not use HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_alb_listener.fail.protocol",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elb\\alb_listener.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0056",
			"long_id": "aws-iam-no-password-reuse",
			"rule_description": "IAM Password policy should prevent password reuse.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Password reuse increase the risk of compromised passwords being abused",
			"resolution": "Prevent password reuse in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-password-reuse/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy allows reuse of recent passwords.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses 2 wildcarded actions: ec2:Describe*, iam:*",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_role_policy.positiveinlinepolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 88,
				"end_line": 107
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action ec2:Describe* on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_role_policy.positiveinlinepolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 88,
				"end_line": 107
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action ec2:Describe* on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 129,
				"end_line": 147
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: ec2:Describe*",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 129,
				"end_line": 147
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: ec2:Describe*",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 109,
				"end_line": 127
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action ec2:Describe* on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.positivecustomermanagedpolicy1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 109,
				"end_line": 127
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: ec2:Describe*",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
				"start_line": 12,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action ec2:Describe* on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_root_account_has_active_access_keys.tf",
				"start_line": 12,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action * on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 53,
				"end_line": 69
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 53,
				"end_line": 69
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action s3:HeadBucket on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 5,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 5,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 31,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action * on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_policy.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_admin.tf",
				"start_line": 31,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded resource for sensitive action(s): action ec2:Describe* on resource *",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam.tf",
				"start_line": 12,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action: ec2:Describe*",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_iam_user_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam.tf",
				"start_line": 12,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0062",
			"long_id": "aws-iam-set-max-password-age",
			"rule_description": "IAM Password policy should have expiry less than or equal to 90 days.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Long life password increase the likelihood of a password eventually being compromised",
			"resolution": "Limit the password duration with an expiry in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/set-max-password-age/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy allows a maximum password age of greater than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire.max_password_age",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0063",
			"long_id": "aws-iam-set-minimum-password-length",
			"rule_description": "IAM Password policy should have minimum password length of 14 or more characters.",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Short, simple passwords are easier to compromise",
			"resolution": "Enforce longer, more complex passwords in the policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/iam/set-minimum-password-length/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/iam_account_password_policy"
			],
			"description": "Password policy has a minimum password length of less than 14 characters.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_iam_account_password_policy.expire.minimum_password_length",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_misconfigured_password_policy_expiration.tf",
				"start_line": 2,
				"end_line": 2
			}
		},
		{
			"rule_id": "AVD-AWS-0064",
			"long_id": "aws-kinesis-enable-in-transit-encryption",
			"rule_description": "Kinesis stream is unencrypted.",
			"rule_provider": "aws",
			"rule_service": "kinesis",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/kinesis/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kinesis_stream#encryption_type"
			],
			"description": "Stream does not use KMS encryption.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_kinesis_stream.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kinesis\\kinesis_stream.tf",
				"start_line": 8,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 34,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms_key_with_vulnerable_policy.tf",
				"start_line": 3,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms_key_is_disabled.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0065",
			"long_id": "aws-kms-auto-rotate-keys",
			"rule_description": "A KMS key is not configured to auto-rotate.",
			"rule_provider": "aws",
			"rule_service": "kms",
			"impact": "Long life KMS keys increase the attack surface when compromised",
			"resolution": "Configure KMS key to auto rotate",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/kms/auto-rotate-keys/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/kms_key#enable_key_rotation"
			],
			"description": "Key does not have rotation enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_kms_key.fail_0",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\kms\\kms.tf",
				"start_line": 7,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\public_lambda_via_api_gateway.tf",
				"start_line": 12,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.my_lambda",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_with_vulnerable_policy.tf",
				"start_line": 5,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.positivefunction2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 20,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.positivefunction1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda_function_with_privileged_role.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "WIthout full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_lambda_function.morefail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\lambda.tf",
				"start_line": 13,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0067",
			"long_id": "aws-lambda-restrict-source-arn",
			"rule_description": "Ensure that lambda function permission has a source arn specified",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Not providing the source ARN allows any resource from principal, even from other accounts",
			"resolution": "Always provide a source arn for Lambda permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/lambda/restrict-source-arn/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"
			],
			"description": "Lambda permission lacks source ARN for *.amazonaws.com principal.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_lambda_permission.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\lambda\\restrict-source-arn.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0070",
			"long_id": "aws-mq-enable-audit-logging",
			"rule_description": "MQ Broker should have audit logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without audit logging it is difficult to trace activity in the MQ broker",
			"resolution": "Enable audit logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/mq/enable-audit-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#audit"
			],
			"description": "Broker does not have audit logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_mq_broker.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 10,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0071",
			"long_id": "aws-mq-enable-general-logging",
			"rule_description": "MQ Broker should have general logging enabled",
			"rule_provider": "aws",
			"rule_service": "mq",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable general logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/mq/enable-general-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/mq_broker#general"
			],
			"description": "Broker does not have general logging enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_mq_broker.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\mq\\mq_broker_encryption_disabled.tf",
				"start_line": 10,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0073",
			"long_id": "aws-msk-enable-in-transit-encryption",
			"rule_description": "A MSK cluster allows unencrypted data in transit.",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enable in transit encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/msk/enable-in-transit-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#encryption_info-argument-reference"
			],
			"description": "Cluster allows plaintext communication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "encryption_in_transit.client_broker",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0074",
			"long_id": "aws-msk-enable-logging",
			"rule_description": "Ensure MSK Cluster logging is enabled",
			"rule_provider": "aws",
			"rule_service": "msk",
			"impact": "Without logging it is difficult to trace issues",
			"resolution": "Enable logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/msk/enable-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/msk_cluster#"
			],
			"description": "Cluster does not ship logs to any service.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_msk_cluster.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\msk\\msk_cluster.tf",
				"start_line": 11,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0075",
			"long_id": "aws-neptune-enable-log-export",
			"rule_description": "Neptune logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Limited visibility of audit trail for changes to Neptune",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports"
			],
			"description": "Cluster does not have audit logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_neptune_cluster.postive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune_logging_disabled.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0075",
			"long_id": "aws-neptune-enable-log-export",
			"rule_description": "Neptune logs export should be enabled",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Limited visibility of audit trail for changes to Neptune",
			"resolution": "Enable export logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/enable-log-export/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#enable_cloudwatch_logs_exports"
			],
			"description": "Cluster does not have audit logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 38,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-AWS-0076",
			"long_id": "aws-neptune-enable-storage-encryption",
			"rule_description": "Neptune storage must be encrypted at rest",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of Neptune storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.postive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune_logging_disabled.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0076",
			"long_id": "aws-neptune-enable-storage-encryption",
			"rule_description": "Neptune storage must be encrypted at rest",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Unencrypted sensitive data is vulnerable to compromise.",
			"resolution": "Enable encryption of Neptune storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/enable-storage-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.default.storage_encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 46,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AWS-0128",
			"long_id": "aws-neptune-encryption-customer-key",
			"rule_description": "Neptune encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.postive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune_logging_disabled.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0128",
			"long_id": "aws-neptune-encryption-customer-key",
			"rule_description": "Neptune encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "neptune",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/neptune/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/neptune_cluster#storage_encrypted"
			],
			"description": "Cluster does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_neptune_cluster.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\neptune\\neptune.tf",
				"start_line": 38,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster_instance.fail.performance_insights_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster_instance.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 1,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 15,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 15,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 3,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0078",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Encryption for RDS Performance Insights should be enabled.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS Performance Insights if it is compromised",
			"resolution": "Enable encryption for RDS clusters and instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 17,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster.fail2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 17,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AWS-0079",
			"long_id": "aws-rds-encrypt-cluster-storage-data",
			"rule_description": "There is no encryption specified or encryption is disabled on the RDS Cluster.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from the RDS cluster if it is compromised",
			"resolution": "Enable encryption for RDS clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/encrypt-cluster-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster"
			],
			"description": "Cluster does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_rds_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 9,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 15,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0080",
			"long_id": "aws-rds-encrypt-instance-storage-data",
			"rule_description": "RDS encryption has not been enabled at a DB Instance level.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Data can be read from RDS instances if compromised",
			"resolution": "Enable encryption for RDS instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/encrypt-instance-storage-data/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance does not have storage encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_db_instance.default.storage_encrypted",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 32,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_security_group.tf",
				"start_line": 8,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_security_group.tf",
				"start_line": 8,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_elasticache_security_group.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\elasticache\\elasticache_security_group.tf",
				"start_line": 7,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0081",
			"long_id": "aws-rds-no-classic-resources",
			"rule_description": "AWS Classic resource usage.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Classic resources are running in a shared environment with other customers",
			"resolution": "Switch to VPC resources",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-classic-resources/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_security_group"
			],
			"description": "Classic resources should not be used.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_security_group.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_security_group.tf",
				"start_line": 7,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Cluster instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster_instance.fail.publicly_accessible",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster_instance.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.fail.publicly_accessible",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0082",
			"long_id": "aws-rds-no-public-db-access",
			"rule_description": "A database resource is marked as publicly accessible.",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "The database instance is publicly accessible",
			"resolution": "Set the database to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/no-public-db-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance"
			],
			"description": "Instance is exposed publicly.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.default.publicly_accessible",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 35,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 1,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_rds_cluster.fail2.backup_retention_period",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 1,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Cluster has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_rds_cluster.fail.backup_retention_period",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.fail.backup_retention_period",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\db_instance.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.default.backup_retention_period",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\db_instance\\db_instance.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 3,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_db_instance.pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 17,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0084",
			"long_id": "aws-redshift-encryption-customer-key",
			"rule_description": "Redshift clusters should use at rest encryption",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Data may be leaked if infrastructure is compromised",
			"resolution": "Enable encryption using CMK",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/redshift/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted"
			],
			"description": "Cluster does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0084",
			"long_id": "aws-redshift-encryption-customer-key",
			"rule_description": "Redshift clusters should use at rest encryption",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Data may be leaked if infrastructure is compromised",
			"resolution": "Enable encryption using CMK",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/redshift/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted"
			],
			"description": "Cluster does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 16,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0127",
			"long_id": "aws-redshift-use-vpc",
			"rule_description": "Redshift cluster should be deployed into a specific VPC",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Redshift cluster does not benefit from VPC security if it is deployed in EC2 classic mode",
			"resolution": "Deploy Redshift cluster into a non default VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/redshift/use-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name"
			],
			"description": "Cluster is deployed outside of a VPC.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0127",
			"long_id": "aws-redshift-use-vpc",
			"rule_description": "Redshift cluster should be deployed into a specific VPC",
			"rule_provider": "aws",
			"rule_service": "redshift",
			"impact": "Redshift cluster does not benefit from VPC security if it is deployed in EC2 classic mode",
			"resolution": "Deploy Redshift cluster into a non default VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/redshift/use-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#cluster_subnet_group_name"
			],
			"description": "Cluster is deployed outside of a VPC.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_redshift_cluster.fail.cluster_subnet_group_name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "Public access block does not block public ACLs",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "Public access block does not block public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 11,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "versioning.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 5,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "versioning.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "Public access block does not ignore public ACLs",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read-write'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.public_bucket.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_acl_overridden_by_public_access_block.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AWS-0092",
			"long_id": "aws-s3-no-public-access-with-acl",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-access-with-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket has a public ACL: 'public-read-write'.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.fail.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "Public access block does not restrict public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket_public_access_block.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_public_access_block.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_static_website_host_enabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_without_enabled_mfa_delete.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_unsecured_cors_rule.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_with_all_permissions.tf",
				"start_line": 1,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\s3\\s3_bucket_policy_accepts_http_requests.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_vulnerable_default_ssl_certificate.tf",
				"start_line": 6,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_s3_bucket.b",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cloudfront\\cloudfront_configuration_is_missing.tf",
				"start_line": 72,
				"end_line": 74
			}
		},
		{
			"rule_id": "AVD-AWS-0095",
			"long_id": "aws-sns-enable-topic-encryption",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sns/enable-topic-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
			],
			"description": "Topic encryption does not use a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sns_topic.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sns\\sns_topic_publicity_has_allow_and_not_action_simultaneously.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0095",
			"long_id": "aws-sns-enable-topic-encryption",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sns/enable-topic-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
			],
			"description": "Topic encryption does not use a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sns_topic.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sns\\sns_topic.tf",
				"start_line": 7,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.test_queue",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 103,
				"end_line": 105
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue_exposed.tf",
				"start_line": 4,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue.tf",
				"start_line": 8,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted with a customer managed key.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\iam\\iam_aws_passord_policy_with_unchangeable_passwords.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0097",
			"long_id": "aws-sqs-no-wildcards-in-policy-documents",
			"rule_description": "AWS SQS policy document has wildcard action statement.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "SQS policies with wildcard actions allow more that is required",
			"resolution": "Keep policy scope to the minimum that is required to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/no-wildcards-in-policy-documents/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy"
			],
			"description": "Queue policy does not restrict actions to a known set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue_policy.fail.policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue_policy.fail.tf",
				"start_line": 8,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0097",
			"long_id": "aws-sqs-no-wildcards-in-policy-documents",
			"rule_description": "AWS SQS policy document has wildcard action statement.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "SQS policies with wildcard actions allow more that is required",
			"resolution": "Keep policy scope to the minimum that is required to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/sqs/no-wildcards-in-policy-documents/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue_policy"
			],
			"description": "Queue policy does not restrict actions to a known set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_sqs_queue.fail.policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_queue.tf",
				"start_line": 10,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0098",
			"long_id": "aws-ssm-secret-use-customer-key",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ssm/secret-use-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id"
			],
			"description": "Secret explicitly uses the default key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_secretsmanager_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\secret_mamager\\secretsmanager_secret.tf",
				"start_line": 7,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AWS-0098",
			"long_id": "aws-ssm-secret-use-customer-key",
			"rule_description": "Secrets Manager should use customer managed keys",
			"rule_provider": "aws",
			"rule_service": "ssm",
			"impact": "Using AWS managed keys reduces the flexibility and control over the encryption key",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/ssm/secret-use-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/secretsmanager_secret#kms_key_id"
			],
			"description": "Secret explicitly uses the default key.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_secretsmanager_secret.not_secure_policy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\secret_mamager\\secrets_manager_with_vulnerable_policy.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0099",
			"long_id": "aws-vpc-add-description-to-security-group",
			"rule_description": "Missing description for security group.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group explicitly uses the default description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group.bad_example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 15,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "ingress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 62,
				"end_line": 67
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 55,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\unrestricted_security_group_ingress.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 22,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group_rule.tf",
				"start_line": 9,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "aws_security_group_rule.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 40,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 33,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 28,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "ingress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 22,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "ingress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 16,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 14,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\emr\\emr_cluster.tf",
				"start_line": 45,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "ingress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\emr\\emr_cluster.tf",
				"start_line": 38,
				"end_line": 43
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-vpc-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"status": 0,
			"resource": "egress",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 61,
				"end_line": 66
			}
		},
		{
			"rule_id": "AVD-AWS-0101",
			"long_id": "aws-vpc-no-default-vpc",
			"rule_description": "AWS best practice to not use the default VPC for workflows",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The default VPC does not have critical security features applied",
			"resolution": "Create a non-default vpc for resources to be created in",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-default-vpc/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc"
			],
			"description": "Default VPC is used.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_default_vpc.default",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\default_vpc.tf",
				"start_line": 8,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-vpc-no-excessive-port-access",
			"rule_description": "An ingress Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "All ports exposed for egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail.protocol",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\network_acl_rule.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\sqs\\sqs_vpc_endpoint_without_dns_resolution.tf",
				"start_line": 59,
				"end_line": 59
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.ipv6_cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_groups_not_used.tf",
				"start_line": 26,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\emr\\emr_cluster.tf",
				"start_line": 49,
				"end_line": 49
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-vpc-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "egress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\dynamodb\\dynamodb_vpc_endpoint_wihout_route_table_association.tf",
				"start_line": 65,
				"end_line": 65
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-vpc-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail.cidr_block",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\no-public-ingress.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-vpc-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_network_acl_rule.fail.cidr_block",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\vpc\\network_acl_rule.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_security_group_rule.positive1.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\unrestricted_security_group_ingress.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sql_analysis_services_port_2383_is_publicly_accessible.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_small_public_network.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 86,
				"end_line": 86
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 71,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 71,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 71,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 41,
				"end_line": 41
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\sensitive_port_is_exposed_to_entire_network.tf",
				"start_line": 101,
				"end_line": 101
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_http_port_open.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\security_group.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\security_groups\\securiity_group_unknown_port_exposed_to_internet.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-vpc-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "vpc",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/vpc/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "ingress.cidr_blocks",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\emr\\emr_cluster.tf",
				"start_line": 42,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AWS-0109",
			"long_id": "aws-workspaces-enable-disk-encryption",
			"rule_description": "Root and user volumes on Workspaces should be encrypted",
			"rule_provider": "aws",
			"rule_service": "workspaces",
			"impact": "Data can be freely read if compromised",
			"resolution": "Root and user volume encryption should be enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/workspaces/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled"
			],
			"description": "Root volume does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_workspaces_workspace.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\workspace\\workspace_workspace.tf",
				"start_line": 8,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AWS-0109",
			"long_id": "aws-workspaces-enable-disk-encryption",
			"rule_description": "Root and user volumes on Workspaces should be encrypted",
			"rule_provider": "aws",
			"rule_service": "workspaces",
			"impact": "Data can be freely read if compromised",
			"resolution": "Root and user volume encryption should be enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/aws/workspaces/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/workspaces_workspace#root_volume_encryption_enabled"
			],
			"description": "User volume does not have encryption enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "aws_workspaces_workspace.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\workspace\\workspace_workspace.tf",
				"start_line": 8,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppsAccessibleOverHttps.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 37,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 17,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\azure_app_service_client_certificate_disabled.tf",
				"start_line": 3,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_managed_identity_disabled.tf",
				"start_line": 4,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_http2_disabled.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_ftps_enforce_disabled.tf",
				"start_line": 3,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0002",
			"long_id": "azure-appservice-account-identity-registered",
			"rule_description": "Web App has registration with AD enabled",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Interaction between services can't easily be achieved without username/password",
			"resolution": "Register the app identity with AD",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/account-identity-registered/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#identity"
			],
			"description": "App service does not have an identity type.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service.tf",
				"start_line": 36,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppsAccessibleOverHttps.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.example3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 37,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.example2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 17,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\azure_app_service_client_certificate_disabled.tf",
				"start_line": 3,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_managed_identity_disabled.tf",
				"start_line": 4,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_http2_disabled.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_ftps_enforce_disabled.tf",
				"start_line": 3,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0003",
			"long_id": "azure-appservice-authentication-enabled",
			"rule_description": "App Service authentication is activated",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anonymous HTTP requests will be accepted",
			"resolution": "Enable authentication to prevent anonymous request being accepted",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/authentication-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#enabled"
			],
			"description": "App service does not have authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_app_service.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service.tf",
				"start_line": 36,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppsAccessibleOverHttps.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 43,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 23,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\azure_app_service_client_certificate_disabled.tf",
				"start_line": 9,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_managed_identity_disabled.tf",
				"start_line": 10,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_http2_disabled.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_ftps_enforce_disabled.tf",
				"start_line": 9,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0005",
			"long_id": "azure-appservice-enable-http2",
			"rule_description": "Web App uses the latest HTTP version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Outdated versions of HTTP has security vulnerabilities",
			"resolution": "Use the latest version of HTTP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enable-http2/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#http2_enabled"
			],
			"description": "App service does not have HTTP/2 enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "site_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service.tf",
				"start_line": 42,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\function_app_not_using_latest_tls_encryption_version.tf",
				"start_line": 1,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\function_app_managed_identity_disabled.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\function_app_ftps_enforce_disabled.tf",
				"start_line": 1,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\function_app_client_certificates_unrequired.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\enforce-https.tf",
				"start_line": 15,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\enable-http2.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\authentication-enabled.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppsEnableAuthentication.tf",
				"start_line": 2,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppHttpVersionLatest.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0004",
			"long_id": "azure-appservice-enforce-https",
			"rule_description": "Ensure the Function App can only be accessed via HTTPS. The default is false.",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Anyone can access the Function App using HTTP.",
			"resolution": "You can redirect all HTTP requests to the HTTPS port.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/function_app#https_only"
			],
			"description": "Function app does not have HTTPS enforced.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_function_app.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppDisallowCORS.tf",
				"start_line": 2,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\functionapp\\FunctionAppsAccessibleOverHttps.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 37,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.example2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\web_app_accepting_traffic_other_than_https.tf",
				"start_line": 17,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\azure_app_service_client_certificate_disabled.tf",
				"start_line": 3,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_managed_identity_disabled.tf",
				"start_line": 4,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_http2_disabled.tf",
				"start_line": 3,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service_ftps_enforce_disabled.tf",
				"start_line": 3,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0001",
			"long_id": "azure-appservice-require-client-cert",
			"rule_description": "Web App accepts incoming client certificate",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "Mutual TLS is not being used",
			"resolution": "Enable incoming certificates for clients",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/require-client-cert/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#client_cert_enabled"
			],
			"description": "App service does not have client certificates enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_app_service.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service.tf",
				"start_line": 36,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-AZU-0006",
			"long_id": "azure-appservice-use-secure-tls-policy",
			"rule_description": "Web App uses latest TLS version",
			"rule_provider": "azure",
			"rule_service": "appservice",
			"impact": "The minimum TLS version for apps should be TLS1_2",
			"resolution": "The TLS version being outdated and has known vulnerabilities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/appservice/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/app_service#min_tls_version"
			],
			"description": "App service does not require a secure TLS version.",
			"severity": "HIGH",
			"status": 0,
			"resource": "site_config.min_tls_version",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\appservice\\app_service.tf",
				"start_line": 45,
				"end_line": 45
			}
		},
		{
			"rule_id": "AVD-AZU-0030",
			"long_id": "azure-authorization-limit-role-actions",
			"rule_description": "Roles limited to the required actions",
			"rule_provider": "azure",
			"rule_service": "authorization",
			"impact": "Open permissions for subscriptions could result in an easily compromisable account",
			"resolution": "Use targeted permissions for roles",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/authorization/limit-role-actions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/role_definition#actions"
			],
			"description": "Role definition uses wildcard action with all scopes.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "permissions",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\authorization\\azurerm_role_definition.tf",
				"start_line": 14,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0039",
			"long_id": "azure-compute-disable-password-authentication",
			"rule_description": "Password authentication should be disabled on Azure virtual machines",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Using password authentication is less secure that ssh keys may result in compromised servers",
			"resolution": "Use ssh authentication for virtual machines",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/disable-password-authentication/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication"
			],
			"description": "Linux virtual machine allows password authentication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "os_profile_linux_config.disable_password_authentication",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\vms\\vm_not_attached_to_network.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0039",
			"long_id": "azure-compute-disable-password-authentication",
			"rule_description": "Password authentication should be disabled on Azure virtual machines",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Using password authentication is less secure that ssh keys may result in compromised servers",
			"resolution": "Use ssh authentication for virtual machines",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/disable-password-authentication/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication"
			],
			"description": "Linux virtual machine allows password authentication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "os_profile_linux_config.disable_password_authentication",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\vms\\InstancePassword.tf",
				"start_line": 26,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0039",
			"long_id": "azure-compute-disable-password-authentication",
			"rule_description": "Password authentication should be disabled on Azure virtual machines",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Using password authentication is less secure that ssh keys may result in compromised servers",
			"resolution": "Use ssh authentication for virtual machines",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/disable-password-authentication/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication"
			],
			"description": "Linux virtual machine allows password authentication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "os_profile_linux_config.disable_password_authentication",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\compute\\virtual_machine.tf",
				"start_line": 20,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-AZU-0039",
			"long_id": "azure-compute-disable-password-authentication",
			"rule_description": "Password authentication should be disabled on Azure virtual machines",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Using password authentication is less secure that ssh keys may result in compromised servers",
			"resolution": "Use ssh authentication for virtual machines",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/disable-password-authentication/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/linux_virtual_machine#disable_password_authentication",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#disable_password_authentication"
			],
			"description": "Linux virtual machine allows password authentication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_linux_virtual_machine.bad_linux_example.disable_password_authentication",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\compute\\linux_virtual_machine.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0038",
			"long_id": "azure-compute-enable-disk-encryption",
			"rule_description": "Enable disk encryption on managed disk",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Data could be read if compromised",
			"resolution": "Enable encryption on managed disks",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk"
			],
			"description": "Managed disk is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "encryption_settings.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\managed_disk\\ManagedDiscEncryption.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0038",
			"long_id": "azure-compute-enable-disk-encryption",
			"rule_description": "Enable disk encryption on managed disk",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Data could be read if compromised",
			"resolution": "Enable encryption on managed disks",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/enable-disk-encryption/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/managed_disk"
			],
			"description": "Managed disk is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "encryption_settings.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\compute\\managed_disk.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0037",
			"long_id": "azure-compute-no-secrets-in-custom-data",
			"rule_description": "Ensure that no sensitive credentials are exposed in VM custom_data",
			"rule_provider": "azure",
			"rule_service": "compute",
			"impact": "Sensitive credentials in custom_data can be leaked",
			"resolution": "Don't use sensitive credentials in the VM custom_data",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/compute/no-secrets-in-custom-data/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/virtual_machine#custom_data"
			],
			"description": "Virtual machine includes secret(s) in custom data.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "os_profile",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\compute\\virtual_machine.tf",
				"start_line": 24,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\kubernetes_cluster.tf",
				"start_line": 2,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\dashboard_is_enabled.tf",
				"start_line": 1,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_rbac",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\use-rbac-permissions.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_log",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\logging.tf",
				"start_line": 2,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_limit",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\limit-authorized-ips.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_profile",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\configured-network-policy.tf",
				"start_line": 4,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_cluster",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
				"start_line": 15,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_uses_azure_policies_addon_disabled.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0043",
			"long_id": "azure-container-configured-network-policy",
			"rule_description": "Ensure AKS cluster has Network Policy configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No network policy is protecting the AKS cluster",
			"resolution": "Configure a network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/configured-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#network_policy"
			],
			"description": "Kubernetes cluster does not have a network policy set.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_profile",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_network_policy_misconfigured.tf",
				"start_line": 23,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\kubernetes_cluster.tf",
				"start_line": 2,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\dashboard_is_enabled.tf",
				"start_line": 1,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_rbac",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\use-rbac-permissions.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_log",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\logging.tf",
				"start_line": 2,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_limit",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\limit-authorized-ips.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\configured-network-policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_cluster",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
				"start_line": 15,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_uses_azure_policies_addon_disabled.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0041",
			"long_id": "azure-container-limit-authorized-ips",
			"rule_description": "Ensure AKS has an API Server Authorized IP Ranges enabled",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Any IP can interact with the API server",
			"resolution": "Limit the access to the API server to a limited IP range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/limit-authorized-ips/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#api_server_authorized_ip_ranges"
			],
			"description": "Cluster does not limit API access to specific IP addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_network_policy_misconfigured.tf",
				"start_line": 3,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\kubernetes_cluster.tf",
				"start_line": 2,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\dashboard_is_enabled.tf",
				"start_line": 1,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_rbac",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\use-rbac-permissions.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_log",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\logging.tf",
				"start_line": 2,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_limit",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\limit-authorized-ips.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\configured-network-policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_cluster",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
				"start_line": 15,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_uses_azure_policies_addon_disabled.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0040",
			"long_id": "azure-container-logging",
			"rule_description": "Ensure AKS logging to Azure Monitoring is Configured",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for AKS",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/logging/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/kubernetes_cluster#oms_agent"
			],
			"description": "Cluster does not have logging enabled via OMS Agent.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_network_policy_misconfigured.tf",
				"start_line": 3,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\kubernetes_cluster.tf",
				"start_line": 2,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\kubernetes_cluster\\dashboard_is_enabled.tf",
				"start_line": 1,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "role_based_access_control.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\use-rbac-permissions.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_log",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\logging.tf",
				"start_line": 2,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail_limit",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\limit-authorized-ips.tf",
				"start_line": 3,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\container\\configured-network-policy.tf",
				"start_line": 3,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "role_based_access_control.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\azurerm_kubernetes_cluster.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_uses_azure_policies_addon_disabled.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0042",
			"long_id": "azure-container-use-rbac-permissions",
			"rule_description": "Ensure RBAC is enabled on AKS clusters",
			"rule_provider": "azure",
			"rule_service": "container",
			"impact": "No role based access control is in place for the AKS cluster",
			"resolution": "Enable RBAC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/container/use-rbac-permissions/",
				"https://www.terraform.io/docs/providers/azurerm/r/kubernetes_cluster.html#role_based_access_control"
			],
			"description": "Cluster has RBAC disabled",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_kubernetes_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\aks\\aks_network_policy_misconfigured.tf",
				"start_line": 3,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fail.disabled_alerts",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\mssql_server_security_alert_policy.tf",
				"start_line": 12,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0028",
			"long_id": "azure-database-all-threat-alerts-enabled",
			"rule_description": "No threat detections are set",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Disabling threat alerts means you are not getting the full benefit of server security protection",
			"resolution": "Use all provided threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/all-threat-alerts-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#disabled_alerts"
			],
			"description": "Server has a security alert policy which disables alerts.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fauk.disabled_alerts",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\azurerm_mssql_server_security_alert_policy.tf",
				"start_line": 11,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 6,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
				"start_line": 9,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\SQLServerPublicAccessDisabled.tf",
				"start_line": 2,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0027",
			"long_id": "azure-database-enable-audit",
			"rule_description": "Auditing should be enabled on Azure SQL Databases",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Auditing provides valuable information about access and usage",
			"resolution": "Enable auditing on Azure SQL databases",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-audit/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server#extended_auditing_policy"
			],
			"description": "Server does not have an extended audit policy configured.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-audit.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\PostgreSQLServerSSLEnforcementEnabled.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mysql_server.example.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mysql\\MySQLTreatDetectionEnabled.tf",
				"start_line": 26,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mariadb_server.example.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\maria\\azurerm_mariadb_server.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connections.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connection-throttling.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-checkpoints.tf",
				"start_line": 7,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-access.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mysql_server.fail.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\mysql-threat-detection-enabled.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0020",
			"long_id": "azure-database-enable-ssl-enforcement",
			"rule_description": "SSL should be enforced on database connections where applicable",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Insecure connections could lead to data loss and other vulnerabilities",
			"resolution": "Enable SSL enforcement",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/enable-ssl-enforcement/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_enforcement_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#ssl_enforcement_enabled"
			],
			"description": "Database server does not have enforce SSL.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.ssl_enforcement_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-ssl-enforcement.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mysql_server.example.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mysql\\MySQLTreatDetectionEnabled.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 6,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 36,
				"end_line": 54
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 16,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
				"start_line": 9,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server.tf",
				"start_line": 10,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server.example.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\SQLServerPublicAccessDisabled.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mariadb_server.example.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\maria\\azurerm_mariadb_server.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connections.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connection-throttling.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-checkpoints.tf",
				"start_line": 7,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-access.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mysql_server.fail.public_network_access_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\mysql-threat-detection-enabled.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0022",
			"long_id": "azure-database-no-public-access",
			"rule_description": "Ensure databases are not publicly accessible",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible database could lead to compromised data",
			"resolution": "Disable public access to database when not required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#public_network_access_enabled",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mariadb_server#public_network_access_enabled"
			],
			"description": "Database server has public network access enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-audit.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.positive3.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.positive3.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_ingress_from_any_ip.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_ingress_from_any_ip.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_sql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_postgresql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_postgresql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_postgresql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0029",
			"long_id": "azure-database-no-public-firewall-access",
			"rule_description": "Ensure database firewalls do not permit public access",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Publicly accessible databases could lead to compromised data",
			"resolution": "Don't use wide ip ranges for the sql firewall",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/no-public-firewall-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_firewall_rule#end_ip_address"
			],
			"description": "Firewall rule allows public internet access to a database server.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_postgresql_firewall_rule.fail.start_ip_address",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-firewall-access.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 7,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 12,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-access.tf",
				"start_line": 3,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0021",
			"long_id": "azure-database-postgres-configuration-connection-throttling",
			"rule_description": "Ensure server parameter 'connection_throttling' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No log information to help diagnosing connection contention issues",
			"resolution": "Enable connection throttling logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-connection-throttling/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to throttle connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-ssl-enforcement.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 7,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 12,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-access.tf",
				"start_line": 3,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0024",
			"long_id": "azure-database-postgres-configuration-log-checkpoints",
			"rule_description": "Ensure server parameter 'log_checkpoints' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No error and query logs generated on checkpoint",
			"resolution": "Enable checkpoint logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration"
			],
			"description": "Database server is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-ssl-enforcement.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_configuration.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\postgresql_log_disconnections_not_set.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 7,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 12,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\no-public-access.tf",
				"start_line": 3,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0019",
			"long_id": "azure-database-postgres-configuration-log-connections",
			"rule_description": "Ensure server parameter 'log_connections' is set to 'ON' for PostgreSQL Database Server",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "No visibility of successful connections",
			"resolution": "Enable connection logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/postgres-configuration-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_configuration",
				"https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs#configure-logging"
			],
			"description": "Database server is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-ssl-enforcement.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0025",
			"long_id": "azure-database-retention-period-set",
			"rule_description": "Database auditing rentention period should be longer than 90 days",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Short logging retention could result in missing valuable historical information",
			"resolution": "Set retention periods of database auditing to greater than 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/retention-period-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days"
			],
			"description": "Server has a retention period of less than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "extended_auditing_policy.retention_in_days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 48,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-AZU-0025",
			"long_id": "azure-database-retention-period-set",
			"rule_description": "Database auditing rentention period should be longer than 90 days",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Short logging retention could result in missing valuable historical information",
			"resolution": "Set retention periods of database auditing to greater than 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/retention-period-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days"
			],
			"description": "Server has a retention period of less than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "extended_auditing_policy.retention_in_days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0025",
			"long_id": "azure-database-retention-period-set",
			"rule_description": "Database auditing rentention period should be longer than 90 days",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Short logging retention could result in missing valuable historical information",
			"resolution": "Set retention periods of database auditing to greater than 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/retention-period-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days"
			],
			"description": "Server has a retention period of less than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "extended_auditing_policy.retention_in_days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-AZU-0025",
			"long_id": "azure-database-retention-period-set",
			"rule_description": "Database auditing rentention period should be longer than 90 days",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Short logging retention could result in missing valuable historical information",
			"resolution": "Set retention periods of database auditing to greater than 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/retention-period-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days"
			],
			"description": "Server has a retention period of less than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_database_extended_auditing_policy.example.retention_in_days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\azurerm_mssql_database_extended_auditing_policy.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0025",
			"long_id": "azure-database-retention-period-set",
			"rule_description": "Database auditing rentention period should be longer than 90 days",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Short logging retention could result in missing valuable historical information",
			"resolution": "Set retention periods of database auditing to greater than 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/retention-period-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_database_extended_auditing_policy",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#retention_in_days"
			],
			"description": "Server has a retention period of less than 90 days.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_database_extended_auditing_policy.fail.retention_in_days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\retention-period-set.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\azurerm_postgresql_server.tf",
				"start_line": 7,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mysql_server.example.ssl_minimal_tls_version_enforced",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mysql\\MySQLTreatDetectionEnabled.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 6,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 36,
				"end_line": 54
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 16,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
				"start_line": 9,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server.tf",
				"start_line": 10,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server.fail.minimum_tls_version",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.fail.ssl_minimal_tls_version_enforced",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connections.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connection-throttling.tf",
				"start_line": 8,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_postgresql_server.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-checkpoints.tf",
				"start_line": 7,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0026",
			"long_id": "azure-database-secure-tls-policy",
			"rule_description": "Databases should have the minimum TLS set for connections",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Outdated TLS policies increase exposure to known issues",
			"resolution": "Use the most modern TLS policies available",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server#minimum_tls_version",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mysql_server#ssl_minimal_tls_version_enforced",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/postgresql_server#ssl_minimal_tls_version_enforced"
			],
			"description": "Database server does not require a secure TLS version.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_sql_server.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-audit.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0018",
			"long_id": "azure-database-threat-alert-email-set",
			"rule_description": "At least one email address is set for threat alerts",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Nobody will be prompty alerted in the case of a threat being detected",
			"resolution": "Provide at least one email address for threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/threat-alert-email-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses"
			],
			"description": "Security alert policy does not include any email addresses for notification.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\mssql_server_security_alert_policy.tf",
				"start_line": 6,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0018",
			"long_id": "azure-database-threat-alert-email-set",
			"rule_description": "At least one email address is set for threat alerts",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Nobody will be prompty alerted in the case of a threat being detected",
			"resolution": "Provide at least one email address for threat alerts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/threat-alert-email-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_addresses"
			],
			"description": "Security alert policy does not include any email addresses for notification.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fauk",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\azurerm_mssql_server_security_alert_policy.tf",
				"start_line": 5,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fail.email_account_admins",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\mssql_server_security_alert_policy.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0023",
			"long_id": "azure-database-threat-alert-email-to-owner",
			"rule_description": "Security threat alerts go to subcription owners and co-administrators",
			"rule_provider": "azure",
			"rule_service": "database",
			"impact": "Administrators and subscription owners may have a delayed response",
			"resolution": "Enable email to subscription owners",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/database/threat-alert-email-to-owner/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_security_alert_policy#email_account_admins"
			],
			"description": "Security alert policy does not alert account admins.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_mssql_server_security_alert_policy.fauk",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\azurerm_mssql_server_security_alert_policy.tf",
				"start_line": 5,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0035",
			"long_id": "azure-datafactory-no-public-access",
			"rule_description": "Data Factory should have public access disabled, the default is enabled.",
			"rule_provider": "azure",
			"rule_service": "datafactory",
			"impact": "Data factory is publicly accessible",
			"resolution": "Set public access to disabled for Data Factory",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/datafactory/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled"
			],
			"description": "Data factory allows public network access.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_data_factory.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\datafactory\\data_factory.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0035",
			"long_id": "azure-datafactory-no-public-access",
			"rule_description": "Data Factory should have public access disabled, the default is enabled.",
			"rule_provider": "azure",
			"rule_service": "datafactory",
			"impact": "Data factory is publicly accessible",
			"resolution": "Set public access to disabled for Data Factory",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/datafactory/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled"
			],
			"description": "Data factory allows public network access.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_data_factory.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\datafactory\\azurerm_data_factory.tf",
				"start_line": 4,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0035",
			"long_id": "azure-datafactory-no-public-access",
			"rule_description": "Data Factory should have public access disabled, the default is enabled.",
			"rule_provider": "azure",
			"rule_service": "datafactory",
			"impact": "Data factory is publicly accessible",
			"resolution": "Set public access to disabled for Data Factory",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/datafactory/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_factory#public_network_enabled"
			],
			"description": "Data factory allows public network access.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_data_factory.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\datafactory\\DataFactoryNoPublicNetworkAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0036",
			"long_id": "azure-datalake-enable-at-rest-encryption",
			"rule_description": "Unencrypted data lake storage.",
			"rule_provider": "azure",
			"rule_service": "datalake",
			"impact": "Data could be read if compromised",
			"resolution": "Enable encryption of data lake storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/datalake/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_lake_store"
			],
			"description": "Data lake store is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_data_lake_store.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\datalake\\enable-at-rest-encryption.tf",
				"start_line": 2,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0036",
			"long_id": "azure-datalake-enable-at-rest-encryption",
			"rule_description": "Unencrypted data lake storage.",
			"rule_provider": "azure",
			"rule_service": "datalake",
			"impact": "Data could be read if compromised",
			"resolution": "Enable encryption of data lake storage",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/datalake/enable-at-rest-encryption/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/data_lake_store"
			],
			"description": "Data lake store is not encrypted.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_data_lake_store.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\datalake\\DataLakeStoreEncryption.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0015",
			"long_id": "azure-keyvault-content-type-for-secret",
			"rule_description": "Key vault Secret should have a content type set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "The secret's type is unclear without a content type",
			"resolution": "Provide content type for secrets to aid interpretation on retrieval",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/content-type-for-secret/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#content_type"
			],
			"description": "Secret does not have a content-type specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\key_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\key_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\key_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\key_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-key-expiry.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-key-expiry.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-key-expiry.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-key-expiry.tf",
				"start_line": 3,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyExpirationDate.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyExpirationDate.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyExpirationDate.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyExpirationDate.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyBackedByHSM.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyBackedByHSM.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyBackedByHSM.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0014",
			"long_id": "azure-keyvault-ensure-key-expiry",
			"rule_description": "Ensure that the expiration date is set on all keys",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life keys increase the attack surface when compromised",
			"resolution": "Set an expiration date on the vault key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-key-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_key#expiration_date"
			],
			"description": "Key should have an expiry date specified.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault_key.generated",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyBackedByHSM.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\secret_expiration_not_set.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\ensure-secret-expiry.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\content-type-for-secret.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretExpirationDate.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0017",
			"long_id": "azure-keyvault-ensure-secret-expiry",
			"rule_description": "Key Vault Secret should have an expiration date set",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Long life secrets increase the opportunity for compromise",
			"resolution": "Set an expiry for secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/ensure-secret-expiry/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault_secret#expiration_date"
			],
			"description": "Secret should have an expiry date specified.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_key_vault_secret.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\SecretContentType.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.example1.purge_protection_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\vault_auditing_disabled.tf",
				"start_line": 24,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.fail.purge_protection_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\specify-network-acl.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.fail.purge_protection_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\no-purge.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultRecoveryEnabled.tf",
				"start_line": 2,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.example.purge_protection_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesSoftDelete.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesPurgeProtection.tf",
				"start_line": 2,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0016",
			"long_id": "azure-keyvault-no-purge",
			"rule_description": "Key vault should have purge protection enabled",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Keys could be purged from the vault without protection",
			"resolution": "Enable purge protection for key vaults",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/no-purge/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#purge_protection_enabled"
			],
			"description": "Vault does not have purge protection enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_key_vault.example.purge_protection_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesFirewallRulesSettings.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\specify-network-acl.tf",
				"start_line": 3,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\no-purge.tf",
				"start_line": 3,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultRecoveryEnabled.tf",
				"start_line": 2,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesSoftDelete.tf",
				"start_line": 2,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesPurgeProtection.tf",
				"start_line": 2,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AZU-0013",
			"long_id": "azure-keyvault-specify-network-acl",
			"rule_description": "Key vault should have the network acl block specified",
			"rule_provider": "azure",
			"rule_service": "keyvault",
			"impact": "Without a network ACL the key vault is freely accessible",
			"resolution": "Set a network ACL for the key vault",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/keyvault/specify-network-acl/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/key_vault#network_acls"
			],
			"description": "Vault network ACL does not block access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_key_vault.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\keyvault\\KeyVaultEnablesFirewallRulesSettings.tf",
				"start_line": 2,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0031",
			"long_id": "azure-monitor-activity-log-retention-set",
			"rule_description": "Ensure the activity retention log is set to at least a year",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Short life activity logs can lead to missing records when investigating a breach",
			"resolution": "Set a retention period that will allow for delayed investigation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/activity-log-retention-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy"
			],
			"description": "Profile has a log retention policy of less than 1 year.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "retention_policy.days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\small_activity_log_retention_period.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0031",
			"long_id": "azure-monitor-activity-log-retention-set",
			"rule_description": "Ensure the activity retention log is set to at least a year",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Short life activity logs can lead to missing records when investigating a breach",
			"resolution": "Set a retention period that will allow for delayed investigation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/activity-log-retention-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy"
			],
			"description": "Profile has a log retention policy of less than 1 year.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "retention_policy.days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\capture-all-regions.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0031",
			"long_id": "azure-monitor-activity-log-retention-set",
			"rule_description": "Ensure the activity retention log is set to at least a year",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Short life activity logs can lead to missing records when investigating a breach",
			"resolution": "Set a retention period that will allow for delayed investigation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/activity-log-retention-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy"
			],
			"description": "Profile has a log retention policy of less than 1 year.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "retention_policy.days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\azurerm_monitor_log_profile.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0031",
			"long_id": "azure-monitor-activity-log-retention-set",
			"rule_description": "Ensure the activity retention log is set to at least a year",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Short life activity logs can lead to missing records when investigating a breach",
			"resolution": "Set a retention period that will allow for delayed investigation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/activity-log-retention-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#retention_policy"
			],
			"description": "Profile has a log retention policy of less than 1 year.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "retention_policy.days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\MonitorLogProfileCategories.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Write' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\capture-all-regions.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Action' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\capture-all-regions.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Delete' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\capture-all-regions.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Write' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\azurerm_monitor_log_profile.tf",
				"start_line": 4,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Delete' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\azurerm_monitor_log_profile.tf",
				"start_line": 4,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Action' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\azurerm_monitor_log_profile.tf",
				"start_line": 4,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Delete' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\MonitorLogProfileCategories.tf",
				"start_line": 2,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0033",
			"long_id": "azure-monitor-capture-all-activities",
			"rule_description": "Ensure log profile captures all activities",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Log profile must capture all activity to be able to ensure that all relevant information possible is available for an investigation",
			"resolution": "Configure log profile to capture all activities",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-activities/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#categories"
			],
			"description": "Log profile does not require the 'Write' category.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\MonitorLogProfileCategories.tf",
				"start_line": 2,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0032",
			"long_id": "azure-monitor-capture-all-regions",
			"rule_description": "Ensure activitys are captured for all locations",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Activity may be occurring in locations that aren't being monitored",
			"resolution": "Enable capture for all locations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations"
			],
			"description": "Log profile does not log to all regions (66 regions missing).",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\small_activity_log_retention_period.tf",
				"start_line": 2,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-AZU-0032",
			"long_id": "azure-monitor-capture-all-regions",
			"rule_description": "Ensure activitys are captured for all locations",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Activity may be occurring in locations that aren't being monitored",
			"resolution": "Enable capture for all locations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations"
			],
			"description": "Log profile does not log to all regions (66 regions missing).",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\capture-all-regions.tf",
				"start_line": 2,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0032",
			"long_id": "azure-monitor-capture-all-regions",
			"rule_description": "Ensure activitys are captured for all locations",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Activity may be occurring in locations that aren't being monitored",
			"resolution": "Enable capture for all locations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations"
			],
			"description": "Log profile does not log to all regions (68 regions missing).",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\azurerm_monitor_log_profile.tf",
				"start_line": 4,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0032",
			"long_id": "azure-monitor-capture-all-regions",
			"rule_description": "Ensure activitys are captured for all locations",
			"rule_provider": "azure",
			"rule_service": "monitor",
			"impact": "Activity may be occurring in locations that aren't being monitored",
			"resolution": "Enable capture for all locations",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/monitor/capture-all-regions/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_log_profile#locations"
			],
			"description": "Log profile does not log to all regions (66 regions missing).",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_monitor_log_profile.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\monitor\\MonitorLogProfileCategories.tf",
				"start_line": 2,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0048",
			"long_id": "azure-network-disable-rdp-from-internet",
			"rule_description": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Anyone from the internet can potentially RDP onto an instance",
			"resolution": "Block RDP port from internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/disable-rdp-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to RDP port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_range.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\disable-rdp-from-internet.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0048",
			"long_id": "azure-network-disable-rdp-from-internet",
			"rule_description": "RDP access should not be accessible from the Internet, should be blocked on port 3389",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Anyone from the internet can potentially RDP onto an instance",
			"resolution": "Block RDP port from internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/disable-rdp-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to RDP port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "security_rule.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\NSGRuleUDPAccessRestricted.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0051",
			"long_id": "azure-network-no-public-egress",
			"rule_description": "An outbound network security rule allows traffic to /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for egress to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-egress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows egress to public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_egress.destination_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\no-public-egress.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_ssh2.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\ssh-blocked-from-internet.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "security_rule.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\ssh-blocked-from-internet.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_ssh.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\ssh-blocked-from-internet.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_ingress.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\no-public-ingress.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "security_rule.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\disable-rdp-from-internet.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_rdp.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\disable-rdp-from-internet.tf",
				"start_line": 24,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_range.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\disable-rdp-from-internet.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0047",
			"long_id": "azure-network-no-public-ingress",
			"rule_description": "An inbound network security rule allows traffic from /0.",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "security_rule.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\NSGRuleUDPAccessRestricted.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0049",
			"long_id": "azure-network-retention-policy-set",
			"rule_description": "Retention policy for flow logs should be enabled and set to greater than 90 days",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Not enabling retention or having short expiry on flow logs could lead to compromise being undetected limiting time for analysis",
			"resolution": "Ensure flow log retention is turned on with an expiry of \u003e90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/retention-policy-set/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_watcher_flow_log#retention_policy"
			],
			"description": "Flow log has a log retention policy of less than 90 days.",
			"severity": "LOW",
			"status": 0,
			"resource": "retention_policy.days",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\NetworkWatcherFlowLog.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AZU-0050",
			"long_id": "azure-network-ssh-blocked-from-internet",
			"rule_description": "SSH access should not be accessible from the Internet, should be blocked on port 22",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Its dangerous to allow SSH access from the internet",
			"resolution": "Block port 22 access from the internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/ssh-blocked-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to SSH port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_network_security_rule.fail_ssh2.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\ssh-blocked-from-internet.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AZU-0050",
			"long_id": "azure-network-ssh-blocked-from-internet",
			"rule_description": "SSH access should not be accessible from the Internet, should be blocked on port 22",
			"rule_provider": "azure",
			"rule_service": "network",
			"impact": "Its dangerous to allow SSH access from the internet",
			"resolution": "Block port 22 access from the internet",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/network/ssh-blocked-from-internet/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/network_security_group#security_rule",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/network_security_rule#source_port_ranges"
			],
			"description": "Security group rule allows ingress to SSH port from multiple public internet addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "security_rule.source_address_prefix",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\NSGRuleUDPAccessRestricted.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0044",
			"long_id": "azure-security-center-alert-on-severe-notifications",
			"rule_description": "Send notification emails for high severity alerts",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "The ability to react to high severity notifications could be delayed",
			"resolution": " Set alert notifications to be on",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/alert-on-severe-notifications/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#alert_notifications"
			],
			"description": "Security contact has alert notifications disabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_security_center_contact.fail.alert_notifications",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\security_center_contact.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0044",
			"long_id": "azure-security-center-alert-on-severe-notifications",
			"rule_description": "Send notification emails for high severity alerts",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "The ability to react to high severity notifications could be delayed",
			"resolution": " Set alert notifications to be on",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/alert-on-severe-notifications/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#alert_notifications"
			],
			"description": "Security contact has alert notifications disabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_security_center_contact.positive1.alert_notifications",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\email_alerts_disabled.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\security_center_subscription_pricing.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.positive1.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\security_center_pricing_tier_is_not_standard.tf",
				"start_line": 2,
				"end_line": 2
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-storage.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-sql-servers.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-sql-servers-vms.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-servers.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-kubernetes.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-keyvault.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-container-registry.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.fail.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\defender-on-appservices.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnSqlServersVMS.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnSqlServers.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnServers.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnKubernetes.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnKeyVaults.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnContainerRegistry.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0045",
			"long_id": "azure-security-center-enable-standard-subscription",
			"rule_description": "Enable the standard security center subscription tier",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Using free subscription does not enable Azure Defender for the resource type",
			"resolution": "Enable standard subscription tier to benefit from Azure Defender",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/enable-standard-subscription/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_subscription_pricing#tier"
			],
			"description": "Security center subscription uses the free tier.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_subscription_pricing.example.tier",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\DefenderOnAppServices.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AZU-0046",
			"long_id": "azure-security-center-set-required-contact-details",
			"rule_description": "The required contact details should be set for security center",
			"rule_provider": "azure",
			"rule_service": "security-center",
			"impact": "Without a telephone number set, Azure support can't contact",
			"resolution": "Set a telephone number for security center contact",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/security-center/set-required-contact-details/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/security_center_contact#phone"
			],
			"description": "Security contact does not have a phone number listed.",
			"severity": "LOW",
			"status": 0,
			"resource": "azurerm_security_center_contact.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\security_center\\security_center_contact.tf",
				"start_line": 7,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\trusted_microsoft_services_not_enabled.tf",
				"start_line": 19,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\trusted_microsoft_services_not_enabled.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage.tf",
				"start_line": 11,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 9,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 48,
				"end_line": 55
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 38,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 28,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\netrules.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\default-action-deny.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\allow-microsoft-service-bypass.tf",
				"start_line": 23,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\allow-microsoft-service-bypass.tf",
				"start_line": 11,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountMinimumTlsVersion.tf",
				"start_line": 8,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountAzureServicesAccessEnabled.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive5",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_network_access_is_allowed.tf",
				"start_line": 34,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AZU-0010",
			"long_id": "azure-storage-allow-microsoft-service-bypass",
			"rule_description": "Trusted Microsoft Services should have bypass access to Storage accounts",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Trusted Microsoft Services won't be able to access storage account unless rules set to allow",
			"resolution": "Allow Trusted Microsoft Services to bypass",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/allow-microsoft-service-bypass/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#bypass",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#bypass"
			],
			"description": "Network rules do not allow bypass for Microsoft Services.",
			"severity": "HIGH",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_azure_storage_account_network_access_is_too_permissive.tf",
				"start_line": 29,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\trusted_microsoft_services_not_enabled.tf",
				"start_line": 1,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 48,
				"end_line": 55
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive3",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 38,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 28,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\default-action-deny.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.test",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\allow-microsoft-service-bypass.tf",
				"start_line": 23,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountMinimumTlsVersion.tf",
				"start_line": 8,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account_network_rules.positive5",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_network_access_is_allowed.tf",
				"start_line": 34,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-AZU-0012",
			"long_id": "azure-storage-default-action-deny",
			"rule_description": "The default action on Storage account network rules should be set to deny",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Network rules that allow could cause data to be exposed publicly",
			"resolution": "Set network rules to deny",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/default-action-deny/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account_network_rules#default_action"
			],
			"description": "Network rules allow access by default.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "network_rules",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_azure_storage_account_network_access_is_too_permissive.tf",
				"start_line": 29,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-AZU-0008",
			"long_id": "azure-storage-enforce-https",
			"rule_description": "Storage accounts should be configured to only accept transfers that are over secure connections",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Insecure transfer of data into secure accounts could be read if intercepted",
			"resolution": "Only allow secure connection for transferring data into storage accounts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only"
			],
			"description": "Account does not enforce HTTPS.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account.positive1.enable_https_traffic_only",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage_account_not_forcing_https.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0008",
			"long_id": "azure-storage-enforce-https",
			"rule_description": "Storage accounts should be configured to only accept transfers that are over secure connections",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Insecure transfer of data into secure accounts could be read if intercepted",
			"resolution": "Only allow secure connection for transferring data into storage accounts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only"
			],
			"description": "Account does not enforce HTTPS.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account.example.enable_https_traffic_only",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0008",
			"long_id": "azure-storage-enforce-https",
			"rule_description": "Storage accounts should be configured to only accept transfers that are over secure connections",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Insecure transfer of data into secure accounts could be read if intercepted",
			"resolution": "Only allow secure connection for transferring data into storage accounts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only"
			],
			"description": "Account does not enforce HTTPS.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account.fail.enable_https_traffic_only",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\enforce-https.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-AZU-0008",
			"long_id": "azure-storage-enforce-https",
			"rule_description": "Storage accounts should be configured to only accept transfers that are over secure connections",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Insecure transfer of data into secure accounts could be read if intercepted",
			"resolution": "Only allow secure connection for transferring data into storage accounts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only"
			],
			"description": "Account does not enforce HTTPS.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account.example.enable_https_traffic_only",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountEnablesSecureTransfer.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0008",
			"long_id": "azure-storage-enforce-https",
			"rule_description": "Storage accounts should be configured to only accept transfers that are over secure connections",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Insecure transfer of data into secure accounts could be read if intercepted",
			"resolution": "Only allow secure connection for transferring data into storage accounts",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/enforce-https/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#enable_https_traffic_only"
			],
			"description": "Account does not enforce HTTPS.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_account.example.enable_https_traffic_only",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountDisablePublicAccess.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0007",
			"long_id": "azure-storage-no-public-access",
			"rule_description": "Storage containers in blob storage mode should not have public access",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Data in the storage container could be exposed publicly",
			"resolution": "Disable public access to storage containers",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/no-public-access/",
				"https://www.terraform.io/docs/providers/azure/r/storage_container.html#properties"
			],
			"description": "Container allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "azurerm_storage_container.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageBlobServiceContainerPrivateAccess.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\use-secure-tls-policy.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\trusted_microsoft_services_not_enabled.tf",
				"start_line": 11,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage_account_not_forcing_https.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\queue-services-logging-enabled.tf",
				"start_line": 3,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 20,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\enforce-https.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\allow-microsoft-service-bypass.tf",
				"start_line": 3,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountName.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountMinimumTlsVersion.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountLoggingQueueServiceEnabled.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountEnablesSecureTransfer.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountDisablePublicAccess.tf",
				"start_line": 2,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountDefaultNetworkAccessDeny.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_network_access_is_allowed.tf",
				"start_line": 22,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_azure_storage_account_network_access_is_too_permissive.tf",
				"start_line": 21,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AZU-0009",
			"long_id": "azure-storage-queue-services-logging-enabled",
			"rule_description": "When using Queue Services for a storage account, logging should be enabled.",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for Queue Services",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/queue-services-logging-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#logging"
			],
			"description": "Queue services storage account does not have logging enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 8,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\use-secure-tls-policy.tf",
				"start_line": 3,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\trusted_microsoft_services_not_enabled.tf",
				"start_line": 11,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage_account_not_forcing_https.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\storage.tf",
				"start_line": 1,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\queue-services-logging-enabled.tf",
				"start_line": 3,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 20,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\public_storage_account.tf",
				"start_line": 1,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\enforce-https.tf",
				"start_line": 3,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\allow-microsoft-service-bypass.tf",
				"start_line": 3,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountName.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountMinimumTlsVersion.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountLoggingQueueServiceEnabled.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountEnablesSecureTransfer.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountDisablePublicAccess.tf",
				"start_line": 2,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\storage\\StorageAccountDefaultNetworkAccessDeny.tf",
				"start_line": 2,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive4",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_network_access_is_allowed.tf",
				"start_line": 22,
				"end_line": 32
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.example",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\network\\default_azure_storage_account_network_access_is_too_permissive.tf",
				"start_line": 21,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AZU-0011",
			"long_id": "azure-storage-use-secure-tls-policy",
			"rule_description": "The minimum TLS version for Storage Accounts should be TLS1_2",
			"rule_provider": "azure",
			"rule_service": "storage",
			"impact": "The TLS version being outdated and has known vulnerabilities",
			"resolution": "Use a more recent TLS/SSL policy for the load balancer",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/storage/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#min_tls_version"
			],
			"description": "Storage account uses an insecure TLS version.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_storage_account.positive2",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 8,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-AZU-0034",
			"long_id": "azure-synapse-virtual-network-enabled",
			"rule_description": "Synapse Workspace should have managed virtual network enabled, the default is disabled.",
			"rule_provider": "azure",
			"rule_service": "synapse",
			"impact": "Your Synapse workspace is not using the private endpoints",
			"resolution": "Set manage virtual network to enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/synapse/virtual-network-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/synapse_workspace#managed_virtual_network_enabled"
			],
			"description": "Workspace does not have a managed virtual network enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_synapse_workspace.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\synapse\\virtual-network-enabled.tf",
				"start_line": 2,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AZU-0034",
			"long_id": "azure-synapse-virtual-network-enabled",
			"rule_description": "Synapse Workspace should have managed virtual network enabled, the default is disabled.",
			"rule_provider": "azure",
			"rule_service": "synapse",
			"impact": "Your Synapse workspace is not using the private endpoints",
			"resolution": "Set manage virtual network to enabled",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/azure/synapse/virtual-network-enabled/",
				"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/synapse_workspace#managed_virtual_network_enabled"
			],
			"description": "Workspace does not have a managed virtual network enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "azurerm_synapse_workspace.example.managed_virtual_network_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\synapse\\SynapseWorkspaceEnablesManagedVirtualNetworks.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-CLDSTK-0001",
			"long_id": "cloudstack-compute-no-sensitive-info",
			"rule_description": "No sensitive data stored in user_data",
			"rule_provider": "cloudstack",
			"rule_service": "compute",
			"impact": "Sensitive credentials in the user data can be leaked",
			"resolution": "Don't use sensitive data in the user data section",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/cloudstack/compute/no-sensitive-info/",
				"https://registry.terraform.io/providers/hashicorp/cloudstack/latest/docs/resources/instance#"
			],
			"description": "Instance user data contains secret(s).",
			"severity": "HIGH",
			"status": 0,
			"resource": "cloudstack_instance.web",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\cloudstack\\compute\\cloudstack_instance.tf",
				"start_line": 1,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-DIG-0002",
			"long_id": "digitalocean-compute-enforce-https",
			"rule_description": "The load balancer forwarding rule is using an insecure protocol as an entrypoint",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "Your inbound traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/enforce-https/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/loadbalancer"
			],
			"description": "Load balancer has aforwarding rule which uses HTTP instead of HTTPS.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "forwarding_rule.entry_protocol",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\loadbalancing\\enforce-https.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-DIG-0003",
			"long_id": "digitalocean-compute-no-public-egress",
			"rule_description": "The firewall has an outbound rule with open access",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/no-public-egress/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall"
			],
			"description": "Egress rule allows access to multiple public addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "outbound_rule",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\compute\\no-public-egress.tf",
				"start_line": 11,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-DIG-0003",
			"long_id": "digitalocean-compute-no-public-egress",
			"rule_description": "The firewall has an outbound rule with open access",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/no-public-egress/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall"
			],
			"description": "Egress rule allows access to multiple public addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "outbound_rule",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\compute\\no-public-egress.tf",
				"start_line": 11,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-DIG-0001",
			"long_id": "digitalocean-compute-no-public-ingress",
			"rule_description": "The firewall has an inbound rule with open access",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "Your port is exposed to the internet",
			"resolution": "Set a more restrictive CIRDR range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall"
			],
			"description": "Ingress rule allows access from multiple public addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "inbound_rule",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\compute\\no-public-ingress.tf",
				"start_line": 11,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-DIG-0001",
			"long_id": "digitalocean-compute-no-public-ingress",
			"rule_description": "The firewall has an inbound rule with open access",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "Your port is exposed to the internet",
			"resolution": "Set a more restrictive CIRDR range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/firewall"
			],
			"description": "Ingress rule allows access from multiple public addresses.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "inbound_rule",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\compute\\no-public-ingress.tf",
				"start_line": 11,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-DIG-0004",
			"long_id": "digitalocean-compute-use-ssh-keys",
			"rule_description": "SSH Keys are the preferred way to connect to your droplet, no keys are supplied",
			"rule_provider": "digitalocean",
			"rule_service": "compute",
			"impact": "Logging in with username and password is easier to compromise",
			"resolution": "Use ssh keys for login",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/compute/use-ssh-keys/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/droplet#ssh_keys"
			],
			"description": "Droplet does not have an SSH key specified.",
			"severity": "HIGH",
			"status": 0,
			"resource": "digitalocean_droplet.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\droplet\\use-ssh-keys.tf",
				"start_line": 6,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-DIG-0006",
			"long_id": "digitalocean-spaces-acl-no-public-read",
			"rule_description": "Spaces bucket or bucket object has public read acl set",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "The contents of the space can be accessed publicly",
			"resolution": "Apply a more restrictive ACL",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/spaces/acl-no-public-read/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl"
			],
			"description": "Object is publicly exposed.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "digitalocean_spaces_bucket_object.index.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\spaces_bucket.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-DIG-0006",
			"long_id": "digitalocean-spaces-acl-no-public-read",
			"rule_description": "Spaces bucket or bucket object has public read acl set",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "The contents of the space can be accessed publicly",
			"resolution": "Apply a more restrictive ACL",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/spaces/acl-no-public-read/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#acl",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket_object#acl"
			],
			"description": "Bucket is publicly exposed.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "digitalocean_spaces_bucket.fail.acl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\spaces_bucket.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-DIG-0005",
			"long_id": "digitalocean-spaces-disable-force-destroy",
			"rule_description": "Force destroy is enabled on Spaces bucket which is dangerous",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Accidental deletion of bucket objects",
			"resolution": "Don't use force destroy on bucket configuration",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/spaces/disable-force-destroy/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#force_destroy"
			],
			"description": "Bucket has force-destroy enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "digitalocean_spaces_bucket.fail.force_destroy",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\spaces_bucket.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-DIG-0007",
			"long_id": "digitalocean-spaces-versioning-enabled",
			"rule_description": "Spaces buckets should have versioning enabled",
			"rule_provider": "digitalocean",
			"rule_service": "spaces",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental or malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/digitalocean/spaces/versioning-enabled/",
				"https://registry.terraform.io/providers/digitalocean/digitalocean/latest/docs/resources/spaces_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "digitalocean_spaces_bucket.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\digitalocean\\spaces\\spaces_bucket.tf",
				"start_line": 10,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azuread_user.james_woolfenden.password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_6.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws.secret_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_2.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws.access_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\secrets\\BC_GIT_2.tf",
				"start_line": 2,
				"end_line": 2
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "github_actions_environment_secret.fail.secret_name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\secrets\\secrets.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "cloudstack_instance.web.user_data",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\cloudstack\\compute\\cloudstack_instance.tf",
				"start_line": 7,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_linux_virtual_machine.default.admin_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\vms\\linux_virtual_machine.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_windows_virtual_machine_scale_set.example.admin_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\vms\\VMEncryptionAtHostEnabled.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_synapse_workspace.fail.sql_administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\synapse\\virtual-network-enabled.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_synapse_workspace.example.sql_administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\synapse\\SynapseWorkspaceEnablesManagedVirtualNetworks.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_postgresql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\postgreSQL\\PostgreSQLServerSSLEnforcementEnabled.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_mysql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mysql\\MySQLTreatDetectionEnabled.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.positive2.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\unrestricted_sql_server_access.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.positive4.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 42,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.positive3.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_admin_account_name.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.positive2.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server_predictable_active_directory_admin_account_name.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\sql_server.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_mssql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\mssql\\SQLServerPublicAccessDisabled.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_mssql_server.fail.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\secure-tls-policy.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_postgresql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connections.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_postgresql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-connection-throttling.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_postgresql_server.example.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\postgres-configuration-log-checkpoints.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_sql_server.fail.administrator_login_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\database\\enable-audit.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "azurerm_linux_virtual_machine.bad_linux_example.admin_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\azurerm\\compute\\linux_virtual_machine.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_cluster.positive1.master_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_using_default_port.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_redshift_cluster.fail.master_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\redshift\\redshift_cluster.tf",
				"start_line": 21,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.positive1.password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_using_default_port.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster.fail2.master_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_cluster.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.positive1.password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\rds_automatic_minor_upgrades_disabled.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_rds_cluster.fail.master_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\rds\\querylogging.tf",
				"start_line": 15,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws.secret_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "provider.aws.access_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\provider\\provider.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_opsworks_rds_db_instance.my_instance.db_password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\opsworks\\opsworks_rds_db_instance.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_launch_configuration.as_conf.user_data",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\launch\\launch_configuration.tf",
				"start_line": 13,
				"end_line": 15
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "A potentially sensitive string was discovered within an attribute value.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_instance.fail.user_data",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\instance\\instance.tf",
				"start_line": 21,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.pass.password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GEN-0004",
			"long_id": "general-secrets-no-plaintext-exposure",
			"rule_description": "Secret/sensitive data should not be exposed in plaintext.",
			"rule_provider": "general",
			"rule_service": "secrets",
			"impact": "Sensitive data can be leaked to unauthorised people or systems.",
			"resolution": "Remove plaintext secrets and encrypt them within a secrets manager instead.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/general/secrets/no-plaintext-exposure/",
				"https://www.terraform.io/docs/state/sensitive-data.html"
			],
			"description": "Attribute name appears sensitive and has a value which is defined within the project.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "aws_db_instance.fail.password",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\aws\\cert\\ca_certificate_identifier_is_outdated.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GIT-0002",
			"long_id": "github-actions-no-plain-text-action-secrets",
			"rule_description": "Ensure plaintext value is not used for GitHub Action Environment Secret.",
			"rule_provider": "github",
			"rule_service": "actions",
			"impact": "Unencrypted sensitive plaintext value can be easily accessible in code.",
			"resolution": "Do not store plaintext values in your code but rather populate the encrypted_value using fields from a resource, data source or variable.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/github/actions/no-plain-text-action-secrets/",
				"https://registry.terraform.io/providers/integrations/github/latest/docs/resources/actions_environment_secret",
				"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions"
			],
			"description": "Secret has plain text value",
			"severity": "HIGH",
			"status": 0,
			"resource": "github_actions_environment_secret.fail.plaintext_value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\secrets\\secrets.tf",
				"start_line": 8,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-GIT-0001",
			"long_id": "github-repositories-private",
			"rule_description": "Github repository shouldn't be public.",
			"rule_provider": "github",
			"rule_service": "repositories",
			"impact": "Anyone can read the contents of the GitHub repository and leak IP",
			"resolution": "Make sensitive or commercially important repositories private",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/github/repositories/private/",
				"https://registry.terraform.io/providers/integrations/github/latest/docs/resources/repository"
			],
			"description": "Repository is public,",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "github_repository.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\github\\repositories\\repository.tf",
				"start_line": 9,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-GCP-0046",
			"long_id": "google-bigquery-no-public-access",
			"rule_description": "BigQuery datasets should only be accessible within the organisation",
			"rule_provider": "google",
			"rule_service": "bigquery",
			"impact": "Exposure of sensitive data to the public iniernet",
			"resolution": "Configure access permissions with higher granularity",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/bigquery/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/bigquery_dataset#special_group"
			],
			"description": "Dataset grants access to all authenticated GCP users.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "access.special_group",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\bigquery\\bigquery_dataset.tf",
				"start_line": 20,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-GCP-0034",
			"long_id": "google-compute-disk-encryption-customer-key",
			"rule_description": "Disks should be encrypted with customer managed encryption keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper key management.",
			"resolution": "Use managed keys to encrypt disks.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/disk-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link"
			],
			"description": "Disk is not encrypted with a customer managed key.",
			"severity": "LOW",
			"status": 0,
			"resource": "disk_encryption_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\disk\\compute_disk.tf",
				"start_line": 15,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-GCP-0037",
			"long_id": "google-compute-disk-encryption-no-plaintext-key",
			"rule_description": "The encryption key used to encrypt a compute disk has been specified in plaintext.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The encryption key should be considered compromised as it is not stored securely.",
			"resolution": "Reference a managed key rather than include the key in raw format.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/disk-encryption-no-plaintext-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link"
			],
			"description": "Instance disk has encryption key provided in plaintext.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "boot_disk.disk_encryption_key_raw",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-GCP-0037",
			"long_id": "google-compute-disk-encryption-no-plaintext-key",
			"rule_description": "The encryption key used to encrypt a compute disk has been specified in plaintext.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The encryption key should be considered compromised as it is not stored securely.",
			"resolution": "Reference a managed key rather than include the key in raw format.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/disk-encryption-no-plaintext-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_disk#kms_key_self_link"
			],
			"description": "Disk encryption key is supplied in plaintext.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "disk_encryption_key.raw_key",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\disk\\compute_disk.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GCP-0045",
			"long_id": "google-compute-enable-shielded-vm-im",
			"rule_description": "Instances should have Shielded VM integrity monitoring enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "No visibility of VM instance boot state.",
			"resolution": "Enable Shielded VM Integrity Monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/enable-shielded-vm-im/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm"
			],
			"description": "Instance does not have shielded VM integrity monitoring enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "shielded_instance_config.enable_integrity_monitoring",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 61,
				"end_line": 61
			}
		},
		{
			"rule_id": "AVD-GCP-0041",
			"long_id": "google-compute-enable-shielded-vm-vtpm",
			"rule_description": "Instances should have Shielded VM VTPM enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Unable to prevent unwanted system state modification",
			"resolution": "Enable Shielded VM VTPM",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/enable-shielded-vm-vtpm/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#enable_vtpm"
			],
			"description": "Instance does not have VTPM for shielded VMs enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "shielded_instance_config.enable_vtpm",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 60,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-GCP-0029",
			"long_id": "google-compute-enable-vpc-flow-logs",
			"rule_description": "VPC flow logs should be enabled for all subnetworks",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Limited auditing capability and awareness",
			"resolution": "Enable VPC flow logs",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/enable-vpc-flow-logs/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_subnetwork#enable_flow_logs"
			],
			"description": "Subnetwork does not have VPC flow logs enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_compute_subnetwork.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\subnetwork\\compute_subnetwork_ipv6.tf",
				"start_line": 8,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-GCP-0044",
			"long_id": "google-compute-no-default-service-account",
			"rule_description": "Instances should not use the default service account",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Instance has full access to the project",
			"resolution": "Remove use of default service account",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-default-service-account/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance uses the default service account.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "service_account",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 36,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-GCP-0043",
			"long_id": "google-compute-no-ip-forwarding",
			"rule_description": "Instances should not have IP forwarding enabled",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Instance can send/receive packets without the explicit instance address",
			"resolution": "Disable IP forwarding",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-ip-forwarding/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#can_ip_forward"
			],
			"description": "Instance has IP forwarding allowed.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_compute_instance.default.can_ip_forward",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 52,
				"end_line": 52
			}
		},
		{
			"rule_id": "AVD-GCP-0036",
			"long_id": "google-compute-no-oslogin-override",
			"rule_description": "Instances should not override the project setting for OS Login",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Access via SSH key cannot be revoked automatically when an IAM user is removed.",
			"resolution": "Enable OS Login at project level and remove instance-level overrides",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-oslogin-override/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance has OS Login disabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_compute_instance.default.metadata",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 46,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-GCP-0030",
			"long_id": "google-compute-no-project-wide-ssh-keys",
			"rule_description": "Disable project-wide SSH keys for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Compromise of a single key pair compromises all instances",
			"resolution": "Disable project-wide SSH keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-project-wide-ssh-keys/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance allows use of project-level SSH keys.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_compute_instance.default.metadata",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 46,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-GCP-0027",
			"long_id": "google-compute-no-public-ingress",
			"rule_description": "An inbound firewall rule allows traffic from /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges",
				"https://www.terraform.io/docs/providers/google/r/compute_firewall.html"
			],
			"description": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "google_compute_firewall.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\firewall\\google_compute_network_using_firewall_rule_allows_all_ports.tf",
				"start_line": 4,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-GCP-0027",
			"long_id": "google-compute-no-public-ingress",
			"rule_description": "An inbound firewall rule allows traffic from /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges",
				"https://www.terraform.io/docs/providers/google/r/compute_firewall.html"
			],
			"description": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "google_compute_firewall.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\firewall\\google_compute_network_using_firewall_rule_allows_all_ports.tf",
				"start_line": 4,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-GCP-0027",
			"long_id": "google-compute-no-public-ingress",
			"rule_description": "An inbound firewall rule allows traffic from /0.",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "The port is exposed for ingress from the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_firewall#source_ranges",
				"https://www.terraform.io/docs/providers/google/r/compute_firewall.html"
			],
			"description": "Firewall rule allows ingress traffic from multiple addresses on the public internet.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "google_compute_firewall.allow_all.source_ranges",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\firewall\\compute_firewall.tf",
				"start_line": 16,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GCP-0031",
			"long_id": "google-compute-no-public-ip",
			"rule_description": "Instances should not have public IP addresses",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Direct exposure of an instance to the public internet",
			"resolution": "Remove public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#access_config"
			],
			"description": "Instance has a public IP allocated.",
			"severity": "HIGH",
			"status": 0,
			"resource": "access_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 42,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-GCP-0032",
			"long_id": "google-compute-no-serial-port",
			"rule_description": "Disable serial port connectivity for all instances",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Unrestricted network access to the serial console of the instance",
			"resolution": "Disable serial port access",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/no-serial-port/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#"
			],
			"description": "Instance has serial port enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_compute_instance.default.metadata",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 46,
				"end_line": 50
			}
		},
		{
			"rule_id": "AVD-GCP-0039",
			"long_id": "google-compute-use-secure-tls-policy",
			"rule_description": "SSL policies should enforce secure versions of TLS",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Data in transit is not sufficiently secured",
			"resolution": "Enforce a minimum TLS version of 1.2",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/use-secure-tls-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_ssl_policy#min_tls_version"
			],
			"description": "TLS policy does not specify a minimum of TLS 1.2",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "google_compute_ssl_policy.modern_profile.min_tls_version",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\security\\compute_ssl_policy.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GCP-0033",
			"long_id": "google-compute-vm-disk-encryption-customer-key",
			"rule_description": "VM disks should be encrypted with Customer Supplied Encryption Keys",
			"rule_provider": "google",
			"rule_service": "compute",
			"impact": "Using unmanaged keys does not allow for proper management",
			"resolution": "Use managed keys ",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/compute/vm-disk-encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/compute_instance#kms_key_self_link"
			],
			"description": "Instance disk encryption does not use a customer managed key.",
			"severity": "LOW",
			"status": 0,
			"resource": "boot_disk",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\compute\\instance\\compute_instance.tf",
				"start_line": 29,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-GCP-0013",
			"long_id": "google-dns-enable-dnssec",
			"rule_description": "Cloud DNS should use DNSSEC",
			"rule_provider": "google",
			"rule_service": "dns",
			"impact": "Unverified DNS responses could lead to man-in-the-middle attacks",
			"resolution": "Enable DNSSEC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/dns/enable-dnssec/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#state"
			],
			"description": "Managed zone does not have DNSSEC enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "dnssec_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\dns\\dns_managed_zone.tf",
				"start_line": 11,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-GCP-0012",
			"long_id": "google-dns-no-rsa-sha1",
			"rule_description": "Zone signing should not use RSA SHA1",
			"rule_provider": "google",
			"rule_service": "dns",
			"impact": "Less secure encryption algorithm than others available",
			"resolution": "Use RSA SHA512",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/dns/no-rsa-sha1/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/dns_managed_zone#algorithm"
			],
			"description": "Zone ZSK uses RSA SHA1 for signing.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "default_key_specs.algorithm",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\dns\\dns_managed_zone.tf",
				"start_line": 14,
				"end_line": 14
			}
		},
		{
			"rule_id": "AVD-GCP-0063",
			"long_id": "google-gke-enable-auto-repair",
			"rule_description": "Kubernetes should have 'Automatic repair' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Failing nodes will require manual repair.",
			"resolution": "Enable automatic repair",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-auto-repair/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_repair"
			],
			"description": "Node pool does not have auto-repair enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "management.auto_repair",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_node_pool.tf",
				"start_line": 38,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-GCP-0058",
			"long_id": "google-gke-enable-auto-upgrade",
			"rule_description": "Kubernetes should have 'Automatic upgrade' enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes will need the cluster master version manually updating",
			"resolution": "Enable automatic upgrades",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-auto-upgrade/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#auto_upgrade"
			],
			"description": "Node pool does not have auto-upgraade enabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "management.auto_upgrade",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_node_pool.tf",
				"start_line": 39,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-GCP-0049",
			"long_id": "google-gke-enable-ip-aliasing",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-ip-aliasing/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Cluster has IP aliasing disabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0049",
			"long_id": "google-gke-enable-ip-aliasing",
			"rule_description": "Clusters should have IP aliasing enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes need a NAT gateway to access local services",
			"resolution": "Enable IP aliasing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-ip-aliasing/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#ip_allocation_policy"
			],
			"description": "Cluster has IP aliasing disabled.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0061",
			"long_id": "google-gke-enable-master-networks",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-master-networks/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Cluster does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0061",
			"long_id": "google-gke-enable-master-networks",
			"rule_description": "Master authorized networks should be configured on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted network access to the master",
			"resolution": "Enable master authorized networks",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-master-networks/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Cluster does not have master authorized networks enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0056",
			"long_id": "google-gke-enable-network-policy",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Cluster does not have a network policy enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0056",
			"long_id": "google-gke-enable-network-policy",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Cluster does not have a network policy enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0056",
			"long_id": "google-gke-enable-network-policy",
			"rule_description": "Network Policy should be enabled on GKE clusters",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Unrestricted inter-cluster communication",
			"resolution": "Enable network policy",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-network-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enabled"
			],
			"description": "Cluster does not have a network policy enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0059",
			"long_id": "google-gke-enable-private-cluster",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-private-cluster/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Cluster does not have private nodes.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0059",
			"long_id": "google-gke-enable-private-cluster",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-private-cluster/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Cluster does not have private nodes.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0059",
			"long_id": "google-gke-enable-private-cluster",
			"rule_description": "Clusters should be set to private",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Nodes may be exposed to the public internet",
			"resolution": "Enable private cluster",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-private-cluster/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_private_nodes"
			],
			"description": "Cluster does not have private nodes.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0060",
			"long_id": "google-gke-enable-stackdriver-logging",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-stackdriver-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail_public.logging_service",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 29,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-GCP-0060",
			"long_id": "google-gke-enable-stackdriver-logging",
			"rule_description": "Stackdriver Logging should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-stackdriver-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#logging_service"
			],
			"description": "Cluster does not use the logging.googleapis.com/kubernetes StackDriver logging service.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail.logging_service",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 45,
				"end_line": 45
			}
		},
		{
			"rule_id": "AVD-GCP-0052",
			"long_id": "google-gke-enable-stackdriver-monitoring",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-stackdriver-monitoring/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail_public.monitoring_service",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 30,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0052",
			"long_id": "google-gke-enable-stackdriver-monitoring",
			"rule_description": "Stackdriver Monitoring should be enabled",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Visibility will be reduced",
			"resolution": "Enable StackDriver monitoring",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enable-stackdriver-monitoring/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#monitoring_service"
			],
			"description": "Cluster does not use the monitoring.googleapis.com/kubernetes StackDriver monitoring service.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail.monitoring_service",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 46,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-GCP-0047",
			"long_id": "google-gke-enforce-pod-security-policy",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enforce-pod-security-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config"
			],
			"description": "Cluster pod security policy is not enforced.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0047",
			"long_id": "google-gke-enforce-pod-security-policy",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enforce-pod-security-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config"
			],
			"description": "Cluster pod security policy is not enforced.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0047",
			"long_id": "google-gke-enforce-pod-security-policy",
			"rule_description": "Pod security policy enforcement not defined.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Pods could be operating with more permissions than required to be effective",
			"resolution": "Use security policies for pods to restrict permissions to those needed to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/enforce-pod-security-policy/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config"
			],
			"description": "Cluster pod security policy is not enforced.",
			"severity": "HIGH",
			"status": 0,
			"resource": "pod_security_policy_config.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 60,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-GCP-0048",
			"long_id": "google-gke-metadata-endpoints-disabled",
			"rule_description": "Legacy metadata endpoints enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Legacy metadata endpoints don't require metadata headers",
			"resolution": "Disable legacy metadata endpoints",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/metadata-endpoints-disabled/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata"
			],
			"description": "Cluster has legacy metadata endpoints enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0048",
			"long_id": "google-gke-metadata-endpoints-disabled",
			"rule_description": "Legacy metadata endpoints enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Legacy metadata endpoints don't require metadata headers",
			"resolution": "Disable legacy metadata endpoints",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/metadata-endpoints-disabled/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata"
			],
			"description": "Cluster has legacy metadata endpoints enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0048",
			"long_id": "google-gke-metadata-endpoints-disabled",
			"rule_description": "Legacy metadata endpoints enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Legacy metadata endpoints don't require metadata headers",
			"resolution": "Disable legacy metadata endpoints",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/metadata-endpoints-disabled/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#metadata"
			],
			"description": "Cluster has legacy metadata endpoints enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0064",
			"long_id": "google-gke-no-legacy-authentication",
			"rule_description": "Legacy client authentication methods utilized.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Username/password or certificate authentication methods are less secure",
			"resolution": "Use service account or OAuth for authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/no-legacy-authentication/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#master_auth"
			],
			"description": "Cluster allows the use of basic auth for master authentication.",
			"severity": "HIGH",
			"status": 0,
			"resource": "master_auth.username",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 53,
				"end_line": 53
			}
		},
		{
			"rule_id": "AVD-GCP-0053",
			"long_id": "google-gke-no-public-control-plane",
			"rule_description": "GKE Control Plane should not be publicly accessible",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "GKE control plane exposed to public internet",
			"resolution": "Use private nodes and master authorised networks to prevent exposure",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/no-public-control-plane/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#"
			],
			"description": "Cluster exposes control plane to the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "cidr_blocks.cidr_block",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-GCP-0057",
			"long_id": "google-gke-node-metadata-security",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/node-metadata-security/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata"
			],
			"description": "Node pool exposes node metadata.",
			"severity": "HIGH",
			"status": 0,
			"resource": "workload_metadata_config.node_metadata",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_node_pool.tf",
				"start_line": 24,
				"end_line": 24
			}
		},
		{
			"rule_id": "AVD-GCP-0057",
			"long_id": "google-gke-node-metadata-security",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/node-metadata-security/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata"
			],
			"description": "Cluster exposes node metadata of pools by default.",
			"severity": "HIGH",
			"status": 0,
			"resource": "node_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 22,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-GCP-0057",
			"long_id": "google-gke-node-metadata-security",
			"rule_description": "Node metadata value disables metadata concealment.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Metadata that isn't concealed potentially risks leakage of sensitive data",
			"resolution": "Set node metadata to SECURE or GKE_METADATA_SERVER",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/node-metadata-security/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#node_metadata"
			],
			"description": "Cluster exposes node metadata of pools by default.",
			"severity": "HIGH",
			"status": 0,
			"resource": "node_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 38,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-GCP-0054",
			"long_id": "google-gke-node-pool-uses-cos",
			"rule_description": "Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "COS is the recommended OS image to use on cluster nodes",
			"resolution": "Use the COS image type",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/node-pool-uses-cos/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_node_pool#image_type"
			],
			"description": "Node pool is not using the COS containerd image type.",
			"severity": "LOW",
			"status": 0,
			"resource": "node_config.image_type",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_node_pool.tf",
				"start_line": 35,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-GCP-0055",
			"long_id": "google-gke-node-shielding-enabled",
			"rule_description": "Shielded GKE nodes not enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Node identity and integrity can't be verified without shielded GKE nodes",
			"resolution": "Enable node shielding",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/node-shielding-enabled/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes"
			],
			"description": "Cluster has shielded nodes disabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail.enable_shielded_nodes",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 37,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-GCP-0051",
			"long_id": "google-gke-use-cluster-labels",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-cluster-labels/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Cluster does not use GCE resource labels.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0051",
			"long_id": "google-gke-use-cluster-labels",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-cluster-labels/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Cluster does not use GCE resource labels.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail_public",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 21,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0051",
			"long_id": "google-gke-use-cluster-labels",
			"rule_description": "Clusters should be configured with Labels",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Asset management can be limited/more difficult",
			"resolution": "Set cluster resource labels",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-cluster-labels/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#resource_labels"
			],
			"description": "Cluster does not use GCE resource labels.",
			"severity": "LOW",
			"status": 0,
			"resource": "google_container_cluster.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 36,
				"end_line": 63
			}
		},
		{
			"rule_id": "AVD-GCP-0062",
			"long_id": "google-gke-use-rbac-permissions",
			"rule_description": "Legacy ABAC permissions are enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "ABAC permissions are less secure than RBAC permissions",
			"resolution": "Switch to using RBAC permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-rbac-permissions/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac"
			],
			"description": "Cluster has legacy ABAC enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail_public.enable_legacy_abac",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-GCP-0062",
			"long_id": "google-gke-use-rbac-permissions",
			"rule_description": "Legacy ABAC permissions are enabled.",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "ABAC permissions are less secure than RBAC permissions",
			"resolution": "Switch to using RBAC permissions",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-rbac-permissions/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_legacy_abac"
			],
			"description": "Cluster has legacy ABAC enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_container_cluster.fail.enable_legacy_abac",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 44,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-GCP-0050",
			"long_id": "google-gke-use-service-account",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-service-account/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account"
			],
			"description": "Cluster does not override the default service account.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_container_cluster.fail1",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\legacy.tf",
				"start_line": 10,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0050",
			"long_id": "google-gke-use-service-account",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-service-account/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account"
			],
			"description": "Cluster does not override the default service account.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "node_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster_public.tf",
				"start_line": 22,
				"end_line": 26
			}
		},
		{
			"rule_id": "AVD-GCP-0050",
			"long_id": "google-gke-use-service-account",
			"rule_description": "Checks for service account defined for GKE nodes",
			"rule_provider": "google",
			"rule_service": "gke",
			"impact": "Service accounts with wide permissions can increase the risk of compromise",
			"resolution": "Use limited permissions for service accounts to be effective",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/gke/use-service-account/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#service_account"
			],
			"description": "Cluster does not override the default service account.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "node_config",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\container_cluster\\container_cluster.tf",
				"start_line": 38,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-GCP-0010",
			"long_id": "google-iam-no-default-network",
			"rule_description": "Default network should not be created at project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Exposure of internal infrastructure/services to public internet",
			"resolution": "Disable automatic default network creation",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-default-network/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project#auto_create_network"
			],
			"description": "Project has automatic network creation enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_project.fail.auto_create_network",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project.tf",
				"start_line": 13,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-GCP-0004",
			"long_id": "google-iam-no-folder-level-default-service-account-assignment",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-folder-level-default-service-account-assignment/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam",
				""
			],
			"description": "Role is assigned to a default service account at folder level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_folder_iam_member.fail.member",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_member\\folder_iam_member.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0004",
			"long_id": "google-iam-no-folder-level-default-service-account-assignment",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-folder-level-default-service-account-assignment/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_folder_iam",
				""
			],
			"description": "Role is assigned to a default service account at folder level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_folder_iam_binding.fail.members",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\folder_iam_binding.tf",
				"start_line": 13,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-GCP-0008",
			"long_id": "google-iam-no-org-level-default-service-account-assignment",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-org-level-default-service-account-assignment/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam",
				""
			],
			"description": "Role is assigned to a default service account at organisation level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_organization_iam_binding.organization.members",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\organisation\\organization_iam_binding.tf",
				"start_line": 9,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0008",
			"long_id": "google-iam-no-org-level-default-service-account-assignment",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-org-level-default-service-account-assignment/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam",
				""
			],
			"description": "Role is assigned to a default service account at organisation level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_organization_iam_member.org_123.member",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_member\\no-org-level-default-service-account-assignment.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0008",
			"long_id": "google-iam-no-org-level-default-service-account-assignment",
			"rule_description": "Roles should not be assigned to default service accounts",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Violation of principal of least privilege",
			"resolution": "Use specialised service accounts for specific purposes.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-org-level-default-service-account-assignment/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam",
				""
			],
			"description": "Role is assigned to a default service account at organisation level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_organization_iam_binding.organization_123.members",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\organization_iam_bindin.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0009",
			"long_id": "google-iam-no-org-level-service-account-impersonation",
			"rule_description": "Users should not be granted service account access at the organization level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of organization-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-org-level-service-account-impersonation/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_organization_iam"
			],
			"description": "Service account access is granted to a user at organization level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_organization_iam_binding.organization_123.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\organization_iam_bindin.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0007",
			"long_id": "google-iam-no-privileged-service-accounts",
			"rule_description": "Service accounts should not have roles assigned with excessive privileges",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Cloud account takeover if a resource using a service account is compromised",
			"resolution": "Limit service account access to minimal required set",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-privileged-service-accounts/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account is granted a privileged role.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_project_iam_binding.fail_service.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project_iam_binding.tf",
				"start_line": 6,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-GCP-0007",
			"long_id": "google-iam-no-privileged-service-accounts",
			"rule_description": "Service accounts should not have roles assigned with excessive privileges",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Cloud account takeover if a resource using a service account is compromised",
			"resolution": "Limit service account access to minimal required set",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-privileged-service-accounts/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account is granted a privileged role.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_project_iam_member.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\google_project_iam_member_service_account_has_admin_role.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-GCP-0007",
			"long_id": "google-iam-no-privileged-service-accounts",
			"rule_description": "Service accounts should not have roles assigned with excessive privileges",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Cloud account takeover if a resource using a service account is compromised",
			"resolution": "Limit service account access to minimal required set",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-privileged-service-accounts/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account is granted a privileged role.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_organization_iam_binding.organization.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\organisation\\organization_iam_binding.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-GCP-0007",
			"long_id": "google-iam-no-privileged-service-accounts",
			"rule_description": "Service accounts should not have roles assigned with excessive privileges",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Cloud account takeover if a resource using a service account is compromised",
			"resolution": "Limit service account access to minimal required set",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-privileged-service-accounts/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account is granted a privileged role.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_folder_iam_binding.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\folder_iam_binding.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0007",
			"long_id": "google-iam-no-privileged-service-accounts",
			"rule_description": "Service accounts should not have roles assigned with excessive privileges",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Cloud account takeover if a resource using a service account is compromised",
			"resolution": "Limit service account access to minimal required set",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-privileged-service-accounts/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account is granted a privileged role.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_folder_iam_binding.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\folder_iam_binding.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0011",
			"long_id": "google-iam-no-project-level-service-account-impersonation",
			"rule_description": "Users should not be granted service account access at the project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of project-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-project-level-service-account-impersonation/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account access is granted to a user at project level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.positive1.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\google_project_iam_member_service_account_has_token_creator_or_account_user_role.tf",
				"start_line": 5,
				"end_line": 5
			}
		},
		{
			"rule_id": "AVD-GCP-0011",
			"long_id": "google-iam-no-project-level-service-account-impersonation",
			"rule_description": "Users should not be granted service account access at the project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of project-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-project-level-service-account-impersonation/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account access is granted to a user at project level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.project.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\RoleServiceAccountUser.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GCP-0011",
			"long_id": "google-iam-no-project-level-service-account-impersonation",
			"rule_description": "Users should not be granted service account access at the project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of project-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-project-level-service-account-impersonation/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account access is granted to a user at project level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.project.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_member\\no-privileged-service-accounts.tf",
				"start_line": 12,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-GCP-0011",
			"long_id": "google-iam-no-project-level-service-account-impersonation",
			"rule_description": "Users should not be granted service account access at the project level",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Privilege escalation, impersonation of any/all services",
			"resolution": "Provide access at the service-level instead of project-level, if required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-project-level-service-account-impersonation/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/google_project_iam"
			],
			"description": "Service account access is granted to a user at project level.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_binding.project_123.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\project_iam_binding.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\project_iam_member.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.project.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\project\\RoleServiceAccountUser.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_organization_iam_binding.organization.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\organisation\\organization_iam_binding.tf",
				"start_line": 7,
				"end_line": 7
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "binding.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\kms\\kms_admin_and_crypto_key_roles_in_use.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "binding.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\kms\\kms_admin_and_crypto_key_roles_in_use.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_member.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\no-user-granted-permissions.tf",
				"start_line": 8,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_project_iam_binding.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\no-user-granted-permissions.tf",
				"start_line": 2,
				"end_line": 6
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_folder_iam_binding.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\folder_iam_binding.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0003",
			"long_id": "google-iam-no-user-granted-permissions",
			"rule_description": "IAM granted directly to user.",
			"rule_provider": "google",
			"rule_service": "iam",
			"impact": "Users shouldn't have permissions granted to them directly",
			"resolution": "Roles should be granted permissions and assigned to users",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/iam/no-user-granted-permissions/",
				"https://www.terraform.io/docs/providers/google/d/iam_policy.html#members"
			],
			"description": "Permissions are granted directly to a user.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_folder_iam_binding.fail.role",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\iam\\iam_binding\\folder_iam_binding.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-GCP-0065",
			"long_id": "google-kms-rotate-kms-keys",
			"rule_description": "KMS keys should be rotated at least every 90 days",
			"rule_provider": "google",
			"rule_service": "kms",
			"impact": "Exposure is greater if the same keys are used over a long period",
			"resolution": "Set key rotation period to 90 days",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/kms/rotate-kms-keys/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/kms_crypto_key#rotation_period"
			],
			"description": "Key has a rotation period of more than 90 days.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_kms_crypto_key.fails",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\kms\\google_kms_crypto_key.tf",
				"start_line": 12,
				"end_line": 20
			}
		},
		{
			"rule_id": "AVD-GCP-0024",
			"long_id": "google-sql-enable-backup",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/enable-backup/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true"
			],
			"description": "Database instance does not have backups enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "backup_configuration.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0024",
			"long_id": "google-sql-enable-backup",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/enable-backup/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true"
			],
			"description": "Database instance does not have backups enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "backup_configuration.enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 49,
				"end_line": 49
			}
		},
		{
			"rule_id": "AVD-GCP-0024",
			"long_id": "google-sql-enable-backup",
			"rule_description": "Enable automated backups to recover from data-loss",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "No recovery of lost or corrupted data",
			"resolution": "Enable automated backups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/enable-backup/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance#settings.backup_configuration.enabled=true"
			],
			"description": "Database instance does not have backups enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_sql_database_instance.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 15,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-GCP-0014",
			"long_id": "google-sql-enable-pg-temp-file-logging",
			"rule_description": "Temporary file logging should be enabled for all temporary files.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Use of temporary files will not be logged",
			"resolution": "Enable temporary file logging for all files",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/enable-pg-temp-file-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance has temporary file logging disabled for files of certain sizes.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 75,
				"end_line": 75
			}
		},
		{
			"rule_id": "AVD-GCP-0015",
			"long_id": "google-sql-encrypt-in-transit-data",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/encrypt-in-transit-data/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance does not require TLS for all connections.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.require_ssl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 48,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-GCP-0015",
			"long_id": "google-sql-encrypt-in-transit-data",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/encrypt-in-transit-data/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance does not require TLS for all connections.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.require_ssl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-GCP-0015",
			"long_id": "google-sql-encrypt-in-transit-data",
			"rule_description": "SSL connections to a SQL database instance should be enforced.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Intercepted data can be read in transit",
			"resolution": "Enforce SSL for all connections",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/encrypt-in-transit-data/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance does not require TLS for all connections.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.require_ssl",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 22,
				"end_line": 22
			}
		},
		{
			"rule_id": "AVD-GCP-0026",
			"long_id": "google-sql-mysql-no-local-infile",
			"rule_description": "Disable local_infile setting in MySQL",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Arbitrary files read by attackers when combined with a SQL injection vulnerability.",
			"resolution": "Disable the local infile setting",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/mysql-no-local-infile/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance",
				"https://dev.mysql.com/doc/refman/8.0/en/load-data-local-security.html"
			],
			"description": "Database instance has local file read access enabled.",
			"severity": "HIGH",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 42,
				"end_line": 42
			}
		},
		{
			"rule_id": "AVD-GCP-0023",
			"long_id": "google-sql-no-contained-db-auth",
			"rule_description": "Contained database authentication should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Access can be granted without knowledge of the database administrator",
			"resolution": "Disable contained database authentication",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-contained-db-auth/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance has contained database authentication enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 37,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-GCP-0019",
			"long_id": "google-sql-no-cross-db-ownership-chaining",
			"rule_description": "Cross-database ownership chaining should be disabled",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Unintended access to sensitive data",
			"resolution": "Disable cross database ownership chaining",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-cross-db-ownership-chaining/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance has cross database ownership chaining enabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 33,
				"end_line": 33
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "authorized_networks.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is granted a public internet address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.ipv4_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudSqlServer.tf",
				"start_line": 46,
				"end_line": 46
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "authorized_networks.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 44,
				"end_line": 44
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "authorized_networks.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 39,
				"end_line": 39
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is granted a public internet address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.ipv4_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 37,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "authorized_networks.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 30,
				"end_line": 30
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance allows access from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "authorized_networks.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 25,
				"end_line": 25
			}
		},
		{
			"rule_id": "AVD-GCP-0017",
			"long_id": "google-sql-no-public-access",
			"rule_description": "Ensure that Cloud SQL Database Instances are not publicly exposed",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Public exposure of sensitive data",
			"resolution": "Remove public access from database instances",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is granted a public internet address.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_configuration.ipv4_enabled",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudMySql.tf",
				"start_line": 23,
				"end_line": 23
			}
		},
		{
			"rule_id": "AVD-GCP-0025",
			"long_id": "google-sql-pg-log-checkpoints",
			"rule_description": "Ensure that logging of checkpoints is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable checkpoints logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/pg-log-checkpoints/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log checkpoints.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 56,
				"end_line": 56
			}
		},
		{
			"rule_id": "AVD-GCP-0016",
			"long_id": "google-sql-pg-log-connections",
			"rule_description": "Ensure that logging of connections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable connection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/pg-log-connections/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log connections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 60,
				"end_line": 60
			}
		},
		{
			"rule_id": "AVD-GCP-0022",
			"long_id": "google-sql-pg-log-disconnections",
			"rule_description": "Ensure that logging of disconnections is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Insufficient diagnostic data.",
			"resolution": "Enable disconnection logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/pg-log-disconnections/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log disconnections.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 64,
				"end_line": 64
			}
		},
		{
			"rule_id": "AVD-GCP-0020",
			"long_id": "google-sql-pg-log-lock-waits",
			"rule_description": "Ensure that logging of lock waits is enabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Issues leading to denial of service may not be identified.",
			"resolution": "Enable lock wait logging.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/pg-log-lock-waits/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is not configured to log lock waits.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "database_flags.value",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 72,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-GCP-0021",
			"long_id": "google-sql-pg-no-min-statement-logging",
			"rule_description": "Ensure that logging of long statements is disabled.",
			"rule_provider": "google",
			"rule_service": "sql",
			"impact": "Sensitive data could be exposed in the database logs.",
			"resolution": "Disable minimum duration statement logging completely",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/sql/pg-no-min-statement-logging/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/sql_database_instance"
			],
			"description": "Database instance is configured to log statements.",
			"severity": "LOW",
			"status": 0,
			"resource": "database_flags.name",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\sql\\CloudPostgreSql.tf",
				"start_line": 79,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-GCP-0002",
			"long_id": "google-storage-enable-ubla",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/storage/enable-ubla/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access"
			],
			"description": "Bucket has uniform bucket level access disabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_storage_bucket.static_site",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket.tf",
				"start_line": 9,
				"end_line": 21
			}
		},
		{
			"rule_id": "AVD-GCP-0002",
			"long_id": "google-storage-enable-ubla",
			"rule_description": "Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "ACLs are difficult to manage and often lead to incorrect/unintended configurations.",
			"resolution": "Enable uniform bucket level access to provide a uniform permissioning system.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/storage/enable-ubla/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access"
			],
			"description": "Bucket has uniform bucket level access disabled.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "google_storage_bucket.fail_self",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket.tf",
				"start_line": 23,
				"end_line": 35
			}
		},
		{
			"rule_id": "AVD-GCP-0001",
			"long_id": "google-storage-no-public-access",
			"rule_description": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Public exposure of sensitive data.",
			"resolution": "Restrict public access to the bucket.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/storage/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members"
			],
			"description": "Bucket allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_storage_bucket_iam_member.member.member",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket_iam_member.tf",
				"start_line": 9,
				"end_line": 9
			}
		},
		{
			"rule_id": "AVD-GCP-0001",
			"long_id": "google-storage-no-public-access",
			"rule_description": "Ensure that Cloud Storage bucket is not anonymously or publicly accessible.",
			"rule_provider": "google",
			"rule_service": "storage",
			"impact": "Public exposure of sensitive data.",
			"resolution": "Restrict public access to the bucket.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/google/storage/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members"
			],
			"description": "Bucket allows public access.",
			"severity": "HIGH",
			"status": 0,
			"resource": "google_storage_bucket_iam_binding.binding.members",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\google\\storage\\storage_bucket_iam_binding.tf",
				"start_line": 9,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-KUBE-0002",
			"long_id": "kubernetes-network-no-public-egress",
			"rule_description": "Public egress should not be allowed via network policies",
			"rule_provider": "kubernetes",
			"rule_service": "network",
			"impact": "Exfiltration of data to the public internet",
			"resolution": "Remove public access except where explicitly required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/kubernetes/network/no-public-egress/",
				"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr"
			],
			"description": "Network policy allows egress to the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_block.cidr",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\kubernetes\\network\\kubernetes_network_policy.tf",
				"start_line": 57,
				"end_line": 57
			}
		},
		{
			"rule_id": "AVD-KUBE-0001",
			"long_id": "kubernetes-network-no-public-ingress",
			"rule_description": "Public ingress should not be allowed via network policies",
			"rule_provider": "kubernetes",
			"rule_service": "network",
			"impact": "Exposure of infrastructure to the public internet",
			"resolution": "Remove public access except where explicitly required",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/kubernetes/network/no-public-ingress/",
				"https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/resources/network_policy#spec.ingress.from.ip_block.cidr"
			],
			"description": "Network policy allows ingress from the public internet.",
			"severity": "HIGH",
			"status": 0,
			"resource": "ip_block.cidr",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\kubernetes\\network\\kubernetes_network_policy.tf",
				"start_line": 36,
				"end_line": 36
			}
		},
		{
			"rule_id": "AVD-OPNSTK-0001",
			"long_id": "openstack-compute-no-plaintext-password",
			"rule_description": "No plaintext password for compute instance",
			"rule_provider": "openstack",
			"rule_service": "compute",
			"impact": "Including a plaintext password could lead to compromised instance",
			"resolution": "Do not use plaintext passwords in terraform files",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/openstack/compute/no-plaintext-password/",
				"https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/compute_instance_v2#admin_pass"
			],
			"description": "Instance has admin password set.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "openstack_compute_instance_v2.fail.admin_pass",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\openstack\\compute\\compute_instance_v2.tf",
				"start_line": 10,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-OPNSTK-0002",
			"long_id": "openstack-compute-no-public-access",
			"rule_description": "A firewall rule allows traffic from/to the public internet",
			"rule_provider": "openstack",
			"rule_service": "compute",
			"impact": "Exposure of infrastructure to the public internet",
			"resolution": "Employ more restrictive firewall rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/openstack/compute/no-public-access/",
				"https://registry.terraform.io/providers/terraform-provider-openstack/openstack/latest/docs/resources/fw_rule_v1"
			],
			"description": "Firewall rule does not restrict destination address internally.",
			"severity": "MEDIUM",
			"status": 0,
			"resource": "openstack_fw_rule_v1.fail",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\openstack\\fw\\fw_rule_v1.tf",
				"start_line": 8,
				"end_line": 16
			}
		},
		{
			"rule_id": "AVD-OCI-0001",
			"long_id": "oracle-compute-no-public-ip",
			"rule_description": "Compute instance requests an IP reservation from a public pool",
			"rule_provider": "oracle",
			"rule_service": "compute",
			"impact": "The compute instance has the ability to be reached from outside",
			"resolution": "Reconsider the use of an public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/oracle/compute/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance"
			],
			"description": "Reservation made for public IP address.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "opc_compute_ip_address_reservation.fail.ip_address_pool",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\oracle\\compute\\opc_compute_ip_address_reservation.tf",
				"start_line": 3,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-OCI-0001",
			"long_id": "oracle-compute-no-public-ip",
			"rule_description": "Compute instance requests an IP reservation from a public pool",
			"rule_provider": "oracle",
			"rule_service": "compute",
			"impact": "The compute instance has the ability to be reached from outside",
			"resolution": "Reconsider the use of an public IP",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.0.11/checks/oracle/compute/no-public-ip/",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_ip_address_reservation",
				"https://registry.terraform.io/providers/hashicorp/opc/latest/docs/resources/opc_compute_instance"
			],
			"description": "Reservation made for public IP address.",
			"severity": "CRITICAL",
			"status": 0,
			"resource": "opc_compute_ip_address_reservation.fail.ip_address_pool",
			"location": {
				"filename": "F:\\Code\\fail\\terraform\\oracle\\compute\\compute_ip_address_reservation.tf",
				"start_line": 9,
				"end_line": 9
			}
		}
	]
}
